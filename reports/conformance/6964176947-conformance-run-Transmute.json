{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7044339f-1aee-40a6-be9d-2793110b3e43",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3aaed994-797d-4f94-96b4-7c453a74babd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b6c72d8-68fb-4f35-9721-dd975eba533c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "226f7064-b43d-418c-8eb9-82d2a2d81e5e"
                }
              }
            ]
          },
          {
            "id": "32177ee3-8c90-4695-8b77-21f8472bf64b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df368110-387d-4f31-b391-03583c385e4f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5170e908-02f1-4a74-9b13-89de5596c9c6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9822b3f3-e0d7-4d9b-8f2d-83fb19654d66",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ce23c8c9-088b-4ed2-92b7-83f2ba95f3dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0869934-7643-4b74-9c2c-f05ca30b257e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "511807e8-882c-442a-8477-d5d7924f3321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c14cd5e7-8407-47c2-8cd6-8ad8556869d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2511f82f-0de2-46d0-b5a9-0343a389384a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e20e8947-6422-4e86-96f6-ba76bf9925c6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f64d657-f9fa-4121-8cd3-2da91e5c0b91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e62c487-7acf-4cf7-b83e-676b04f3b6a9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7e0e7a1-690c-46cf-8c94-d7d2373dd6b8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "abe60dcb-29d0-4224-b8ac-b8aa7552d2eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e83a052b-abc5-40e9-81a5-e9effb49042c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "087d5cb0-3647-4b85-9975-638e57fbc7d8"
            }
          }
        ]
      },
      {
        "id": "dbe12ee1-c714-43a8-8b07-accfd3a0afc1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "38571839-14b8-4c7a-b919-cd2d705a70f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0146bed7-b032-4c77-85e7-082adf838547",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2a6f1359-c363-4d0b-a6b1-b360e82992a3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8b2712-bccb-48d6-a1f7-1d68303c3272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66998bf8-b690-4fa7-b379-354954874528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dacaf9-71ff-4e58-ba3e-ccbeaa1c0e0e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10400de6-1568-41b3-963c-da0983ce0889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08a37a6c-f906-4250-9b5e-5ab921af97d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33df2f4e-f1d9-4d2f-9744-e90589b558c7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f37119-d4a0-4de5-9054-ae28446586bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a813e3c-3339-4454-9292-0c24f9a321cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4762c63-8962-4d4d-9760-982a8f6b7967",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbccdc87-1d71-42c0-a630-19a9f358b216",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82749d69-28ce-4e92-9e15-35216bd376d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fd3676a-2cad-41c8-ad12-bf7235040802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee855a9a-c5a2-466c-b58d-3c48f04dfb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66191a1b-f314-4aa8-9b6e-751d2ab4f6f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fa89f694-d7ea-4428-afc0-56b4f73f58ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2818efde-2d8c-47a6-8af8-3d22b13d8d47",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "277849e8-dbbc-4cc5-9168-545b8665914c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3161639e-4a65-4cf8-b081-7f2961cc6831"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9f717b7-ae1d-4d35-93de-098520d2ed8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a87ecf04-a355-44bf-931b-356d1f360cb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7af6c6af-6f19-4ff0-bc23-02ea8998f126",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "008d1a74-feb9-43e6-a24e-512949ee66b6"
            }
          }
        ]
      },
      {
        "id": "f91d700d-703b-4e0a-a93c-7ab03f891a65",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1c2d3379-8e1a-452c-ac7d-63d5f1649b11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "869028c7-0e5c-4a84-9ea6-945e77c73f5b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e43f5360-adf6-40c8-a48d-879e70e803b2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a55b77c-5fdc-4653-8e50-d572b576d49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8862effe-2a12-4e90-982b-33eddcc2a963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e8f302-2000-4212-b67d-7ff2c27f7a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "def521bb-6542-4c54-8a39-a98a7cfb6335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdcaf89-470b-420a-8c84-80b3a3e43418",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e978a90-aee5-429c-b62b-206609de1a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6bebed-ceea-4990-a27b-269f794f2940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7543e8-0cef-4884-8a23-704d483758cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a49f46-df78-468e-9452-b4547e6c2069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9213eaa5-9418-4571-babc-790e34463b63",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b1cd50-0f72-4d2e-baea-fd0d770e8411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1397bd-4cd9-4641-b578-9a6545c84e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030ee9e3-5897-4f8f-a84b-070a331dc980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94bdf00e-22b0-4372-a7ec-238b69e90180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac47e9e-d4c8-4a10-80ee-13aee8d46212",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacca8f1-453d-4882-a4b1-9204ce0d4f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da607d53-7cdc-464b-b3d2-5e47078a89cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854ed557-9c6d-4a6d-8822-2d1703a7249a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfb00a38-3e83-4f90-a498-f3e57fb8bc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4260562e-cba3-4d35-b3bb-bc4f0c0ee8a5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68309d3-6cdf-416b-9347-7e04cfcf9476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815956ed-d7d3-41be-ae6d-a90d75fbca17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeaf020-2c80-48d5-8ad3-7b6e41deecf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "182918b1-a208-4357-83b0-0690dc4e0c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e622f1e-9375-4270-afb6-c39518e9e1df",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa78fc9-ac1d-49e5-83f0-646b7b378c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e554654-cf0a-456b-a12e-0c14baf7d0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56dea9d-e62c-423e-af78-3dc3b639fad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3f2a982-e7ca-412c-9f12-c76542107165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98f0c65-5dfd-434b-9cf6-5f984dc53cdb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbe3bd4-78b5-4e35-98d3-d9373d39b0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab309611-c43b-47ed-a784-294662dfae38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30b0f2a-c75e-4b39-b3c4-cc1c38a23364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33120eb9-5259-4137-be05-cc1190cf7354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e80033-97c3-40c5-b6e7-8930e82ac6ec",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db96d80e-d75d-4ab9-88a0-7d7c8a521341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90949e4f-0eb3-42ef-b690-5a042e676efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190ec4bf-5bc1-4ac9-9868-1c74130fa790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18fc1f57-be7d-490d-bb22-6e6265fb0281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25828dd5-74c1-416a-a9fe-4aa5421008fc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a9fca2-ce8e-43b8-b27f-428afbf0b2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbad3b4-423d-4f50-a9d1-6f6953eff9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1286f2-f024-4077-9fcb-f25dd64d2f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce7003c7-9f89-463e-8567-f036a996ccc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef64e6b3-e90f-4b8f-957c-50841266133d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05aa8b42-eb78-4d04-80b5-62fa32ef7c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28a79e0-f845-4933-a5c8-95007903a5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb8a5b3-89ad-4362-b8b3-3d1ac90924d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58c1cf94-ba55-4e1f-b763-bbeb02a0b202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdb2902-6cfa-46da-acf1-0f94ae41273d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390c26e8-89b1-4d1c-803f-0efd3ed7b5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b1c72d-09a2-4156-b869-d40107995e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9482fabe-716e-4119-bd3a-6fd1325b5c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11adc86d-c840-4647-99c4-c550885d7980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caad4cbe-5261-40bd-8b7b-7cb0774553ea",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2e8f1a-e5d5-40f7-9a79-488146686def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6526650-de38-490b-a2c2-2366abe7dbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ef86f6-3b42-468f-9441-1fe8b10cfc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec58f669-a63d-42c0-8487-b8e78483e91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c4476d-2b23-41bd-b173-7da49e300385",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58def28e-39ad-4d4b-916e-1193f830ba2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42d5cc0-6569-47dc-b131-d663f64ce6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366e4185-6a51-4142-bbe0-1084af1bf124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84899578-1d54-4c51-b8a0-86d4dcbc6850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b83e51e-3907-4e47-a68d-1486b4b66f73",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f225f3a-6fd2-49c7-906d-d62db2bea6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8d89b8-b220-4a8f-8a95-d532777014d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148eefb9-18a0-4b05-b2c1-4de68fadca63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f39a6e5-a19d-4c68-907e-14582ab32088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575a5cf3-a7b0-4a80-aef3-0e5ffffefd5d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57f9193-12a2-4106-a71a-77fb8c5aaef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde45e26-01a9-4455-8bda-9538d7a2dbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936fa705-d684-4835-a881-f6eb27e3b88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77eda15a-edd1-4bd8-af90-5ec483827793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5f5ae1-d871-4ae1-944a-d9f7f5bd38ea",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481430e0-c1f6-4726-a92f-1e3a19cb39a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb295fa-57e7-4449-b8c1-963c64afaabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e06926b-503b-4729-a2c9-e2b2c64d0c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d570ce42-87f7-4b8d-9419-78a1fdeaa1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdd7766-0651-4ae2-ad44-a472e1177ba9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e01460-ec8e-4637-a409-bac70d5648ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618d95b0-23c4-4246-9051-9f3db442dde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560a0497-df51-40fd-bf9f-69604dba4afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa1258fa-d8c9-45c1-9ed8-6e146092813c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fc75cc-713b-4041-a64c-8a050f32eb77",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0769f75-9f92-44e0-b5b4-204da6ce62f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f8132a-5e52-44c8-a7e1-e506a91a9a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63922da1-222c-4272-b560-70beaaf44228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51b25ac-42c4-45c2-8281-40b00deac0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaef7e1d-85dc-45b6-8c06-e58d3379bed0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc3c45c-ecc3-446d-9807-cb53651f3e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7841d7ed-cb92-42b3-a024-c07fe4098f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df425d7-7335-460b-b594-67a6c9deff36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e861ddcb-8b33-42d9-8b68-451843257954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d62667-47e4-4438-a315-49ab771a9028",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2563c54e-0327-40fb-a76d-f94adf9381a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217e048b-af48-4dc1-91de-75b6e7da00f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7603431e-9fe2-4fe9-8521-c60f3994ff0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5a45c7-c742-414c-9a25-4718d9f2807f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b594f294-c87f-4ee2-8114-59eec47fa7bc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a76f4d-e0e1-4bc9-a0c1-8d52de2f47d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a17ae8b-3e8a-4514-920c-e6e210cf685d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd27cab-4813-4197-b07a-d6428a680113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc748c3d-32eb-426e-9073-4c17deb20c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de1b9a0-5257-488b-b868-d989b5536d4a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab7da36-907b-4a7e-92c2-64c08be2860f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a467f217-2fa3-4a69-a0bb-8dcae63fe665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b630ac-fcd4-4d6e-abe5-998876842295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82b3b02e-d385-46f0-8454-d0297825882f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf3c833-cbd7-4936-9464-784b5bcd93be",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c671edd5-5f8f-4f15-b097-f3fbd2dffac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1cc388-cce6-4ad9-879d-370fc8842d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c69a23e-83a4-4f2c-90b1-29e7b55a84ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf72365-a72d-43c5-8af5-ea86a093a6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16917739-1d0b-41fe-9ff0-0be13acecbeb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ce1687-f70c-427b-9251-1e7cd37f7ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c6f738-4035-412b-b0a5-94e8c0b65e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da2b096-f95a-4816-9b48-3aecfbbdb0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1def578f-cd7f-4b59-b042-5bef8dbdf279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03822ffb-479c-4d7d-994b-edea0c444d8a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb62b0e7-1182-443f-9ebb-94d88ae9043d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d78e672-cbd0-4c23-89eb-b8a43fe702e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c78dfc-0d53-4ca9-9e14-4c41251e466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af12e117-f99f-4ead-ac3c-75b71860323e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce94f190-d8e2-4f37-8ac9-a3f6c9c4c546",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1191f1-02fa-4ad2-90c5-655cac841477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9c1e40-ab97-428b-ad30-ad30bf67d41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07672bad-ac0c-4ae8-9a42-b456019d3288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af2b73f-f1d9-458a-a8fb-b52ea3d551fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601eff47-f3fe-41c7-9493-c07483ffa5e3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba30977-b6cc-4c7a-bb44-658fbc93936c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bf23cf-df0a-4155-b919-3c832e33e057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a41c59-bac2-4e23-a683-b0c411610f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e452b576-9c7c-43b8-b678-11f4a63e6cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07adbcef-8dc6-4904-8ade-a9a94fd58ddb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b93b6ea-473d-48dd-b98e-3e1803470bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacdb444-a9ce-4ed6-9412-ffb49a10ce76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6bca43-9881-4f1f-96c3-b54a9a1c739e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a15d37e4-4135-4936-952f-24e558fa1e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a923099-81c5-458d-aeed-ca5dc25b06c6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c58b603-50ec-4e82-a2e6-690343953288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de07893-e692-4098-bc7a-b0af44eebcf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda9fcbb-cac0-46df-8ef5-2ee8098735f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "335bceab-652c-462f-b1b5-7128695fb9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d74a008-6daa-4659-a7d1-3f9c2c4b231b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c26fcdd-5753-4053-b72b-22f437275c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e181016-1c12-401e-9a8a-4b330f90eafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08d3f6c-a7ad-412e-8275-c63001d10096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "31afbc54-ecb5-492f-a361-bfa8f2434653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e903778f-39dd-431d-a3e9-07cff9c871ca",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622650fb-8d1c-43f7-943c-e59916cf1c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8ff87a-9fb3-4a8a-bed0-0964540a87a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc02c56-dd16-49b8-b1a7-bb3b1b8b3ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5638d3b-aa5c-4447-87ef-9d472b04df8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3ead13-370f-4758-810f-d581ca2467ba",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2392906-fb5e-4491-b3d2-d67137028bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a893e692-4a81-4c88-b345-1afdf6bd16f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a8c4bc-d6c8-47ed-8cc6-3a7cc6f7ac2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce036667-a149-458e-a70a-7b241f88742f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac9c09e-e293-4781-8079-8ef1cd2df04b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b2e740-3cd0-4b05-9fd9-16ff8f5dc8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a00a55-a333-48a8-9270-d40597fad5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3c7559-e554-42c9-bd6c-07964b2579a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f05c08ca-0582-409a-958c-fc9b92779550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e718c64a-1d9f-447a-ab8c-e42ea6bb6f68",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec69200-2c1c-468d-9f80-d06d2281e156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a648a6-4352-4166-94f1-aef0231c9566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a814f5-62da-4cee-87f4-5f293f1a2b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc927b97-412f-4d92-ba76-d21aa978bee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fde3323-00af-4169-8dd3-2160a2fd8747",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8adc81b-742a-47a0-968b-ac8bf0142f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abfe680-03e0-4d02-8ed9-6c43d77273e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600c1296-3f17-4ab8-b7c7-d0cb613ca6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6625ddf8-1b61-43d8-b858-8994038f4161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2983e023-2209-43b4-87d8-422367499b53",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532efdc1-00f1-4f8a-be76-a194e8b16c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ce1fbef-a193-42dc-aaa1-fba65a2ab722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b80fa7a-4981-451f-aa7d-08427849b608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d9ea43-115a-48e5-af86-70a0f8270f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee328a58-d9c1-4c03-9e97-4e5b5999640e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a1631e-811b-448d-a701-b7e3a5915205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572d79c4-c51b-46c2-b5a2-cb9fcf27cecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8248ad-15fb-4440-803c-7a6d6488538e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2817f5f4-e53a-45e8-9d36-fea1b1e727af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ec1e7f-e69c-4335-9a65-ae74797673d1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f4580d-109a-4486-8526-17377bdf9a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670e8ed6-030b-410c-a6a4-d787c255e178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9b5877-5905-4cb7-a31b-991642cb844c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "709e553e-87bd-4797-84b4-6b82ecfa6f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b663432-710d-478f-96a6-89788e144108",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7078b2-6eb5-480d-a498-a211147ee5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c938b5cf-5f08-4018-a574-32e6ab8b0ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b452c052-f408-4e0b-a1e7-f9acc9cbe6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca69511-67f4-45cb-9bc8-845d31691a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56470f4e-fdf8-4506-961d-cec3dd7e42ef",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226b13cf-692a-4cf0-a4fa-2ad1cd72268e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a9edbf-ba97-42fa-a1a9-a965e6948f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa0cd4f-9df3-4b34-ac7d-45c83e638ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "03b8ccd7-b6c9-49cc-9bf7-108a17567801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db2a687-d25e-43ab-b26c-4cd0a4689d87",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eca80d9-80a7-4433-95e3-895199d69078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68aebcdb-88f0-4186-aa0e-83d684ae2974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b443b83-ab3e-4bb0-8da2-ac3dafbf9cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0968cf5a-12ee-4a52-b6b1-b0ae20aa6b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a610c4be-d0d1-4318-a386-22d53aed908b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebb0865-645f-45b7-a4a5-25499bf1a67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fb23e6-2038-4434-ab3f-3219ab874dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736ed37c-375a-4926-a91b-55da9f43adc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e79a3c-f18f-4881-8776-5f6c4f99184f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be100825-64ac-4af3-80ab-0a1af6f71219",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb08c828-5cd0-47d6-b5bc-f553637e3f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1713878-7db4-46f1-b63d-75272b51ade3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9448f2-88fe-4850-a478-24b2efb596ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8827e4b9-2376-4abe-b129-9bfafcb9e885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7073feb2-f1a6-481d-8dac-5ae1f92a3b04",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623f0488-d60d-4715-8f84-4b8c34b59695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3435c3-bc5c-42d6-a78e-9e53bb1d469e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8ec0ac-782c-4a84-9817-3c0ae5cc3550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a146ed56-c17b-4050-ac46-765d56045657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d53cea-17f7-4abb-9b84-35cd5ef04736",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c77942-bdbb-47df-8a70-6e1b5698732e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289d7eaa-14b2-4d5e-90f6-a0def9e097c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8d029e-babc-4a62-91e3-f928585e8b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b593262-6084-4bdc-a22b-ddabf121ef6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bc441f-0177-4a30-ae90-193975f188e2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed7ee11-93ef-4458-810d-d60ae648c4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c63e75-d839-4f22-9cc3-844182e57b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4279975d-a931-45d4-8245-6746327e34d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f20fa4d9-2c62-4961-9580-a9a79f02652b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28477fa4-dd5b-46a5-93a2-8ad073c60283",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ea7e1b-deb4-4c95-92fc-e52e6d7d64cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f208b3-ea7e-4dd0-9499-d3bdc1ef69d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847d6e21-1c08-4b95-93ab-c5f816fd5892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "608090ae-94f1-4404-abf1-9c46bad30430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af7989f-46cb-4854-81ab-dcdbf76310c2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c14a596-87af-4621-bff9-e59d9609a6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033b593e-ac3b-4e27-a675-2d05a20fd2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27eaa753-048c-4985-a6b6-7edc98d605ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddb8f3c-0445-4c2a-9bbf-b5727a1625a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13085b66-e618-439f-b042-974425c77838",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4336ee-8231-43c2-b984-3cc7fb2356ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bd5080-c4ce-48bb-8ea9-daf072c9a0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451e06b2-a914-4c20-8426-9d86b8deb07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba571209-d28f-4067-a272-4b8625081e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897207d6-b90f-40ea-9857-03cbffd8907f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487c8db7-4a89-488d-88be-241ad277169e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652022d7-29ff-4491-8a3b-3fe9aa4688c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae89073-62ba-4ea5-a1c4-b766bed88716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9e3564-9fae-40b3-88cf-05138442432f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d6cf92-ce12-40b5-9eaa-3d2a7c919032",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba8e901-1535-478f-963b-5adf8b625072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936a8ad7-28b8-4e75-8683-10a009e5f59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaa9514-450e-48d6-87c0-07c2a30ba9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1159af2-0df0-4d20-bb82-f3c74898f602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b69ad5-8c3e-44ac-8b0d-1747201977ed",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5076231-4f31-4324-8d5f-de46486007cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feee1638-2336-4589-b416-147dc096f0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42961d54-b7ef-45a3-a0b6-ee53d488da71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7695610-dfd0-4f48-8521-19c1245830bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bfc93c-e80a-40ea-9a95-7acb56813d92",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6449d206-ca4e-4a22-a3b2-988a8f85d507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93accc95-bc65-4415-b0ab-959729198d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac502fc-df53-416f-a914-47bf8326f5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42479b50-b89e-4aec-998d-0b4d8b594500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428452dd-1293-48cc-80c1-68cdc97d40ce",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f71412-0815-46f8-b387-068fd3c44b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecf5ece-6cbe-41ee-b76e-1a58b8a17953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70845173-dcb8-4044-9b3e-381e6be45c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d71766-2518-4ea1-bb82-f187185b57d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92e1e2c-a9af-415a-bddf-7031a328f3bb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d204352-f9dc-4bf3-b966-57adbe4068b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaa90e6-17d5-4f5b-825f-7ccc83a3dad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99215cf1-bcf5-4314-ac02-39294abde32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6f3a66-ccee-4c3a-a665-3ff5ff26f611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841c3e62-cc72-42e5-b188-d2dcf50ea892",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8836d731-6e94-45c9-bc6f-7e4a4f4ce12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b776b3f0-e17e-4ad5-a050-25515ea5b61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1650db-f831-4615-92ab-2226f48f8458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "36b756d3-8cdc-45ee-9932-dfcc69844c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524d8179-42fb-45dd-aec0-11c30887153d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db446a3b-6687-4a50-adac-55d6ea838567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0bcae6-0277-4b6e-9258-f0fb0e39fd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a84a50a-9ff3-4019-a0c0-f0efcd5cddd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "837d0641-42bf-4b5e-a43a-95b42a7ce80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa50d2c0-2327-4d85-8887-521b7a0c16c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1bb71b-4caf-4ce6-990f-228ffd41fe59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9666c7-0cb3-49fa-84ca-fee795e0478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b5fb91-1316-45c1-925a-addaac641e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "85b4bf42-253a-41d1-bd24-7a93a9da3495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73601d33-692d-4c3f-ab3a-74f49d8d2b7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a1c60d-871f-4a22-9534-75272507f8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e2b1bc-a8e3-41fb-9dd8-919257de7260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4cf93a-be14-4f69-ab25-84a53c043124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "784054cc-8864-4eac-ab0a-fe0f14ecbe6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b92132-8832-4f89-8322-2454d0832c09",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e175642c-981c-4b9d-b576-959afc53b9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddbd3cc-0fca-46d3-8373-7ae081eee97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b11537-1827-4388-b7f3-e62792c43d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b9b464-20d1-4908-bef5-fe310f336c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672da171-d3c2-48b7-b79a-0b56863ecb75",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6df573-3c62-412b-8a3e-a078a3d57f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4d79bf-efed-4480-921b-a6cb7ef7cfec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fcb36e-36b5-4733-8ebe-94cab6a941d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bef0d4-7fce-4379-a0f2-94ba6dc35c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21745180-70f3-4d50-8133-83ef6c5ec344",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b269b3-cb87-4441-841a-94d454ef3605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74577e9-e3e5-4462-aed9-ce4004590622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb45c49f-b09e-4361-98ec-47afdfdccc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cd9d21-1044-4eab-a3a4-66019c301c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383823f4-13b1-44f0-b77a-05014e7cbd6f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407d5c7b-c7cb-4dc6-8aea-aff3197ccee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd86687-a455-424d-87cf-032043ca80f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ef0b21-dbf5-4033-8aba-e31118738545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aadc905-119d-4761-a35d-333636842e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0d7ef6-b1d3-4548-8a8a-e7d6321f968d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19777bc1-b9a4-4338-b407-1cc6e98f8608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fa32be-e69f-4827-afb9-933771a5f71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2840012e-2198-422d-8ca2-e2e06d0b12db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28b30352-b0c6-4d67-b090-ff497d0897d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1509a60f-9396-4d06-8f66-94b11e9a37e4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9288c4-5c0a-4e04-8565-8e0ecbaaccf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537bbf8b-2c7a-4cd4-a059-0ad3be2081ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46597b1-863a-408d-9dd3-46f5ee89a800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5c4b22-bb3e-48fd-bd56-c975e8cdf685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b09fbc-b5cd-4490-aeee-e64e2d6f7456",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a937ba-ca43-4f0c-ae81-4e8c02d39fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c3c7cc-6d0e-4482-b163-da8e780cbcd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12c2d8a-744d-4080-a45c-b75415393341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "080b1390-4c6c-4ac6-9eae-6213289bfb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4ef73b-e3b1-4d4c-a892-f3bd01c193ec",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5af4e0-80fa-4936-9d2c-8c3371e62af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa6a2e8-a976-4499-9c8a-a8b38f5b0273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61198926-c972-4dcd-84bc-3fb9a51f0962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8746d78f-10ca-45c4-9ced-fabbb2883788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46012f73-fa9a-425c-9b9d-5ad6f175dbff",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0699cd-2a91-48d2-8cd6-db0eb1fcb915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f842365c-fd7f-45c5-a76a-6f5bf1ba099e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef4bff9-1c7b-4ed5-89bd-8c79f2449735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "02241527-3048-4e3f-b823-cdd989664e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e7730f-6ea1-4d72-81fd-8242dfc9111e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a399b82-f354-4244-88e8-7c74be5bdc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81767b2-8c34-41f3-97c8-64e8f495b126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7e89c8-a7ec-4f27-ae83-270cf82619f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b1a138-3660-409b-99a4-4b70378b48c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b13e23-f997-4fa1-a224-4d923c204fec",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d682c681-c5fe-4192-a05f-aeb442c313d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8b242e-1dfe-4814-938a-01b2ce33848a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b1ad88-e4b6-4c52-a800-9784916fd02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9230deed-3413-4249-9fb9-e1440450d47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eca3c6-b607-4503-b540-d570139d2694",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac74d32-c9d5-4d82-a990-c59fa639abe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cea932e-ce00-44b5-81ad-2892432186fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf988019-d054-4927-8230-6a1a7650b840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f204f2e-7d49-4b4a-b609-c4ac5d021073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f9e25a-fa0c-4c6a-9cbd-776c8e839d19",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1317287c-ff2b-472e-aa94-b686967f4333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a89df1a-cfb6-477d-b657-c41a730f9f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066e74d9-86c4-4f4a-a2a6-6cf606bff1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0a8349-b412-4359-9bb9-646084f38442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729ec979-d6a9-421a-a4ac-fd79c3320079",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eddce7-5f11-4d9a-a9ed-5de7ac3e7fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29471c6a-57b0-4d75-b285-db963e534ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4169cb-461f-4abf-a9d4-b8cd103e1e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45e70267-eca7-4464-abcb-cfd0a8ef8e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240cd107-4ae6-4591-a9f2-4733527d5ba7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0dfcda-77b9-4f42-9ad4-14bd46a7b8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7aa706e-4755-4395-95ca-80f54b6dc891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebe9f9c-0a9a-4f35-a1b3-bc384b64dab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5784a1-bb01-4b40-ab67-ac0199d8721a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb72ab94-4bc2-4a7a-abc3-f85ca0b3638a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5db50d-5361-4b6b-a37c-2b0eca6bb9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91567044-a0df-40cd-bfb6-6962fdb7338d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c62a08-df2b-4278-bb04-ec1bcdb01cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2cf261-5877-478c-b780-3e87a6497b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e5c5f6-77ee-4fff-bfd2-6edd64a5847b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de104e9-f6c4-41f2-b550-73baffd39eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a28107-21e3-408b-a614-c728724bffec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc09150-6aa3-4141-8783-36501321c001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8d7942-bd93-41cb-95f7-659ec39f517d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee28bd54-d26b-4c92-ac4e-c1995bb07174",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e098259-2258-42fe-ab79-333755162d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3eb8cc3-a15c-417d-806c-d81830ebafc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7ff0b8-6173-4d7c-8c84-ea96882e8316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a198ee7-cf24-4de8-952d-975e0b600489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc09fda-c6d4-4872-95dd-a0ceb9d23bfc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a335cedc-8331-46d2-986f-ca250ff0db60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a57454-2590-40fd-aac7-d8d17751e7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcdef81-cb71-4ead-b833-bf04c3754fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d51526-3029-405c-9023-3ab923037a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fd37f2-3ec6-4a03-9a0e-faffe064acbe",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea8a632-a95b-410e-b39c-344f3355df87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874b9c0d-8c13-4a26-ad81-19be973e87e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81fe858-686c-4c27-90a2-3dcc5ebe9319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73c4bd5-4386-4cf4-bf6f-3b2524570e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd57ae9-d9b5-4307-84a8-67108a55cf16",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d07803-76a7-4f61-9a70-4b6e49d72ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d269e97f-9097-49ed-acd9-1a2db0b285f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17b533f-ea84-42bb-a9c1-b723092a4b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44552ad4-f8fa-41f6-8b53-4a467378b951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb5456d-55f8-479e-a115-3691f59573b1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18503b17-5834-4934-84f2-a6510de12934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb65e09-6931-4236-92ad-a8697f692182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1b6c2d-3100-4ec9-b70e-b19b880bea0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1652dc5-49bc-49d7-8757-2084dfb9fba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65bea8e-f074-4e35-b714-235faf77003b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1989f992-c811-46e2-a70b-7acb1c511139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df972fb-2e80-4fa5-bf48-81148d8d23cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9454bd04-71c4-4ae9-9099-d84586f07d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f79136a-ecb3-4c30-bf62-45953807eb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136175d8-7799-480d-a3d6-6768bfb8f3f7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6466ce32-4075-4bbc-acde-8768dfe551c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c21d72-2d77-46fa-87b1-d67c65d9d7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8db4b9a-2519-4dfa-b2e7-82718b8a8e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3615878d-36fd-40ee-8481-0515fcbac124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d672168-4d05-4cb2-95e9-3019898f419b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ea1dcc-4664-46f7-a360-25c72eb2e834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca78e96-6409-488c-97f3-ca248ae25de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400416ac-bffe-44a8-a446-9ddd627e72a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80f4186a-5529-4f45-b220-3cca440c99c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bfb632-648f-4a79-ad5c-89c740bc76b8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f88cc76-1e9f-4428-bbde-3fe3dcb983a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da6dda8-5942-4060-9867-9534215a810b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a1339f-fb7a-43bc-93cc-7632f64e139f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2352df04-9c37-489f-8760-030a3f2cd5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8580ec-c489-4316-a0f4-2f900f439633",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9235c864-8bea-48f2-bd65-fd30ad478d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58feb1a7-111f-4eb1-8b36-1a946e3b7de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b25e71b-d8ed-453b-8e96-592234765eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e35c64-a057-4098-9d55-a18b9133cff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84736eb-3c5f-41ef-954b-25a9a776f069",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75c86ba-3f48-4ac7-9a8a-1a5b8f7fb295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9b462f-be6d-46f9-bd73-12086cf9ef9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fc1367-ed90-4f96-9f09-e503fa608e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfa4c61-63dc-4d29-899d-73c0021122d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8620675f-2e31-41d5-81b0-9cb3b09df990",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e23f1bc-b41b-4ef9-b6ed-b6515758a07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22720a81-da33-40e6-babf-9fbee415d89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f90e29-87d9-4ecd-b7c6-9784d054eb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "182685ae-09cf-48bf-9f05-388560f4b90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178c1991-4ef2-4d1f-a951-46c0ead69aac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a726f4-08cf-4297-8e66-9b81cfea682a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36365ea-f10b-45b9-b0b9-c70585b5de0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3eb63a-611a-42ce-b099-d574f2249c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81ced3ec-eb54-47b9-b820-92c516be526a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56a2435-e8d1-4623-a2ba-71105f20840a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd60114e-6827-4545-8fed-08ef9185227f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e4f215-c75b-4868-96ae-cfe14b718389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a644dd-0dad-44b9-a6dd-d77f03972fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dfb36b-de40-487e-a5ed-ee8304536942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe27b94-269a-4d26-843f-433332ca93b4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483dd70b-83a5-4322-abd6-9586a16e58e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a29d3d-0895-4a58-80c1-4686a7a052ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b505b90-bb50-40f6-b58c-b6857c5ff3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6509d47d-0694-4834-8908-f209f471f8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61c77b5-dc92-4b08-9421-b6419bcceb06",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c39f0-b4cb-46ce-b428-82555e8d2b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "52f0c9ec-efb5-4901-b934-07b7c1faf8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396ad13e-6136-4f3e-bf38-77534afde678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "78b14bd6-4fd9-4f51-8dad-a521ebfbf47b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ca52ecc-c1a4-41a8-97e7-df93ea748865",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0bfb3fab-ce7b-411b-a26a-6d6cddaba2c6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40e4b26-cb4c-4ea4-aa0e-dea9c8dc11a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d0fc3a1-efe6-4df1-b6d0-2c61d8b09075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21326dae-74a8-4ec3-86e2-0034ee428d8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49ced38f-3021-4fca-9863-46b00709a796"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65d7337f-db11-498b-90f0-49699a8235f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5410673f-6c22-4178-9cad-2a01a980b651"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c81185e-b398-4b49-b0d4-1fb29b5b815d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80d83d41-3ec9-4fa9-b5b1-52315e555b75"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "634293e5-c701-4551-9d79-b2f73b9f5546",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9265992-7f45-4d9b-b642-2058cfa19aa6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c65041ce-03f4-41df-be35-047683ad9dc7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bb784b2-376a-4365-8d85-c2a4f07f5c95"
                }
              }
            ]
          },
          {
            "id": "e8a98d0e-e0c5-4dbe-a776-290dfb4037ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1602e1cc-acff-4b86-aece-7759f833fd0d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f69a6c37-0999-4496-b000-8507fae3b574",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f477b35e-a47b-4dd6-b5c8-d2e6510d6dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e8ff14a2-a50a-4ab4-908b-f09bd08a2142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b440b11a-b941-42c4-a8e6-0948922853ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25023880-df65-4668-86bc-7ba6f667b270"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41477e21-58df-4f5e-bb51-e49bb604e21d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7072d81d-09d3-4fe4-8320-cd4028241ecd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "824b2be8-1351-448c-8bb2-9707284c697e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41b6fbd5-3de8-43cd-b343-1f40cab2061e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "def797d3-0d16-4abe-8165-e3865230c226"
                    }
                  }
                ]
              },
              {
                "id": "0c916996-67de-4710-bf42-60baa1accfb9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19db2ca7-16bc-495b-a93e-005497d6b238",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd043453-cc1c-4c50-b007-9d146b5d7465"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "294eeeb2-9869-4c2c-9849-20275112e760",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c748eada-3aa9-4c54-bb6d-cc263226dd6e"
                    }
                  }
                ]
              },
              {
                "id": "5ece07fb-1ba4-4edd-908c-7e8653495b3a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a343e2f2-0f37-4fab-8ae9-fdf5b7ee64fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95a1cf02-4961-4f9c-aa80-6c01d858f171"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d4cfb1a-171a-4461-b55c-a6b242689e30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "239879b2-fe1f-47bf-807b-62ac75e67a9c"
                    }
                  }
                ]
              },
              {
                "id": "bb132dd9-c893-41dc-85b7-c071953a02ef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ba05758-b26a-47fa-9ca0-90c94896a50d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b9bf89c-9a40-419e-be2c-13249db40caf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55d43ffe-fc11-455f-9d24-b5db0f46cc82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ace5386e-1efb-44bc-b866-cfb818e27291"
                    }
                  }
                ]
              },
              {
                "id": "c9997f10-e048-44cc-bcae-f99ca6cdefb0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9929610b-f1b4-4e94-ba80-c10db476de86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9690a296-acbc-440a-9e02-926ab2f1aa1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bd6aa97-5ea0-4ca6-92f5-ba8af53dbb3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "39031348-700f-4eca-8d8f-a42eb3607e4f"
                    }
                  }
                ]
              },
              {
                "id": "ea03e170-f56a-4f0b-b8b9-e20f7bb07e71",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f492599-2475-464d-8868-c3677765d3b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "027fa03e-25db-4eb9-a97b-a5dff9fde43b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "744d8609-2d68-4043-82a3-ae7b1f2ef12a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8b81298-31e0-4e1f-a252-eeb58dd198e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "491d87e0-5537-4690-8740-0dd2a7051dbf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91b5eba8-14c9-4b8b-8dad-607717fbe3bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6d6027ae-6ff4-4753-97b2-33a50a809b8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d11f796a-61a9-4ff9-a358-2f80f50a0a9d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ac1f3b7-fb4b-4081-8616-618a2e4dadc7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1f7d50bd-6bd0-4979-a0c0-8319c0b49282"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d00dbcc6-a68e-4579-8e50-30fcf727ad5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a092cd6-6137-442f-91ce-b27aba9bf09c"
            }
          }
        ]
      },
      {
        "id": "ec131f77-b1ac-4fe3-bb31-8f725460e8ac",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "86ad519d-d59b-41f8-9052-b982ace9fa63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0aa74293-a38c-49e3-8bde-8ba8719fe7ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "876fbb9e-d24f-4081-bc48-016e087ef11d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58abe6eb-0c44-40fb-995d-c05e1089d6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939f0819-d9f4-4904-ad9f-1fd02ea0cde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5ead6c-2312-4939-9350-5067c65d8f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "da2d5f03-e727-48cb-8842-c88c1d9fd3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87b63e1-8f49-4723-8fa3-7b22f98bbd80",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5690ada-f795-49eb-a2ed-2f9bfc20ed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af94c1a5-317a-4b65-8453-456caf5a3a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51fe0bc-4927-4095-9bb2-a45c7ae976f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66bf9b64-4dd7-43f9-9218-80b1b7c351bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e957f7b3-0da7-47d3-84d4-6bbed211c612",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e263c554-030c-43b2-a642-e126d849a34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6b56d7-1474-4cd5-9266-e60099048236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41171aee-3ee4-4800-aa22-a21e2a9815f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f718d931-3057-4239-bd91-7acc6c75c5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df4475f-de82-4acc-838c-a465f7220912",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773ba984-08eb-4469-bda6-27987bc415c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794a44de-0d2a-4ae9-a630-8c9d4398e899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58bdee4-cd9b-4d1f-b518-2469ca7c7732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2703b8be-ef7f-42a7-b3cf-30e7e0f08c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2379d73-8876-4203-b096-3a3234fa9952",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fc0937-5658-4d1f-a412-87f4211fdbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1117ff-ab14-4acd-8e40-0cc6281b0ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d5ea42-f320-40bc-b1ab-ea31d08c297c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f13b1832-a6b0-4561-9424-1781fbe4bdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ebbb70-80f8-475f-944e-d192e868b858",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43335f4-87f5-4fe2-8bff-6cfd71cca35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72093bc8-3247-4644-9073-1e214e7db7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03636bd-b6be-4785-9a92-c6ac65b37634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54f247b3-f1c9-47a7-8497-80384287862f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed408f5-c520-480c-b528-17a68e996c83",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef261234-9c17-4b66-9bed-3d6b392c5dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072ee4ec-1e7d-4235-a408-7612f72ce9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3321bef-7766-4b5f-9ab3-b54fee8f5885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b91ac7-4e96-4675-ab83-51f964a3aca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a8a41f-f654-4cf8-954e-bbf72a68ed50",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c8952e-ee1e-4ea9-a69a-f6abb4ad8d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4118ef5-9d39-4fd7-94d2-4b9a0d247c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8ba8dd-9231-4477-bbc2-dfec408962e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33c6441a-3258-476b-8e5f-35fbdac7036b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64935118-8d6d-4754-8721-fd53bf76a615",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcd3bae-40cc-4118-bc3d-d7078ff2be63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5a99aa-8e93-4213-af8b-eaf8773b2d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6f0073-666e-405f-bace-2d41a3ebe6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "918cc348-efd2-4db3-9a55-54c052c462e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5725637-bd94-4d4b-b34a-48c6facb427d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93955d7-705e-4fa9-86d6-02aee1d40300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4548a4-289e-424f-b5ec-c0fd94c3e698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad02eb09-a5a0-4900-9486-a28274039054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adca6a2c-e30f-43e1-9332-1ea7063e1019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e234f54-57ff-4b38-9034-d876188815ab",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf4d738-60e3-41f1-ad81-797b00135354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba0caf5-c66f-4959-bad3-80ad0c8e0288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a279da9-c901-4a35-8d3b-7276b4e93141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "34dd40e3-7123-4efd-9d02-580a6e0c4b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579ae1e7-99f1-41c2-a30c-470aba7f4d82",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4e55dd-291d-40e5-96a5-7c7fb98c279b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d408960-1929-48df-8471-ef953f9339c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7386ad97-0816-448b-8561-bc3ddfe5b1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbb0166-4850-46da-ae84-cb0df79fcff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00130d69-5c34-4ee6-8b0a-ed24a2d98c29",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd15614-6c46-43dd-bab3-2daa6b5baaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ab39f2-0a93-413e-9921-189e90bae9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b90fde-e75d-4ecf-9a1d-d5c9fa25b9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06fe8fc6-3178-4eb3-9d04-c3ebc4d8c9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cf8b15-a4ac-45e6-8dc7-0b5befc899df",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a617840-6440-4515-aff0-01fe6a9bfae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56375802-8ae3-4803-a4f9-0d92f3f5f17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99936da-3121-46fd-af58-b6a8ca6d25dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "34baddfd-b4ed-49db-8569-db8974f74090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e108c7-aad1-4799-9a90-fbf1f033babb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4ded0e-3308-406c-a01e-709dc1bdb51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6af264-dd89-4c49-80d5-b876b083de41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808cd95e-7650-478a-83e2-5cdc13401364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "feb33335-ef80-43ff-bb32-fdde2eb98e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1704115-d98d-4731-961d-55562eae8deb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac95bde-c56f-420f-a1d0-508dce062495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dc02aa-3677-4bfa-9c32-df4483c6395f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbec5130-eedc-481d-8c45-928d75354558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85414b6b-7fb8-47b4-8061-e265b348285c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab01ba7d-5138-48c6-a55d-1e0b5ad4118e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea5a040-f67f-4a77-8045-b245238de6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485b78ca-f30b-477d-bb17-0818860dc37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60402ea3-88c1-4778-ae01-4d89c14f3d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "51cead10-f51d-4486-9832-bf3f3793543e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667aa341-740d-402f-87c9-e0ef40c497b2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe078f0-89df-4807-8791-02f3c8055881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dda3cf-bbce-4179-b5bc-db0a19d9f800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d89dc9-f1aa-4b8d-8c19-cfc47b3d869a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de0c8e49-e269-453b-ba14-3d4e2f2690a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72373525-d4b7-4aa9-9905-d71ae3dc169c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcd1f3a-3d0c-4264-9cfe-d0f050759227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7112a354-3879-4261-b0ee-0f53f18b5e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced079e6-fb18-4ebd-b0b0-1f5fad12bd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "235e43c9-3a6e-4b8d-b888-9cf0f80e1406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfae200-7693-46f2-aa64-b1c54fe39c2a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8e5539-7235-4825-83ce-0cf5d196cdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022447c5-188e-4f72-8745-5d4964aacde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b623aa0-54d0-46ba-91db-5def6384cd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ead432b1-2339-4218-90a1-ff87c4b5c92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7e7e8b-b1e5-4fa1-b63d-d7859e583294",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1742d911-bd67-4d9b-87ec-0aa57f940205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbee2327-af2c-446e-bfe1-438afb1f34ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f700c7b-ae21-48a8-8630-9e977136c9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5daec76-bf1d-4f14-a8c4-5a597c08b8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03323241-935b-4d39-a22a-c9c197290d4b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c647b210-8959-4c91-bad3-c84487894c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b26d022-5afe-445d-bf85-d9293ea1fa78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4b973e-29dc-45bc-b95a-11bb54a6ddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87100ceb-34f8-4250-8db9-7faea78ed108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70e9dcf-2e7f-4bc6-b420-38cf8db29606",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bc532a-f9ba-4b09-abcb-f4b6b51fc5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dcb991-a26d-42bf-bc5e-689c82bdc0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afeb7e4a-3983-47a8-8af4-066ab7f9f32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edfccd3d-b910-429f-b5e9-fca5ead7b3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b851da28-6257-4dba-9591-7245d00c1535",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801d59cf-ad68-4846-8660-aae755bdd2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc891dc-d09a-49ab-bfc9-f903f91610d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cacdb9-49d4-49f6-aa7e-223a2b29a97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f95f562f-30d8-4f48-b849-368f4f5ce92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64aeec2d-6ee7-45f4-84d2-ae132ce5c67c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7451f290-af77-42d5-abd4-378041542b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7194720c-fd60-485f-bafd-a331549c3392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72e30a4-03e0-4f7f-85f4-874557599933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "240cbfcf-ffd2-4478-96e3-c574c1c9f80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70b4e84-4b15-4a29-b15f-46c8f26517f5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742947f9-2722-4cee-b6d6-f39bb25dca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43c8605-5160-443f-a966-9db1468c6704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660b5c02-24a2-480a-9e78-c30da423c4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58dfa97-d53b-486e-b187-7d2819faff6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a435dbc-5c93-4c01-91b1-836f604c96bd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42848b2d-a0c8-4af3-bbb7-c8ed31c8ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf318c2b-8560-4190-af36-1f43ca2d2350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1cb6f1-08ed-4d35-87dc-7d39997b2ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98573466-605c-4aa3-bff1-8330e619fb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056e714a-11cd-4ccb-a552-1df562609350",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfa09e1-075c-4849-85f2-d492d442fb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4792c09-0644-4bad-a36a-2ab22d1b4913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9db354b-77b2-4562-8e3f-fb94b7edb90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9934ce-e791-4d2a-a502-ae77c0443df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d42c852-6323-46da-8782-565f59901066",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205325d5-1a32-4b02-b599-a354f5f8c686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2bb6bc-3c2b-4b3e-b75a-a339615d9de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137ab219-db55-488e-b982-cd4b43effb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0c26c3-fbee-4790-9753-b667fb6b75aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cfed73-0980-47b1-b8dd-88fd15156325",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f050e5-15a6-4593-9214-048bcf9938ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98999b1-b0d6-4570-af19-ee3cb8001b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d413cc-f55a-4f87-a0d9-c7c0b90b48c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17a68c22-a924-45fe-877b-54a05645796a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20949148-8d73-4125-9c23-9a84a938ffd6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abae92a-05ac-4bc9-b2f6-81238169579a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a99357-ad8b-499b-a623-5e81a77ef477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d7a77b-0e24-4c5c-8847-51023ef5e3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b8d925-4b4f-4fad-827b-d35cc4b4d7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740735c4-2e17-4176-8551-e456bf1c626c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0aed421-46d3-41f9-bae9-cdfc6a695997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba6284d-7537-403e-918a-af85ff1eccbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e02474-fe11-4b5e-bf52-31376d61869b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da8e7cbc-47b6-4816-90ec-55c724ebf093"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71290860-88bd-46f2-bf34-9b37275ac6f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd69070c-a6e8-4f9b-b398-6391ddee1bc3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e852542d-b323-409d-b424-63ec0cf75b22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4d50e2-2c2e-40b0-bd38-413e3b81be63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e53005-b2da-4832-8b66-a48793c2dd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4de0cbaf-8e3d-4d0c-8e93-400769736e6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b5a0458-b407-4133-9c05-57ec1e8c1f41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fe30e15-59ed-4f8d-9268-bea0e4eb6ab1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23da9036-1b8d-48fa-b343-ee5942443ac5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45e86a44-7a8e-4186-852d-7c30a3c72bce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fada0987-fb7d-4ebc-8833-79f99fba4577",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27a4fe1c-e8f0-493b-ad97-61435070a63c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb9cae4f-5b4a-4017-8e7a-576da6e82bd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cc6328b-5cda-4c82-937c-d16c8a16d731"
            }
          }
        ]
      },
      {
        "id": "951a245f-d470-4358-b4b1-b8079f7b7594",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1580b261-3415-4b44-b060-50df73837d2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbed0c84-bc83-4bd6-ad5d-2627edd46ee8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43dc5b93-b01e-4265-91f0-e51d69dc2c02",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cca2f3e-a1b8-4d47-8332-968fe15d16ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93df9457-1d70-481b-9914-65b6506a2f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4b5a97-9c88-44c9-9acc-a02037facb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c54268c3-8a74-4376-a5c0-ffeb5b83f0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91edba18-5927-417d-9305-4aaa92f32d99",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ee5e78-ebce-4f0f-ab2f-1a4d840e30a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311a3ca9-ded3-4599-aa13-aef6abc1b0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c39715-d01e-470d-aac8-7fd7809b9d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4ad6d9-cf24-413a-906f-5b5c22cbd2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f87cb-1cb2-4bd3-b464-4b36f36edb76",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fa74d4-280c-43dd-a70b-6f463e101447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8899a757-a1e1-4b6e-8910-f2e44810dd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09217aca-3f25-48c7-aebb-7ecded1e52f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "687a6339-f9b2-4ed4-b50a-2cb3e0eb0a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918e89a6-c935-42f8-ac7d-124a890e82c9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfb0b21-3483-420d-a857-5f15c02dc557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12899304-20da-463d-b844-0489c288698d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481b1d00-b394-4c4c-a1f4-8accb1cba516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39612ea5-5dca-427e-9d92-a8e42ceffadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77420bfd-bce4-4882-9cd4-44a3ea58cfe3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8985cb6-e08d-4939-bed4-4fd9a97de66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15ead3e-dc71-414d-84d7-b8082873822a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac34cbfb-da88-40f1-81ee-2e9c89b6cb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4c0435-c172-4ef7-866e-8efd6a0d1fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12696a2f-a57c-4ef6-b233-cd513737b212",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a509a979-a7aa-4ab0-a56c-691e1ec197e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d74ae33-d40f-4561-b0cb-0d65d4b217cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660690be-2fad-4cba-b36a-c1faa41dcb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14038fbe-b1a6-4578-83f4-ec7fc1454e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56eab382-d852-476b-9c12-af78febd150b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad900f8-906f-4468-89fe-91e5cde4b217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184db47e-e81d-460a-9a94-c6a2d1eb26fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353d66e6-06e9-4459-9212-a1930b464d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "39818390-3149-402d-8791-ff8f253e456d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294f84eb-be83-4eed-bbdf-c3f6fb33afc0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d7dd08-5e40-4843-b6f3-4b5a0254af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7263a435-da86-4123-8de9-d2b5e0cad224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6144d2e4-5d2c-43e0-89ae-ac44877552e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a91b2765-07d8-4623-a1e2-ddf72d72731f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a58f6fc-8872-4376-8552-f26ff42b8ad6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c79b520-4d46-471d-8751-c421a740079f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f4a529-e7b0-45de-8274-093e603cb6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0283b5f1-d456-4144-8311-352ab85b694e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d347bac-efb8-4701-b9e0-9190ab858f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628f96d1-f472-4d98-a451-574adebff43a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f88c4c0-8880-43ed-bff7-7afa3502c004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16462107-0254-43c4-95b8-ad5405925cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6099822c-73f0-4ce2-93b0-55dc96431bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b0270f-f1a0-4b15-8c19-0e639f1226d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2a9c6f-56dc-4701-ac3c-6f65c898613e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d744dc6e-b4bd-466c-9e29-e5a3db19b14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ac5176-5dca-4194-bdc5-08f48cbc25b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520a9ac8-ad4c-4a9c-9654-b21ee7dfe078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4e196eb5-664d-4b58-a80d-aebadb48e4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d68afa-fb84-4e0e-bffa-de11e24a0467",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8141eb68-3c6e-4294-8e8f-94753318af88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c008dc-d579-4775-a3f9-217e929a5a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed81af00-d679-4aa2-83e6-635fcc4bdddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f37774f9-f031-4630-96a1-02e4df0b094b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df01e855-85c6-471f-89ca-043dcc46299a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e57bb6-cd2a-4976-8480-823ed4ec4b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ffa280-01c9-43b6-a848-eaaa93950d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e863273a-6819-46d6-9ed7-b2ea37151732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "728e90a0-d2b0-4a23-a5f4-e9db84fa3e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a448f52-0ed7-4aa0-807f-28f0bc7027d6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc979425-23d3-4d98-a0d4-18fbaa09b304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79293a2-6c8e-4936-a83d-35664ceb9c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9574cf09-5504-4105-9d50-3191cbe8fd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "168e39d8-cdd9-46e7-adc6-74bbc5d875f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424e4731-8803-493c-bc04-e66978d71633",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18fe19b-ba27-406e-b135-4fccba27e4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39e3bff-3127-4c1e-9029-022e557891ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaaa4018-63c4-4646-92b3-3379ba38cd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be7d73d-aad7-46d4-9e4b-73485a329237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac348f5-1241-4c69-887c-b692eb6e87b4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5bb1e4-d6d4-42b1-8ce9-c779811858b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca9a378-5d97-4adc-9965-b36d89b5e3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bd1d1c-2ee5-41da-b38d-abaa0a23a4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b714abcb-c230-4f6d-ac94-7c5953afbdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f9d8a9-08ed-4e29-8046-fbd5fe0a823e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c785e958-96d5-4be1-aa58-4b4e2b75e6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962181c0-1d36-42ab-a68b-b8a003e26efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5616a4ea-d8dd-4fd5-8ad9-1efc6ebe462a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a5a74e-5458-4e42-be6b-e46ddc8e9aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98102f8a-9825-44cb-843c-c9dd8f8ad4f4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86801246-dad0-4893-a418-a6af3a286e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0ca605-f36d-47aa-a779-4b892b005fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b0feb6-4346-4d3a-8778-e80966be12db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a893ce4-215e-4183-83d8-1004a928bd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5add2f-2a51-410d-a81d-ca909fda1c29",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f805b5-abf6-4f5f-b4e6-64683d817906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69366df5-5f98-4a11-9dc5-a163b9248d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e832ca-be3d-4cc4-be79-5678381446bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fe16be-6b9b-426c-b7a0-b01cd6bcf85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53169662-f1f9-4c3e-8d6b-9523c4f777b1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6fffe8-2297-4bf8-a4cd-c2451a5b2597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a997dc85-ba81-471d-bf0a-f96aa1c693d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3577e412-a813-4389-b619-f8a329a93f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8575852f-c396-40b6-a047-aa6806f3972c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf6e6af-9652-40d4-8c72-3c9bfc27370b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61d0c84-3bb0-45da-a78c-294a1ee047e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1debaf7-0d05-4cf3-abe5-365c19ca0c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f82ad5-07e2-4abc-8351-0a5a64922731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec58ccee-9689-487e-9e86-764898324874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b33fb8-6a9f-4305-949a-5fe87766794b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01421272-9d6d-4d3d-8ac0-eec44551d608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9810e11-31ef-4aec-a810-4aafcc198fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17d1f02-2bc0-4536-a12b-3bf72e78d07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ca3c1a-3ba8-40f8-aa9c-37404208fb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb168859-da8a-47f0-a58b-6db0acd41a94",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def51de2-177b-46c7-8767-e9a436006c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a82416-058b-48ce-af0c-2eea47e33704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5ae177-f0ae-4029-8500-a0969a8f9ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f37e1010-09cd-49e4-a234-46e892cf7a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0b0d57-3276-4740-9098-a0dba82765df",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44728668-994b-4409-a73b-e1df9f7c6ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf304bf-35b7-46f0-b0a4-1a842a5d54af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2100bb0-c584-42db-8a9b-c736bef113f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b41aa00-b76e-482e-bec3-d6b74af9a92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f325fcbb-6f4f-4d28-bbc2-303418537257",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c91f8f-0646-4086-afb5-51e014b26180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff948fb6-ade4-438a-9f4d-a707e6c1adbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ae73dc-cba2-4af0-aea8-c39460546816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5737ae-8df3-481a-bbd5-cf8c804b3381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80c0a33-f68a-4938-8bf7-d3f3518da3df",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee4a79a-a1eb-443f-b103-e985223f810e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e43bd4f-9030-416e-9eea-09072fdb6e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf032f7-fa35-49a1-820b-c72fabf16018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebfc38e-a189-40b7-bb72-b67c10344db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25a7d52-b8ac-40ed-aec6-45c5783f0561",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c08b177-6304-425b-9171-af28668e8d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e210c7c6-2b25-41ad-9e44-111c611e7b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2e0618-fbf9-4c0d-a622-f5ad3c970f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ede47b10-e915-4fdd-bcb1-fe70ca3b8274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d375a18-8c3f-4851-a8e8-8fbdf66e3120",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e7ab6a-a559-4e72-a65a-5457270447e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e138f1c2-9fae-49fe-8bc9-45113652e913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace9d033-74a9-4e44-a3f6-ca1d7110456b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be4b800-ecf0-486c-ad15-600eb18e7920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9104fdd-9210-48d8-9076-d9a8883858c1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b68fbdc-11dd-4eef-9903-5563037805b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300364d3-2b05-4b41-9319-373c4ae29c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1769d76c-8c3a-45f8-bf59-3c105f6d6103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e399f319-cb96-42cf-b9bf-e8d23620f1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b10284c-5791-462f-9797-c0923b1e4740",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad25ef16-d1fa-48fd-b6f8-a3d7509881e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faeb245b-c320-44e9-b0be-011eec9ec60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ba88ab-7101-4415-b374-992c705fd353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6781e1c-9b27-4b46-964b-37110408dc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da85c38-120b-4bd5-85e9-773680e2fa09",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ab8574-ac82-4924-a2e6-25dd9e8457de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe78a8e-4bfc-4bdd-b12b-db5d990346c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c8b3e9-bf84-48a7-91ca-a986952f01d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2323131f-e9f6-48c0-a23f-34f2f28d74d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1a94b3-bdef-4fc2-8bf6-9a6fdc786a71",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2423346f-861d-4ba8-82e7-7c14994001a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9a22de-1873-42d1-abb8-daedfc8a90af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaf4f8f-695f-4c00-86e4-a0035ad90bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc16296-5afe-4458-a276-3b32af5b7294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27d9782-2fa1-47db-894f-2828fcfe5c7b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6228abb7-50db-49b2-808e-b4cc91cdb3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d02dd19-6b66-43b0-827d-4546766d4b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925b799f-b8ba-4160-af7c-52d52f7f96e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80da7e7d-e256-4f6c-95d7-1c4e37c5e7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea858e3-466e-4b0d-b694-feb8de481dfc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4752f1dc-d714-4e83-9754-5c24a5f51361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6e2cbb-dc8c-4c2c-aed3-e6c4a19ce220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409ae4b2-7f66-496c-9ee0-c9023f145143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9d8305-ebfb-4187-ac80-db1d8f6fd2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08df4e3e-d7fc-475c-9b0d-ac1e6128f99b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c59b64e-6c4d-4438-b836-9eb996377f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b84699-e5da-4be9-a735-36d45e252b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604bb360-8218-4b18-b5f9-745eecf2c365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee8b03d-ad25-4e4c-8b3a-b0cadbbe45bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae25eeda-6def-4a68-8c09-3b0546cfc172",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fbc09b-8af1-40a7-b3c6-af5629aa074f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d18e44-5018-4d34-a89d-7dafabc73b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3af4c02-4a5b-4b9c-b356-fac10d61146d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae897401-cbfd-4f2e-849f-5825146b6901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030e258f-4fda-4649-a7f8-2ed354977949",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed2ca46-3b3d-4b4d-bd76-1e61bc929507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff70724-9369-47f8-a1df-4211f8e4c85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc03675f-d035-4eb2-afaa-8bd95244691a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80e054ea-e6b9-49cd-a921-0e8e51084703"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ffcb71a4-06eb-4fab-b5a8-3630b63fae4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b0be835-e328-48eb-9b7d-22ce145d2bc7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9331dc7-efbf-4d28-b0f5-00b650059144",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "95b227bd-cde8-4da6-a30c-292624382c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4637a6f0-adcc-4c59-b426-be86e858012d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61209d71-485e-4592-910a-463ef3a01d76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "114d3303-3481-40f2-8cc3-bc30adf12f8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d187fb70-0138-4d84-8a73-ed0d0be87437"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a6c9aed-acd3-4341-9724-b83daebb378b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "151bcd26-2fd1-4aaa-801a-75e5c6047632"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46a659fb-7fe1-4343-a07e-c0c4f8879db7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89354b54-6d63-4d80-84dd-ac0bdf67e4c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbd1d289-a4e1-4f59-99a4-4ccfcd905de8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71e59d4b-8d3a-4703-981f-52f9453cacc4"
            }
          }
        ]
      },
      {
        "id": "2a60f516-3213-4c4b-8af2-0c262c80aff5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "033d0230-fd9c-4992-9d9d-b360ac5f993c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b16147f3-ed2b-43a7-8a02-43b27c762f8a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7637428e-6e0c-4dea-98b4-b28d54afc4ac",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46aa7662-4234-44a5-89f1-9dad6751ad34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f9e2e6-96e6-47bf-ba6d-cb60a4c2b2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388f7c11-80c7-4d35-9376-e671b598c7bd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958f2255-5903-4c05-8452-07807ec3a788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4ea5f7-ad8b-48e5-a453-d3c19302f0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9353f2b3-ddaa-4cb1-a1ea-a3f977bb336b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631b5b32-4df7-4246-9994-c81657d55621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf074b5-0d32-4d7d-90c1-9e7a8e8b52ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e558d401-8348-4611-a671-150726d29a43",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc7906e-f85a-4c4f-bd58-4a754ab87e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd896d9-b022-458e-bbae-91b272866fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4950315-641d-4ebb-9a81-4019cda10c09",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328c4024-58f3-4293-9b12-a88431066f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0aa4fdd-3eb0-45fe-b105-b36fbd7f559c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe5a8a1-0a38-482b-b6f6-12f43a3477f4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82001aa6-eba5-472e-9484-0f1fc577da19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359b35b4-b761-4860-b109-2262b939aec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d286b42-d4bc-4be9-aff3-10d074f44b78",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5f5969-a335-4d58-b905-cb04ecb4dccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f0b01b-806b-4791-8879-efdabf89ab36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0d19a9-ec14-4edf-a78f-1afbe9cdd5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2e03b2-9788-416e-98a3-b2cbfdca7548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6eba19-4869-48b8-aaf5-4db1a21c5b4a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25853d59-4391-4143-b5a3-1e51aab922e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4fd09cc-505b-451c-beae-b5a72c3216ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6595a890-da3e-4ce9-a3b3-f4b99c4d0606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4be1b82-3ca8-4f96-876f-b5667fb01124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58ba2a5-5185-4657-af92-4134feb4caf5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1282288c-31d5-4624-aae2-a6eb8685147a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef5145d6-a579-4c84-9302-18adc3ae5e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e58610-2570-4f17-859c-d1ec1b62b4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece6c7e3-8b8b-4aeb-885c-084075feb9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0524555-9837-4843-81fe-ae9a362601ef",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ce5191-3b43-4221-95a3-551906f860ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38139182-09b0-444e-a48a-e64efa3f6feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdcb01c-55b2-48c7-a0ac-3dcc2ba43e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca4190c-e6cf-46c5-a04e-2bb9bbdbc36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81e714b-572c-4723-b109-2bfb2597f0ed",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4057d19f-2fd6-4d0b-bac0-f9c4cd8fd08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19530d9-0fb0-4dd6-bab5-e5ff74cb98af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fecdbf-2848-49b6-b6ca-d7f43ffe1aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727fade9-37d9-482f-85a3-d7af7d888943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001cd7e6-9f5b-415b-ab7f-ff3df675971c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9327def9-9bc1-43e4-8630-0c1dd1600601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2076d4-3fc3-4e1d-a130-8b5223aa117c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ebbd40-3065-4ae7-a981-40fc2a7fb475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd381ab-adfd-403d-b5cb-c34ad26ae13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0235f0e1-fe39-43cb-b74d-08539ccb6f7e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d4de38-da61-4313-962b-dcd8a860c337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dfaf413-eb71-4b71-a15c-d62df8e3fec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45eee9d-7a24-4ee6-bdbc-031f66c3683d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5066201-8c5e-493a-a690-4bb1686b3c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af93aaa-f83f-499a-863b-1307f49e574c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828abdd4-38e3-4e42-a0c8-367ce8b22502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ba23c25-e061-4eeb-b01f-042a152ddbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38129949-f4fa-4ea3-9721-72c06efea8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be06be85-2541-43dc-b060-7c38c9c1032a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72e7606-0942-480b-906b-0d6471ea6d16",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0ba704-a2d1-4d23-99e0-fbc5c347befe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dda2315-ffc1-45e0-b629-a8cc82039f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5051e7d2-e5dd-42bb-88e1-41508fb6c530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d7ee14-905d-4755-ba42-489fa5bcacc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52aef5d-0b9d-43fc-9eb0-b087e578b3d7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bf0525-4163-448b-bd92-3360356f1b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f30087e5-c7f1-4320-ab74-4a3ce69900a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eb56c3-4cf3-4928-809f-1aba6e499ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bb4a29-6f44-4afa-9960-6016fb314ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69aad54-4226-465a-ad3c-5c6023967821",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792cf09e-3141-4863-96d7-64c0e9278454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f55955-c56b-4010-9118-5a6d59b90277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff2bda0-e8b6-4856-b1c5-b08e0387173e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa37d83-4a33-454a-851b-7c9552412e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa1a54d-4c2a-4018-9c7e-1749fc3e984f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22d964c-a2d4-44df-b3cb-50a50d5700ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f847674-6043-4af7-ac97-0ee0a12548c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19af20aa-294d-4a68-a58e-89918bdcedd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdcb114d-aafb-4a14-8199-77b868bc5272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c241cbda-c922-4733-a412-8a31a3ca6fb8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1fe749-cb0b-4e99-ace4-0265338e50e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b259f025-a5e7-4681-9fc2-faed74dcf943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c2fc0f-c887-4a21-8662-6b2607f3d99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a472241-bcee-4307-8177-4a20d82c6773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15883b9f-76e9-4b30-9ebb-613121b42fbd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87d8542-41d8-4db2-83d7-057b7ab3cecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a64343-1b5f-4b6d-8162-58c3a609a4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da43ad45-c0e8-49bc-8f4f-36ba1f9d0c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72a5a3e-a19e-4b1b-aae1-bbdfd53ee878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a936c1-5dc8-4b0f-b478-9d06b560150f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1468e175-6c7c-4f41-b93d-6fd1300aade0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda0c468-09a0-40b2-9e73-e48a66e9e0ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f160edf-ebc7-48fa-83fd-034b70a32bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36155ba-facf-41bb-ae82-ccf0fec0cc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de02334b-4701-4720-8b73-e8507bd75745",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401a7c3a-f808-4510-b30f-7c844dea762b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4cb672-13bc-4798-be8b-af1b43462a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7f0c9c-13d3-4493-a067-ad119469b034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50016db3-bce7-4ce8-8c1e-2c29b33f68e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f478b533-f611-4f4e-a27d-b3a20a50bb8f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35a1a08-318b-4776-86c2-c897c1c36828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b8090f-484a-418e-9cf8-fb6e8377d583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fa1d49-af2d-4e1b-88a8-5c5edddef65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb00e63-2586-47cd-a414-d6e10012f28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b88194-f3ed-4bb9-b643-49ba16610eea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7037178f-488e-400e-8c93-9c5e8ee1afe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f980f373-2594-4981-b4b1-66d7a548a9ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cf513d-1c75-4a14-ba2d-a74f0801940a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814d43c4-a19c-4478-b79e-261f085e6bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674957a4-b390-451c-ab04-36bc6bc94564",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ab837b-b878-49cb-b4ac-eb49e68f1f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2763f2ae-3ff6-456b-b184-12ea5bbedfa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa65901b-e5b4-4b63-be2f-a48dcd4dc721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5faca5d-bed0-47e6-9e2d-ab7f744a0297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4c06ba-7d19-4a4b-b22e-d7cb72175322",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f641a8-f0fc-4bd4-a265-c161fcba9249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5c8e91-8bbc-42ba-8174-2bff0127a042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d3c505-d009-4603-95fe-c43278d6c793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfffc75-2cdb-42e2-9e2c-01bffd07b431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53be8222-d060-417d-a220-929e0b83119f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08d1e6d-877a-4425-a732-120c300b4f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc36d3db-0144-4181-a797-d2ddde0f14a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c792a4d-dfa8-4e21-93ff-223acd17471a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1a2061-6886-4575-8721-389f743dc018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78be83e4-46c4-463a-995b-cb167f3c7728",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca6a55e-86c0-4717-b61e-e1693c130782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5b09d4-c4f5-4e02-becf-ec65671ca015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a86ae9-ca2c-4898-86f0-b1b4d81f4fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4944b4-96ac-43cb-aad6-0dc17795fd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0ab4ec-7b0a-4a34-8882-c3acc0a7051f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68e828f-ca7e-4482-9dc9-102ad085bd6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e0eed62-34b1-4b96-88d4-300046f714ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5670b0-d9a1-4c7e-8d25-425941f6dbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae1528a-9357-4616-b565-be929580cb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41392b1c-6bf8-4395-9aac-80d961ecd094",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afb9167-d452-46fb-b01f-2730bf8b5900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4ca441-510d-4011-bed6-8df89e1c2381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18b8f54-706d-4991-bf14-170366b4262e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933e7727-2305-4cbd-9e37-3657ef061f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe71614-cb3e-49b5-8d1b-6d00e04440a0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a31db6c-f7e5-4c3c-b23f-f55a18c76ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df018f62-ef7b-452c-b92c-42a5898e3263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9482d227-5bef-4fdb-8602-6838af82d92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332f1c1a-f965-4429-9c7f-ec678932b419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fa01d8-f719-4375-8f38-3a5ebbf8d320",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348ff029-d1ca-4adf-8401-2e3ce9347e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb1f7e2-a89a-47af-a3a6-438f3cabafc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1861f9a-d5ca-468e-9ed7-6e31c6434124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23682c8f-5223-456b-bf77-4dd486dfe494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098e7e21-c00c-40d2-959c-58e3bd6e5ac5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30a52c8-0086-480e-b07c-c0585d12fe75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97fe4f5b-ebf6-4c6e-abff-42276a26daea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca93340-53f4-4cc0-9990-e7013f49f0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee8406c-84c8-4286-9770-548892c2ad42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25bc95f-ea93-44ad-977b-00d8a3bba1f7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef814579-eede-43ed-ae88-a053f0ac5e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff82db6e-aa68-4bce-baeb-5c3bacc22506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd08fed4-8a0f-46de-88be-ce7731b1b354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ccc67e-5b44-4979-b764-71d1ad4d8322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a17e5e-5647-41d4-aaf6-b7e99884d929",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77e2761-0828-4716-b1fe-60a72402d793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2b3050-21da-4a26-9287-59c48f736b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39db33cf-3b70-4a3f-91ae-ad5bbcd52f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a91120-8445-4f19-9238-f655d79f4c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a69bb4-5392-477a-993a-136eba2a5348",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5808f2b4-a52f-4883-ab96-873de87ef527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9c3e51-317a-46d7-989e-76101d4f3e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda3d44f-1b9a-488f-a28a-5bddfc7dee0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3340a5-3511-4074-bc40-f05a5ada9c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b8f074-345b-471b-8d63-bf9970f68bd8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a861e6-8c6f-4cbf-9f1d-114400cecd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b15c767-5e55-4802-aa45-e5350691c250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeafec64-803d-4664-9457-25315df36ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28187b4c-7cd3-4cc4-b573-4ccfd72ca448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0669420a-6783-4cce-99e5-8123ca561a25",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6394fd46-9244-456d-b0d2-73f0ce92d6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad4d7f5-86e5-4db5-8ff9-09a21a4d7da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17067ff-2ed8-4b3d-8b18-75b622c4a3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1926b5a4-1e81-463f-afbd-5690da6d98f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072398e7-bce8-4c08-80f7-625997b3c5e4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5bc516-9742-4e38-ac8f-e389e9451c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18006396-035a-4968-9a9c-541d9b29c610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8431785-392d-4db6-ad28-7fb8ce90ff84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43538f07-159c-4d5b-9339-e307acb8850e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b512116-155f-4aaf-842d-e59982e00397",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32715245-1db9-4361-b757-ae00f697ef27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffe2a50-5622-4af0-9bb9-a0a37ff77a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dabca64-e94f-4303-b6e6-90c671697728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87234cc5-cc0c-4958-92f4-8f8197a0a28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ccd4d6-b80f-4015-8e1f-db745532f2b5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f641a6d5-df7a-4ee4-9a56-b02bd9726122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6ad367-bebd-4099-b586-7d5e8ba3421e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d2d539-791e-41bd-b678-08e0bf850da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b294ac3-9838-4e2f-aaec-2d4d6e163b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece9afa9-2fcf-4b87-9113-9f4894e513ea",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943be129-47c6-4ad7-a9b7-488562de7975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8314ae-7281-4922-84a2-6400698193fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2468ea4a-5aa7-4765-bbd6-7ca83f47b90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4ad20b-076a-4e89-919a-3fc328f0afcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc401bae-67ba-4dad-9d17-c61a9b676ac5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ad1068-52f4-48df-adf5-7901f38eeee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de16e4b2-3fd0-42b6-848b-c6e1d5865b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63047fd4-7e04-4076-96b7-574596fc8d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2de0b4-fa6a-4237-8688-7eec8264bf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93385853-b80c-4a21-9261-dfcaea21069c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1229b6-c308-454b-8ac0-a89867b74333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8deae751-089f-424b-8629-ab1984f96cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7267442a-df4e-4d3d-b189-90e1371b5a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509f7501-3dc8-4ce4-97f8-c99e77795e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd09e361-235d-4431-8623-8526e5b21e68",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4a2925-889d-4aa9-b068-bcb1bc617cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046f6415-6517-4ef5-9e7f-9c6480eb2a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828fbcaa-10d4-42b9-b6ef-2e3fff5afe82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5151ae9b-b738-40d7-b4bb-4f5ac120f320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fa7a97-c2d2-4c6f-925b-54724cca6d7c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf865c8f-b4be-4e77-b35b-aeffcfc6ef27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4b33df-bf43-4724-bdaf-89a2c30512eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7264e0-265d-422a-8b62-10ab84b30392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8d0641-86cb-42fc-ac11-12375dbd0662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e76a0bb-2ff5-4697-b31a-32ffc7ec5cd3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6369e6f-a963-4346-a84a-4d871ff5d06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f865ef9c-2bab-49a3-8650-950fe00e5f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f1afbc-a48b-4e2a-919c-76b7981d5149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ed513b-450d-495b-83c0-a19410f913f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c445694-588c-4f22-8cdd-efc24f0232fa",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39d5167-0f82-4a11-add6-1cd18db694bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480f5a60-8681-41a8-a1e4-fdb0872e72cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1421ad61-ce30-42f8-9764-060ec1b608ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e2b815-7e6f-41f5-98d7-973267af4705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a936d670-c4c2-4b43-9fd9-fb86cbf62bdf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5002edc7-c81a-45ca-95d9-e8be7e486c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026c7e19-da76-4105-90f8-4f2d748c8200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bfeed0-35d1-4cbc-b42c-f669daea5ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b76009e-f5bd-43ae-86a1-3faf34521733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20fdd34-f0ef-4888-a385-64cbc3420c46",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a72984-c9e7-4b79-9557-33f6b9ffcc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73aba5d-fdc7-4040-8331-bab268038a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbf0595-a92d-4cb4-8667-55280dd09eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15df1d75-9c0e-4146-b384-b5ef19db77b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63eed0c-d56f-440f-bd58-4af3d398c2bd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14868b6f-242f-4d98-ac63-c41146ad4d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a23da47-9479-4461-b214-f6f8e12acc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b4b06f-1fe6-4ce2-83df-40726b99e7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d268ae-4806-4235-97be-4b113bc83d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019ec5cc-3444-4068-83d9-ed342fb9384f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d52238-6399-4a8a-8f38-be4ba47d6763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d796e89f-0c63-4f97-b4af-3ac3a0eaa602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af17120-c315-40bb-9611-29fd13156e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0bb69c-f412-4c18-b3b3-206d310fbeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ee7006-a200-4e65-8cda-2e0a43c9bf69",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd80e89b-809d-4197-8d86-02a3421eeff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73708489-6f3b-4a0b-b724-e485aa53fabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b0143b-3470-4599-9a5f-fa8a4f144439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94353777-78f7-49d0-a605-48fc34550480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7f2f17-bbf0-4ee3-9798-f35159aac3ba",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0905ed85-b522-40a2-80da-e0a151d2ff23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8548a727-e1a1-4dc4-881f-1b342301ed6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25f54d2-4b66-4a08-bf85-2898d8aacf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d6266b-6be1-4bc4-8ed4-eced21109f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865b63c7-a969-499f-8684-a4d36580a8b8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493a3969-6327-4750-b477-de46f23ddb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8dd3546-ce8b-4eda-a4b9-4033cc662c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f236850-4902-4d2c-bebd-ba8c1c1751e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b29f48-d295-4b19-9032-c4f12f42bcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597e6522-b14d-47a9-b486-d2d7b4122129",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee88f9b-dcbf-4922-baee-68f0d552241c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45e00a8-0965-40c0-a77a-6d9e497a158d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b49ff25-7488-4294-8a1b-9b77e3a389de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519bd7c7-945b-4a07-ac4d-28bef69df4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178492e1-2b87-4c35-8ff4-8d2a1eb872a9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5963b0-3221-48d4-8325-ab20c742e351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd90e535-8c11-451b-ad08-96982d60567a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91c897f-a24d-4acc-9019-b03f52d8f9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f01c270-6e6b-407c-8109-164bce7c26d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6298835-4903-466d-8da3-c0c80c654ed5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c822cc87-9214-475b-ba77-87ec06f49b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355a3856-fb77-4073-a357-a88b82947965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d848c9-00a9-4b95-a9e4-14dec4f4c6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecee7bc2-d8ee-4497-bcc0-8786da84b113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad6aafb-3471-41c5-a140-d1ff41251fa8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feeb746-6a8d-4299-a73f-a63e30ede5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3f1528-7777-4ad2-b7b9-76f4b1edec6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9e03e1-533a-4eea-a407-0853956a12c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ddf091-58ba-4773-8d22-72f1de4a3228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a17f141-84b1-4154-9803-f656cde56508",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebd6868-5742-4077-a64d-9483158f60c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1515b3c8-663f-47be-8f34-beb899d9a3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e011389-acb8-46e4-ab93-1303995cdb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe4e99f-1559-4853-90dd-26bf0a6b2a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d36dd8b-bad3-4389-b4a2-61d651401892",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d787c9b2-4789-41bb-be61-07b6ff155063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49b3405-1609-4c9d-8edc-e5e85f3e5649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d3943d-0f5f-44a5-92fd-628a97688c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e05c43c-acca-40f1-b3f2-1bd3df9cec11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77363bb1-8d40-47da-95b1-7589acd91fd0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0875e26-9478-4cbf-8127-4746295d4c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36c2ba4-b079-40d4-b1e1-7820d4108ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33244ea7-a6f0-455f-a5cb-8acbc98c9dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccf3972-020a-4fe1-b3ed-06a43056f857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479b05da-11ce-47cf-8231-676c1f8cf329",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5d9b57-cf00-40ae-aaa4-c21a01e205fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5154ac9d-3b21-4792-a807-cc53f4d7d356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f36373-36ef-49b2-9847-9b5fd01c1d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd0e793-68cb-4b64-a74e-b60cb5caca26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0af7cb8-5d21-426c-ab84-043df4c58f37",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1f11f2-e360-4c2f-acf4-0eba50f85565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75beace3-8cec-468c-a244-f0e4f1ef9077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dabc578-51a9-434e-beb2-2f2c50ed3713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57d4b6f-6017-4ecd-b1e2-a05aeba082f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751b721f-b1fe-4bff-8d63-a8059a68ca0a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ec8247-deb3-453a-afa7-543b6905a6b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11bbc7a-ae28-4f49-a1c5-c606d6ece783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493942ea-2390-46b9-9413-98e0c70e8cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14df8fa4-3398-4c83-8d7c-1f2d3d06d610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8252853-b065-4bae-b26b-c43673230e3d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7772a50a-7fc8-44dd-995e-0453557edfd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f265a9fd-0450-4afb-87ac-48017cfa276a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bce396-5b87-4e62-a16e-1c7b00cfac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66b0ebe-431e-4dfc-a8e3-59ac8ee0f955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf4b744-6700-42ae-928d-12455693ce47",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51250a62-e0c2-444a-b3a7-c2f1491cadaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b19bee3-ab65-4df8-8f9b-afeef3035f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7f344b-7292-49d3-a3b9-33f26f03db04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5223e7d1-c43e-4997-90ab-460028d0abec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7ede6e-e55f-43d4-bf9f-6af79ee984c4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96740a81-6772-47ac-b00b-2908e4fbfa82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbb1e8e8-333e-4309-9fd8-c8f3563ccf21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84263a74-c081-4ad3-b5d9-572a73cf67b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b6ca0b-69f0-472d-bf16-3cc862ad5892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcfe650-f603-4417-8c67-78f08d770c13",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7d09e4-a738-47e3-b184-5c780d31d1af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350ccd27-0bd9-4bc3-a92e-1514ee9f6841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c75db5-8b0c-4cc8-9145-a61b4831c053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf60c102-cf59-4307-9356-6502b2735e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59cc41d-3009-422f-ad73-ebe3e8323d3e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8d013a-d01a-4a3c-b706-a773b54d37f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "071711dd-c142-40bd-af20-16ecd8978a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514fe5f0-845a-4ab5-a751-e2a6bf12712c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1b5562-585a-4792-b854-eae2fcdcb2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659f1859-29ac-4a35-b69e-3f3137b7b86d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5aa20b-8d69-43d9-980d-df22f23bb31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ea8ad1-6914-409b-910b-507c4d9e52c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2991eba1-0dc5-4d09-a006-bfc796527365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed78d94-b188-4155-8386-69dae4c12b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62f32d2-2a25-4ce4-b553-2868477d0ae9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f6da75-7e49-4936-81d6-8e1ec90748d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07dfe9f2-df6a-4494-b4c9-965029fcf87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f20ee5-6cf9-464d-8b12-92666519d9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad400f78-1694-45bc-81ef-4c31b780c59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff06d3d2-9949-462a-bdb0-838e7b5d8083",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b165a3-0f60-4992-ab5f-e52e41d69184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5122d0b-d2f7-46a0-95fc-db4d6d482130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08919f3-bd54-4d94-9142-7013460f25e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612b6ac4-3262-4292-b293-a1a5dfc42f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b52e92-6380-43f2-852d-67193b744e80",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70547a11-0dae-467e-b342-c1bfd106876a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eca167b-b7c3-49bd-aafa-0f0b5d1a667d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bbe177-5f1d-4ac9-a1ac-8c0005c8f06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df1f2d7-6dd2-49c9-a6c3-c1c9261c708c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d2b922-721c-4092-9220-175b92881faf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cadb2b-fc0b-4ae2-b958-cafa71107c09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8617beed-5dbf-4a73-b8e1-e0e7d3f8a274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20a9731-bab2-4ad7-88b3-084054e3fef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32fd3b0-551d-42f9-9594-3bea1ec59ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8182a226-9d25-4c9b-9838-9100494cd026",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f18318-8fef-4fbe-b048-b025aed42e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceab404f-121c-416c-b042-a2e3e883d7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c7479a-e380-4c77-93c3-99b831694421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9c73e1-1f8c-40c4-b899-b2b74e27911a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fa5851-4680-45e3-a8d2-449c80a1d683",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f50c6d9-15d0-4734-bcf1-7c312fd74f35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cabf161-3fe5-4c04-aaf4-291f4aba6de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dd0b93-7133-4b16-87e1-dd1be9321e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3eb5a8b-e211-4cdf-ac0e-e89c8649ca8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2723c879-1206-4413-958d-3044125220e7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc889473-5dfc-4815-afea-cf0eec5c36be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38acf147-9e29-481f-9313-1b3026404552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52bb6a1-e79c-48d9-a9f6-abbdc749714c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adae776-9b58-40cd-aa09-c13d107eb2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7acfc1c-b87e-46bc-a970-099936a6cd06",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaf3609-9ebf-4d64-8aa7-4ec321bb9d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4db733d-ae77-4731-ba0d-14cf7ab2aaad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a227b84-69da-4cb5-a83b-efa73558f5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d81d88-667a-4621-be74-c8fca006c12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b629fd4c-755d-49f2-a679-cf4dfba2b736",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8004902a-9546-4d30-931c-49c18a8691b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47fdc15-cce8-413b-ba71-248ab0f7fd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d0239f-385b-4514-a898-dddfcf883b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630c72ae-36eb-40a4-9c1d-0790f3798fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073270e5-bd40-49a1-b058-17e8011f9d61",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc9c5ab-6c1f-4759-ba51-91b19952b430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d131f70d-4e4d-4fcc-9a1d-6643ead02b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c86a4b-73b0-4fa1-912d-c316b0dfd8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185d9a39-0d21-4b5d-8dfa-2376eadc2058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348f6c8d-bd63-41c5-8b48-0c6257553228",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313cc7cf-90ac-4471-9578-ac8b687be5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb56ed6-74ac-477e-bf95-095364e540ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913266fb-49b1-4ba7-970d-0ec617f99ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2f972e-408d-4937-814e-94ba76d1d6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39677772-133c-463c-bd07-e558d8bf4898",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19dfd25-9ef4-4d03-b69b-f40bb2e8f51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb8a187-026f-4208-b3cc-8e32690c753e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4436890-ec17-480a-a50a-57624d22984a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd36da0-419c-4e78-ac77-5157244ef9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c651053c-5841-4afe-a7cb-00dd93695ca3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08b4632-d647-44ad-8f31-e42c9d0d3bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5418db2e-c611-4ac7-b4a7-cede7fd352e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c65526-d262-460e-9813-e0ffaf68d1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df623cb-2e55-4e16-ab00-10adbc91a706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c3fa48-37b8-426a-bfea-6cf7556a15f4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66b5127-0bed-4a13-b6fd-599c2ffe6681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a83daa-1957-4b4b-a1ec-cfad59e2f0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe27cb6-a037-4d96-aca2-4603018b9a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cf3a96-3f74-4a62-b1d6-aa76bf5cd23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf323cb5-533c-45eb-826f-88eb687f1011",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001ce291-03fb-45dc-b0e2-fd577fa9e2a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2926a05-3cef-4ec5-bc4e-4cb8f13a8988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5302a0e0-677b-4720-84aa-d31aa5c4aedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73aeebd5-9af6-45fc-8165-81227065c558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45d466e-8fd6-430c-ae54-e2abcb4970f3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e75eb8-e8b6-4f60-af7a-511c1080852b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b8fcd0-a226-449e-ac4f-3522c4218843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e7eae4-fa31-49fd-b947-5b4f9687c3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5008be5a-a9ee-4d2d-b0ea-578e435de47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8db579-7b43-403f-a926-28f737d8c846",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaf4605-78c9-4191-9d40-9a3b9da9587d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24fb0eea-b22e-44bb-9333-7c600315a4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3914f36-58f2-4522-ae4b-c996c7c5ff80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb265d73-2ab8-48e1-af48-18c6693e4ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9ba7ec-3852-4831-a8d9-aa7d40c1a230",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ad2554-2bfd-4d13-a3bd-944089d96b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ad847d-590e-4d4b-8bd5-f251944dc557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5f37c4-4f7b-47dc-9ab0-eb1b599b1ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bccc2c-5884-4159-8f56-cc0148172229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5859fdae-1c4f-455a-b6e5-86c78f5defc4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd91d43-04b7-4160-bf6f-0603238e7691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c6aa1b6-fdc9-4217-876f-21e9db4bf8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ccb656-8154-42bc-9f5a-63c87e5e2f05",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38592e1a-1ea0-4f53-8ef3-3137b144e66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea5cda0-a6ed-4c73-abee-d34f75188493",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4421f2-6f3c-4f1d-8956-2ff54478f3e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cfbfcb2-beda-4d97-90fe-8cf83f176696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6886fad5-2ee7-4da2-abc4-ab9090a4cc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ab89e7-1e4c-4860-b78f-143d0de36134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839c82c7-886c-4305-8512-520fabd4450c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182adada-30dd-4685-b956-6c0dad374f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8baa9d-e3e9-49fe-ad63-2ce656e85ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2735802f-eb9e-4a00-95eb-740428028574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185dbefc-1207-469e-9cf5-791d1c781b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ed9fb2-bf79-49f0-a9d3-f55ce7720235",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53fa8bc-9842-4c19-99b2-6271599058a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc15e41-8f71-472d-a33a-fa4d9be27a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3b5f19-b882-40a1-b142-9b3fb655701a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b2e4fd-7477-42c8-81c3-4b769ed5deb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cd68fa-d28f-4e55-8ea6-0b5124c70c69",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8ccf10-ce96-4ad0-8f88-dfef97552940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6375a52-0733-4856-9773-19ad09d6deda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5c0c65-337d-4491-8483-509cbca182eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449f562c-8748-4449-b5ca-acd4ca074449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df0fbfb-eb81-4d7c-bd61-ec7bc0d2aa85",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921f2969-dad6-4cbb-a529-c682fbf82220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66d433b-1e20-4ef3-a28e-60fc30d44dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a85d15a-cd93-4c91-abe8-bb07c49a798b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5bf4a0-9f13-4d77-a1cb-3a7bf3cc9fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7136a876-a44c-4c92-b1ff-e2773e4f73bd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82b8e5c-b766-4f43-b394-fbc6b8c0827a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8397dc-1607-4f0b-a3e0-474e7f4ed4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e684628c-2e43-43e9-b285-83b4964d44ac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a30360d-72b7-44fb-8890-199e391dafc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0c83f8-b84e-4daf-8e93-a637166e417c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a076ee9c-ba8f-4a82-b6d2-145327c95abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ebeac3-8030-4eaf-ac40-f09743746481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5660b3-a56f-490d-82d1-a4556d2d782c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e84c486-f45f-4a50-ad64-dc25d7866ada"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cdf4c6f-65be-4cee-a742-063fe649fe53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16322700-f4ec-4951-86f2-aa2598a20f03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e38acf5-64a7-48bc-838a-159ac3c697e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5839e143-31d9-488a-9994-bb0ca780fd17"
                    }
                  }
                ]
              },
              {
                "id": "155dcd7d-1860-4d3a-b46e-da31ace3c9d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc424f3a-71db-4b7a-8aa0-76c3a34948e5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aecfcbd-b646-4fab-9b1f-b8ced2cfa7a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dcca124f-fae9-4b5b-9a2c-34a9de2a44b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b1c579-1635-46fa-bbb6-79b2bc4dfb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6200791d-f266-458f-a78a-9336234724fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffaaa59c-9f7f-4afa-bdb6-a1acf2aecefa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88c3d1d5-70f1-4c0e-865c-0ccf90ca2123"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b6e08ab-d465-4f8b-9f82-5a4c14f8c6a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd116343-6973-42ee-89dd-819439159493"
                    }
                  }
                ]
              },
              {
                "id": "8870f77d-287b-4c2f-807b-3b37e7e4d93f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e18cdfa0-8f13-45ae-ba5c-979e38bc9256",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ce1e2a-fcb5-4d57-bc92-ed5bed32c5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b5fb206c-4a37-43df-83e4-3607d7126482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4f2ff5-024d-4755-8a9f-fc9602b646eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a58cd8c-48e7-4821-9ce0-03448c307c19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6f6541b4-cf64-42fd-9e60-334f05d6a3c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1cba5514-8340-4b3e-81c6-6033a937ed91",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b59bc81-01e9-419f-915b-66ff08747769",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b63db5f5-4d2b-4813-a6d1-9ede2105abe7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6eda8b5d-f5bb-44e8-9a20-867fb4500e25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d622a600-923e-43b8-aa5c-1c321a97d418"
                    }
                  }
                ]
              },
              {
                "id": "f661bf1f-4f3c-432d-9e6b-fc1e92e18f49",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ce669ab-b081-4af9-b802-62e51b2a2abf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ccc17c02-c475-4848-9752-d65ebccd83ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87e7173d-9025-47e1-a223-8e5dcfbcbfd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2145e9c-9f00-41a1-ada3-fc1b9b18ae92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "279034c9-6509-49ba-96c5-a431dd1a6e26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b3268b7c-657b-4bb2-a91e-325e86b01c87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "898a7cd7-1eea-4e36-88b1-ac832172e307",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "799d4809-bb61-442d-9481-45bc185c7be3"
            }
          }
        ]
      },
      {
        "id": "b850fa33-19dc-4ade-bc7b-dd835c193ccd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b1041c82-46ad-4cb1-b1e2-4c43db15af99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af2fe9fb-b83f-417c-acb7-4bbd05bcdebe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "325cfe36-9613-45ff-a423-204839711f01",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718d0b7b-f8c9-45e1-bbbe-7c23cedcf583",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2576a7cb-a753-4094-8e51-d0dbdbe43ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e53a0ad-e6cf-424a-a97a-1a25c10f988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24dc31fe-3dd7-4120-84a3-a1a7f765b467"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8400ffab-e2c2-408c-97dc-2e8c88d3c51f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b6fbff9-fe86-4ca7-8241-b66593ce9bc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d74df7-5bc3-445e-8c5e-699a1b997079",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08647edf-3267-4e5d-b887-7f5d96145224"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fdbed08-6f5a-4492-a6b3-3b85a384f185",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dc4e497b-00ac-40ff-b55c-0b67efd804fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34d3d062-0c35-4904-9b95-763f56001052",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10e7afb3-bb5a-4d08-948f-32d25440d769"
            }
          }
        ]
      },
      {
        "id": "6a60b105-9d29-453f-8bbf-e7e036338ada",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bfb30407-ad3e-44ac-ae95-708f40ab3062",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cc68451-586c-4924-8320-9618c340e5e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ee3c439-b701-49f5-ba83-226aae2746a9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc23c18-b128-4c98-9796-7b5bb919a5ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b94225d5-79c1-40f6-b501-1155295ca7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dcb21e-b9d6-40ba-86c1-c92bac76e962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41d44b36-83fe-4852-8d9a-a8bd7f650fd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ceaaff0-236a-406c-bc23-ed4178050c59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2748d92e-5945-4d7a-9b71-1ba03de5c4ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc26593c-0d57-451d-943c-e9bdc07e3a75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca52740a-66cb-432e-ab4a-ac9bf764470d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "048f02ea-6880-458c-872a-5e60aadbb6a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "86daac7d-7362-49e6-b45d-f887f06ebed8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82ae1187-d0c9-4045-ab2f-fda23ad2c7de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2d5366e-5c7d-4909-88ac-d67a34278d39"
            }
          }
        ]
      },
      {
        "id": "9fd3cb1b-1134-48db-aa57-9da08b31ca1c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c39261cb-0631-4724-8612-99cdce5850c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49835c51-269b-4aed-bd2b-e16c2c33d60f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2aa86a17-6a62-49ae-9e36-d868fe83466e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd27a80-e54a-4426-b48d-e28cc3dab98b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0accdf7-cea6-4578-a1a0-c759841e1053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89507630-6aa9-4350-abb3-5840b50f482a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edabc29b-c5c1-44c2-b5ea-176844da0e63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ade79209-7c99-4984-8522-ad07f21dd706",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a248ddb5-5472-49a9-94db-2d9b3726e97b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "875d74e7-cd57-4916-aef1-33a62d298fbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ee30f29-3810-4d5d-93a1-2843e702e473"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b326f130-9240-44e3-8362-840cdcd323fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa823002-3237-4e13-96ec-ceaaa26fa952"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be1c6b1b-06c3-4718-a4b2-c1dcb3195f21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a981b25c-ab79-40db-9f4c-f6f548620c36"
            }
          }
        ]
      },
      {
        "id": "0eba1260-5fd0-48c6-8e91-01c3cc583556",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4287f0e7-7d13-4a76-b632-23a212290113",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50dc6356-d888-4623-8ddf-8fa6ef535322",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1abaf61b-bf91-4078-98f0-d24bf54ada3a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47bde98f-08d2-4981-a24c-6df74567a2ad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dba80b95-240d-4663-a573-e134c186c38d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 265.8701754385967,
      "responseMin": 4,
      "responseMax": 9489,
      "responseSd": 1115.4906908581506,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700699737240,
      "completed": 1700699822999
    },
    "executions": [
      {
        "id": "3aaed994-797d-4f94-96b4-7c453a74babd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c3db8cce-f579-4d09-9db2-4e476a582a55",
          "httpRequestId": "45068009-3477-4069-addf-b9f8f8193292"
        },
        "item": {
          "id": "3aaed994-797d-4f94-96b4-7c453a74babd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ddcac010-e527-46c0-a4eb-0a22e7156a38",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "32177ee3-8c90-4695-8b77-21f8472bf64b",
        "cursor": {
          "ref": "9ac32bbf-7b8b-4afd-8071-2119f3a8041a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d70c5969-46a4-42fd-8f52-a4cf49d80361"
        },
        "item": {
          "id": "32177ee3-8c90-4695-8b77-21f8472bf64b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5ed74b42-0700-428f-ae43-c97b19ea1a74",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 0
        }
      },
      {
        "id": "b0869934-7643-4b74-9c2c-f05ca30b257e",
        "cursor": {
          "ref": "648a5ecd-fcf2-4e3e-aceb-86565e2a0d75",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0cfd8ca8-4637-45bb-b7ef-d550ffbda45c"
        },
        "item": {
          "id": "b0869934-7643-4b74-9c2c-f05ca30b257e",
          "name": "did_json"
        },
        "response": {
          "id": "c9239b8a-b5b2-48ec-89e3-c9222ec018d4",
          "status": "OK",
          "code": 200,
          "responseTime": 1660,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6f1359-c363-4d0b-a6b1-b360e82992a3",
        "cursor": {
          "ref": "b5e33dc8-f75c-4c04-8b0d-b50b86f82b96",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "600136dc-75e1-4fe6-b9b1-bb3133d9542b"
        },
        "item": {
          "id": "2a6f1359-c363-4d0b-a6b1-b360e82992a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b78f3b3-9356-40c8-a080-0115066fc833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6f1359-c363-4d0b-a6b1-b360e82992a3",
        "cursor": {
          "ref": "b5e33dc8-f75c-4c04-8b0d-b50b86f82b96",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "600136dc-75e1-4fe6-b9b1-bb3133d9542b"
        },
        "item": {
          "id": "2a6f1359-c363-4d0b-a6b1-b360e82992a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b78f3b3-9356-40c8-a080-0115066fc833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dacaf9-71ff-4e58-ba3e-ccbeaa1c0e0e",
        "cursor": {
          "ref": "c9994b40-13f4-4810-b3e4-c5c8a7741fac",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6389a3a8-584b-4570-a078-e4fdc7c9170f"
        },
        "item": {
          "id": "e2dacaf9-71ff-4e58-ba3e-ccbeaa1c0e0e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7347c47b-2cee-4aea-86d3-4064f0199e17",
          "status": "Not Found",
          "code": 404,
          "responseTime": 140,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33df2f4e-f1d9-4d2f-9744-e90589b558c7",
        "cursor": {
          "ref": "abc6718f-06ed-413c-a757-69e62ee8252d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0a9b79b9-cd51-43d5-a751-363d777bfef0"
        },
        "item": {
          "id": "33df2f4e-f1d9-4d2f-9744-e90589b558c7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "26bf69db-0e03-4574-b959-d582867e19a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 83,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbccdc87-1d71-42c0-a630-19a9f358b216",
        "cursor": {
          "ref": "f900e4b8-ff18-4344-95ad-f7f3721cff43",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ec4096e6-826c-4952-b4b3-464568d931f8"
        },
        "item": {
          "id": "dbccdc87-1d71-42c0-a630-19a9f358b216",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2cbaf861-c39f-4fe0-9938-7d9ed5bec6a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2818efde-2d8c-47a6-8af8-3d22b13d8d47",
        "cursor": {
          "ref": "9af01fca-532d-40a0-bf0c-030ff6a1c767",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "70a47286-39a5-467a-ba8d-2628f837760c"
        },
        "item": {
          "id": "2818efde-2d8c-47a6-8af8-3d22b13d8d47",
          "name": "identifiers"
        },
        "response": {
          "id": "f3468167-2482-4986-a3ee-fdfb18d3c9fb",
          "status": "OK",
          "code": 200,
          "responseTime": 1218,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43f5360-adf6-40c8-a48d-879e70e803b2",
        "cursor": {
          "ref": "2cc8f6cc-87b5-4c5a-b2e6-8c334364fbc7",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9f3b06df-720c-4e3a-a812-4a22b9afa2a7"
        },
        "item": {
          "id": "e43f5360-adf6-40c8-a48d-879e70e803b2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "714d140f-1bf5-4b9d-9544-1972f680b861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdcaf89-470b-420a-8c84-80b3a3e43418",
        "cursor": {
          "ref": "aea62675-2568-4055-af6f-cbb9863e1269",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1fab4c30-f324-4cea-85ca-c36200763287"
        },
        "item": {
          "id": "bcdcaf89-470b-420a-8c84-80b3a3e43418",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1837382f-7f7b-4586-9333-1f458d65b274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9213eaa5-9418-4571-babc-790e34463b63",
        "cursor": {
          "ref": "2236bab4-2344-4d19-8a28-a046399bf494",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f47a5fd2-c195-4886-9416-1deb2122f60b"
        },
        "item": {
          "id": "9213eaa5-9418-4571-babc-790e34463b63",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5bb77ff8-784e-4000-be51-1ec1ddb90804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac47e9e-d4c8-4a10-80ee-13aee8d46212",
        "cursor": {
          "ref": "dc249650-19c1-4c6a-b023-d12725b14d01",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4c16079d-4ea7-4ac6-ab60-ff1b4849694d"
        },
        "item": {
          "id": "3ac47e9e-d4c8-4a10-80ee-13aee8d46212",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9eb72fc5-ff01-477a-be70-e01c8ab8f5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4260562e-cba3-4d35-b3bb-bc4f0c0ee8a5",
        "cursor": {
          "ref": "3a0384e9-6a6f-4f55-a477-f873869f0d7d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "42981d39-4536-48c4-b5b5-98d8059531fd"
        },
        "item": {
          "id": "4260562e-cba3-4d35-b3bb-bc4f0c0ee8a5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4bbeef60-6680-4e47-be24-e319d747022d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e622f1e-9375-4270-afb6-c39518e9e1df",
        "cursor": {
          "ref": "22449e6a-798d-4de3-872f-91207d5e65d4",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "104d8aea-43e9-4d71-bce5-191d44a58163"
        },
        "item": {
          "id": "0e622f1e-9375-4270-afb6-c39518e9e1df",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2207e5af-1e0a-4699-8d01-a850ff808578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98f0c65-5dfd-434b-9cf6-5f984dc53cdb",
        "cursor": {
          "ref": "6da499f6-d449-4c2d-9088-7f63cc511025",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e20fea2b-41ed-4d36-ac6b-e6bb962e1a48"
        },
        "item": {
          "id": "a98f0c65-5dfd-434b-9cf6-5f984dc53cdb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3b8924f6-b183-4e66-8193-670f5c09081c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e80033-97c3-40c5-b6e7-8930e82ac6ec",
        "cursor": {
          "ref": "584f0e6f-22fb-49bf-b53a-21187c3b534a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "37189aa7-83fa-48e4-8670-003498675dc0"
        },
        "item": {
          "id": "76e80033-97c3-40c5-b6e7-8930e82ac6ec",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f3f8249e-4f17-4a58-a3b8-507a66c3b038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25828dd5-74c1-416a-a9fe-4aa5421008fc",
        "cursor": {
          "ref": "b6dad8f1-f195-4da5-96b6-85ebf0ea50a5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "94a29d74-15ab-4119-ae8a-830586832635"
        },
        "item": {
          "id": "25828dd5-74c1-416a-a9fe-4aa5421008fc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c8020beb-0e01-4c79-8333-f93764c64c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef64e6b3-e90f-4b8f-957c-50841266133d",
        "cursor": {
          "ref": "d801d809-5600-4ff1-8a20-f5863153a459",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "851f9e26-8287-43fd-ba53-63910a28685e"
        },
        "item": {
          "id": "ef64e6b3-e90f-4b8f-957c-50841266133d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f1d6a09b-7d42-4f7a-b1a5-c6b5f37f3b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdb2902-6cfa-46da-acf1-0f94ae41273d",
        "cursor": {
          "ref": "1fdda32f-dd49-41b5-a2c3-1c5382007939",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "55257dee-43fc-4306-9f11-7dac8f84d29b"
        },
        "item": {
          "id": "bfdb2902-6cfa-46da-acf1-0f94ae41273d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bf489530-a324-48a4-9af9-1477cc3e9954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caad4cbe-5261-40bd-8b7b-7cb0774553ea",
        "cursor": {
          "ref": "b39a5f40-f5ce-4200-b6b0-ceeef272684e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3cc9cfa2-97c5-46f3-ae68-b8d77df60351"
        },
        "item": {
          "id": "caad4cbe-5261-40bd-8b7b-7cb0774553ea",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1f5e7fe1-d6a5-41dc-8983-85de203168e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c4476d-2b23-41bd-b173-7da49e300385",
        "cursor": {
          "ref": "2ca71c8e-1d0d-4dc0-b81e-71dc3441174b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "71fb2d78-cc73-48a6-b9f7-23ad43fd0238"
        },
        "item": {
          "id": "d0c4476d-2b23-41bd-b173-7da49e300385",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "340f305e-66ba-447a-ae92-6a096e29d675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b83e51e-3907-4e47-a68d-1486b4b66f73",
        "cursor": {
          "ref": "84cb928e-6678-42fb-802b-613bde9b9474",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fd4cf268-c712-4f7e-8a6f-9434f4be547f"
        },
        "item": {
          "id": "4b83e51e-3907-4e47-a68d-1486b4b66f73",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e0448b89-03ef-45b9-ad46-1c02d5b00144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575a5cf3-a7b0-4a80-aef3-0e5ffffefd5d",
        "cursor": {
          "ref": "5237287d-e71f-4b20-ae1d-515bc491a18b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7c413bf1-3601-49a6-b1cf-5f889f3197fe"
        },
        "item": {
          "id": "575a5cf3-a7b0-4a80-aef3-0e5ffffefd5d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "81c3c0b4-3ab6-4d86-a272-b3a11166d05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5f5ae1-d871-4ae1-944a-d9f7f5bd38ea",
        "cursor": {
          "ref": "b94c5c0e-02de-4cf0-9bb9-f2835fdf35d4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3627329e-7176-4a2d-8383-f1f25edebb14"
        },
        "item": {
          "id": "8b5f5ae1-d871-4ae1-944a-d9f7f5bd38ea",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "00f3b865-4881-41b1-a691-4615ca52942e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdd7766-0651-4ae2-ad44-a472e1177ba9",
        "cursor": {
          "ref": "cd7bac14-ea12-4a64-b00e-742c652b5d83",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "93e1218a-033f-4227-a997-7d7af3010b9e"
        },
        "item": {
          "id": "5fdd7766-0651-4ae2-ad44-a472e1177ba9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9bcc23b2-dbce-432e-ad0d-82d97b9e1157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fc75cc-713b-4041-a64c-8a050f32eb77",
        "cursor": {
          "ref": "36590dc6-b45b-49d5-ad27-e811aae794b8",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "63c54b40-30ca-414b-b581-49ad646c7318"
        },
        "item": {
          "id": "59fc75cc-713b-4041-a64c-8a050f32eb77",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d1cae7d2-e9ef-4075-8a1b-37a4ac5324f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaef7e1d-85dc-45b6-8c06-e58d3379bed0",
        "cursor": {
          "ref": "0a3da0de-5402-4314-b958-7763b856eca4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bff9c44f-da36-406e-9ab2-9a87b459ea9d"
        },
        "item": {
          "id": "eaef7e1d-85dc-45b6-8c06-e58d3379bed0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "04bf1244-dcaf-4aff-81e0-cc1d467e222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d62667-47e4-4438-a315-49ab771a9028",
        "cursor": {
          "ref": "ffd4abc5-cf76-4bc5-ba08-76d9904fd417",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c8ccab8a-e2f8-4e63-9826-b5a4798c396d"
        },
        "item": {
          "id": "64d62667-47e4-4438-a315-49ab771a9028",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f21aba5f-2fb1-4547-9dfb-b5b3faa9e893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b594f294-c87f-4ee2-8114-59eec47fa7bc",
        "cursor": {
          "ref": "b2fbc3e0-d8f3-4bc1-94fd-71a1eca5bc6a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ff948f8b-ad3b-48e7-91ef-87bfcea2a55a"
        },
        "item": {
          "id": "b594f294-c87f-4ee2-8114-59eec47fa7bc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "39a9fd2b-ac92-4f03-a5f0-3a94d9759d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de1b9a0-5257-488b-b868-d989b5536d4a",
        "cursor": {
          "ref": "901dd8cd-101c-45f8-9b6b-005ff9580e61",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "609829fd-ea7b-4254-9c66-d96d4603449c"
        },
        "item": {
          "id": "5de1b9a0-5257-488b-b868-d989b5536d4a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "96299597-184d-4e08-99c2-ac947f6cd492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf3c833-cbd7-4936-9464-784b5bcd93be",
        "cursor": {
          "ref": "25f2a280-183a-477c-a3dd-5f5b79333210",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "212f812a-10f9-493f-b0a0-2215edc61e43"
        },
        "item": {
          "id": "eaf3c833-cbd7-4936-9464-784b5bcd93be",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "74ef5d9a-35b8-4a71-bde3-de4bb97c466a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16917739-1d0b-41fe-9ff0-0be13acecbeb",
        "cursor": {
          "ref": "eafe7910-1965-4b87-a989-7f3d71387db0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "394df204-9b4c-456c-8373-50e4290f9067"
        },
        "item": {
          "id": "16917739-1d0b-41fe-9ff0-0be13acecbeb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3fc71bb4-ce00-49c4-b4ca-3c5c2da5429a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03822ffb-479c-4d7d-994b-edea0c444d8a",
        "cursor": {
          "ref": "4f1d7eac-b75f-430a-bdd3-46720d982a60",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b3c59a30-1361-471c-91e7-b11cd09c0ea8"
        },
        "item": {
          "id": "03822ffb-479c-4d7d-994b-edea0c444d8a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bca178d9-b7bf-4d87-a137-95ffa7b63c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce94f190-d8e2-4f37-8ac9-a3f6c9c4c546",
        "cursor": {
          "ref": "916609e0-dbef-4a0c-8088-7ed06bc13d3e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "076eb194-a76a-47f2-91ba-88d949ab6d4a"
        },
        "item": {
          "id": "ce94f190-d8e2-4f37-8ac9-a3f6c9c4c546",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5a3d44f4-4289-4c60-9a24-ebdce1cd88c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601eff47-f3fe-41c7-9493-c07483ffa5e3",
        "cursor": {
          "ref": "e1c8b2d7-b907-47dd-9470-6bcb069047f9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "32936696-00af-45f6-93da-fe00f4511037"
        },
        "item": {
          "id": "601eff47-f3fe-41c7-9493-c07483ffa5e3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5988ae89-9da4-4784-8b64-7ccaf779e276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07adbcef-8dc6-4904-8ade-a9a94fd58ddb",
        "cursor": {
          "ref": "4ab2e5a9-1fd4-4f3e-8ad9-6aab151550bb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "216fda7a-b503-411d-9f8e-9bd0bab76198"
        },
        "item": {
          "id": "07adbcef-8dc6-4904-8ade-a9a94fd58ddb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d0c937a7-589b-4528-9e12-9ec6229a633e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a923099-81c5-458d-aeed-ca5dc25b06c6",
        "cursor": {
          "ref": "ed7902c0-341c-4bf7-ad25-72c3a44df109",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9eb22ce7-3580-48e0-9c27-6dc0cccb2e8e"
        },
        "item": {
          "id": "4a923099-81c5-458d-aeed-ca5dc25b06c6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8c1dac31-c3b7-4676-a83b-c04bae00a0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d74a008-6daa-4659-a7d1-3f9c2c4b231b",
        "cursor": {
          "ref": "6152e475-4ed9-4de9-960d-99c1e1e1e961",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d6cc3f72-2536-4acb-842b-b3c28b87d73b"
        },
        "item": {
          "id": "1d74a008-6daa-4659-a7d1-3f9c2c4b231b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "edb9ff3d-d6d4-4fe4-a8d5-7dc32952831f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e903778f-39dd-431d-a3e9-07cff9c871ca",
        "cursor": {
          "ref": "c2b40386-4075-4dcd-bb50-d258423dd8b4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f1f7e4d2-2f30-43de-af08-03811c1e3f7d"
        },
        "item": {
          "id": "e903778f-39dd-431d-a3e9-07cff9c871ca",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "22225923-1ddb-4ec1-9eb9-6bd03a1cef13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3ead13-370f-4758-810f-d581ca2467ba",
        "cursor": {
          "ref": "991b7de7-79ed-4373-b9b2-d12395640f2e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "eb9bacd6-0efa-4aaa-b2c8-2dda9b2842da"
        },
        "item": {
          "id": "9b3ead13-370f-4758-810f-d581ca2467ba",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6763ce6f-d9bc-4134-bd3e-37a47fb5cecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac9c09e-e293-4781-8079-8ef1cd2df04b",
        "cursor": {
          "ref": "703b93da-e60f-4e7c-8ebf-e208940cd5a9",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "970b0054-fcf0-4c17-a247-a0ca0465eb3b"
        },
        "item": {
          "id": "1ac9c09e-e293-4781-8079-8ef1cd2df04b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0ee8d982-fcab-4202-960c-4f22c64f709e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e718c64a-1d9f-447a-ab8c-e42ea6bb6f68",
        "cursor": {
          "ref": "b4ac4f20-0a53-48a5-92c7-7ba1366c598a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8e75eeca-1877-433d-ac81-bb0ed6295560"
        },
        "item": {
          "id": "e718c64a-1d9f-447a-ab8c-e42ea6bb6f68",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f28a519f-e78a-42a4-89a0-2227264be2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fde3323-00af-4169-8dd3-2160a2fd8747",
        "cursor": {
          "ref": "5a658bca-0cd2-447d-ab82-df8e0c10444a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bfbfbb08-b766-46a7-af35-114a41770180"
        },
        "item": {
          "id": "6fde3323-00af-4169-8dd3-2160a2fd8747",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "615f41d8-e4f7-47df-b13e-160e4b766b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2983e023-2209-43b4-87d8-422367499b53",
        "cursor": {
          "ref": "376af90f-7da5-48f8-a6f9-d66a1f82af18",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "565cbe12-06af-47ce-86c2-18d8054279d4"
        },
        "item": {
          "id": "2983e023-2209-43b4-87d8-422367499b53",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "83f3411d-7ee6-4682-9f2e-8c6489d29def",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1455,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee328a58-d9c1-4c03-9e97-4e5b5999640e",
        "cursor": {
          "ref": "b1bf0127-41cc-4fad-8145-ba7780b55213",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5fc8765a-0834-4608-9446-5450c2671186"
        },
        "item": {
          "id": "ee328a58-d9c1-4c03-9e97-4e5b5999640e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bcd5185d-2050-435c-9646-d42112573432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ec1e7f-e69c-4335-9a65-ae74797673d1",
        "cursor": {
          "ref": "2d5be6b0-1cd8-48d8-be2a-68908ddda2f4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ec3ed3b6-4201-480a-9da5-03878c6323ba"
        },
        "item": {
          "id": "07ec1e7f-e69c-4335-9a65-ae74797673d1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "46834d24-cee2-4a67-b7d8-c4029a515d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b663432-710d-478f-96a6-89788e144108",
        "cursor": {
          "ref": "08054496-529d-4fb6-bffa-310728754331",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "091ad226-13f2-4203-bf54-af6de888a73a"
        },
        "item": {
          "id": "0b663432-710d-478f-96a6-89788e144108",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c72fbc00-e535-440e-b829-910a69511031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56470f4e-fdf8-4506-961d-cec3dd7e42ef",
        "cursor": {
          "ref": "39d3d04e-7045-42ee-a9b8-70963f5a084c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fb769d01-8b0f-498f-946b-0fc95b565323"
        },
        "item": {
          "id": "56470f4e-fdf8-4506-961d-cec3dd7e42ef",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "eebab27b-13d4-4e2d-99d8-2122ecca68cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db2a687-d25e-43ab-b26c-4cd0a4689d87",
        "cursor": {
          "ref": "d16fbcc7-f0e2-4a80-a0d6-a6847f9ff0c7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "16778cb0-2eaa-41d3-9463-47628359e186"
        },
        "item": {
          "id": "0db2a687-d25e-43ab-b26c-4cd0a4689d87",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "29458fb7-7f5d-478f-88b2-6f9bc4a45848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a610c4be-d0d1-4318-a386-22d53aed908b",
        "cursor": {
          "ref": "365accae-dde1-4d5e-8ce8-6355edef256e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e3b9f6fb-2b0b-4404-bb02-1d37e409d1de"
        },
        "item": {
          "id": "a610c4be-d0d1-4318-a386-22d53aed908b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ce195feb-405d-4812-8337-226b362a85ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be100825-64ac-4af3-80ab-0a1af6f71219",
        "cursor": {
          "ref": "7086742a-7860-4407-b4be-d21d8c6aac9b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d57ae85b-0686-4b17-b34d-b23daace29c9"
        },
        "item": {
          "id": "be100825-64ac-4af3-80ab-0a1af6f71219",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4763c3ff-206e-4fdc-835e-96be33fa4865",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1476,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7073feb2-f1a6-481d-8dac-5ae1f92a3b04",
        "cursor": {
          "ref": "9d19e445-2a99-4f28-9bce-233224b8f339",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eae4183f-8471-42ed-b790-fa3623f2d995"
        },
        "item": {
          "id": "7073feb2-f1a6-481d-8dac-5ae1f92a3b04",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f94fd331-180f-452b-a157-58b10c12e253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d53cea-17f7-4abb-9b84-35cd5ef04736",
        "cursor": {
          "ref": "02bece01-3862-4df7-9033-4787d73f7160",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7706546a-f289-4531-8d18-11da9d02e10a"
        },
        "item": {
          "id": "01d53cea-17f7-4abb-9b84-35cd5ef04736",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f5746682-57ea-49f0-bc1f-6a0520411bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bc441f-0177-4a30-ae90-193975f188e2",
        "cursor": {
          "ref": "8e8bc3f1-8d67-4b1e-999e-570f4e6c5bae",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5a07f324-111e-4119-8ea6-8aae5e1e058e"
        },
        "item": {
          "id": "f3bc441f-0177-4a30-ae90-193975f188e2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "142e2274-4356-4fea-99ca-03bc540b07cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28477fa4-dd5b-46a5-93a2-8ad073c60283",
        "cursor": {
          "ref": "54f4c522-bb91-4719-b98a-51afa7c87663",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ba0d6f51-db1c-4891-82c4-a2e306294db8"
        },
        "item": {
          "id": "28477fa4-dd5b-46a5-93a2-8ad073c60283",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f3e1a749-a219-4e84-8417-5588597a4dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af7989f-46cb-4854-81ab-dcdbf76310c2",
        "cursor": {
          "ref": "d38f9f7f-046f-4b71-9a0b-a4c360219fc5",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "09a4a4dc-9e4d-4007-afdf-dc1588d4f7ec"
        },
        "item": {
          "id": "8af7989f-46cb-4854-81ab-dcdbf76310c2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "68b28020-0184-4a13-800e-e0f99669a112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13085b66-e618-439f-b042-974425c77838",
        "cursor": {
          "ref": "f8f80426-48eb-48dd-92cb-c670da972ef6",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "117d477f-7dae-4ce1-a773-d6be0b662986"
        },
        "item": {
          "id": "13085b66-e618-439f-b042-974425c77838",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "afbd4236-3a96-404e-9f1e-ea3841e3e883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897207d6-b90f-40ea-9857-03cbffd8907f",
        "cursor": {
          "ref": "8ccc7f9e-9081-4f1d-ae78-9c125e7b657e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f5d76fad-1310-4c99-8957-4d456c6a248f"
        },
        "item": {
          "id": "897207d6-b90f-40ea-9857-03cbffd8907f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "000a6eab-8e6c-423a-8336-8c8f06afe6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d6cf92-ce12-40b5-9eaa-3d2a7c919032",
        "cursor": {
          "ref": "dadf3546-4cbf-4971-924c-51ad2691ef00",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1dab56e1-5a0f-485f-8f6c-e628d1f4d83b"
        },
        "item": {
          "id": "a9d6cf92-ce12-40b5-9eaa-3d2a7c919032",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "83df21a2-0814-4414-b775-d5bc6e5407b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b69ad5-8c3e-44ac-8b0d-1747201977ed",
        "cursor": {
          "ref": "85aad698-ecac-447a-9fa5-6fd1abf24e7b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9b8fc7d9-542f-47e9-a9ba-f63b7d4906f7"
        },
        "item": {
          "id": "51b69ad5-8c3e-44ac-8b0d-1747201977ed",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8c5f0e63-d900-451b-b876-c40314566c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bfc93c-e80a-40ea-9a95-7acb56813d92",
        "cursor": {
          "ref": "c2f61233-a8ad-4d1b-8200-6c8360dcdf73",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "64a2b6a3-9d8c-4dcd-96a1-99ebf65321fc"
        },
        "item": {
          "id": "a3bfc93c-e80a-40ea-9a95-7acb56813d92",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8d281bf7-d7d7-412a-906c-c986a809b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428452dd-1293-48cc-80c1-68cdc97d40ce",
        "cursor": {
          "ref": "dc8dcc4c-ca66-4574-a350-df780ebf7472",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6178644c-b057-4034-aab5-0c06f1b5ff60"
        },
        "item": {
          "id": "428452dd-1293-48cc-80c1-68cdc97d40ce",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0bd1567c-0ed8-45a2-8371-2cd32a5e45e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92e1e2c-a9af-415a-bddf-7031a328f3bb",
        "cursor": {
          "ref": "f5c65b20-d990-462a-a872-c7cd4250d723",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4fa3f355-f240-40df-b5cc-a8c922a26f12"
        },
        "item": {
          "id": "f92e1e2c-a9af-415a-bddf-7031a328f3bb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c21d2692-75d3-419a-b05c-6345a6ada3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841c3e62-cc72-42e5-b188-d2dcf50ea892",
        "cursor": {
          "ref": "5b02149d-800c-4e9c-8b90-e9b99a7212b2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d64b3112-2091-4531-8748-6ed848344377"
        },
        "item": {
          "id": "841c3e62-cc72-42e5-b188-d2dcf50ea892",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "620e869c-c7dd-481d-8c2f-857584eac6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524d8179-42fb-45dd-aec0-11c30887153d",
        "cursor": {
          "ref": "291b6fdc-9f33-4e27-b188-c8bd3675d738",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "207b02f3-a638-4208-8b96-416e2a6c4848"
        },
        "item": {
          "id": "524d8179-42fb-45dd-aec0-11c30887153d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "22fb7b7a-76bd-4583-8d47-51cbbe4fd383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa50d2c0-2327-4d85-8887-521b7a0c16c4",
        "cursor": {
          "ref": "5299dec3-0b70-4286-a134-d6519802970c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a6317f5c-1fd3-478d-b99a-3e98e01faacd"
        },
        "item": {
          "id": "fa50d2c0-2327-4d85-8887-521b7a0c16c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "449ab27c-0f4a-4afc-a209-1c2268806cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73601d33-692d-4c3f-ab3a-74f49d8d2b7d",
        "cursor": {
          "ref": "394ecb3a-8686-43a6-94a0-003b131b587d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4fe46c3f-ccde-452c-be67-cbb5cd1b8629"
        },
        "item": {
          "id": "73601d33-692d-4c3f-ab3a-74f49d8d2b7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f80a6da2-d1e0-4f23-acde-d84a28920e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b92132-8832-4f89-8322-2454d0832c09",
        "cursor": {
          "ref": "072bb238-1dc5-4b81-9957-06a349156b82",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6b2341fe-b9df-4d1c-808e-a86e2d1a5dd3"
        },
        "item": {
          "id": "40b92132-8832-4f89-8322-2454d0832c09",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5567975c-fd7c-4409-a2f5-2a6c1a1ffe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672da171-d3c2-48b7-b79a-0b56863ecb75",
        "cursor": {
          "ref": "832c56dd-fa1a-48f9-9a4e-74c1fbf237be",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9072660b-13a0-408a-bf7d-a80e140ba31a"
        },
        "item": {
          "id": "672da171-d3c2-48b7-b79a-0b56863ecb75",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ff137101-11fb-42eb-ba48-757938600b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21745180-70f3-4d50-8133-83ef6c5ec344",
        "cursor": {
          "ref": "5faebf46-5be8-4c75-b605-92f52ed22bdc",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0ba389a8-6013-4734-91d4-65985b97c783"
        },
        "item": {
          "id": "21745180-70f3-4d50-8133-83ef6c5ec344",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "596f70ca-a7a5-4a27-9cbc-7e9861dabd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383823f4-13b1-44f0-b77a-05014e7cbd6f",
        "cursor": {
          "ref": "2b7cea05-5476-409c-876a-906708c8a43d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "583f741d-d287-4b87-8fb3-918bc94b763c"
        },
        "item": {
          "id": "383823f4-13b1-44f0-b77a-05014e7cbd6f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3acfaf6f-33cf-435a-ae3b-68c73612354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0d7ef6-b1d3-4548-8a8a-e7d6321f968d",
        "cursor": {
          "ref": "10e1ebb1-8338-4eda-ab74-9488b3699607",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "09ef8a3e-95b5-459a-8b6e-5850a1bab0b9"
        },
        "item": {
          "id": "ce0d7ef6-b1d3-4548-8a8a-e7d6321f968d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "feaf1b1f-156b-4280-8383-82c707f223ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1509a60f-9396-4d06-8f66-94b11e9a37e4",
        "cursor": {
          "ref": "38334c36-94f5-47a2-976f-dd07989df1d6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0ac3f5c5-d412-4d75-a81a-785066f13439"
        },
        "item": {
          "id": "1509a60f-9396-4d06-8f66-94b11e9a37e4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3e87cbdf-3a24-439a-a602-443ded7994b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b09fbc-b5cd-4490-aeee-e64e2d6f7456",
        "cursor": {
          "ref": "e8ad0063-fc75-4bdd-b530-425124332ade",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "571b8f46-14cb-4c00-a88b-ebfa4daacb71"
        },
        "item": {
          "id": "93b09fbc-b5cd-4490-aeee-e64e2d6f7456",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "63ac0812-585d-455a-a002-f6ebc94a0daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4ef73b-e3b1-4d4c-a892-f3bd01c193ec",
        "cursor": {
          "ref": "2366da01-6a83-4894-b35c-987d120e0d4d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5d7c4924-c600-436b-a242-634a26267bb8"
        },
        "item": {
          "id": "9b4ef73b-e3b1-4d4c-a892-f3bd01c193ec",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3f054d8e-e111-4cff-8e16-ab16ab57e927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46012f73-fa9a-425c-9b9d-5ad6f175dbff",
        "cursor": {
          "ref": "98f51e39-bced-45cc-ba83-22e2f0e40ade",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5bc85df6-e7e1-4c81-a314-028eee5722c8"
        },
        "item": {
          "id": "46012f73-fa9a-425c-9b9d-5ad6f175dbff",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ed926682-24af-4f65-99f4-01a46ea6c1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e7730f-6ea1-4d72-81fd-8242dfc9111e",
        "cursor": {
          "ref": "9fe8cb2b-11fa-49d0-a3de-0753af23c06d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "55f4ae79-1e60-4adb-ab66-1a2f8c7d0af6"
        },
        "item": {
          "id": "64e7730f-6ea1-4d72-81fd-8242dfc9111e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ebca84ba-20be-40ca-b977-7d53a86d252f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b13e23-f997-4fa1-a224-4d923c204fec",
        "cursor": {
          "ref": "fc0ad4cb-4e37-46ed-8d1d-7585ea93d883",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d10fe71e-92bd-4673-b32e-af0bd0772873"
        },
        "item": {
          "id": "48b13e23-f997-4fa1-a224-4d923c204fec",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "31214a11-d2fa-4a65-958a-55aac7603fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eca3c6-b607-4503-b540-d570139d2694",
        "cursor": {
          "ref": "afe52052-da80-4bfd-8280-c59693dec2f9",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "81d3eb1a-0f91-4639-ab71-af09f0a3b41e"
        },
        "item": {
          "id": "b1eca3c6-b607-4503-b540-d570139d2694",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b29a0c54-077e-43ad-99fd-7a07343112c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f9e25a-fa0c-4c6a-9cbd-776c8e839d19",
        "cursor": {
          "ref": "fc99a3de-58ad-45ae-9515-ffbfd6c91991",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1e4d323b-1220-443b-9e06-4c73b64b342c"
        },
        "item": {
          "id": "95f9e25a-fa0c-4c6a-9cbd-776c8e839d19",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c5c67de1-8739-4a00-86d8-ee752749b836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729ec979-d6a9-421a-a4ac-fd79c3320079",
        "cursor": {
          "ref": "1f2dcd9a-49c5-42ca-809f-2937ba601373",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cf335777-4980-4a00-99bb-55aa75d6442f"
        },
        "item": {
          "id": "729ec979-d6a9-421a-a4ac-fd79c3320079",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "78c5255d-078b-45c5-96d2-ec135cc19581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240cd107-4ae6-4591-a9f2-4733527d5ba7",
        "cursor": {
          "ref": "8be9b7c9-58c8-40e9-bbe4-a7a8da9e5a03",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7959c281-646d-4c25-9214-4fcd4e883113"
        },
        "item": {
          "id": "240cd107-4ae6-4591-a9f2-4733527d5ba7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "53fbc348-d489-4db8-9a67-f4b3623b0e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb72ab94-4bc2-4a7a-abc3-f85ca0b3638a",
        "cursor": {
          "ref": "d126ee7d-56f6-48fd-8f1c-384abd4f3253",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7000b49c-fe4e-4fd6-bb4e-50df784e1eed"
        },
        "item": {
          "id": "eb72ab94-4bc2-4a7a-abc3-f85ca0b3638a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "12d37d62-6b8b-413f-aa9f-f34efd476e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e5c5f6-77ee-4fff-bfd2-6edd64a5847b",
        "cursor": {
          "ref": "1068cc72-aa3b-49e9-94a0-8f46dba064d6",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6fbcdfc2-9203-4f28-ab6f-d5326b2f14d5"
        },
        "item": {
          "id": "87e5c5f6-77ee-4fff-bfd2-6edd64a5847b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8244de3b-aa42-412e-8548-4ab70a512c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee28bd54-d26b-4c92-ac4e-c1995bb07174",
        "cursor": {
          "ref": "d1c8d14f-2b1d-4256-9d96-88c14ec9ae44",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2a5f8c74-2698-422b-b458-98783d3bf794"
        },
        "item": {
          "id": "ee28bd54-d26b-4c92-ac4e-c1995bb07174",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4ee25683-b721-4c12-bdf0-e2a95d122d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc09fda-c6d4-4872-95dd-a0ceb9d23bfc",
        "cursor": {
          "ref": "3f5cad98-f37c-41c3-a3ec-827c39964872",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "114f8928-5420-4c6a-8285-05c4db9bbfa5"
        },
        "item": {
          "id": "ebc09fda-c6d4-4872-95dd-a0ceb9d23bfc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0e44a940-6086-4f11-b6f0-9683353dc06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fd37f2-3ec6-4a03-9a0e-faffe064acbe",
        "cursor": {
          "ref": "c2f8eec7-f14e-4899-83bc-58f1c84bcf9b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "296779fe-82b0-43b7-b16d-3f004564dfca"
        },
        "item": {
          "id": "a2fd37f2-3ec6-4a03-9a0e-faffe064acbe",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6e52cc8e-5a57-487a-ac64-973ebe823154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd57ae9-d9b5-4307-84a8-67108a55cf16",
        "cursor": {
          "ref": "1d86848c-7310-4cda-82e3-a1e41407f408",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d8de83ce-e5c6-4e55-8b58-15781b3b665f"
        },
        "item": {
          "id": "1fd57ae9-d9b5-4307-84a8-67108a55cf16",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f6792c71-0d85-46ca-b430-4db411f73dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb5456d-55f8-479e-a115-3691f59573b1",
        "cursor": {
          "ref": "2af7275f-454d-4abb-aaa4-d1dcb97c21d1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b6cb2cf3-a484-45ed-aad5-8d01eeee4ac4"
        },
        "item": {
          "id": "ddb5456d-55f8-479e-a115-3691f59573b1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "01b36a7c-cd42-49a7-a225-af4bc48f4266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65bea8e-f074-4e35-b714-235faf77003b",
        "cursor": {
          "ref": "94db8c90-99c7-4497-888b-22ec6c4c5e1e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "10c823fb-3b84-4630-8e93-bd000487770b"
        },
        "item": {
          "id": "a65bea8e-f074-4e35-b714-235faf77003b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dcebb169-9b49-4c3f-888f-8330262bc065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136175d8-7799-480d-a3d6-6768bfb8f3f7",
        "cursor": {
          "ref": "114112f7-d227-452c-b27f-8630fcc12f59",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9342aa02-4ca9-4167-90d2-9c0c3886d779"
        },
        "item": {
          "id": "136175d8-7799-480d-a3d6-6768bfb8f3f7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "96c295da-fb9d-4317-b46e-b2d7e6ee7396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d672168-4d05-4cb2-95e9-3019898f419b",
        "cursor": {
          "ref": "16d6874a-9d89-4c56-a766-c6f15958bff9",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4d5096af-4739-4d9d-886e-137a9dcc1bc9"
        },
        "item": {
          "id": "7d672168-4d05-4cb2-95e9-3019898f419b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f250bc9e-8d4e-4855-85a5-76908dff6238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bfb632-648f-4a79-ad5c-89c740bc76b8",
        "cursor": {
          "ref": "390361cf-5099-4d5e-be69-f925496b22dc",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c2d5ca46-2e95-4742-8d8c-320e07cd4423"
        },
        "item": {
          "id": "89bfb632-648f-4a79-ad5c-89c740bc76b8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4daa34e8-f449-4b81-8364-3faf849180a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8580ec-c489-4316-a0f4-2f900f439633",
        "cursor": {
          "ref": "1d2f697a-04f0-4716-acc7-fac284d431b9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "46ff4565-5326-4a10-b364-0e34413e02d4"
        },
        "item": {
          "id": "9b8580ec-c489-4316-a0f4-2f900f439633",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "53e1248e-c7f4-4021-b53c-a9b2342e136f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84736eb-3c5f-41ef-954b-25a9a776f069",
        "cursor": {
          "ref": "a890bd23-2f92-4bb4-a4ec-0962d7936c6f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0b40021d-b021-4159-9f33-fca67708b457"
        },
        "item": {
          "id": "b84736eb-3c5f-41ef-954b-25a9a776f069",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d9057d3e-971c-4a05-8342-665b8acb419a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8620675f-2e31-41d5-81b0-9cb3b09df990",
        "cursor": {
          "ref": "f894dbe9-8ca6-4a2a-b849-33486d5ca264",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "40320628-7272-46e1-81f2-dd584900f636"
        },
        "item": {
          "id": "8620675f-2e31-41d5-81b0-9cb3b09df990",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1dacc919-607a-4a0b-8993-6bd38a800bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178c1991-4ef2-4d1f-a951-46c0ead69aac",
        "cursor": {
          "ref": "c802334a-7ee4-49ca-b3a0-24cffeb23203",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "20274766-88d7-4e6b-b8b0-b5eb991e3c04"
        },
        "item": {
          "id": "178c1991-4ef2-4d1f-a951-46c0ead69aac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d1d7784d-ed98-4753-a3b0-ae2071bfc6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56a2435-e8d1-4623-a2ba-71105f20840a",
        "cursor": {
          "ref": "0f86268c-7d9a-448d-ab18-648dad947185",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a0b52ae1-0937-43d2-b6aa-d4f4f2d206c0"
        },
        "item": {
          "id": "d56a2435-e8d1-4623-a2ba-71105f20840a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e8b26ec6-3c42-477c-9d31-1fec47a2dcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe27b94-269a-4d26-843f-433332ca93b4",
        "cursor": {
          "ref": "543d1efe-796d-496d-b34e-e48af6a663e5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5177dabf-316d-4f2a-881b-10dedd75b27f"
        },
        "item": {
          "id": "dfe27b94-269a-4d26-843f-433332ca93b4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98053ad1-a9d2-4be4-88f6-a3b59a6a5623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c77b5-dc92-4b08-9421-b6419bcceb06",
        "cursor": {
          "ref": "5d425e10-7f6f-4242-bb0e-f56850a14457",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e79ce392-76b4-4af6-a5b3-cd5f148ea698"
        },
        "item": {
          "id": "f61c77b5-dc92-4b08-9421-b6419bcceb06",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ad97e332-f453-4f3d-94bc-5888bb7b1192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfb3fab-ce7b-411b-a26a-6d6cddaba2c6",
        "cursor": {
          "ref": "488166a2-3fa8-4c52-bdcb-ad2c0c4f1f77",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4679b8fb-9b65-47cd-bdfd-0e9e8bb38717"
        },
        "item": {
          "id": "0bfb3fab-ce7b-411b-a26a-6d6cddaba2c6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3a31dfec-031f-43f5-b877-a19c127d4d25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69a6c37-0999-4496-b000-8507fae3b574",
        "cursor": {
          "ref": "8ecfcab2-3ca4-4edb-8e1e-613925c1c718",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e4aa0bf7-d8e3-4442-941b-c0f853a360ee"
        },
        "item": {
          "id": "f69a6c37-0999-4496-b000-8507fae3b574",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d9b58e32-b598-446b-b44e-9217413828fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "41477e21-58df-4f5e-bb51-e49bb604e21d",
        "cursor": {
          "ref": "36af348c-4e24-4dbd-91a6-f0ce0efab224",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c4251e49-2c10-4692-a8df-1fce32d74098"
        },
        "item": {
          "id": "41477e21-58df-4f5e-bb51-e49bb604e21d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b505e4b6-ee8d-4707-a805-162116bf8b94",
          "status": "Created",
          "code": 201,
          "responseTime": 9489,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c916996-67de-4710-bf42-60baa1accfb9",
        "cursor": {
          "ref": "f7b89f0d-3f59-4792-bfb2-418c5bfdf197",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a36c91e3-2b51-4cb4-96a4-da34e34ad183"
        },
        "item": {
          "id": "0c916996-67de-4710-bf42-60baa1accfb9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ed79edfa-61a6-4f12-b2ee-a4895ba83434",
          "status": "Created",
          "code": 201,
          "responseTime": 8076,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ece07fb-1ba4-4edd-908c-7e8653495b3a",
        "cursor": {
          "ref": "cbc923b2-9a4b-4e50-89c9-1c0f22af71de",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e3ea1ce4-a3c5-41d0-88f6-e1574dbaeb97"
        },
        "item": {
          "id": "5ece07fb-1ba4-4edd-908c-7e8653495b3a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0d6dfd41-7228-46b2-9b59-073239bca280",
          "status": "Created",
          "code": 201,
          "responseTime": 7988,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb132dd9-c893-41dc-85b7-c071953a02ef",
        "cursor": {
          "ref": "c89871b1-07c6-4780-ae64-e887187e6c9f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b85b1738-061b-418a-a101-674b924c271a"
        },
        "item": {
          "id": "bb132dd9-c893-41dc-85b7-c071953a02ef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9214d1cd-cf47-4ab3-8c6f-ae3f6593d744",
          "status": "Created",
          "code": 201,
          "responseTime": 8065,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9997f10-e048-44cc-bcae-f99ca6cdefb0",
        "cursor": {
          "ref": "d36c3efa-2294-4e74-a8a9-75e980504d18",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2d76d090-099d-4771-af4b-03cc7556ccc3"
        },
        "item": {
          "id": "c9997f10-e048-44cc-bcae-f99ca6cdefb0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a6a93890-07ad-4105-a244-a378a37de9b2",
          "status": "Created",
          "code": 201,
          "responseTime": 8590,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea03e170-f56a-4f0b-b8b9-e20f7bb07e71",
        "cursor": {
          "ref": "65420e2b-f61f-4584-a7ce-dbfbaa7f586d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c220bf65-fe1b-43d9-9fa6-77ef730ede2b"
        },
        "item": {
          "id": "ea03e170-f56a-4f0b-b8b9-e20f7bb07e71",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4c127795-5123-4682-9c48-380d93260af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "876fbb9e-d24f-4081-bc48-016e087ef11d",
        "cursor": {
          "ref": "0df0c21e-d60b-4e88-8b96-7eff0d537237",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dce288a9-9579-41eb-b0b7-778f5ca10075"
        },
        "item": {
          "id": "876fbb9e-d24f-4081-bc48-016e087ef11d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "250383d0-75b7-4010-8d21-e3d0bf673e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87b63e1-8f49-4723-8fa3-7b22f98bbd80",
        "cursor": {
          "ref": "5b8b9a3b-2553-4c5d-9282-c0803bc3ccf9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cc970f46-1d66-43ba-870e-e5ce63ae9eb2"
        },
        "item": {
          "id": "d87b63e1-8f49-4723-8fa3-7b22f98bbd80",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d1f3db99-0b02-4240-9803-92b28c6f86ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e957f7b3-0da7-47d3-84d4-6bbed211c612",
        "cursor": {
          "ref": "55b4cb79-cb48-485b-b672-01adb2533c3d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "17557ccb-a8b5-4ecf-a0f8-f569a0de6009"
        },
        "item": {
          "id": "e957f7b3-0da7-47d3-84d4-6bbed211c612",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1eb61afc-437f-4fe0-baff-2d27b53720f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df4475f-de82-4acc-838c-a465f7220912",
        "cursor": {
          "ref": "ee845f69-8390-437c-b43c-0553ff67d180",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5991c8e4-1775-418e-96f3-daae109638c4"
        },
        "item": {
          "id": "7df4475f-de82-4acc-838c-a465f7220912",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6e173513-3604-4bad-8078-1d671b8960e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2379d73-8876-4203-b096-3a3234fa9952",
        "cursor": {
          "ref": "b0348429-4aa6-442f-adeb-18c44ff6adc0",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4244d8cf-c4a6-418e-81c8-9c956be0e126"
        },
        "item": {
          "id": "c2379d73-8876-4203-b096-3a3234fa9952",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2145189e-6f9d-45bd-b38e-fb9ac04b4a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ebbb70-80f8-475f-944e-d192e868b858",
        "cursor": {
          "ref": "98a328b7-627f-4ecc-bbce-8f08671a49d2",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c17bf5c7-32ba-4b43-a681-682d53353af3"
        },
        "item": {
          "id": "d5ebbb70-80f8-475f-944e-d192e868b858",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4b08f8b6-58e1-4ef4-acc8-01f576431a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed408f5-c520-480c-b528-17a68e996c83",
        "cursor": {
          "ref": "2204021e-0f06-42af-8877-39a976ef7831",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ea7e763f-d9a7-4f27-9ffa-24d602c25071"
        },
        "item": {
          "id": "5ed408f5-c520-480c-b528-17a68e996c83",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5641d349-27b2-4fd7-be24-028eca960776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a8a41f-f654-4cf8-954e-bbf72a68ed50",
        "cursor": {
          "ref": "f1e65544-d948-4da8-949f-eec8d1de7564",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "adc97c1f-bc8e-42c8-b21b-dfcf9edd95a9"
        },
        "item": {
          "id": "c4a8a41f-f654-4cf8-954e-bbf72a68ed50",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f9a6b95d-a3b8-4860-b89d-bf5b33f16cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64935118-8d6d-4754-8721-fd53bf76a615",
        "cursor": {
          "ref": "24dbcce4-8964-4789-88e0-ed0c4c865af9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "93c84cd3-13cb-4ab3-9f46-12302119ef33"
        },
        "item": {
          "id": "64935118-8d6d-4754-8721-fd53bf76a615",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d020e1a2-d58b-4de8-aeff-702c31c1a386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5725637-bd94-4d4b-b34a-48c6facb427d",
        "cursor": {
          "ref": "9157e154-64fb-4b58-9ec4-4b8cdf67254f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e37f4146-553a-4a89-83c8-b37634390b22"
        },
        "item": {
          "id": "e5725637-bd94-4d4b-b34a-48c6facb427d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "332d8d97-f8cd-4cc3-9a7e-edfa621eff25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e234f54-57ff-4b38-9034-d876188815ab",
        "cursor": {
          "ref": "f40dada7-2b5d-4fd1-8d9c-cfe66a2ab465",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a5fdcb7b-151d-41e2-9167-f028342348b3"
        },
        "item": {
          "id": "1e234f54-57ff-4b38-9034-d876188815ab",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4905dcbb-db03-42da-b0b4-b4e264613d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579ae1e7-99f1-41c2-a30c-470aba7f4d82",
        "cursor": {
          "ref": "24498bd5-35bb-43c2-bf88-fa302404898b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "71b648ae-334a-4ef2-a41f-1b5d520c7901"
        },
        "item": {
          "id": "579ae1e7-99f1-41c2-a30c-470aba7f4d82",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "517636db-4b8f-4947-af96-5ae6534adcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00130d69-5c34-4ee6-8b0a-ed24a2d98c29",
        "cursor": {
          "ref": "b76390e2-e961-448c-98de-27c9f7db01f6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c90bdd04-519f-4017-9542-09f08655c492"
        },
        "item": {
          "id": "00130d69-5c34-4ee6-8b0a-ed24a2d98c29",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1595245b-0c65-4f46-9c1a-7f510852efb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cf8b15-a4ac-45e6-8dc7-0b5befc899df",
        "cursor": {
          "ref": "c2d8eb5d-a6f1-4bc9-9636-1b614afb0178",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ec3a0bb5-0d27-4c76-a8ba-3ae5cb79fbbb"
        },
        "item": {
          "id": "69cf8b15-a4ac-45e6-8dc7-0b5befc899df",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2e01bc4b-40e7-4088-9166-4e0f286aa24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e108c7-aad1-4799-9a90-fbf1f033babb",
        "cursor": {
          "ref": "4e3a80fe-64b4-4f52-bb06-92db1249250d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b5dd85e1-a3b0-4503-8283-4c2620ad3e4a"
        },
        "item": {
          "id": "17e108c7-aad1-4799-9a90-fbf1f033babb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "44403c08-e46e-452b-bf02-11387a0d9f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1704115-d98d-4731-961d-55562eae8deb",
        "cursor": {
          "ref": "e1b504a6-d103-4eaa-807f-4007142f07d2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3e7063e2-bb72-4cc4-b9a5-8a363ccb3594"
        },
        "item": {
          "id": "e1704115-d98d-4731-961d-55562eae8deb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "feb9a7cb-5f2d-4769-bd69-ba1fd7291f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab01ba7d-5138-48c6-a55d-1e0b5ad4118e",
        "cursor": {
          "ref": "e3c25352-baec-4934-bddf-fd9985bb81f3",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "aeb5957f-3b32-4e98-bec4-123ba1478ae3"
        },
        "item": {
          "id": "ab01ba7d-5138-48c6-a55d-1e0b5ad4118e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "daa4b35c-5fb3-4976-97a4-f68d3faa11c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667aa341-740d-402f-87c9-e0ef40c497b2",
        "cursor": {
          "ref": "92ec9237-16c3-4ecc-a38d-3a76413f6859",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "badb26b9-436d-467f-8ae7-84316c7db5b1"
        },
        "item": {
          "id": "667aa341-740d-402f-87c9-e0ef40c497b2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "75597d95-725b-4ea8-891e-9b49c9d7ff9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72373525-d4b7-4aa9-9905-d71ae3dc169c",
        "cursor": {
          "ref": "06727bc3-149d-460e-afba-5cbe7d737c7a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "17f63037-23a5-4d17-abc1-37833c035ed0"
        },
        "item": {
          "id": "72373525-d4b7-4aa9-9905-d71ae3dc169c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "72a36909-9298-48eb-9476-84d594a93026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfae200-7693-46f2-aa64-b1c54fe39c2a",
        "cursor": {
          "ref": "fb41cd49-f101-4404-81d7-f80937ee1b03",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4dca0398-4b33-4997-a88d-a8274010d823"
        },
        "item": {
          "id": "6dfae200-7693-46f2-aa64-b1c54fe39c2a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "86c824a6-b36b-4fe1-9deb-e827edd5a6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7e7e8b-b1e5-4fa1-b63d-d7859e583294",
        "cursor": {
          "ref": "41f2c1f3-e003-4baa-9a06-eab4a8137387",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8e41a1f9-2ab8-4ab9-b2f4-b214e0f895dc"
        },
        "item": {
          "id": "df7e7e8b-b1e5-4fa1-b63d-d7859e583294",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "955bcb88-aa6e-4106-b9b3-f615249712d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03323241-935b-4d39-a22a-c9c197290d4b",
        "cursor": {
          "ref": "1d4adef5-53ed-41f0-941b-e95123a11b98",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ab9693df-de79-422c-a289-d71b3ab37f35"
        },
        "item": {
          "id": "03323241-935b-4d39-a22a-c9c197290d4b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "79aefe8c-2dff-4f76-aa60-ae73f76d4b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70e9dcf-2e7f-4bc6-b420-38cf8db29606",
        "cursor": {
          "ref": "450ddb46-5ee8-464a-b2eb-0c9635f0a01e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "80691275-0e9f-4745-bd36-e48d60e2e0d4"
        },
        "item": {
          "id": "e70e9dcf-2e7f-4bc6-b420-38cf8db29606",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bac83e9c-7f32-45d2-95d4-705ba14e311a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b851da28-6257-4dba-9591-7245d00c1535",
        "cursor": {
          "ref": "3d36b51d-bde8-4e68-bf29-10417674672f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aefcf233-b7da-4b01-9b5f-2947cb0da794"
        },
        "item": {
          "id": "b851da28-6257-4dba-9591-7245d00c1535",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8851da03-7ff9-4e90-8cef-35fa10a3cbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64aeec2d-6ee7-45f4-84d2-ae132ce5c67c",
        "cursor": {
          "ref": "bbda74a2-b972-48e0-956a-c0462497609e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5cf399d0-051e-4bde-9b4f-2d5ae93856e3"
        },
        "item": {
          "id": "64aeec2d-6ee7-45f4-84d2-ae132ce5c67c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7d6fdc04-3c93-4fc6-afcf-865864be8946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70b4e84-4b15-4a29-b15f-46c8f26517f5",
        "cursor": {
          "ref": "7e9c296d-d66e-49f4-b229-6341f61103a1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4b7c4c2e-dc6a-4546-9b03-11a394a477d4"
        },
        "item": {
          "id": "d70b4e84-4b15-4a29-b15f-46c8f26517f5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "695d6b77-9dea-4b7b-be13-9680260cc70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a435dbc-5c93-4c01-91b1-836f604c96bd",
        "cursor": {
          "ref": "3b298ebc-7510-44ce-a27e-efab5ac58e58",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "00f1c22c-9315-4386-8ebc-9642a383820d"
        },
        "item": {
          "id": "1a435dbc-5c93-4c01-91b1-836f604c96bd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4384cde6-bbc4-4bbb-b820-e4e4d290cc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056e714a-11cd-4ccb-a552-1df562609350",
        "cursor": {
          "ref": "e7ad2fc1-9519-4f47-a0e9-ab29aa0de38f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7d55ead1-1479-41cc-b986-5404a2c13fc8"
        },
        "item": {
          "id": "056e714a-11cd-4ccb-a552-1df562609350",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "70541ff8-2125-44cb-828c-3017908e7904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d42c852-6323-46da-8782-565f59901066",
        "cursor": {
          "ref": "4d661bcc-ef24-413c-96ea-a79ebeacc9f9",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "49eea811-488b-49dc-b4a9-36a3a3edabca"
        },
        "item": {
          "id": "9d42c852-6323-46da-8782-565f59901066",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e4617e42-72c7-40b9-82d0-5566a0d295d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cfed73-0980-47b1-b8dd-88fd15156325",
        "cursor": {
          "ref": "5e7b34de-8c1b-4f6a-9a6a-cc83197e0010",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c2fdb168-21e0-4db7-8483-feba177ab45e"
        },
        "item": {
          "id": "e8cfed73-0980-47b1-b8dd-88fd15156325",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b81839d3-926e-4783-91fb-81fc4463862d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20949148-8d73-4125-9c23-9a84a938ffd6",
        "cursor": {
          "ref": "a7407da7-9421-4b44-a04f-ff80af0442a5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e6712b70-e8ef-434b-9fc2-a522279bea15"
        },
        "item": {
          "id": "20949148-8d73-4125-9c23-9a84a938ffd6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "07a3ab04-2c8f-4beb-ba4c-b7152262d454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740735c4-2e17-4176-8551-e456bf1c626c",
        "cursor": {
          "ref": "c814fc44-5c4d-48e1-b423-41d8e955774c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3e31804e-88bd-4b34-8864-7be89afa70b1"
        },
        "item": {
          "id": "740735c4-2e17-4176-8551-e456bf1c626c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "81fe9a3a-d5ac-4307-8de6-af39c33aa45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd69070c-a6e8-4f9b-b398-6391ddee1bc3",
        "cursor": {
          "ref": "e27fcd9a-c075-4b3a-8a11-7a5637c2903c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f6fddd1f-ca37-48b5-93d3-f6e9e64c6196"
        },
        "item": {
          "id": "bd69070c-a6e8-4f9b-b398-6391ddee1bc3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d5020d7b-df1c-48ab-96f7-cec0bacef3c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 101,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dc5b93-b01e-4265-91f0-e51d69dc2c02",
        "cursor": {
          "ref": "79510f8a-d19b-41d3-896d-f67414b2892b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "87646f31-a4f6-467d-8f22-91f527e953de"
        },
        "item": {
          "id": "43dc5b93-b01e-4265-91f0-e51d69dc2c02",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "551b2c97-ee42-4c7d-839d-862510c899a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91edba18-5927-417d-9305-4aaa92f32d99",
        "cursor": {
          "ref": "6e610ab9-70fb-470b-996c-ef3824f62cb4",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "085448ca-45df-4af0-afdf-fc3ae79fd362"
        },
        "item": {
          "id": "91edba18-5927-417d-9305-4aaa92f32d99",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "55189f34-10f7-4837-9aa6-3ca0abfa2579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f87cb-1cb2-4bd3-b464-4b36f36edb76",
        "cursor": {
          "ref": "490a10ac-5622-490e-9c42-51e1cd8feef0",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dd0ff9e2-bdcb-408a-b87c-cd07a643ef82"
        },
        "item": {
          "id": "eb5f87cb-1cb2-4bd3-b464-4b36f36edb76",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6b01aaf1-6f86-4ba9-8ed4-90347a7cf3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918e89a6-c935-42f8-ac7d-124a890e82c9",
        "cursor": {
          "ref": "94d71e1f-08a9-4136-9430-9f5ee5b20c6a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3f25a91b-bfd9-43c6-b3d5-3acfdf6157fb"
        },
        "item": {
          "id": "918e89a6-c935-42f8-ac7d-124a890e82c9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "58ed3d4f-7f19-4f4d-8946-4aaa8f8c642d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77420bfd-bce4-4882-9cd4-44a3ea58cfe3",
        "cursor": {
          "ref": "2d5658d0-06fd-4df8-9e62-af35f2b4f072",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4ffb197e-b006-4924-99a0-8fd4bc2e4da1"
        },
        "item": {
          "id": "77420bfd-bce4-4882-9cd4-44a3ea58cfe3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3f7ae7ac-ed3f-4e92-ab30-e22337c70bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12696a2f-a57c-4ef6-b233-cd513737b212",
        "cursor": {
          "ref": "b61424aa-ee1b-41db-97df-bdca12e1846f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9a985e09-6026-4312-943c-e816f8c91a5d"
        },
        "item": {
          "id": "12696a2f-a57c-4ef6-b233-cd513737b212",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3e152a0b-c298-4883-b226-775de83e1470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56eab382-d852-476b-9c12-af78febd150b",
        "cursor": {
          "ref": "17a2b2aa-d38c-4cd6-9c24-978bd9f04051",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e0581ad4-1849-4e5c-8a85-0ab7b30da11a"
        },
        "item": {
          "id": "56eab382-d852-476b-9c12-af78febd150b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cd055bdf-7593-4281-ae0f-63ecda9e1833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294f84eb-be83-4eed-bbdf-c3f6fb33afc0",
        "cursor": {
          "ref": "f6cfe28e-1d68-4f05-8a13-c30c2a63762e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d3fd370d-8e61-492c-916d-412cdcf51c91"
        },
        "item": {
          "id": "294f84eb-be83-4eed-bbdf-c3f6fb33afc0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "60b3738c-3731-432d-aabe-c3fafe9ac46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a58f6fc-8872-4376-8552-f26ff42b8ad6",
        "cursor": {
          "ref": "6f3ff137-2847-4494-93ca-a2750d96d42b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "58ca9b25-50d1-412a-8428-8960d63c20be"
        },
        "item": {
          "id": "1a58f6fc-8872-4376-8552-f26ff42b8ad6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "58c81913-8ded-4639-85b2-9bf232a881e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628f96d1-f472-4d98-a451-574adebff43a",
        "cursor": {
          "ref": "020f6e1c-46d6-4223-b4c5-325b21b22da3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4ec72dc8-7924-4511-ac69-8a0abfcc0718"
        },
        "item": {
          "id": "628f96d1-f472-4d98-a451-574adebff43a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6b1936f7-32eb-4e59-bf9b-48231e6c6162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2a9c6f-56dc-4701-ac3c-6f65c898613e",
        "cursor": {
          "ref": "85e925b8-2d32-4950-affb-8736286bec7c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5cdff3ad-1010-46a1-9e4d-472bc5745e24"
        },
        "item": {
          "id": "0f2a9c6f-56dc-4701-ac3c-6f65c898613e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b7da9594-f3c5-414e-86fe-0fda349fe48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d68afa-fb84-4e0e-bffa-de11e24a0467",
        "cursor": {
          "ref": "6fb448dd-4d5e-41d9-b5bc-3af36c3431e1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "983475c9-b409-449e-8b61-8563b98a12ca"
        },
        "item": {
          "id": "53d68afa-fb84-4e0e-bffa-de11e24a0467",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9508cff8-3038-41fd-b883-a49d09bbe9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df01e855-85c6-471f-89ca-043dcc46299a",
        "cursor": {
          "ref": "c4c12720-0a5a-4a1f-a5d0-a16074fe71e7",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7983d18c-460d-4c55-ae92-743d303c497a"
        },
        "item": {
          "id": "df01e855-85c6-471f-89ca-043dcc46299a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "47856f75-8fa3-446e-884b-324cbd59f0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a448f52-0ed7-4aa0-807f-28f0bc7027d6",
        "cursor": {
          "ref": "93a7b8d0-7491-4627-a67d-511098094c79",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6dd9b856-03b0-414c-9525-49eb98c27a17"
        },
        "item": {
          "id": "0a448f52-0ed7-4aa0-807f-28f0bc7027d6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "28010eee-a59a-46eb-be29-ed2b153397d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424e4731-8803-493c-bc04-e66978d71633",
        "cursor": {
          "ref": "82375866-31c9-426a-84d9-3cd980bcaf34",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1a30dfb8-5f30-4f3b-98d4-a7811ecba207"
        },
        "item": {
          "id": "424e4731-8803-493c-bc04-e66978d71633",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c69bdb37-92bd-4ffe-adf1-73a1569d1878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac348f5-1241-4c69-887c-b692eb6e87b4",
        "cursor": {
          "ref": "104bd309-bf39-404d-a6c6-5b4c31acc6ad",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b55dda6f-73f4-406d-9c07-3a098f90a9c9"
        },
        "item": {
          "id": "9ac348f5-1241-4c69-887c-b692eb6e87b4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d8302573-67b0-416e-82eb-2dd8f2838955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f9d8a9-08ed-4e29-8046-fbd5fe0a823e",
        "cursor": {
          "ref": "49116f36-2f2f-4d21-ab18-a0e6983d850a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d6add23a-70df-44f6-b6a9-d99f7b389b4f"
        },
        "item": {
          "id": "66f9d8a9-08ed-4e29-8046-fbd5fe0a823e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dcf47928-a157-4c13-9459-9283c905eece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98102f8a-9825-44cb-843c-c9dd8f8ad4f4",
        "cursor": {
          "ref": "56745b77-f871-4ecc-a80b-945a3c801a2c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e8848296-e27f-4aaf-bcdd-ad4fcad76d76"
        },
        "item": {
          "id": "98102f8a-9825-44cb-843c-c9dd8f8ad4f4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f162095c-8e75-4648-8bb3-8e18309345b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5add2f-2a51-410d-a81d-ca909fda1c29",
        "cursor": {
          "ref": "8ec0e778-7070-49bc-8fa8-4ec64feeb208",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "996c25a4-4dba-4df3-abd4-591387c69a3b"
        },
        "item": {
          "id": "5d5add2f-2a51-410d-a81d-ca909fda1c29",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c21c3c94-b9ac-4e36-a3c2-37cd56521812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53169662-f1f9-4c3e-8d6b-9523c4f777b1",
        "cursor": {
          "ref": "505c7599-ccc5-4026-ae09-b0c6113bbd74",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f611a3f1-c0da-452d-bd72-3bcd8f29983d"
        },
        "item": {
          "id": "53169662-f1f9-4c3e-8d6b-9523c4f777b1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "15dd4c3e-7cc0-4dbd-a3a3-be7b7dab4722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf6e6af-9652-40d4-8c72-3c9bfc27370b",
        "cursor": {
          "ref": "588f26d5-7bea-4afe-8b0d-4c98d5ee2b06",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8a4f82b3-d51e-47a3-b212-4d0f8a580647"
        },
        "item": {
          "id": "fdf6e6af-9652-40d4-8c72-3c9bfc27370b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f1bc55d1-be43-49c5-a7f0-2d99ee002a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b33fb8-6a9f-4305-949a-5fe87766794b",
        "cursor": {
          "ref": "818296c8-42ce-4696-8dae-7a230ea84edb",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9dd3858c-cf05-40c0-bbdc-0580d1e332b3"
        },
        "item": {
          "id": "28b33fb8-6a9f-4305-949a-5fe87766794b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fdc36e99-98b4-46d0-a5df-95169590c772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb168859-da8a-47f0-a58b-6db0acd41a94",
        "cursor": {
          "ref": "1c4bce32-bf31-4c10-a634-c30974bbe38e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d625062c-937b-45ae-825a-ef249608a87e"
        },
        "item": {
          "id": "eb168859-da8a-47f0-a58b-6db0acd41a94",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "deafc266-7f90-483c-ae94-34a2bc8f2871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0b0d57-3276-4740-9098-a0dba82765df",
        "cursor": {
          "ref": "13a28c89-6dfd-459b-9a26-aabd25561947",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "616b369e-a200-468f-b6c9-261c2bb68718"
        },
        "item": {
          "id": "dd0b0d57-3276-4740-9098-a0dba82765df",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6b50e21b-61a0-43d4-8458-6d6c02fb88da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f325fcbb-6f4f-4d28-bbc2-303418537257",
        "cursor": {
          "ref": "2a21750c-8886-4ddd-82e2-ae0999c185cf",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d29a6b68-c12f-471b-bc31-14de34affc5c"
        },
        "item": {
          "id": "f325fcbb-6f4f-4d28-bbc2-303418537257",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9d18c3a4-4221-44d1-8e89-2ee6f02c2494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80c0a33-f68a-4938-8bf7-d3f3518da3df",
        "cursor": {
          "ref": "94b1a863-1bf5-4452-8bbf-5132654c5ea0",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "190900ac-68c4-4453-9214-43f1bb337b3b"
        },
        "item": {
          "id": "a80c0a33-f68a-4938-8bf7-d3f3518da3df",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b16b9818-2ac6-4dc7-8af7-6e7d892a537b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25a7d52-b8ac-40ed-aec6-45c5783f0561",
        "cursor": {
          "ref": "aeeb57dc-2b71-4519-9fd5-e2dd3855d989",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "09fc828f-919a-488f-b154-2557acb4c281"
        },
        "item": {
          "id": "c25a7d52-b8ac-40ed-aec6-45c5783f0561",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "08cf5f83-9efc-4508-b867-bf3456b723e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d375a18-8c3f-4851-a8e8-8fbdf66e3120",
        "cursor": {
          "ref": "70e98670-b0fd-46a6-9f60-880147c15826",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d43e6cda-b444-48f4-a306-e2d0f181c9c3"
        },
        "item": {
          "id": "8d375a18-8c3f-4851-a8e8-8fbdf66e3120",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fcaad22b-3a02-41df-85c3-50782772205e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9104fdd-9210-48d8-9076-d9a8883858c1",
        "cursor": {
          "ref": "8f7de17a-5137-4dd8-a9a9-1473712bce49",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3b861d35-35aa-4563-b20b-bd5f078de299"
        },
        "item": {
          "id": "f9104fdd-9210-48d8-9076-d9a8883858c1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9d458745-287a-4ec3-b600-a6724cbdb009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b10284c-5791-462f-9797-c0923b1e4740",
        "cursor": {
          "ref": "0b0488de-b170-40f4-bf80-0f8bb551c2d0",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "839ba1b6-6470-44c4-a97b-4f58345d7d41"
        },
        "item": {
          "id": "5b10284c-5791-462f-9797-c0923b1e4740",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3126643c-e3e5-4089-b503-112e2ed46b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da85c38-120b-4bd5-85e9-773680e2fa09",
        "cursor": {
          "ref": "130466a3-10c5-46b4-a706-f299dab8ee5e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0372140e-1f4d-45c0-8a52-7e106b4aa4d4"
        },
        "item": {
          "id": "2da85c38-120b-4bd5-85e9-773680e2fa09",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "465012ab-e8cc-4ad2-a311-0ea8df4850f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1a94b3-bdef-4fc2-8bf6-9a6fdc786a71",
        "cursor": {
          "ref": "2acfa961-00d5-4797-b6ca-6fbd4fca34e1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "853a892d-b0e4-425a-991a-9e8b7ea13b27"
        },
        "item": {
          "id": "4e1a94b3-bdef-4fc2-8bf6-9a6fdc786a71",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d999ad0e-ef1e-4129-a7bb-9b472a4a7202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27d9782-2fa1-47db-894f-2828fcfe5c7b",
        "cursor": {
          "ref": "83e2a29e-ab9c-4f66-b14f-8c4772e99d99",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "712be166-6089-4a52-9bfc-d8adb092f149"
        },
        "item": {
          "id": "a27d9782-2fa1-47db-894f-2828fcfe5c7b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3d84ba74-9361-41e7-a6f3-f1a948cd988e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea858e3-466e-4b0d-b694-feb8de481dfc",
        "cursor": {
          "ref": "948b1118-3ea9-424f-a2f3-bb79a662b1c1",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4696cf9c-0702-4d51-ba31-4592131d1c1c"
        },
        "item": {
          "id": "0ea858e3-466e-4b0d-b694-feb8de481dfc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "84708f46-064d-485b-9002-195100dd102a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08df4e3e-d7fc-475c-9b0d-ac1e6128f99b",
        "cursor": {
          "ref": "e48c8b42-d56f-447c-b54b-e661321c7805",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5753be54-b1e5-45e8-b8a7-9c5be2767424"
        },
        "item": {
          "id": "08df4e3e-d7fc-475c-9b0d-ac1e6128f99b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "059b97cf-93df-4f38-b173-90a7a344da4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae25eeda-6def-4a68-8c09-3b0546cfc172",
        "cursor": {
          "ref": "d8fd7241-c332-4b18-b029-e549e8b14137",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1c306f1d-7a87-492b-9d17-2aa1b2f05bda"
        },
        "item": {
          "id": "ae25eeda-6def-4a68-8c09-3b0546cfc172",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "10f0bc42-b44c-417c-ad3c-ea69260e030a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030e258f-4fda-4649-a7f8-2ed354977949",
        "cursor": {
          "ref": "258a475b-d294-45d3-bddd-db2570ece3f6",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a5910a43-5fd1-4ac5-b047-95a07090c697"
        },
        "item": {
          "id": "030e258f-4fda-4649-a7f8-2ed354977949",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fd4b50a3-05ec-4f3a-932c-057a4765a671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0be835-e328-48eb-9b7d-22ce145d2bc7",
        "cursor": {
          "ref": "f01082a5-c083-4060-9bf9-3888067d3cfa",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e4bb87a3-8890-4cbb-823b-000d6a73b4be"
        },
        "item": {
          "id": "5b0be835-e328-48eb-9b7d-22ce145d2bc7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b91380bc-3ed9-48fd-b195-2951ee3c7a03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7637428e-6e0c-4dea-98b4-b28d54afc4ac",
        "cursor": {
          "ref": "1936b449-a43e-4ef6-a8d3-2668bbc3a138",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ac35540e-46df-4887-8cb9-545dfff351c5"
        },
        "item": {
          "id": "7637428e-6e0c-4dea-98b4-b28d54afc4ac",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "96310175-a8a7-45f5-9004-bb776ac09a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388f7c11-80c7-4d35-9376-e671b598c7bd",
        "cursor": {
          "ref": "bb4d8f95-984b-4400-b990-636e6861ae0e",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "de84b5f1-d7c6-4338-8050-55380cf40a0d"
        },
        "item": {
          "id": "388f7c11-80c7-4d35-9376-e671b598c7bd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "aff809ee-1cf9-4d86-9db2-333f6c94878c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9353f2b3-ddaa-4cb1-a1ea-a3f977bb336b",
        "cursor": {
          "ref": "c86570a3-4c16-42c7-b44d-9c2a77c4a8e2",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a1d91c4c-4ed7-440a-8390-b055e1fe7ab8"
        },
        "item": {
          "id": "9353f2b3-ddaa-4cb1-a1ea-a3f977bb336b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2289ac05-4beb-408f-a582-537a8c3864ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e558d401-8348-4611-a671-150726d29a43",
        "cursor": {
          "ref": "27164cf8-1bac-49d8-ab16-31835b762304",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "67841d92-3872-4f7d-98e1-3bca334bf29e"
        },
        "item": {
          "id": "e558d401-8348-4611-a671-150726d29a43",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0b673e99-32ae-4b8b-916c-61833174b710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4950315-641d-4ebb-9a81-4019cda10c09",
        "cursor": {
          "ref": "c11c3755-b00b-44d3-b296-ee6036cee903",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d7128202-ad3b-49d3-b046-27e80144ed60"
        },
        "item": {
          "id": "f4950315-641d-4ebb-9a81-4019cda10c09",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "993d1e0b-660a-4255-9cd4-2ad5fc9b9369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe5a8a1-0a38-482b-b6f6-12f43a3477f4",
        "cursor": {
          "ref": "17541026-b307-44ef-ae81-98cd3377e5da",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "792c8d7a-1004-493c-b524-b195dc104322"
        },
        "item": {
          "id": "cbe5a8a1-0a38-482b-b6f6-12f43a3477f4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fd00eaf5-558d-4772-9290-addcf36fb438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d286b42-d4bc-4be9-aff3-10d074f44b78",
        "cursor": {
          "ref": "8332a310-1689-4121-8195-01f7f7f9c60e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2e5d6433-80ee-4f08-a66e-b37d2d7aaa32"
        },
        "item": {
          "id": "2d286b42-d4bc-4be9-aff3-10d074f44b78",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "081515b8-191e-4e89-910b-21defb3626e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6eba19-4869-48b8-aaf5-4db1a21c5b4a",
        "cursor": {
          "ref": "095ca622-30c3-4c19-8c2c-e078c920046e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "08b33dca-ee14-4807-93c0-dd208f0bf285"
        },
        "item": {
          "id": "7b6eba19-4869-48b8-aaf5-4db1a21c5b4a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2b61e7b6-07be-4a4a-bb7a-5f00866834b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58ba2a5-5185-4657-af92-4134feb4caf5",
        "cursor": {
          "ref": "2ea73fc6-da11-464f-9af9-0be0721cad26",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1ce08564-2a2e-4825-a6e7-5cb2697deb85"
        },
        "item": {
          "id": "d58ba2a5-5185-4657-af92-4134feb4caf5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "68c2ed7d-097a-4377-b3fa-88ab4e2a0252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0524555-9837-4843-81fe-ae9a362601ef",
        "cursor": {
          "ref": "c7fd7788-9fb7-46f6-95d8-fe8411391f9f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e61f40e0-a4f9-4844-a52a-7a0050bf2e69"
        },
        "item": {
          "id": "b0524555-9837-4843-81fe-ae9a362601ef",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "13e50c8e-f2c8-4c00-abcc-cf55a3b0d749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81e714b-572c-4723-b109-2bfb2597f0ed",
        "cursor": {
          "ref": "7def2e99-ec8c-4227-b065-1ef225424015",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2e33707e-c988-48fd-a119-bbe4effd99ba"
        },
        "item": {
          "id": "d81e714b-572c-4723-b109-2bfb2597f0ed",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5679b90d-b0b9-4052-a954-0de7a27ca544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001cd7e6-9f5b-415b-ab7f-ff3df675971c",
        "cursor": {
          "ref": "7ca3b870-4eea-424b-a642-8bc7cb50b244",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b288b392-7132-4d94-812c-07bdfbe59828"
        },
        "item": {
          "id": "001cd7e6-9f5b-415b-ab7f-ff3df675971c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "724e61a8-957c-47e4-8777-b1297c5317dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0235f0e1-fe39-43cb-b74d-08539ccb6f7e",
        "cursor": {
          "ref": "9179a949-d1b4-43b1-8253-2a1ff08c2508",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ab623322-2c4c-4431-9cf4-9c67b1c1ee97"
        },
        "item": {
          "id": "0235f0e1-fe39-43cb-b74d-08539ccb6f7e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e3f552c8-f252-4e8d-9c66-a5b541c2ec6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af93aaa-f83f-499a-863b-1307f49e574c",
        "cursor": {
          "ref": "b81a8c7a-c815-496f-a5d8-e97f29cbb52a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3c921492-e569-4dab-b99b-2e374e4a1a5b"
        },
        "item": {
          "id": "9af93aaa-f83f-499a-863b-1307f49e574c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c3334531-cf92-419b-ae9e-749512ba5fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72e7606-0942-480b-906b-0d6471ea6d16",
        "cursor": {
          "ref": "50dfa4d2-1846-404f-8c6a-34b1a19d2d06",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c90ef5b3-d965-4126-be24-606cbf7c3ee1"
        },
        "item": {
          "id": "d72e7606-0942-480b-906b-0d6471ea6d16",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4f462e86-8d00-4ad4-9235-8c527b2511d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52aef5d-0b9d-43fc-9eb0-b087e578b3d7",
        "cursor": {
          "ref": "d2d40b11-6c4c-49fb-b9c2-83dad453716c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "38718a3a-8125-4cc3-8dbf-56bb223b1795"
        },
        "item": {
          "id": "f52aef5d-0b9d-43fc-9eb0-b087e578b3d7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "21a76fb0-65ca-4e1f-98d3-bac0335c2d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69aad54-4226-465a-ad3c-5c6023967821",
        "cursor": {
          "ref": "68a09034-cb34-438b-9240-342370fb6dcd",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d84b5989-d5e8-466a-84ea-46cee7ba4c45"
        },
        "item": {
          "id": "f69aad54-4226-465a-ad3c-5c6023967821",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c8ae4b11-c7cc-44c1-8da9-934ac9bc7a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa1a54d-4c2a-4018-9c7e-1749fc3e984f",
        "cursor": {
          "ref": "c0bdc5d6-bbde-47e0-80d2-2e17031fdb00",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9fef21ad-f0d5-4f3d-8269-c4832191fcc5"
        },
        "item": {
          "id": "bfa1a54d-4c2a-4018-9c7e-1749fc3e984f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b9f3e9e2-4b23-406f-933c-55b0cc28c257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c241cbda-c922-4733-a412-8a31a3ca6fb8",
        "cursor": {
          "ref": "724eb0a4-8edf-402f-a0c7-a4f49385e6a6",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "59050aab-0429-422b-9df0-00a242532ead"
        },
        "item": {
          "id": "c241cbda-c922-4733-a412-8a31a3ca6fb8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "18bc18b5-066c-4d0e-a1c8-849d6aa84bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15883b9f-76e9-4b30-9ebb-613121b42fbd",
        "cursor": {
          "ref": "d9301ece-6eec-4217-94f6-1be1460ba5be",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c29527d7-55d7-4e33-8a80-a6f1fea7bbc9"
        },
        "item": {
          "id": "15883b9f-76e9-4b30-9ebb-613121b42fbd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "87a3d436-7845-4930-8d44-3031519430ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a936c1-5dc8-4b0f-b478-9d06b560150f",
        "cursor": {
          "ref": "2fa7e88f-eba9-4e15-9740-68f746053edc",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3295a05b-baab-4bc0-bee5-42312f89f66f"
        },
        "item": {
          "id": "c7a936c1-5dc8-4b0f-b478-9d06b560150f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "57c9e3ac-48b1-496c-9af3-662835cbfb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de02334b-4701-4720-8b73-e8507bd75745",
        "cursor": {
          "ref": "81a9f1c2-0587-4b6e-8469-f83ec7552a9b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e4663e31-9b63-4361-8fe3-3272a91f2c01"
        },
        "item": {
          "id": "de02334b-4701-4720-8b73-e8507bd75745",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d1d1e5ed-5d29-4dab-9e92-b153b63a7b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f478b533-f611-4f4e-a27d-b3a20a50bb8f",
        "cursor": {
          "ref": "6d7197f2-02cf-4975-a702-376720519bf4",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6bf3e7df-23ab-4532-95fc-9a941d3f5ca8"
        },
        "item": {
          "id": "f478b533-f611-4f4e-a27d-b3a20a50bb8f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "28361838-05b4-424e-99ab-a1271d33df18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b88194-f3ed-4bb9-b643-49ba16610eea",
        "cursor": {
          "ref": "e42d54d6-afbb-4fc2-9bd3-4280f7d32ba0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4ac9b0f5-7992-4175-bc06-81360a5c284f"
        },
        "item": {
          "id": "f2b88194-f3ed-4bb9-b643-49ba16610eea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "316ea885-69e0-4435-b98a-6f17b6edcd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674957a4-b390-451c-ab04-36bc6bc94564",
        "cursor": {
          "ref": "63462b5b-2bee-47ea-b10b-813c490808f6",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "52955729-20cb-4737-8107-5a8286f149a8"
        },
        "item": {
          "id": "674957a4-b390-451c-ab04-36bc6bc94564",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "47b88d3f-de86-4279-b1ed-04320df58fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4c06ba-7d19-4a4b-b22e-d7cb72175322",
        "cursor": {
          "ref": "9d3b20d7-81ca-4ca3-9112-29c179fe20de",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "083dec09-898a-40c4-a3ba-cc22350ef30e"
        },
        "item": {
          "id": "3d4c06ba-7d19-4a4b-b22e-d7cb72175322",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "27de886b-cb4f-4c9e-b1ea-dd0d12a1b070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53be8222-d060-417d-a220-929e0b83119f",
        "cursor": {
          "ref": "497bf61b-a38e-47fc-8f06-b4ca44a55b2f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "af722dcf-5191-41fd-98e4-5a18c4e70c96"
        },
        "item": {
          "id": "53be8222-d060-417d-a220-929e0b83119f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "251e41b2-16e2-4d1c-9320-e8c433c7aa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78be83e4-46c4-463a-995b-cb167f3c7728",
        "cursor": {
          "ref": "b62b2403-f1d5-4fd9-8265-81205b814945",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2a1ab612-0756-4592-84aa-6fd82871919e"
        },
        "item": {
          "id": "78be83e4-46c4-463a-995b-cb167f3c7728",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6a36b19a-2302-46eb-8c59-71baf3864051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0ab4ec-7b0a-4a34-8882-c3acc0a7051f",
        "cursor": {
          "ref": "8aedaf88-c9f7-4556-b038-c4d1ee8d1692",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "be31b70a-1ed2-4dbd-b5da-9c353efb87d6"
        },
        "item": {
          "id": "1e0ab4ec-7b0a-4a34-8882-c3acc0a7051f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f0749b9f-3556-4105-bb15-72ceacf82d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41392b1c-6bf8-4395-9aac-80d961ecd094",
        "cursor": {
          "ref": "2e61504d-a832-424a-ac6a-7f574ba66442",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b6110645-887f-43b8-a1e9-c82b03f5cd80"
        },
        "item": {
          "id": "41392b1c-6bf8-4395-9aac-80d961ecd094",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4797e9a3-2022-49b7-8d01-cc2f01dee280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe71614-cb3e-49b5-8d1b-6d00e04440a0",
        "cursor": {
          "ref": "353abd61-5eb4-4019-bf0a-d7cdffe24ff1",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f8ba01ca-acad-47da-9441-d96cb86cd4cf"
        },
        "item": {
          "id": "abe71614-cb3e-49b5-8d1b-6d00e04440a0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1773a9c0-bedd-4635-9f78-f5a25877b0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fa01d8-f719-4375-8f38-3a5ebbf8d320",
        "cursor": {
          "ref": "4768283a-a238-478e-9ff4-0848a88ccab9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1df88e67-15d5-4c8e-9b75-583e668e63d4"
        },
        "item": {
          "id": "46fa01d8-f719-4375-8f38-3a5ebbf8d320",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f591cad2-cfaf-4a2a-8e3a-6155b7764ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098e7e21-c00c-40d2-959c-58e3bd6e5ac5",
        "cursor": {
          "ref": "45343af5-7f32-4167-900b-eb66752fd8b8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "421cb4b4-050d-4fae-8ca2-79035f79a46a"
        },
        "item": {
          "id": "098e7e21-c00c-40d2-959c-58e3bd6e5ac5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "64cb31b2-5790-4846-8c2e-3e83093dce63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25bc95f-ea93-44ad-977b-00d8a3bba1f7",
        "cursor": {
          "ref": "7803c87a-52ae-413f-8c00-1af7e54f4f9f",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b6f5b9ac-1789-4c82-8012-c51421f3d156"
        },
        "item": {
          "id": "a25bc95f-ea93-44ad-977b-00d8a3bba1f7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fc16f135-5a40-486e-a29a-927c69da6c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a17e5e-5647-41d4-aaf6-b7e99884d929",
        "cursor": {
          "ref": "c0674040-a7a3-49ff-b07b-d4a5a0f4a6b1",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "27b6062a-72d1-4b03-b289-ec403efc8536"
        },
        "item": {
          "id": "43a17e5e-5647-41d4-aaf6-b7e99884d929",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5864ebc2-503f-4cdd-8eb2-08f19bcc602b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a69bb4-5392-477a-993a-136eba2a5348",
        "cursor": {
          "ref": "8a46822a-f602-4292-a9b3-5abf1462909a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "98c599f8-41aa-4c09-b7bf-8ff53701d1ae"
        },
        "item": {
          "id": "f2a69bb4-5392-477a-993a-136eba2a5348",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "da81e993-56fe-416c-8a4d-85d9943090bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b8f074-345b-471b-8d63-bf9970f68bd8",
        "cursor": {
          "ref": "0fa451e8-a98f-4bd4-bd3a-cd6b0ec18bb3",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5b4aca49-7bf8-4a28-8d18-ea566ef08a70"
        },
        "item": {
          "id": "88b8f074-345b-471b-8d63-bf9970f68bd8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3a3e8d8d-1b0c-4441-9359-5e3273020456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0669420a-6783-4cce-99e5-8123ca561a25",
        "cursor": {
          "ref": "26564465-4559-456d-86ea-3f3bbbf245bd",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "81f87e1c-b1d0-45ca-8536-1ecb78294a26"
        },
        "item": {
          "id": "0669420a-6783-4cce-99e5-8123ca561a25",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1337ec9c-7c1a-4565-ada7-8c3646062069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072398e7-bce8-4c08-80f7-625997b3c5e4",
        "cursor": {
          "ref": "df8dd149-d1a4-4c96-bfc0-6544062223b5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f1a40d53-e8be-47b4-8166-6b255386d1b5"
        },
        "item": {
          "id": "072398e7-bce8-4c08-80f7-625997b3c5e4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8770ea2d-234c-455f-a847-5dfe8dcbf303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b512116-155f-4aaf-842d-e59982e00397",
        "cursor": {
          "ref": "d3b0e936-a379-480c-8ebf-46976a57577a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "28604a93-728a-42c2-a600-d968d8da02ef"
        },
        "item": {
          "id": "9b512116-155f-4aaf-842d-e59982e00397",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aa29bd92-f40a-4dd8-b850-1a8f2b0606aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ccd4d6-b80f-4015-8e1f-db745532f2b5",
        "cursor": {
          "ref": "e2c50873-3d81-4308-9404-8479663032f8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "207ad3a4-59e8-4fe1-8e94-073e037b50ed"
        },
        "item": {
          "id": "c3ccd4d6-b80f-4015-8e1f-db745532f2b5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "34239aa6-2eb2-4209-907b-10d12d13deee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece9afa9-2fcf-4b87-9113-9f4894e513ea",
        "cursor": {
          "ref": "42c59cd7-bb05-48b8-9290-e0394ebc19b6",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7728e00e-d71b-471e-9b44-bc31d298f355"
        },
        "item": {
          "id": "ece9afa9-2fcf-4b87-9113-9f4894e513ea",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d9c698a4-d876-4ca4-8ee4-ca3f17f2345d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc401bae-67ba-4dad-9d17-c61a9b676ac5",
        "cursor": {
          "ref": "a5f96a17-6dc5-43ba-84a2-2d6395016be3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e089b9e6-d3b1-4ed5-a121-a1ec6d64e448"
        },
        "item": {
          "id": "cc401bae-67ba-4dad-9d17-c61a9b676ac5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6e577180-d70e-4453-a4a4-1c8505bea63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93385853-b80c-4a21-9261-dfcaea21069c",
        "cursor": {
          "ref": "0fbf884f-df40-4f2e-ae13-8f71409540c3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2f298b43-27d0-4fa7-8f84-0304ee17e026"
        },
        "item": {
          "id": "93385853-b80c-4a21-9261-dfcaea21069c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ed8d7a95-e062-4074-94f2-8597183cdc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd09e361-235d-4431-8623-8526e5b21e68",
        "cursor": {
          "ref": "aa36979d-690a-428b-afb7-c4925758bea7",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dd526bca-7804-47a6-8393-bf2f97c1e7ef"
        },
        "item": {
          "id": "cd09e361-235d-4431-8623-8526e5b21e68",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cf634dae-e4de-4d71-be18-43666b1062af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fa7a97-c2d2-4c6f-925b-54724cca6d7c",
        "cursor": {
          "ref": "dbbdf4e5-0b97-44d9-9b43-7b4a594bdc6e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "91e9f4d4-dede-488f-a76b-cee2b9326e64"
        },
        "item": {
          "id": "c3fa7a97-c2d2-4c6f-925b-54724cca6d7c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "eab52ae7-7767-49d1-aab3-b455be90a0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e76a0bb-2ff5-4697-b31a-32ffc7ec5cd3",
        "cursor": {
          "ref": "d8c641d0-a779-4436-9aca-67bf9f5588fe",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "704fe57d-0de0-4741-a40f-6464a6b62bbe"
        },
        "item": {
          "id": "8e76a0bb-2ff5-4697-b31a-32ffc7ec5cd3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5f0a7503-e67e-4ff6-8b7f-ff3789f86496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c445694-588c-4f22-8cdd-efc24f0232fa",
        "cursor": {
          "ref": "f1e1609d-f40d-4133-8601-a21b4b86c915",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1eb70a8e-4f86-4988-8514-e664a89d20bd"
        },
        "item": {
          "id": "7c445694-588c-4f22-8cdd-efc24f0232fa",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3dc438bc-7724-4c5b-a4d9-5ec99ac140e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a936d670-c4c2-4b43-9fd9-fb86cbf62bdf",
        "cursor": {
          "ref": "36193fda-e5b8-4ad4-92e2-2c5f74c9c0dc",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f78fcdf5-0149-4963-985a-3f125190cc66"
        },
        "item": {
          "id": "a936d670-c4c2-4b43-9fd9-fb86cbf62bdf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "75a8c688-9c1b-4640-877f-ebc585131aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20fdd34-f0ef-4888-a385-64cbc3420c46",
        "cursor": {
          "ref": "147b6728-8b06-4e81-aca1-7002dc06cb7a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ac4d2125-d871-47f2-9416-25c47ee075b0"
        },
        "item": {
          "id": "e20fdd34-f0ef-4888-a385-64cbc3420c46",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cddefd9b-2a06-41fa-ad5b-7f56d088cb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63eed0c-d56f-440f-bd58-4af3d398c2bd",
        "cursor": {
          "ref": "2381ab58-6ef8-4792-9ac0-c166be18794d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0c276882-9c07-4633-8c91-39932c795dff"
        },
        "item": {
          "id": "e63eed0c-d56f-440f-bd58-4af3d398c2bd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d797d84d-88a2-492c-820f-681bddd8bb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019ec5cc-3444-4068-83d9-ed342fb9384f",
        "cursor": {
          "ref": "bed9b2e7-4c69-4373-a607-479cce3c2bdd",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b28d0768-c93e-4dee-84f9-f1bcebb3af7d"
        },
        "item": {
          "id": "019ec5cc-3444-4068-83d9-ed342fb9384f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0cdb1bc7-5110-4a17-9b9f-d7860013fd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ee7006-a200-4e65-8cda-2e0a43c9bf69",
        "cursor": {
          "ref": "e2211874-25dc-45d8-8c64-639bbec251ff",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "35fb49f8-27ec-404a-922f-c21cb6bb61f1"
        },
        "item": {
          "id": "e2ee7006-a200-4e65-8cda-2e0a43c9bf69",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d248e4f7-66be-4a64-8ba1-b0451dd03a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7f2f17-bbf0-4ee3-9798-f35159aac3ba",
        "cursor": {
          "ref": "bd233606-d49c-468c-980f-01fd97f7a481",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "09a57db4-88db-4964-ba62-c040ea893635"
        },
        "item": {
          "id": "fa7f2f17-bbf0-4ee3-9798-f35159aac3ba",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a0c5d26f-db6c-47f8-be41-9444eaf304c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865b63c7-a969-499f-8684-a4d36580a8b8",
        "cursor": {
          "ref": "b68bbc70-4b6b-4218-a500-133e9522deac",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1d30f268-71e4-4e86-8466-9c5bc5686bce"
        },
        "item": {
          "id": "865b63c7-a969-499f-8684-a4d36580a8b8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "42393faf-9694-4046-9838-121812cc6c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597e6522-b14d-47a9-b486-d2d7b4122129",
        "cursor": {
          "ref": "c8d05760-118c-492d-a607-95cbb3aa5bf9",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3c45156c-2c2d-4b29-8b6a-04b6abbd153d"
        },
        "item": {
          "id": "597e6522-b14d-47a9-b486-d2d7b4122129",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d8d6fff1-f10d-4181-8316-0b62b24d1697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178492e1-2b87-4c35-8ff4-8d2a1eb872a9",
        "cursor": {
          "ref": "2aa64e47-ec7b-4fb4-b872-5f3451f4fb3f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "30e8a513-312d-457b-bc2e-b201c2f79a76"
        },
        "item": {
          "id": "178492e1-2b87-4c35-8ff4-8d2a1eb872a9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "73713657-6af2-4b6e-b435-58f4c30d4f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6298835-4903-466d-8da3-c0c80c654ed5",
        "cursor": {
          "ref": "4dd13b8b-8e2c-47e7-90c2-e8ad01c7a14c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7e88f088-7c2f-4968-b912-f15f1adf2a68"
        },
        "item": {
          "id": "d6298835-4903-466d-8da3-c0c80c654ed5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c1d0bde3-fd61-460b-bc3f-9fd09ae98e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad6aafb-3471-41c5-a140-d1ff41251fa8",
        "cursor": {
          "ref": "9ebe5a42-2459-4c25-9134-4dfb95286430",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3c08ad68-1fcf-4e69-8134-1db99f8abaca"
        },
        "item": {
          "id": "0ad6aafb-3471-41c5-a140-d1ff41251fa8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "740e2a5c-ae81-4aef-94b4-90f19342b1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a17f141-84b1-4154-9803-f656cde56508",
        "cursor": {
          "ref": "100c34c7-1513-44e7-8b71-b654d71c9de5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8a1ecd86-cbdb-4983-803b-578206ae5e92"
        },
        "item": {
          "id": "2a17f141-84b1-4154-9803-f656cde56508",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e56f49ff-5eea-4629-a5f4-3c12e39f8741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d36dd8b-bad3-4389-b4a2-61d651401892",
        "cursor": {
          "ref": "6c767803-2870-429a-b51b-42130784b7b5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "75a94d60-13ac-472e-b3ab-07ee0adf7ed4"
        },
        "item": {
          "id": "3d36dd8b-bad3-4389-b4a2-61d651401892",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "00680867-de9c-40dc-9ba2-9124956e1bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77363bb1-8d40-47da-95b1-7589acd91fd0",
        "cursor": {
          "ref": "eef89667-25da-46ee-8ed3-5f2288a0d3b5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c5dee00b-79ea-4303-ac27-8907707c5729"
        },
        "item": {
          "id": "77363bb1-8d40-47da-95b1-7589acd91fd0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "408b9e3b-eee5-4568-88a7-629ce1fd9a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479b05da-11ce-47cf-8231-676c1f8cf329",
        "cursor": {
          "ref": "0de5a466-b41e-4130-9980-423ef8177974",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d80fc23b-37b3-4c9c-957e-b739ad70064d"
        },
        "item": {
          "id": "479b05da-11ce-47cf-8231-676c1f8cf329",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a2a4b8a7-e9fc-42af-b3dd-81042c898f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0af7cb8-5d21-426c-ab84-043df4c58f37",
        "cursor": {
          "ref": "3d3a3933-d8a4-4fc4-9478-3b1da90308e9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e16b545b-6f67-44e6-bc35-40092510cb48"
        },
        "item": {
          "id": "e0af7cb8-5d21-426c-ab84-043df4c58f37",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5d049952-d04c-4407-8ceb-dcc81d89159f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751b721f-b1fe-4bff-8d63-a8059a68ca0a",
        "cursor": {
          "ref": "2a803892-af29-4001-90e9-922c58b059f1",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "daad2e4b-5bde-4c2e-9324-0d099685b961"
        },
        "item": {
          "id": "751b721f-b1fe-4bff-8d63-a8059a68ca0a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c08e4d19-3b4b-4702-b3f0-6996cfc24824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8252853-b065-4bae-b26b-c43673230e3d",
        "cursor": {
          "ref": "bb74969f-b451-4f29-8018-d532cb5e3c88",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "084bb912-36c7-4666-9f0a-b421b30ece90"
        },
        "item": {
          "id": "d8252853-b065-4bae-b26b-c43673230e3d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "57c0de1a-2d22-4a53-8527-e5e054bb90fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf4b744-6700-42ae-928d-12455693ce47",
        "cursor": {
          "ref": "299ac255-1197-49bd-b100-9837e5b2800d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a786a769-267b-4381-a66e-832ea339d13b"
        },
        "item": {
          "id": "2cf4b744-6700-42ae-928d-12455693ce47",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8a79abbe-2028-4975-bc3a-190d4d13957e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7ede6e-e55f-43d4-bf9f-6af79ee984c4",
        "cursor": {
          "ref": "8b441a54-a5ac-49c3-a2e9-b700a6e988b3",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f13ba072-7ddd-4c6b-9bde-fe49fcaaac24"
        },
        "item": {
          "id": "5a7ede6e-e55f-43d4-bf9f-6af79ee984c4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "30e192d2-3b28-4e58-bce7-3fdb0ffaa554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcfe650-f603-4417-8c67-78f08d770c13",
        "cursor": {
          "ref": "9e65aaa1-6b89-4367-b4f2-af0e3d05e2e4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1202e239-f410-485b-8044-cf83f4c69daa"
        },
        "item": {
          "id": "bfcfe650-f603-4417-8c67-78f08d770c13",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2dcb54be-39ce-412c-9060-8d931a8d6a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59cc41d-3009-422f-ad73-ebe3e8323d3e",
        "cursor": {
          "ref": "e34de483-0ef1-4741-901e-9166849994a4",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4a21de46-4424-4d2c-bc75-6fabd422967f"
        },
        "item": {
          "id": "c59cc41d-3009-422f-ad73-ebe3e8323d3e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6949c137-7053-4f7f-8c50-3d651ac987e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659f1859-29ac-4a35-b69e-3f3137b7b86d",
        "cursor": {
          "ref": "2fa8ec81-d0fe-46d6-a129-32124cf69604",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ee675507-3685-40e3-b8bb-6e0a9e592e1d"
        },
        "item": {
          "id": "659f1859-29ac-4a35-b69e-3f3137b7b86d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6c585fc6-61b2-496a-9e44-848ee999449a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62f32d2-2a25-4ce4-b553-2868477d0ae9",
        "cursor": {
          "ref": "b4ef7bde-08c0-454f-b1f4-ed4114fe2393",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "19c08406-e4c8-4e4e-bbde-90845df4a67d"
        },
        "item": {
          "id": "c62f32d2-2a25-4ce4-b553-2868477d0ae9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b626ced2-bd29-4dcc-a1e3-a5bff986ff1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff06d3d2-9949-462a-bdb0-838e7b5d8083",
        "cursor": {
          "ref": "648c20c0-3c0f-41b4-b24f-34360d588ec5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2d4d17c6-2f30-4ef3-80ba-0678f0d81ab5"
        },
        "item": {
          "id": "ff06d3d2-9949-462a-bdb0-838e7b5d8083",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "79713003-05ff-4d60-9b6b-8c9598816d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b52e92-6380-43f2-852d-67193b744e80",
        "cursor": {
          "ref": "498d94b3-9907-47ab-8b7b-5bec4c7530b6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "530196a9-b477-491b-9f4a-c128cc22c963"
        },
        "item": {
          "id": "96b52e92-6380-43f2-852d-67193b744e80",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3d2e07ad-3968-4bb3-add4-f54b3947c568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d2b922-721c-4092-9220-175b92881faf",
        "cursor": {
          "ref": "996a3c0c-ad6a-4257-8de1-d03e2aef372e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c2d63ff9-50c1-40f7-bc26-f9ac3cd9f2ee"
        },
        "item": {
          "id": "59d2b922-721c-4092-9220-175b92881faf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "26a90628-756b-4ae2-a682-19888d9dcfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8182a226-9d25-4c9b-9838-9100494cd026",
        "cursor": {
          "ref": "d2e16382-b26a-4dfb-b0f6-5deea1135355",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bb20036c-f738-4e2b-89ba-80d21a8e3e7d"
        },
        "item": {
          "id": "8182a226-9d25-4c9b-9838-9100494cd026",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "14786eac-f5bb-4ad1-8b6f-500018b34ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fa5851-4680-45e3-a8d2-449c80a1d683",
        "cursor": {
          "ref": "3fdc50de-1c45-433e-a66f-ecf57e5ae1da",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6604a788-fe41-4d5d-b9b7-e5a0d323c06d"
        },
        "item": {
          "id": "27fa5851-4680-45e3-a8d2-449c80a1d683",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9a2fa090-ad37-410c-9e0e-7cafc5a40acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2723c879-1206-4413-958d-3044125220e7",
        "cursor": {
          "ref": "8d015dc1-486a-4e65-941b-1149615186a3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f7aae112-4dc1-4d20-9487-b529745bb8e4"
        },
        "item": {
          "id": "2723c879-1206-4413-958d-3044125220e7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9f687b3b-ec8c-41fa-97e0-dae1c0b83d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7acfc1c-b87e-46bc-a970-099936a6cd06",
        "cursor": {
          "ref": "78d905cf-ab0c-44d0-be7c-6d14a950578c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b5f729a9-09ca-4972-a021-d86374e561f6"
        },
        "item": {
          "id": "d7acfc1c-b87e-46bc-a970-099936a6cd06",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9559a8cd-862c-473a-84ba-44cabe4e4831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b629fd4c-755d-49f2-a679-cf4dfba2b736",
        "cursor": {
          "ref": "c5a63fa0-af98-4d3a-947d-ac11fa80733e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1e2e8564-45e1-44f9-8188-dfba30bcd57c"
        },
        "item": {
          "id": "b629fd4c-755d-49f2-a679-cf4dfba2b736",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e3e367c7-5a8b-4a39-8980-393eed148f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073270e5-bd40-49a1-b058-17e8011f9d61",
        "cursor": {
          "ref": "2769eeee-401d-4d3e-89bf-c5c9e7eaae14",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "09710217-cfdc-4bac-adb8-cc713f930225"
        },
        "item": {
          "id": "073270e5-bd40-49a1-b058-17e8011f9d61",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d8793995-b5b6-4e9a-a7d4-37470273712a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348f6c8d-bd63-41c5-8b48-0c6257553228",
        "cursor": {
          "ref": "b11dab7a-f1c6-4e68-834f-af4540835d94",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4794ed77-992c-4d4c-ad53-07b093eff574"
        },
        "item": {
          "id": "348f6c8d-bd63-41c5-8b48-0c6257553228",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6aee5ae4-92f7-4e9f-83fa-6e2bf7e34811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39677772-133c-463c-bd07-e558d8bf4898",
        "cursor": {
          "ref": "a0fcf3bb-2527-406b-90c3-ffe0f88b02c4",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d3bfad51-52bc-4d9b-b0ca-9ee3a9cdb2fc"
        },
        "item": {
          "id": "39677772-133c-463c-bd07-e558d8bf4898",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e0797c65-7017-4315-b36f-13675ed23e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c651053c-5841-4afe-a7cb-00dd93695ca3",
        "cursor": {
          "ref": "9a11cbf8-280d-4f9f-ab70-cf3de00bf473",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2d28a020-f90f-48a2-b2ea-82db7b20ca8d"
        },
        "item": {
          "id": "c651053c-5841-4afe-a7cb-00dd93695ca3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b48a3a3d-a551-4d68-afae-2da356443f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c3fa48-37b8-426a-bfea-6cf7556a15f4",
        "cursor": {
          "ref": "6470ee54-2392-49fc-b441-744a808244d3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b2789540-f7ba-4fa9-94ab-3dcfb8324720"
        },
        "item": {
          "id": "f8c3fa48-37b8-426a-bfea-6cf7556a15f4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bc012e21-1d7c-4ccc-928e-4f9ddc7af7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf323cb5-533c-45eb-826f-88eb687f1011",
        "cursor": {
          "ref": "45fdc31b-52c1-4cbd-9ea7-5dc20056200a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fad76117-7a49-4684-89f0-f2ab70dcab78"
        },
        "item": {
          "id": "cf323cb5-533c-45eb-826f-88eb687f1011",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eafc1dba-7378-4fbc-a9e7-b390c31fa3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45d466e-8fd6-430c-ae54-e2abcb4970f3",
        "cursor": {
          "ref": "129336d8-7cdf-481d-8304-2c17e362fc5e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8fe1bcc4-cc9f-4919-ade8-52c018306884"
        },
        "item": {
          "id": "e45d466e-8fd6-430c-ae54-e2abcb4970f3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "323cda25-2cf8-401f-b273-40479ce409b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8db579-7b43-403f-a926-28f737d8c846",
        "cursor": {
          "ref": "24897e38-79cc-4e5b-9e73-dc33bd8e35ac",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "971e1160-8fc1-47b1-8c76-1e6a501e7472"
        },
        "item": {
          "id": "ed8db579-7b43-403f-a926-28f737d8c846",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3304459d-b698-434c-971f-bbabc3249060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9ba7ec-3852-4831-a8d9-aa7d40c1a230",
        "cursor": {
          "ref": "fbb20955-bc80-4ff7-8b02-cafe23ecdb01",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ad035d09-0df3-4147-88eb-6443c4b071ff"
        },
        "item": {
          "id": "5c9ba7ec-3852-4831-a8d9-aa7d40c1a230",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9967e690-b5d5-4288-9435-a12c4018a23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5859fdae-1c4f-455a-b6e5-86c78f5defc4",
        "cursor": {
          "ref": "0a412f69-034d-4fbb-9df4-bd6160077722",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a93d6660-7dee-41b1-a81e-f26b6179b047"
        },
        "item": {
          "id": "5859fdae-1c4f-455a-b6e5-86c78f5defc4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9cd12603-17d4-4140-84b3-8ced9d13edc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea5cda0-a6ed-4c73-abee-d34f75188493",
        "cursor": {
          "ref": "14d32d36-d315-4148-867c-83c32f310799",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "28fee874-adb9-4fab-b894-4e38d53d2acf"
        },
        "item": {
          "id": "cea5cda0-a6ed-4c73-abee-d34f75188493",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "36e61510-71ff-43cd-a5ab-607a300c1644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839c82c7-886c-4305-8512-520fabd4450c",
        "cursor": {
          "ref": "aa0dc037-a917-482b-857c-2feeeefde5dc",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6e2c5f3f-64cd-4165-bb73-15c6facb471a"
        },
        "item": {
          "id": "839c82c7-886c-4305-8512-520fabd4450c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "febc90a6-fdc7-423d-bfaa-cf18509f52f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ed9fb2-bf79-49f0-a9d3-f55ce7720235",
        "cursor": {
          "ref": "c7eafa7c-df9c-4bb0-932b-2a566b0631b3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a13e8106-9f37-418f-b9ca-dbf8136a9cd0"
        },
        "item": {
          "id": "e8ed9fb2-bf79-49f0-a9d3-f55ce7720235",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cd0adb5e-cf5e-4a4b-bdc6-377ef75f6101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cd68fa-d28f-4e55-8ea6-0b5124c70c69",
        "cursor": {
          "ref": "55f8b75a-f443-4a3c-8572-47d38562e33d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "355770b9-fe23-4214-8de3-cff85b9e6670"
        },
        "item": {
          "id": "56cd68fa-d28f-4e55-8ea6-0b5124c70c69",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "52541437-7590-4dcb-9d7b-6e849d9048a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df0fbfb-eb81-4d7c-bd61-ec7bc0d2aa85",
        "cursor": {
          "ref": "00e2ebeb-5f41-4e73-ad7f-ca4dbc8c6550",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6f1904c8-0b3b-467b-9c97-83bd4ea63540"
        },
        "item": {
          "id": "4df0fbfb-eb81-4d7c-bd61-ec7bc0d2aa85",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c16a52f1-79ac-497c-a043-cf26d42c8b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7136a876-a44c-4c92-b1ff-e2773e4f73bd",
        "cursor": {
          "ref": "6e89aba8-5b4d-43ea-bdc1-40b0b47b0216",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "46edd813-80cd-4d4d-b247-53015d2f0b08"
        },
        "item": {
          "id": "7136a876-a44c-4c92-b1ff-e2773e4f73bd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f688cf5d-287d-487a-9d67-41d2fde01fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0c83f8-b84e-4daf-8e93-a637166e417c",
        "cursor": {
          "ref": "9316ea54-31d6-45ad-8cbf-d6e6f3d9d868",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6c0d2f69-b793-4999-896c-dd68c54d4cb1"
        },
        "item": {
          "id": "1c0c83f8-b84e-4daf-8e93-a637166e417c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3419171a-24e4-4b0c-acf3-560dc29e3021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc424f3a-71db-4b7a-8aa0-76c3a34948e5",
        "cursor": {
          "ref": "cd2eb015-8aab-4a7b-89ff-29fabaccf2c1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cda332fb-6dcc-488b-a655-1e4b254cdf58"
        },
        "item": {
          "id": "bc424f3a-71db-4b7a-8aa0-76c3a34948e5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "617b21d1-d33e-40b6-91f9-a933d80ba631",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18cdfa0-8f13-45ae-ba5c-979e38bc9256",
        "cursor": {
          "ref": "17a6993f-e61c-42fa-879e-3b93e896876d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c32aec08-6f6e-493b-a238-a24f53623d89"
        },
        "item": {
          "id": "e18cdfa0-8f13-45ae-ba5c-979e38bc9256",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ce9a670f-de40-4499-9e6d-73f55d0daefa",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cba5514-8340-4b3e-81c6-6033a937ed91",
        "cursor": {
          "ref": "8e6ed4e3-f28e-4a4e-b971-b5189044b6ef",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ff316d51-7dfe-45ad-8170-479083e22a69"
        },
        "item": {
          "id": "1cba5514-8340-4b3e-81c6-6033a937ed91",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6272660b-0570-4a21-8629-bc00d89f82aa",
          "status": "OK",
          "code": 200,
          "responseTime": 1445,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f661bf1f-4f3c-432d-9e6b-fc1e92e18f49",
        "cursor": {
          "ref": "48114020-bcbc-4681-a6d1-63f2bd4f16bc",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cc0e3e15-424f-4de3-af87-a306dda2af93"
        },
        "item": {
          "id": "f661bf1f-4f3c-432d-9e6b-fc1e92e18f49",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "19bb30b8-6aed-4363-81aa-dae49ee6380f",
          "status": "OK",
          "code": 200,
          "responseTime": 1598,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "325cfe36-9613-45ff-a423-204839711f01",
        "cursor": {
          "ref": "3dd6ad37-db13-4dca-9329-e37615632a47",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5c732315-850d-4745-927a-ceac143f8e40"
        },
        "item": {
          "id": "325cfe36-9613-45ff-a423-204839711f01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20d939b1-0562-44b9-974b-0a4bc64d7cf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325cfe36-9613-45ff-a423-204839711f01",
        "cursor": {
          "ref": "3dd6ad37-db13-4dca-9329-e37615632a47",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5c732315-850d-4745-927a-ceac143f8e40"
        },
        "item": {
          "id": "325cfe36-9613-45ff-a423-204839711f01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20d939b1-0562-44b9-974b-0a4bc64d7cf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee3c439-b701-49f5-ba83-226aae2746a9",
        "cursor": {
          "ref": "3d3730e8-008c-4a81-9f5c-7e19f2bdc013",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4d36d504-c4be-48fe-9f7b-95b9ee6624cf"
        },
        "item": {
          "id": "9ee3c439-b701-49f5-ba83-226aae2746a9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "11b82797-2553-4b10-9d88-e1cd54a2667e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa86a17-6a62-49ae-9e36-d868fe83466e",
        "cursor": {
          "ref": "cd4ef844-56e6-4378-80e7-c0c93afd18e7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "765060af-c120-48a4-92a0-6483be8d30b2"
        },
        "item": {
          "id": "2aa86a17-6a62-49ae-9e36-d868fe83466e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c65b2a5-e6fe-435e-96eb-d869742fd434",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}