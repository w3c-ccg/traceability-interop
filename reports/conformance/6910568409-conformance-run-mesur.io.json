{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "36450c99-c4ed-42fd-891e-9f1c3a99184d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "88bad013-faa0-4322-b91f-fb4ecd3ca185",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4e982aa-7f49-4c2c-bd8a-c969524bf0fe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1013cf34-b137-4fc5-b4de-e1dc057a7a70"
                }
              }
            ]
          },
          {
            "id": "89118441-e510-489d-9783-4ce077dc0dc7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d5565faf-84e0-4f30-a700-3b70f23fb2a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0fba1d80-7011-49c4-a47b-862459a37bbe"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5598dffc-53b1-4720-a79d-f85ad698e1e2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dcfdd72b-af74-41b1-bc7a-accb6ce23b94",
            "name": "Positive Testing",
            "item": [
              {
                "id": "069b6357-f60e-45f8-a609-fcfd77026606",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5846aa12-5af7-481f-8ad3-b2455f575108",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71ae68d9-61ca-4043-9bbd-566ef61feb27"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf4e0d52-ff10-4e96-855d-37c6a9479aee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdfb2b40-3821-4d3e-af56-c7a3f25af65e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bf320ec1-0f38-4e85-aa46-21b17c6bf90d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45892177-230a-4ceb-91b6-69ad3b9c8dcb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8a1ff56-3768-415a-9d65-334f7171adc3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "86a3081b-2ae5-4af7-ace5-4a990fcd301f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec87ec3d-fb99-481b-9dd8-1fff6ce6a9db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "679113c0-5abc-4217-935f-9e7c5e67faef"
            }
          }
        ]
      },
      {
        "id": "1d7f314d-d2b0-4c0c-9a97-b0e918719601",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cffc9f25-8fc7-4f97-ac2f-2257647b49d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "102f971c-ceae-4e10-b640-7a7beb24fa25",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd16b308-5960-4cad-8a2d-9fe96ec46884",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27228329-723f-4501-930b-5d0640318227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccc8648d-f1d9-4460-958a-08fe94cc9215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f06b73-5be1-4c83-8ccd-eb021d04918f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fc792f-c5fc-477f-87aa-5e31b5ec832b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98d1bbb9-2914-43df-9107-957a985ffd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9200c66-f390-4f86-9828-d08964d314ad",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c2a16b-b1e4-4097-b0ed-4fabf0b24efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5b694b2-9cd0-49fa-b37e-3932b13e95b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a45b8cf-0463-4e8b-a80f-817f46117c41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f26d5989-29bb-4ec1-8208-dd6ebf3d2c29",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a9c01c-9767-4600-9e9b-b88665333f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8204ee68-cd26-4488-ab23-56a538afb93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a80266a-90c6-48f1-98e7-3150c65eb7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af92128-58e2-4a9b-aad7-d3f2a100c5e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "56af5ace-0ab9-4e22-95ca-999c08d965c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "363ab5b4-c775-42d2-82b8-dc03e39aa54b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee8c2207-272e-4e3d-9d67-c3561c940560",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "78e3297e-9f74-4df3-948a-b7f79bb1b3f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4ce6d81-4672-4bca-8e84-dc008076f781",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "562c8df9-473a-4430-900b-5fa5120529ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2c7601b-2473-4bc1-b23f-a7fc281a8923",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9666ecb7-4c6b-4edb-b0bf-a6a5cc0c6699"
            }
          }
        ]
      },
      {
        "id": "2c2ac6f7-4aed-4d58-8e8b-f5e2b13a359d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "259f35f7-c094-4999-93c5-b84be91b6f9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "454f29a9-4bc7-41ac-ac1f-0d7bd4cf7173",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6ad5f44c-ce1c-44d7-b077-02fce8d613dc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741d2a44-5bea-4c23-a5e3-99c91132b916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4413a438-f49d-4c61-a9ce-1ccab901c6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a60ee23-5e71-4843-a96c-ddefa42549f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22e0b315-2b16-4538-9614-fafdf4b9fe07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1247f17-8afb-4882-b009-7b813bf3fdaa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa405d3-9b71-4a44-8e63-00893814d8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a62ccd-995b-464f-9684-883f012d4c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfb6504-c6f7-41f5-9077-20177b4252e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1accd0f-6125-4a4a-9d74-f6311b1672f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c371f8-c7db-46e1-8954-672b782263a3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9031f135-9f78-42b3-8692-4cfb25c1b569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351c47c0-7192-46c7-9742-0332d4f35400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1a75e6-1d54-453e-bcb7-a22b8d3b0978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2a62d34-05bd-485d-bc2b-6e9ee5c3a6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef18be04-e651-4022-a094-375344fde2fb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb05667-d524-4db5-b480-81b52b043792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382d9bdc-3f07-4a02-9965-63ffa988f31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4633e55b-aeb6-4354-a90f-16555f595d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab859dad-cffd-4ee7-bd3e-79956b360302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a95764-efc0-4da1-a2dd-59b570b21dda",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5580df09-88cf-4f82-9652-350e9c92d5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fb2013-64a3-4fe2-acb9-2523899e36f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbcd206-9043-485f-a055-717e39f73a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28a7d5e9-8aae-42e5-88da-7fb619aa0952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7bc17f-5d32-4bd3-8da8-065a8ed764a1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f53db03-6c20-4a94-99cc-e3cd966d7d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805f2de9-d680-40bf-a89f-666b715ccec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a84619-e456-4b1c-a1e4-c0aba8980681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a228711e-6744-45b4-9f89-0e26b5715c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a09e2ae-35de-4731-a792-0928bb1487fe",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083e6e0f-ce71-4055-9cc9-26ad9848b029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3114614d-f79d-4077-a82f-14906d8afa82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5add1f-0335-4b90-a6bf-35847c831f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a19803b6-cd66-43d9-b84c-470d278d87a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317878b3-a2ee-4b22-95ed-091b5604c424",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fe6f6e-55fd-40bc-b136-ee964e5f72b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c73f12-2132-4918-91bd-fd7b71f4c52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe87dd63-5a5f-4c3e-a568-99f500e0eeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "498f376d-7291-49e3-8f48-1429143a44ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba54790-2b48-4d31-ad23-1bdcfdba57f8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a8c266-fdad-4005-b5cf-474e99c99fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb31049c-8bd3-43c3-b952-d8226da8eb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840ccbfd-54b9-478c-994d-ee9b527e36c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe0016c3-0d40-41e1-b372-d89e6f93007d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9533823-aba7-4c36-b1f6-da337e5aaddb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d78e06-6cef-4a9f-b197-d80eaaf64477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc2273c-4354-44ea-871a-d0d436cd310e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f947fe0-4b20-47be-8ccd-198537dd5e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1145a39-2992-4a7b-b97a-9c4d26cbf5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f15423c-2a10-445d-af3c-f0341e99936a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8afd9c-32ce-4e4e-b1f7-fc6efe3bad91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ffffc0-dc9c-4e2a-8d56-aaed46d8c53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f506e200-b190-4c6a-a4eb-2f6dfcdfb265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ea7fdcb-487a-4775-b87e-e81e574f3253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111fa236-9120-41e2-93e7-14aedf3b3df1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f125e182-c921-4bc3-8254-74cbee8af0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f3d9d3-5aba-4dd5-bd32-3acd3f6e0ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b746ca4d-4ab5-42b8-94ed-65c3ea0c731b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0e2f6f5-9a64-44f6-b8bc-2118299d61fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b4d5a8-5f09-49e1-8ae5-67a58a0e5bb4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2135af-6375-4120-bc94-26fc2e86d0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e0da11-424d-4405-9d90-34fd2d51646e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7671a0b0-3a2d-4733-8e31-28fadcdbbe15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2aafe33b-e390-46c7-90b3-655d788db2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa6cf37-e156-4f07-894f-4dd92386e185",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1a5017-29aa-49cb-97ae-7dd69c6470bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a773eade-fe16-4158-b130-35c2f9a422cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c0e639-100e-47bb-b0ee-08f56841807d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38b37615-4a45-4433-9ca3-f1c9a1480ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a535c043-f1b9-4b74-b79e-72729f9e9cb2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f7627e-f735-414b-afb8-91f1876cc026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77647c0-4454-49b6-b20e-801e38f59f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4beae0-daba-4439-b935-f68b156172f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70492e76-aa4f-4dfe-bfa7-67c4b33971ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d9f565-eafd-418c-babe-94f593b4435d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06581479-d4fe-40fd-a31c-9c35102735d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef6856d-c474-4da0-a40f-fb1dd8431cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab3a830-5619-42fa-8177-52c61119ec04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33d17d49-bd31-4d96-bf75-f83a2993ce8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f00b043-5f06-48c8-8570-e10c23b1cdc3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9c288c-6c8b-40fc-838e-05ebebe205a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc2121c-2900-4808-83bd-ea5375d1572a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049b93b7-c065-4fcd-87b7-bd88791297e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "781d1a02-f72e-4985-9365-4bc9670b3db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb6bca9-bbcf-4771-854a-68ddcc56b737",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ddd5b6-c88e-4648-a33d-51a1febb9f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e47bb3-ef5b-48ea-a5bb-e2e16db353e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cb6eaf-f01b-466b-b094-720deeb8ed90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf6b465-7d58-49a1-8ca9-e8d7bd3212c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543b2f5a-ee8c-4567-9f8b-bfb272c77f4d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0412844-8535-4400-aca6-c4030b972004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a387cd96-f8d6-4d2c-9010-b38c2b5ee754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ecc67c-7154-4836-81f7-34f6bbe442f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8417c2d-206b-4bfe-a1be-313d5471d8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af41b51-219b-4bd8-979a-1b214dbc27e2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d9aa69-1c1f-4a92-9adf-4f885166c8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d268ab4e-e0b3-474c-9a04-88d027e9487e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e243f714-38ab-4db7-94e6-44ba44efc254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06973ee5-f2e3-4760-9a13-8e94e435993d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee4835f-e4fe-4ec2-a49a-b99f4435f7e0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dec503-a35a-445b-93e0-fb36608ff0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1722d3-f42e-4d29-ba8a-235a63627bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3a34b6-a62f-462a-8dc2-7c13e40a284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13458596-d152-4e73-9a77-2ef563634e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f11dec5-8b34-4c28-ba12-0ea56092b21c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b89b69-6af8-47ca-ba39-3ee0527e0c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474eedf1-758a-4331-bf7a-e7f359763c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab2f1eb-01e7-43f8-a343-5f93381a3c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4aa1a30-8216-43dc-9eed-0812f63ce42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615a4677-3e74-471a-8226-487419debc7b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33671b57-b95e-4bde-86a5-4d853bcb1f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff79bd1-564f-44a6-ae2f-f4e603701edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86f32ab-1514-45c3-bbbd-24ddb4f50305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f589ae0-084c-44ff-9865-a71c364d0191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64aaa22-bb47-4244-9a48-4b5a00654ad1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41e378b-3241-48a2-b116-8b7da6d2924f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68259bd-0f97-4cd7-9a11-3f8dc8f9167f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9190656c-7a68-4055-b7b4-cc0a2978eff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef35deb2-0dae-4ea6-a1d9-6c24fbbcb0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e088caf-5853-4f8e-b960-97093afe562a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d478cb6b-2f06-47da-88ef-64d86f012f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e8cbab-ff23-41bc-b1e5-b6c9bb5f6134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312f3fd7-8ae8-4044-a1c9-ea5aa0ed0410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c23c93c-c192-4d2f-9588-a340eec6ed28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe27bb7c-af2e-410d-aa90-f98fc6945ea1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f2d5d9-7472-4e2a-87da-a0df6a357de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce50316-dd77-4fa6-8d9f-4a09e0d8dbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3041e747-6d8f-45eb-ba15-e81870bd5837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ced377d-a26b-410e-a55e-2004f03a0116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a93027-ba3a-4def-8d6a-c8d00e4914b4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402b6ca7-4c3f-4624-8c63-b849dcad9c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847edcef-c173-4963-8cbb-3359c353a4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9571df74-f87b-43d4-8a24-b051d481ae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f57960-e9b8-4e3f-863f-1ccedafa62ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5a9a75-feaa-43bc-8730-c21ea9917d7e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5d3517-6fa7-40f7-b392-306de1d0d06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38dd37af-6d5d-47a1-9d16-3325ed9c047c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ad954b-5856-4dd9-8412-acd15c3d1aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "737d1bc8-37c6-4120-a8d8-844092395ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65e9c56-7892-4581-b926-940fd1d9404a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1c4912-1cf2-4cb1-aff8-9c74688419ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28da2758-de92-4440-b685-7d1a8c4c2a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710fb9cc-c32d-42f6-92b4-090e11d36ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56b93865-c8b6-478f-ae97-217c8ed5665d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8e2a6c-c5c8-4e0f-aa02-1657bc655da7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee08755f-45cb-424b-aadd-fb0135ef9767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7a097f-2252-40fc-b730-ad65ce3b55df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959a8845-dc69-4b61-9608-cf59b6e4bae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "043b271a-772a-480c-b0ff-11967a33fcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c0bf57-20b7-4a43-9517-6bf85db87173",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a381c9-cd27-4570-9b0c-cb9fdc06a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d9aef7-2b3f-4fe8-8f9b-39a47bc0a3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d9911b-2923-457e-99fe-7c8131a0b088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db070d26-01f7-4518-bab3-acd561f9151e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea7cb9c-7c17-4c35-a7b4-e9012d907e3d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8999bb3-2351-49e6-b97f-2c0accf71b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098714f6-9445-4dd6-9a5d-8dd504d457c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a889cb4f-413f-4aa9-9649-e6931123f04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa67f4a-c197-4be7-8438-39db4d68c14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fc77aa-127b-4b9b-8d91-9b29ea0e0cde",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd99139f-f029-4a5b-98b8-0a2a8f975734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8a1d63-ec2a-459f-8f64-45669aee6821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c8347b-bb47-4c85-88be-4badb7706da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "713c329c-a609-459a-8aa0-0d1164057c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4d30fa-94fd-4fdd-92b5-d9eeae0058f5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec63d31a-bcea-40cf-94f0-9b34d73b36df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1b6560-dba9-4278-9a35-5474620af51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e49aba-0803-465b-906f-d9f3bb61b6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24f2d4fe-cad3-43bd-86b3-2b869ec32552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade6f9c4-2164-45e5-bac5-056f27cf31d8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3a340e-54bf-4855-b015-bfa3cce8a5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816ea6f4-e5af-49c0-ab9d-ad2e3fbc3705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0548cd1b-e055-419c-85d8-557240447424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf0c18c-0acb-4010-8812-433928631fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b128c9ec-b6a6-46da-b04a-61dab682cf35",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972a8d0d-612a-4dde-a485-01bcda40cacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bf31cea-1870-474e-b8ed-569d40119688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7043e5e-6b33-4be0-9f75-7f27dc1c5903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3eaeb8cb-9611-4d96-9fdd-e53d734ac17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d206dc2-3bda-4b04-8368-191c60767c15",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e282b12-5c12-4cb6-a2ca-02a6b44fc000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31df71f1-01db-4361-996c-4acdd5866787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5026db-3b17-4e64-89c1-bce9130d5bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2bb6051-94c4-4b89-9e9b-d51c3df92299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7db6e39-dc11-409e-bd05-3b3ffafe067c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f28788b-4d62-4de3-b9c5-2a91b75cdbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be83aed2-26f8-4f57-a97a-4df72fba4730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18021e45-c692-46ea-84bd-05d36a3ca887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf3823e-f388-4bb9-9de6-8b7046f00bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37490288-d164-47fb-8b97-ee3f2bd4a613",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02679c1a-98b8-440f-b0b0-d753771e36e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495aba2e-608a-4cdd-a2aa-19d0a19ab89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd84b23e-48a3-4fca-836f-5ffc128db075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0230d6e-88e8-40d3-af8b-7b44da463c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bc6c65-a5f9-474d-9c2d-95abe2a6d026",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada50ffb-ffb7-4cf5-834a-7768c8f71233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b43ea2-cb6d-483f-9079-3a405a190838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72370e2-bef0-4ae9-ae83-2965c047cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4479db7-b9fe-4618-ae4e-8da11afdae9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4239b4a3-b780-42ec-8e05-7c6df0722a1c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a00bf97-15fd-404c-b4c2-4ad0f88fd9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542d4636-5ae2-454f-bb14-b89cf4e0f5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673ec92f-bf95-4a35-b043-defbb85f9fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b540c6df-bdc2-49ed-8066-8c3cb4fdc726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef97f836-6776-4a5a-bce1-2e0a431e1b22",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aac1ed2-2049-4e40-871b-53d5d80e7b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b0c809-44f6-4ec9-bf35-82eb194ec002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dddcfad-72f3-4d6a-9a41-3e1f860b31dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "72e2f473-a37b-4845-b8f2-42eeeb0ece40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870fc99a-bc23-4459-8fb9-8b191537b424",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1827fd9a-5b35-4032-82bc-ea13838c4d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e206182f-5263-417b-9172-17349d63ce9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3b3d3e-ead8-4da7-b03d-4276db06f73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2610ee0d-4eb5-44a3-97a3-ed4bb0f92b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efbcaab-a4db-4c8a-a257-e8e90dcef4b3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493a1c23-0a60-4e19-adaf-be0780255d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a858b6a0-fd65-42fe-8481-b3196cc676ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8a0d61-b91d-4388-ba7e-59858629c9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c60556-3c13-4950-8776-515e70aaf09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189f914c-d937-4ed2-adda-3737dff73a07",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744d8140-1d12-4813-9257-4da92e5e11a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dff0e5-6108-4812-a1a9-6a4a1a0f821c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840ba029-262f-4000-8397-4a6c7c52a2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe86d416-8dd8-49b2-8931-520295b41cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef82aab-9d9a-44a3-a9ed-0a8f23926c72",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b848eec-50f2-4929-9ae3-3b1c36e8e252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20467391-b03e-46df-b395-59d0d5ff5461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ec5a3b-e4e0-4c9f-8c84-bd803370d331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc4ba5d-24ba-48da-9bf5-afd465002489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce516243-a15c-4637-8520-2fa7fee7918a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2acd807-4c38-4794-97bd-8cb4316c76e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e0aeb6-81ef-4b2e-998d-14cc71a2ab27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e1d2f6-5d5f-4af8-a952-d16b65d60625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8957e2c1-c616-40ac-bcdc-b18692c7430c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f0bfde-2176-4b7a-92ed-7375e198c4a3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4953213-808e-4f62-a4a5-60f9e2001e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a4552d-2f77-4936-a566-3a05def013d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8364ac7b-b4d5-4de1-be68-d62ae274249f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66726f1c-16ab-48bc-b741-372d29a51ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d0e443-1991-4ccd-80f3-0a7658264638",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5d9516-faec-4aba-82a0-7a24ccee75af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82034eaa-ea81-45d0-9d1a-a141d96ad4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d335800-984b-4f8e-8d42-b2aa3aeb8446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfdea33-693b-46bb-8677-c58c9e47933b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894dc98f-70d6-4774-abe2-d9aac88b4543",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acf5454-cad9-4fdb-ad65-1d01b3119139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbdb9b2-8fcc-4e5e-8115-a37dd0ad8b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58aa01d2-1ff8-4c86-857d-ce8fe0fc56ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bda17e-6fbf-4aaa-b196-ce756aac132f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c04647-d8c9-412c-83e5-ea0c8950a989",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286ba14e-50b6-409c-a214-69a673e708f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5314432-a454-4993-9cbe-fe620a215103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63df8559-adef-40cf-8ace-b306c3ba73ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeca57e7-9dec-4301-8198-4bc8e6d704a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f866102d-a7fe-4f58-a18b-d2e9ebc75180",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847960ce-45b2-44b2-a5af-82a2dae1780e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb6437e-92cf-4f19-b316-6a6824181299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7252c7-49c9-409c-8c94-085195fd46b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bf0df2-a935-4dcb-b937-2555cf2164ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5007ba2f-b9a2-4da3-8302-8e55e7df4e7f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a8de07-ae08-4580-976a-9054140619b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eefbafe-90df-4b4d-9cb0-3c64857ff7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d572b2cc-978b-4ae9-ae00-935494911af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e599bdd-052e-4118-8d87-4ae18d8b28f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79bff31-e2a3-4222-9587-6d94dc9276c9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723b9904-8bea-44ba-8b0a-fc7861b09435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5614ae7c-0d1e-4bbf-a443-d0efbcf48956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcfffcc-6cd5-43e9-a00a-f411f2d5ebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c9749c-18ca-4426-9cdb-e758cfdd5ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737d0a47-4946-42e6-aea3-4098abaf2c00",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558cefc8-49da-41ff-9b4c-fe4d524e8f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f908d4f8-5db0-4413-9ea7-bf744b8094e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23028f5d-652c-4da3-9868-7161001ca986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceef2fb3-0c07-437c-b6c4-24e1b0fd7df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f36793-d3a1-4ae0-8400-88d43b1fe0a0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db9842e-1044-490c-b359-995d87149a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c187995c-8d34-4dc9-bbac-5936962d532e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf346c16-fd81-4c57-b3e7-044757797820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea72c15-a8e2-4dc8-8587-84311ed147b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b9f7fb-7811-4a44-9963-38f87f18affd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18bb524-4534-4e49-a3bf-2548cfd1da94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2f1bea-5d66-4b7c-aaa8-3ed016347bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d44373d-3ed5-48eb-ac85-d0732fff09da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d42d41f9-7f26-4126-8731-120e4bfbfaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e863e51-d4c2-4473-ba71-a46039d6f2e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e562ad7-6392-46ba-a7de-820d2484b383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3757ce4f-ec38-48be-bd71-a6fc9f5b17f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38948211-5957-4cc3-99c4-dc9fcb5958bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a9c30b-7fe6-42cb-a3bb-1d7216438914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b92cb08-0446-4f48-9f7c-345905a0f0e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b732f9e2-5cc4-4e9a-a733-a3d1e3974acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f280d0-839c-41eb-953a-4a8d98d5d407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d913ff-1757-4317-a2fd-5d3b557f2a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f99a35e0-0084-4824-808f-d7e6d1b4c7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3bc7d4-1891-4073-94a2-9925507a8c78",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0aa2ea-b4c8-4ae6-a432-60c7b9c88971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0ddacf-caf5-40fe-ae4f-3543b6dc8628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d053c68-3cce-41a7-8559-7b4c7efbccc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5d8a78-7c18-44a8-b545-254858f54081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a7a48f-f1ec-4cb5-bb32-f5efb53b2de4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a161e887-3fbe-489f-a663-5a3e9e3806a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962fe715-0d48-48be-a5ee-44deae656fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b511ed-6721-4f91-8753-4938c02ca268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fff7400-f068-4908-8fda-ea7aae6dd55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b744a1e5-92ed-43dd-8ebf-e4db3dfc0d2c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a368650-33fe-4348-b8b3-d61eed962655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3986c0c-7f44-46c7-ad66-2330a406f0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b039ac6a-2fb6-47c8-b318-3ca44f7b61b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "471ef86d-fae8-4c17-a691-7d966e379c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d770777-d2ef-4bac-8ca0-b9189c90c316",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4254f660-b923-42fb-9129-58ab33315d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffefbee5-e1fd-469b-8b77-90e76ab1c913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b0cb4e-0a0b-4dac-88fd-2b32f4e89e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc889bb-d564-44fd-a00b-a16f758ed116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4792e416-eb05-4684-80bf-97f73c119022",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dda2fa3-6ff0-45e3-b483-b022dab8e6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0193888f-8a11-476a-8530-22a182069f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35472747-633d-4770-918e-ddf6243841a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f39430d-fa52-4159-85e6-c47d2d06e841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f845d0-995c-4da7-9e51-e2101d768caa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c255b8-7c76-431a-b7f5-7dea0a24aa85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3708c8-1300-41aa-9826-cf9fb2b1335f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5793258b-78c1-4cdd-9d89-665c7fa7eb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df43883a-f9a1-4e09-8f0b-f2c618c9ec33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572519f3-6452-43ae-aded-8c9333217fb3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c3c354-adee-4816-abe4-64d88d4ba6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f224d6-3600-4f6d-9fee-aaf96d93bfcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb9adc2-e917-4eee-a834-3e6325fab24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3d5a64-ef37-461e-90ee-742fa80b2c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f0dbfe-0cac-489d-89bb-e4fd6ff587a9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ffd171-ae66-47ab-bf6b-39c424b31a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc1fa2a-bed7-483b-92ae-3545b0154bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d29549-2421-4bcc-8d97-aa82e44238cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5555360f-f8cd-412a-bca1-975117665b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff915ba8-0019-4995-acbf-9ecc45f06f76",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300a812c-bdda-480d-bce4-db900ea8c18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f922e432-61df-4c61-90ce-ddaba5cc2526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fec4bf-bb9e-48cf-9a09-23d5c9a75649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf6438f-82f0-43b9-aca5-88a8d2abd55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a345547c-9611-4222-ac26-e5cbd13799c5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ebd04c-d2e2-469d-9cfb-aa0b6e11ae65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48778d10-c5b8-4c22-840a-1143be390099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ada48e-e380-42ce-b7f5-593ceb98ced4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a144fb2-9fde-4e44-9efa-06147c250053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52261357-d384-40b9-bb1d-0de48737ffdc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13afcf6c-6f84-4fe5-8acd-a3aa1501423d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db53d6d4-d8d7-4612-a988-aaf848534e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2796ee3e-a806-45d7-bd7e-22231df90582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c08e09d-2a2b-45fd-9865-6cd477987988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3454cdcb-c4cc-4d6c-a11e-d354a779f43d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7852e467-fe7c-49d9-ac48-373381072a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeccb518-575d-4b9a-8e5d-27c8eb3ef9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61d42c8-46ed-484d-a2f8-29f5919bddba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dedae34-daad-4565-9bd6-98252f560684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575e95df-5d4f-44bf-ab5b-6865bf5ea0bb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28d7334-b1b6-4516-91f3-93b332f95e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4835fc5-c153-4c9b-93c9-42c5ff2c8cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58202314-e83e-4658-9c8e-7b00d6f35ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ded55a-de2c-458c-ba6a-132c66f3de63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f330fc6-1919-488a-9c9d-3eff91aef7d4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c8a718-55d6-4162-b910-bef2bde6bf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17583f57-2337-428f-a131-53b58197abcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe776453-a1f6-4d46-abe4-68efcedebc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e32e652a-6c52-4a77-9394-ec60af657cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a43c7e-73a7-49e7-b3fc-d3b5e9ef3148",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725c1f35-ec5a-4491-864d-1d5ebf63058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23486879-5a7f-40af-bf34-2bab642108b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88766d0a-b889-40d9-83a1-f0b98751712f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33bdf714-7a2f-438c-8b8b-2ed6c0060021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba604173-a291-44a1-b932-9e074e9b14bb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa46acb9-57bf-4321-8ead-8bd399978818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb0e7c8-99b1-4b91-ba86-911686515bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f649d722-32e1-41db-894c-3c5e7a58b1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "191a6807-f1b7-4f2c-9422-78c83263fc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b99d0fe-3c8d-476c-9af8-8e3e05f535f5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce20cbb-3651-470f-9c67-2d5d7622f684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6b0c00-d83a-4f28-85db-78736e959b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf5966e-16a9-4664-aeb1-bf1868229538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c0d51d-1e22-48fb-afc1-239f5d92e4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d646a105-ff61-4d02-818a-5e01828f0d86",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a1e800-c72e-4545-8bb2-ad177899d25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1e1eb2-5ded-4d1c-802a-7ceea5092156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc7cc13-c677-42b6-90b4-8a21f5ed34e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bd50ef-6842-4a39-a1b4-406724c3dbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff21fecf-b2b7-4110-96fb-84c3f254ecf6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf0a7c5-ea32-4286-9af9-97cba3602d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b642e945-745f-400b-895b-b716e18882e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6d1001-1d3a-48ba-9784-4448da6a4e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0192e46e-19ef-45c2-a9b6-87cabd1e9cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe040289-b9ba-41cb-8787-72da673ed6e6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f216a5-8b91-492d-ba39-9a088e378d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d54e53b-bcfa-45cc-8de5-f6960e6e2f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe373df6-9038-4376-bcca-95dc7fdc634a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4db1609-4665-4864-a421-7132659e7c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8d774f-58ea-4286-96df-de69055068b9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa28f8a9-9f8c-44a3-9fd8-7000a69d2407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fc1fb4-c630-47dd-b83e-d5fa4a6dbc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12094996-9b90-4aef-934a-67dc58f3c988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a523891d-836a-4917-acd5-bed62deef607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc6339f-c44b-4df4-bbf8-83579372e797",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb15d14e-71fd-4ecd-8b47-6975a43f3418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25da65d1-ab88-488d-b796-fa0089b540d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3565b4a4-b0eb-49fa-92f9-5f3a559f4c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1fa00b5-6d98-4589-86e7-5b1165c3d528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3767f128-ab3d-4906-b488-48301f741ce8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea45dde9-7b2a-4ebd-a578-8f8ff02b51d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2d6f9a-7230-461e-999e-9766a6b5bf23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a014bf5-e8c3-48a5-b1f2-47056f31cfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7dd2e5-d094-436e-aad7-9d8b26437296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c874b7f-260c-440b-97ee-db82ac622165",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfa9262-e8cc-4243-b693-c6f36fbf340d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2242fee9-244e-4af8-86cc-b63f75df7c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc23ef3-8bfb-4c8b-9485-0830ab90e6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c9c827-fcd1-43fe-8732-88161720661b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46788b4c-3fcb-4ebd-b1e5-37da40b17c12",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8aef2bc-75eb-4267-8c65-b03ba0f8ded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d63ca3c-3252-437d-855c-f192038d6b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c3517c-a4ca-4741-9b20-85e53c569d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65b62e99-907e-4e54-bc2e-96d6c6df898e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d429f7b9-ac2b-441e-8d77-d3c5b0ed395c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a43889d-6080-4a6c-9cd2-c140285f4586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf531773-6c65-4db9-a539-9c98237756b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd02b21-f22c-4f94-81b4-986da66944e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "030a10b3-b848-4a5a-bc2e-4c8c7384591f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d49446-739a-4eed-800e-058069251b7b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c250b5c-27b8-4744-b259-c8c56ee29fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5de516-0093-4f4b-9e95-64b4dd88a99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706af77e-de36-4c24-bfe7-89b4a0d24222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e24a725-1c24-4fc2-9653-9b8779e9c2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698ad272-63ff-4bec-89c4-32b6c7150c1c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7627bfb-418c-4717-89aa-49b2474baa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364d4c15-308f-43be-823f-87a46600f0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda02f66-a0a9-43e1-ae4c-3f96bd38b60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e9727c-8f32-4fe3-ab6c-f503fdee7ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aef093a-92b2-438e-a3b7-e50497a7cbd6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3dac02a-1833-4e93-8650-f056a5f95d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223de31b-f268-4933-b98e-d60dbf11e714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775d20b4-2758-4869-aa32-3a5435d10f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "60c052d0-2bdf-4a5c-8366-81b02c4c353d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8b9ba7-0b2b-48d7-87b0-042219c22aae",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da1f304-6fe5-49b5-98dd-3c6607b7cb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017e0f03-6c53-4b3b-84e5-a03934a31667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab3bccd-ab9d-4209-a088-f480245be20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1266b518-2353-459b-bb54-d32eaafe5f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04272577-eecf-4de1-b81a-a5eb29dc9638",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1442691-d666-40c5-926c-1cb63aa46c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88970c14-73c6-4bb9-8871-0273294c3208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6251648-fcfa-48c9-9c98-2d216f52f875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "923c6195-6b14-412a-9113-769ed84b42f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836672ce-496b-43f0-97d6-0a3bff95853c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf110c6-a28f-4b76-b5f2-ac7d06476bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c56d3a-ed42-4553-884d-2b97c5967e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcbbb85-45b0-41dc-afb5-b5ad464d0486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "05699e7a-6c97-41c4-be2e-90d3ed6fb593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110aeeaa-ae72-439f-8350-3aefd256d77d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bc9cd5-f827-4865-b949-d9da860cfa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b35a75f2-f829-4733-ae0c-6022d8d033ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b6e1d9-e1eb-4ea1-88e0-1c8cb608d903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73889775-334b-425e-a89d-51652c0aaef6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89c4bd48-480e-4209-992b-212de67a393e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1c55886-5ac6-4484-91c2-7045b16ebfb4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b856ca-3963-478c-8240-21e2943235e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10097045-194a-4f73-878f-cda16aeec5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab0ead0-dd24-4e88-adf5-90f04f2e4032",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e74a6345-789d-4af1-94a2-cdeb34935489"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "598dce8b-178e-4e04-acb1-2fb319916bcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fb99d81-41e4-49db-9f8b-c38029223842"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55bde2b4-2184-4adc-bcf5-3f41156ae29e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f18a458-71a9-4cbc-8a2a-5f62a20a5a24"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff966098-c210-4d56-9ddc-f97dfe4dede9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a40a483-a65c-41f9-a419-8c2c2f74fc23"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "141e0601-b1a7-4e4f-a311-295125a7d30a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "507b3009-3914-42b9-8425-7379d748f6c5"
                }
              }
            ]
          },
          {
            "id": "67fab92c-ced1-4c23-982e-588b70bfc1f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1808a695-f8c5-4655-bd9a-218bcbad5acb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "26b3400e-85c6-4966-9788-794cfc41ff5c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750a12d1-3540-4770-a0b3-1d73664cf9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f8cfc18b-dffa-451b-9915-ac8970b1986b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0183b25e-686b-4f19-a3f7-9af8db1bec7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a54d9a3-49b8-4abd-819f-cd0bc8e74e91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a0f3081-11d8-426b-95ac-51f5b73aba24",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2611e9e7-f411-4f7f-bf52-7d07e9db2d64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32b18f8a-e9da-47c8-b6b9-3d619645c167"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c92c992-51fb-4409-adbb-c0638ba8d45b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ca672c5-281d-48a9-82e9-a3d4f8711a0c"
                    }
                  }
                ]
              },
              {
                "id": "620a82d0-cdfc-4868-b465-b920db4fa5a5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c796521e-3cba-4e59-bec4-439cf72ab3e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f274203-a4e7-462c-93d0-7c2ea80efd02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c141d557-483c-4870-8217-2cda4899c95f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "087a9fca-6fb7-4bab-b9e7-3c111e37c479"
                    }
                  }
                ]
              },
              {
                "id": "47d9b550-fc77-4061-a13d-0aa93cde46e2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc00a3e6-66bb-4854-8c4e-8ee8b5e76607",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9197776e-271a-4656-8a84-5a26d4a4fb71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6c760a1-6b56-4094-8a0c-754f8ce15a4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "164acda5-f49b-429f-93e1-54bbcc07286a"
                    }
                  }
                ]
              },
              {
                "id": "ce9b44e4-2c74-4d7b-965e-ce49ce17b78b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0592750-e208-4985-8e63-19bed5cc1ada",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "395d9a2e-710d-425a-b664-59b1ec8d1602"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5236b3b2-de3e-41dd-a938-9a4d3b6e0e35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "81ae0232-4032-4e5b-92da-4648429fb294"
                    }
                  }
                ]
              },
              {
                "id": "bc0f3deb-83a9-4677-88b4-dc2d8939cb3c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15767391-9bd7-4723-9d51-15477686b98e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c5765dd-23b5-495b-97ff-aa08e7f82044"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba011fb3-181b-4234-ba0f-bca4a0d994ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "979c70bf-d778-4af0-a564-d214c91205ec"
                    }
                  }
                ]
              },
              {
                "id": "a1d80a34-3b85-43b1-81e9-ba19300796db",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aca61183-880c-45cb-a564-f23df31e2c59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd996ba8-e26c-4fc8-bf34-4967f769e26f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38ee09eb-d257-420f-ac65-870810b461bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0fb6898-7ce6-4ebd-9f15-5ed49cc20808"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6438467c-aedf-4fbc-af24-122de6437fe9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49f4d0a3-1118-453f-b27a-8538f7292176"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "be33507a-1f0d-4a80-9804-bf17a95954a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55e6cddd-16fa-4984-ae76-7ecd2a944712"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54e133dd-5a5f-4e61-be01-d8c053ce0a5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cf6f55df-05d6-40b2-898d-f0a27961e763"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e4cccfc-13aa-4248-8aa5-22032b9954bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f060890-4bdc-4f34-8cdb-e4e94794d754"
            }
          }
        ]
      },
      {
        "id": "f570b581-9154-4eca-ae61-dc7de4b3b03f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a8121e08-945d-4c6d-bfca-b8d786e344be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0dde3b9-966c-4742-9f9b-aa892aa83a9e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6863f540-27cd-4abd-89de-00f432c796b9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d6ffc4-59f0-454e-ba64-9c32870c6978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2409f69e-0728-4059-9ccc-dfab85acb94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a47618-1720-4700-aa44-48dd168a74b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f0162b-b6c6-4022-85d9-791c685354f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb76d7b-7f44-4710-8a82-4e7cb751e3df",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47723c8d-2c84-4f8c-8e7a-1fdee986937c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09881b0f-184f-4a6a-acda-c081cf3a4cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8dd557-6b07-4b12-9cab-e8ae2509351c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e23e09bf-0b64-4a28-9bb8-71fc71515ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d663e09f-4629-49db-b239-177468115998",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4e68bf-e83e-43ed-b8c7-6140927ae1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03aeebc-428f-4f0b-ab8b-d9caa17e0019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb90015e-4df5-45fa-9f50-a1d285c4fbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10923608-a5c8-445e-ae4f-a8c579f7f00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508ea0ac-e02d-4479-8fbf-f8fd22a061a0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2328272c-f193-4138-9f24-5d7338aef4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f23b64-b823-415a-a9f8-92f01bc9f43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7aad60-9826-41cd-8467-6f9633a326ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e27c4ad2-add6-4418-90e5-57c5fc7a9618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5bdd15-f51c-484a-83d1-75a9fc576dff",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5087717-8d81-444d-b954-892f635b7c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4209e9d4-c4af-4e96-8fcd-85885f25414d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2305fb9-cba1-4974-a419-89b155ac518d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "068abe54-2901-4169-9f7e-e0e8a498aa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d946761-b932-4f87-b1f0-a582a1c87090",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaa3fe3-2b2f-45c3-b075-311f7f9d31bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fff14d7-fe7d-4276-ad1e-1069b1f5b3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5647972f-636e-48ee-af4f-2821e717c939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74f9e266-8353-45d6-809b-f6ce811075c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70998e74-a2e9-41cd-8e1a-699fce0b2840",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335dcc2e-03f4-4d34-b734-2db40788a9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6746b51-1d85-49b0-9416-adb7055c576a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6db205-a3b9-41b2-ab14-475ed7c67109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5007838-fdb6-48f7-a789-490d34888acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23aa388-c70c-4614-ac45-9e27f06bff25",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad868e4-6402-44c0-aeeb-7d4e299cf8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d1bd7b-a657-43e8-928c-12d6714a79e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ff6bb9-8426-4473-919b-e75ee9b99dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18c46157-d554-48e4-b0a5-22ba0eec05ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d118deae-4375-4003-8f47-e40dafb89f4b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2a0b82-c5da-4c8c-96ea-ce213c386a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97fe535-7056-42ce-b43d-1ee910ab537d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b2dd1c-ba3d-4c41-84fb-2af9a019846f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63e70a8b-b12c-438e-9e0e-6b0959689a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a56d90-4eb9-469b-bfb7-00d14661481e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b727fe49-bf3c-4daa-9f3a-7a902d35d1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11a0d2f-732d-477c-a4db-ea3aa9df0d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0218cd65-2ca8-421d-a770-4865261c9bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd37b71-10ce-455d-b7dd-5c8faf94d346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bed7f7-31df-4c81-8bd3-9e04248a8d59",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d14a47-7b83-4372-abb8-4f38e7b94502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc92beb-505d-4025-b374-c1851bc77dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd0cf07-9e0c-47d4-8b00-9cc2518cec93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f97bba61-2432-477b-bd37-a3fe4aa71bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fe712f-e99a-4a40-8704-b59dffed9fcf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036c5e17-7a44-4f84-bc83-29c5c1fe6761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae65feb9-e70d-402f-8bc6-1121512d1267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f3f6ef-96c9-4ae3-9d50-4f7512b8af59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f229c2d-afd9-489c-8361-6525eb036007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06d4a24-d032-4521-983e-70a8e5080748",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcde3d44-7edb-4503-a5d9-9029f294bd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88621083-2f8a-4892-90f7-2466343ca468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29c3c68-1615-4946-b8d8-b9e84cb616ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5af63a-73e0-4a47-86a1-336e744a6db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40a0a5a-250b-4bfe-adfc-2e79968ada9c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87199e4-ab7e-4b0e-b085-950e5649b9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5e23bd-3f69-4ae7-a97f-e878a4bf264b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57f2a94-e744-404c-a745-2f49035dcb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "69450f3f-90fb-4190-830c-65cb2c60c273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9308077-ebc2-4928-a0b0-942732d0d6fb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebeb43f-3e93-45e4-84c3-5ff5c3e5f77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71449ae-bd3b-414f-afa4-0492469cda3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d37ba57-6723-4240-9f34-434397075dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee389856-52da-44ba-8ce4-5159701eabf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea321921-15e1-4043-908a-e5ca859cfbc6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c64cc8-e765-428c-a928-bab91f116cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a5cd9f-481c-46f5-bf1d-b073daf4980a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71d68e6-15de-4694-993b-86c365ac78d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3b299d-46ec-4624-ae92-74d16a2736e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a03ed7-8943-48d8-8f36-5fe8a381f457",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6ea24a-c4e3-4ce2-828f-34d0e13fa215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e83a4ea-9574-4041-a537-b9df307704ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044ac3b4-3d0f-441f-8f7c-1d621b984fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad0d70a-9caa-45f5-974c-6c3a941fecef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5020a7-260c-4612-a721-f7841bfdf228",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802baba3-b39d-4eb1-b275-21c93f15f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99b947a-c102-401a-89d2-a6d0ac4ffd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2419000d-ba19-44fe-b966-841117860c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a122fed-ef86-4599-b71c-6a54ebc6bbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8236ed6-f5f2-4b43-93e6-39d6f875eca6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1efb08-3e12-4772-ba84-32b21f43ef43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ccb90f-9754-4005-9d55-4ff574109386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b213b777-3f9b-4cab-93b6-aa341547e66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f44dfe7d-9c2c-4a57-a299-3337d9d26f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d10b67-7328-4434-8cbc-448525833cd3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f93548-3e71-4354-8d5f-9621d855beee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5789f496-2c7e-4a6a-ab95-721d9f7170f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb27418-9b04-43a0-93d6-6fe2c405e4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "273d2589-d1e4-4c0d-86bf-6be2bda9aa24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db5a6ea-8904-4b69-881d-f4e2166453fc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960e9297-df66-4010-9659-410a09d8fa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af972f3a-b858-4ead-a0ce-5c3d5c29c8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57efaa1c-a2b4-413f-8cf1-ddc6da96e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e3c80c-200b-4c11-aa89-550cfa6910e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc95d6a-c68e-42e7-93ea-a87f3c76c34f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807048ae-a7c2-4672-993a-a86b6b25b744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86d375e-6d33-4b6f-8ff1-ff4fb3ee975c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a696c8f7-6dd6-487e-8c9a-3dc23aac4584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "452e5a3a-167a-4645-a588-b1910c95af1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c621716-fb7a-445f-9809-fe4de09c4620",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763c1187-4398-4d38-9bf7-a6cac5eb9dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350e3488-a0df-4435-a289-3e42658a903e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71453e9-e104-4890-bec2-128ada141eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6af1af8e-c316-41cd-aa01-4a10c3e8cbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04a78c9-b3f2-4d37-9161-66913a12a5b2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1840386c-c05c-4e1f-a46d-b2bfbcc0def4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797c196a-6746-4911-a365-8625e550b2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cc6572-b70c-41eb-aad9-d9287ec16b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "292ee366-ed72-41f3-8485-f2118e193c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0301e3d4-6152-447e-a803-f932036fd984",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360db744-58f2-401d-9a8b-723101442992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0286b31-5ab8-4753-9c8b-5d92701804ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237454b0-aaff-4fd6-99a5-3752e8168b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3c69ff-29f9-45cb-b3cd-9126d8862aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5e4fa6-e3c5-4159-9a4a-5c1ea14b625d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b053fd0f-d4f4-4c9d-b949-460425c9c0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1939b7-2809-4e12-9c3c-702a88c972c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e5733d-3e2d-4129-866a-e1de4b740fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "480cfab6-2868-4289-ae14-17a84707cbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49d38f4-7835-45a1-8d25-ceee36c28911",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5615b6-4741-4817-b3f0-11604c0c495f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c8e887-7a5c-44fd-86f0-62da30853588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469c611b-2691-48d3-898a-de75ff1373b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "478675cd-36ea-4ae2-a2c4-9afe0f2d9e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae635297-877e-46f4-b4ab-dd5534b1f8e3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3c9308-c272-4dbf-ad64-7615895fa929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b8039b-4297-4087-bf69-3de08d4c4237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911ed7c4-5ec7-49d2-a0cf-f41879f26581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8e5d38-e325-4de3-ba91-09cc718fad3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a5dba7-898c-43b6-8f96-eb42ac931c23",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135ce77e-742c-46f0-abe5-788946c06228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51670110-0415-48b5-9feb-adf4e94887dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2eb66f-44c3-45fb-b062-c83bea640242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba34b704-c409-473d-a780-3a071732f763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf23e02-b992-4ea6-812c-f30164eec8a1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681562f8-f1cf-4620-828f-cb7af903b7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa459910-6b86-45c9-90de-72a99178114d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ff529e-b49a-4e49-a6ad-9f193b32c679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7be41fc-25a7-4e1d-95cf-6d47bea2091a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7272aa15-b61c-4dff-a18d-905090e489a8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af63818-e0e7-484b-891a-e55bed4993ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11056272-3406-42c0-b1e1-acddfe9c3378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27541984-f8eb-4998-b9e8-4e960bbc81cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "452189d5-882a-4dc4-a097-f8b12bd601d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd56e76-3f99-4014-82f9-6d4b815281fa",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d635bb9-26ad-4842-a25a-ce0e56f5ad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da757a28-3cef-4e54-93de-d473a4f7fc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89f00f7-a818-44d0-9822-b9f997682073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "689b3563-1e21-4bee-b71d-c4db43354e18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cdecf263-8226-429f-b5d7-5fa9405e3b55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "378a6840-dbbf-4995-9fa9-26324c9d3444",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6fe651-3e11-441d-9835-d309da6093fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7a7d0a-3def-4eaa-8caf-5c75501ee655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a32a4fe-fe92-4ee1-b7ed-86b3bb3c66ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fba01adf-c128-4b06-9396-cc9b790f184d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93adb0a5-8c59-4fcd-885c-9bd6774c1d85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35b5759b-4b4d-40db-8323-0a0226009f60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39ae768a-d794-4efa-b664-8ba9dcbb0148",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db3d2f96-6934-4eb2-a0f3-ba8812c4403f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14b07731-a60b-4964-ad6c-117a35acd0e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74bc6f37-69ea-4d35-8a4c-15197ccd350b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "048cf65a-3bd2-4d3c-9b4f-3cce3f823e38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b17078f2-a1cc-49bc-bae9-4df7c749196c"
            }
          }
        ]
      },
      {
        "id": "05e003d4-4596-4992-8326-adfcca350120",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "73baac93-2551-46e7-9ffb-e712272c378e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1688b312-cade-49c0-ac12-dffe2ea1c324",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "62d07745-6f29-4b24-91b8-18f18bdab9cb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197d3433-5106-462d-a12c-ea77fc396d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d52eb4-8190-4fec-a1d1-09f313cd58ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654faac3-c502-4767-aefc-39ef6b592567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bdadc9-2ce6-4130-b09e-1d25bbcb8f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7af54b-ccde-4dbb-9bfe-63f789c180d9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910ad9f4-fd1e-40e5-a9fe-b2791164ff4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2d8e0f-1616-4b6e-a47d-0ab62ab38b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2a73f7-25ea-4071-bffe-f781ea7a6774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f398c0-51f0-4af1-9e92-98b9aa0a8185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c0f27e-8dab-4891-bc32-f3914182868d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6564b3-d22c-4dbb-bea8-92cb82b88397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191973b9-a984-477e-9419-a8332f409d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b8c624-7c29-4c00-9f41-6b713a0a2575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "214217c6-7ab9-4d45-a0b4-f4d0034f59ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab2f1b9-c3c2-433f-abe1-041b986773b2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115ba7af-ebf7-40dd-bd8c-c8fbebaa2ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011efa25-7ebe-4421-989e-946406c9c0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb330fcd-7d2f-45a7-9157-4c7c3d373cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c911d6e4-0348-401b-af0d-2cc24593cc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e90a18-c0d0-4a02-a52f-d0e0a7ab87ca",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6bac43-9881-4c7c-9557-23d7bb1e9f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81c6df9-e70a-43a1-a5a1-4d3c3e229e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc389663-66b7-4bb2-9638-7a147d364b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "073cfd8a-2dbc-4b89-a4d1-0eb156d2e784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c994923a-1507-4db9-96c8-a78f19cba5c6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cca937-42e2-44c7-9e6f-167e7031de42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a68b071-6b99-413c-bf9b-df2bf70fb4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c563008-7ba1-4893-8bd3-bf0336eb4a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90fca4a4-ab25-4ea9-8313-995292007882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfd64f3-f927-4551-8a6b-69bf5fcf29a0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac223fe-3c88-4a02-a68d-d9e2d8bd3db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7ac193-2d49-4409-9ec8-830879c75165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1482c89b-9707-45a8-a4e3-e33bc560df2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c50d87df-e5be-4c7e-8208-46d4260e5949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dece082-b928-4acd-be8d-0a3c3bd5dd0d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663266bc-586c-4374-bfd0-3a54f35e4f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73a3b0d-0d67-4756-93cf-f3af551dc0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bd3d27-1add-4fb6-ac38-178b0e25df89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c424c29-04be-439e-92aa-87231e7cd8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7978a27c-0af3-4770-8c9c-538c9259998b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da8644c-09a9-44d5-b416-1aa803c4d5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9150b348-3054-47bb-a86c-56bb25eddc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf943a7f-edb0-4d08-b38f-4333bf46831d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3d7665-760c-4e6b-ba74-8c416610d14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf059b5-10e3-4483-bb9e-cc47221b15ba",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a119a68-6f6d-4d66-9a7e-03ea9feb82ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e8f8cc-aced-4c4f-b9e2-dcc9b56496c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413c0563-22ab-4066-af34-d94f9d827433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc05f2bb-6e34-4ae4-b21b-c065f5250965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9949e3-f1c4-4e17-b289-65bb000a0e97",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88326070-9a51-4b75-af56-7c85903c6f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da73aca5-d7ed-414b-864e-3fdf3f372349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfce4f3a-0348-426a-8830-46a0088d5bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1106d9c7-5351-4aab-901c-e2d1c13eac60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd388fe-30f6-4ac0-9e1a-90ecde5f9683",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9deba2f4-bd63-4a6e-a6f5-86f9c43a238b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291e107d-c106-4459-ac76-a7904e897673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0747fce-1f08-45af-857b-3a4ca3b427c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "636e56cb-290d-41b8-bfd0-b8046103b9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92af44e8-634c-4987-bfa0-49308cc4f49e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a6d855-9fba-4b2b-963e-eff130171ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792fb2b1-882c-4eaa-8123-793813a9f5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92956e42-8dfa-4821-b224-69e24473754e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "800d36cb-14db-42e7-bcfb-a5cb80a57b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be911148-6e11-4138-9d15-58deed871409",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7b7a98-6462-494a-8308-c7505bfffb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a175aed2-8e4a-453d-848b-d7c2a48303cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45815e81-f7af-4bc7-9b51-353226496510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "249ab02e-b17b-4445-baad-8ba0dafc19cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b083ae-ebff-463f-bb61-6d8665664362",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1c54d6-0787-4105-8849-4ab9a85ccc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4092bab0-8c64-4ecb-ac99-a1457495429d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e5597a-a295-47b9-a07a-fcc9cf58a78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd8411d-3164-42c4-8adb-70d32428d452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea45436-5785-4179-9fd5-ae2a1dba23cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64bccd0-1ae3-4d94-9349-0f0f6e95b994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a2e4e7-7b81-462a-a1bf-95bc6b183cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2101bf-9bf1-4a64-bc02-1081bfd5daac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9962c0-a1a9-486f-9cc2-362624e7a355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eed3b9-dd4b-48ce-b6d3-21019dec6b41",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816e9a9e-8f41-46b6-aabb-7e720495d865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fa1eb2-f635-4ed7-8c6d-ae7bc8cee2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c064cc8-607d-4abd-b35f-e23bf0a63053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebd2f1d-aeb8-49fe-a795-8f36befe2521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83d3cf6-2380-4687-bb79-07e22e547c55",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b84ca9-583d-4e83-b14a-82ed6ffca1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c41a3b-5606-4910-b6f8-b32858331c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d7418d-6f76-4e2e-ac37-221e68832eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44420386-8b4e-497e-88ab-eb72f3200bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc1f48a-6dbe-4c01-b809-4a978618f863",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ee9ca7-2477-4404-a83e-17eb4f5e851c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0ac1ff-6d2f-45ca-9220-fdc610a6794f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ebd37e-712a-4130-9f1f-d53b1ffe0275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "122e9ca3-cfbd-48bd-a38f-e7ec48dde706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be96656-4d04-4e5c-bc38-fe970e8be6c8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c30f02-9693-4a7e-863a-92a8472aacf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e975f6f-51f6-46cf-ba2c-ea940e8c566a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9479f2c0-758b-41ed-8af1-d8d88049b8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30312913-c73f-47bb-86d6-a36a73bf7b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e12db22-4bbf-40c0-9228-bcdab14bee34",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85222fc3-1447-4f57-9eec-1cb8f6921122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59aa74c5-d349-4c96-81bf-7415478de825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c417e1-bdd7-4929-a062-1afdddc253b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45a503a-b32b-4b2b-97e5-be03fde5e45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad32d59-b17c-43a5-8ec8-dedc8edc1d49",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59834a89-6cff-4f10-9c6b-528f3abf65cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af44f4ab-b1af-4c47-80e1-51991c8cd4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbfbfdc-a88b-49c7-97de-055709c543dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1942f04f-c149-4aec-b038-27af7acc324e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9029f30e-42b9-441b-9e71-6b33d7ea6b6a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e2dec9-34d0-48f4-8b36-8eacd0c0cedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0327bcc7-37f9-4bcd-aa85-a88d41c0e889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d480c7-85cd-40fb-9299-b1d3ecef51cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f43b9fa0-a3a7-4d7f-9ea9-a7cbadf1644a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd11941-e442-450f-b48a-7ecc208e6793",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc512eaf-0912-4d6b-9276-c6690ccaf75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5099c3-0162-4ec8-ae28-25f3a3664733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e139ea-84a1-408e-aac5-5e88d46a2f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23bb20c6-d22c-4b63-b3d1-4db88961f65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09aa6294-fe2e-47a6-9466-d440e7c911f4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21eec3d-d341-431e-9b1f-87950fc58cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fa8259-e045-436e-bed9-05a833239f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fba8d36-96aa-4b5e-857a-820d17644f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45c79b6-884f-48ae-b39f-b51bf0b64e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656dc238-9c5d-44d7-a078-3790f530f59e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f956e2fb-ba8c-473f-80ec-4e845f5b374f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaebadab-98bd-461e-bb6a-ac4930cd2bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fea0f9-24c4-4953-915f-cb38e5d4998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30d68ec9-35de-48f7-8cef-95c52e0bda89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f5b706-6c16-47c2-a30b-aff3f3321aba",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14496685-8c85-4bc9-b6b8-3ac88e7a87d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345e33e2-23d3-4a33-945d-ba99154ccf72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c341e0b6-04fe-4273-8080-36a7851fd592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bd63b4-356a-416f-afe1-045ad1caec36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0d7293-ae88-4c3f-a555-97667a5dda7b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3fecea-e112-46d2-8b26-15537f4813ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48981fa0-9058-4de8-8e8b-fc00c4c4d7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9affa79-8c68-474e-a302-71d56e37e4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1036f6ff-752a-4f78-993d-27289cb11cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93796741-9669-45ea-b614-e7d58ee045b4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fde1079-e3f3-4103-ab7e-cd743dabbb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207a184e-94eb-47bc-a016-d789928d49ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebb1058-377e-4528-8e7c-cd1a8a6e69e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97621e75-1429-4392-984a-7c214a3e4e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39827d0-82ce-4972-9460-000a7459abd5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a088c590-3384-46e3-83cc-584bcc062f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410ef29c-440e-4969-892b-7d810853c96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405c08e2-836d-4278-a8bd-ee87a12cb83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c92bf9f-851f-411b-a850-c978ab51c9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af2b619-f2d0-485e-be67-432c1b11ffc2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe889213-8390-408e-88dc-c4443daaf7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f868b3-adb2-4481-a614-9c015f66565f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5b5323-a806-4bd8-b1e9-249549e47e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67825609-4d2d-4255-89b5-0feb14fa6570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d903db0b-9403-4445-b393-5492f027679b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4802bd5-ce49-48dd-8865-3863ef316586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ef9c9c-7499-4470-8db1-afbba68f8ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0c7929-1d0d-468e-aea1-aa252c50fdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b15537-4f10-4847-ad14-4ad90cd419a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e2e8cc-8f75-4273-a4b7-3ad9fdf1dde1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfac236-41b4-4bfd-8949-37a181edbd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfc0216-37a4-49d9-a842-59153c361522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa3add2-ac3f-4ef2-84b2-d442b6374624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82301492-4c07-4ea1-a1df-a7cd94a4355d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ecfae5-9a0f-4550-bf82-51e4c6aec93b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c906eee-c084-471d-91aa-54cd59063b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8aa89e-135e-4379-9310-183ae36cdea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4a47b0-9478-4399-90fd-8e8e432bc711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfeb909-bba4-4d07-ae7b-732df425a2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553242c3-0426-46bd-94ce-68a62f9eb498",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc734f94-eda7-4767-985f-9a1a5cc6f825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb00af23-fa6d-4849-a1bd-3eca7c83e573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbe5ede-9518-4bdf-a02f-6551cad91ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4addaa-5edc-4b77-9726-0787e262ae08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da187fd9-1433-4fd8-a797-c579532c33c6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07f7ad3-43fe-4b39-ad21-aa2821109023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205fdecf-1281-4c04-83b0-bd677550235f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dc81a4-c2c9-42a8-9ceb-c0989d3894c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6d49b6-52aa-41fd-94af-fe6460361def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f3c2c2-89dc-4e18-881d-caa54e10c485",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880beed0-6aee-4b16-81b9-37677bff3a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbb0ef1-fa6b-433b-9197-06d3867c5d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6428849-6bcd-44a7-a027-efed5a725416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "790def36-1230-4be4-a537-88fb946cd5a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "771dab8e-676b-4428-ba2e-b1586a46e414",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6da95935-b2a4-46a2-b774-8bb98383f53b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64b4763-a463-48e8-8f9b-ebdc9b656be7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec65667-e663-4dbb-ad4a-43771265647e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6195a7-ddb9-4d63-aa34-1fb74e2dad08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24f7fb64-4551-414e-bb5e-dce751e74c30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd678215-e702-4f7d-90c9-dc9d8d3d5a05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0f0af09-d1e4-4945-ace7-17219925a8da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19467362-ef14-44ad-96d4-e5cc84e9076e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9a1c794-a2ce-4123-9ff1-10ea2a1843d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebd54e62-494c-428f-8d0c-3d2a377ab4ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0da79f76-fc0d-4c08-82c3-44e850a1f93a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2c9f599-00b3-4042-8e6e-cfc8c6cf71fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8524c566-a454-4286-95e9-a8639c46f6bc"
            }
          }
        ]
      },
      {
        "id": "daa701b3-aadd-4ae5-8c19-16468de62d16",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "409753c2-ec34-458b-b1d8-c965dac20c0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ac03f11-b023-421e-9a5f-5a419c674034",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c37bb940-d35d-4548-b59a-21b685b1030e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd8cd0e-4dc0-49f8-aca0-432508de5a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2666ec10-249c-4da3-9f4e-6d5a5f967b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcf677c-9413-4460-96f9-606923b72bb0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770da152-f6d9-4d72-ac3a-54def5e93207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07c505b-0c2d-48bf-978c-22d5c26f6f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b507856-a7d0-4ded-bb67-a76af2e11607",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a90127-16cc-4450-bc5a-5bac6f801f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae621d95-3152-4f71-9eb6-12c89c6fa830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b091273-b838-430d-af82-9dfd0aafe17d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ee68b2-e099-4d28-83e4-4cca1163e059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e0257f-58be-4e1b-87d4-95fb8f16c315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec3eb73-9402-4ad6-b2b3-5f1133c9ccf0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00815a9-703e-42ef-951e-bf943060fa19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6828dd-53dc-4daf-8416-96f36e74ff55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c86ea2e-b209-4b41-b436-3d1eac98931e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676a5fa1-0823-45e9-bced-95d124cfa4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53d6bfe-760f-42b7-94ab-3702b6d16397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249f3a16-e987-47e6-a14c-1354ac4df6d6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be2ad08-7046-438a-ba99-f6771f8a1e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7cb0b1-40a0-4ada-a8e0-9d791ce84193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feae67a-adcb-47fc-b48b-3f7944411739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb266926-b711-49b5-a251-75ec7904f933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9846a8-807a-4341-a340-5ab8a73e95bf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132f102e-ce7d-485c-a628-67f228452cf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ccd4cb1-7bc1-46d8-9968-672d9b3a0321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be25abd2-34a6-4787-9e70-00a80305ba4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8a0399-6e86-48df-a7a5-e0f7f0fd27b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1214ef2-a9e8-4529-a784-2512a6847042",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4037f12d-2475-4482-a118-81f7484982a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "079c5c2f-6df9-4852-800d-1a0e050ee108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a9de83-f679-4a5b-9b98-83d2f07dbfc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a225dc45-a596-4f94-a7a6-2dcd0020382b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45318ec-b62e-4945-b4d5-1605b9feb749",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4e5f92-1e3b-47c6-8393-a2b6274d3a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c1040b-f399-4f2f-9d5b-bf63bbde7cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e8eef6-4c9c-459a-bae6-e058d63f0492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce404b53-f83e-446b-867e-d22aecf8dfea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f642828-2e7f-496b-97b8-f910d4aff78a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6d5bdb-899b-45d6-a527-d4808038778a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940ba07b-7f8e-4a59-a20b-90f9c1080d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3220a605-a18c-4e9b-9c31-650eede8bc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92922798-fdf7-4afe-903a-7fac7fc4c045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6b61d7-a33f-4f65-a2e7-d85340d9c13f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ce46a1-ac37-4043-912a-5402a636271d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58759492-fee9-4e68-8ac0-efd0177a6cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ea763a-c35a-462d-8d7c-ac30c52484a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00ea20e-e8a8-4f9d-b0c2-b6a685e60c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2074ba99-91d0-40b5-a164-649f9909b0e2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0a9b43-0a9f-42f1-b29f-6db28ccbe456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a1bf21-7f2a-491b-84a8-09ef7c296d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80e980d-f34e-4292-aad4-5fdfed79026d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8f06ee-b7cb-4311-b35d-3012ade066a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ad93d9-11a2-4186-b93e-8e25be6a10f8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba658ba2-95aa-4785-81ea-2855193f2e8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a9b85bb-c8d3-4fdd-9ce7-7c50e4339095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62a2446-759b-4beb-bd85-6b7c56b047c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae84432-12de-47c0-acea-50b7044d716c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb7553d-e1b1-4b39-aa1d-a80575509f23",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0411343e-b71a-4346-b179-5b1fa5a56ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a547b3-25c2-4e43-b6f9-f530cf20b4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b472b6ea-99f9-427e-95c8-1112f0bdfed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b08fd88-f659-45cc-afa5-ea0bd032163f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7adff10-7ce2-45e9-876e-98d12658d1e3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f6280f-a389-4931-a9b5-925a18a14fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6095bf4-7fa5-4417-a66a-d24fcca41be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f30a28-af6b-47c5-ae86-991a0f8a0a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634358e9-f079-434b-82fe-b281f819b7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404c1c72-6672-4fff-a86d-3963917525d6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561d9f1e-a033-4062-81bd-1f51528c3d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6becd7-ec77-41b1-816b-dc69c7bb2f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f54b3e8-9e63-427f-ab9c-b48c2b7a6f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc3a959-dfb5-45f4-9077-974e6837c9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852c8981-4702-46e5-a9c6-982fad3e070e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4dc227-c5a1-493e-9630-2a2740d6e74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c147b6-4fcf-4673-ae0e-937a14856ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1732684e-8117-4bab-9ac9-42a2a1435e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72f3a9c-d2eb-43bb-906a-da355f663dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1e064e-9669-45f8-ae32-1c9d6d1c4a73",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9059230-c791-47e2-9133-118946a778e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a85321-f7cd-4bf0-9ef6-9e9bde0c2fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9e691d-d250-48ac-9963-a107966ec0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87a6aff-9e03-40bf-8024-420dc41c8513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc055077-55f7-45cf-a8d9-dc4282c85834",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3171e8-d20c-438f-a2c4-cee693ecf271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756abbd4-6860-4dc6-af79-a0520744c4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdbbac1-7177-488a-860d-836bc720efd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da07bd9b-3e26-445d-9f1e-c48a4740fcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc306ca0-7a3a-404a-a7be-1901bf64c008",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f8532b-115d-4090-b776-e079c57f84b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463dc579-7b58-4c97-a04e-5abd95499c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c53c705-68d1-4f34-89bd-b9bbaafbad23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7408b1f9-52a3-48a7-afc4-993ab116ed1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1c77dd-4ab1-4639-8ab5-f31c6c2a16dd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b979f47e-2d19-48e9-93f1-ad0dd83bcde7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a5ea65-9692-4fc1-8fd9-0385445740cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17ff28c-2537-4f76-b9d4-0b36a0d18d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e949262-26ad-4a79-bf0f-b1e4f36593dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d75ec2b-3f0b-4ba3-b294-c6e9254f6108",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad8f92f-5688-441e-bcff-cf09d12cf73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70dd1d76-9c00-40fb-8697-28455147986c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89adabb-8452-4c3a-9f55-1738d392ab5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca8a58e-80be-4ea6-b4f9-c0429a522a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2190d684-8d4a-44a5-a462-1a5c6184c9cb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca05613-9e17-4e23-bc36-4862ad64c567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d772a8ae-490a-4319-a507-014a3de2dce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed78305-7163-4140-af86-ff22c5dd32ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1741bc-eb02-47f9-9c59-676dec2ec173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee560bc-757c-4407-9a6d-c9bfa0a7590d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9df335-539f-4a07-8dad-fc9c86155446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e907b8-bb86-45f9-b9e1-1aa9f6ff75e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1876a10-6c48-4e9c-94c7-4925e501b3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba9f839-52ee-4f0b-a41a-5a9dce17b5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ad18e6-dc2e-4b0c-bafa-0c707e359f52",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3147f234-2cb6-47ab-9c9f-0cd71e86391b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c069c952-3876-4f2f-ab7e-412edd2cf71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b07b52-c167-4703-af69-46501ba85195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077dbf04-3ed1-4685-88a7-c3b0b75d9b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfa794b-a50e-4462-8399-409a12d7276c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb08962-3e06-425b-9166-a20a813f6071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "364ef3c7-50a8-4add-8eff-043b1df508eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba40545f-d788-4a09-8905-c40b0632f7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ef95a8-8c6a-47fe-ba56-f6e37b4f6db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b49aad-8d89-49dd-bd29-c5b638d0626c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887fa916-da94-44b8-892e-48a18ac5985d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2451d727-4671-424a-ba72-9d89b22134e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85728c3c-27a5-47f5-9eec-a0116eeb5fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3956c5-7c84-40a9-8e26-53dddfc9eb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc11ebce-9625-4f05-b607-757b8ac11879",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7bcc6b-0c94-403f-9581-a03a63b349f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc5d34f-7ac8-474d-aed1-7c4239eb7b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ba3a81-d091-4cf4-a40a-cc32304695e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67d9500-e4da-4583-822a-a2121229eb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca1484c-f0ff-4740-a219-25848f7c6c93",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c42d72-44f7-473d-9c44-d25b1deaddb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7c4f522-0b2e-49e2-ae08-f339e98794b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e83a14-4e4b-4d1b-8ad1-343df3325177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3199c6b3-535a-465d-80fe-066b9cb09a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a62753-7e8e-443a-9ac9-c2187a1c20c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8334dca7-3d49-4f32-889b-dc244fb1e4fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f72b143-98cc-4d17-b285-d95ee877278f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67190562-43e3-4f09-b727-316a661b763d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c617930-87fb-4c58-9aeb-e431b201c9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d003c4ed-5b14-44ee-8ff5-23e601dfcdc9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569f6add-c62a-403e-8867-c051db518ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb5130d8-54cd-480a-a8a1-3d609b26babe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4429865-f0b6-4165-ba12-36383b326fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2d37e9-b228-4701-94ef-02db09efe0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d87610-91c3-48ff-9296-b1a747803ba7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497a7c5b-08da-4096-a704-130574d8ced0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa289f1b-7254-4b6b-a9b7-e7da20e38d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1994b1a-f379-49f5-bdd0-a3dfcf86c88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e76f19-0a9c-4604-aadb-02b17d22e425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b0154c-b1aa-4695-b34f-095788bcfcf5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497138d5-9346-4b7d-8639-75026de94c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05520683-966b-4117-8d5f-c316b8c89882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e5ac91-27b9-411c-9b95-5d94b68562ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd33192-381c-4ab1-a0f1-ec1c0c217bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce93f63-200a-4c90-8b5d-0983dea94e7a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf0acda-4a78-493a-ae34-7f935249f199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b92f52-e25e-475c-b7ef-a1a8b6dcfb23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f90bffd-e5a8-4a4d-ac70-dea6047d0343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69fb12b-0523-43a9-9e98-244ad79a8a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a42bfa1-cfd4-484b-8a7d-4781039f78c9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0730a984-d6cf-4c48-9f61-338c81d5489c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee43cfb1-c95d-4359-b30b-b03994d44c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00a65ca-5cd6-4e4c-a9e4-9e1d92e60474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47aa4344-10b1-4cf5-b168-d2fe913698e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bafab2-a542-45f6-a2be-848d7386aced",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb0ee58-edbc-49d1-aa5d-b5387a20e3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c04249-40cb-47d2-9765-99a66ac443b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c528c66f-13e1-4c38-8d26-fd8c4e6276c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ff1bad-08be-478b-80e2-32f726b245d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746bc8dd-d88d-4933-a070-5bbcfc340705",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bbfdb3-e7c7-4fdb-a849-5772823a969a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bce7928-c049-485c-9cb9-3bed6a2fe6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1311ec-5102-4177-9d4b-e10f041e7284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b0f3b3-3176-4d8c-b587-4e774bd2d2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144567b4-6273-4557-a701-cea8eb053d9b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9197c080-a11b-4571-96e6-983a132fdf93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81738c8e-cd6b-40ca-be9e-6d6c7fe4b764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a7bff1-e9c6-4f0f-8f92-075f9c49ff06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424415a7-89cd-47f7-8dcb-532de840a195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143b882c-adf6-4aab-a960-a4f8cae8c23b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dd4fc3-3940-4eb6-a47c-dbec445b2404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691dd002-8aad-47cf-acc2-47ff2192bef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5c3745-a82b-4cb9-9f06-cc544c5b02c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cc9523-0ec4-463f-a5f0-af82348aa4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e67080-a48f-424e-9876-3ec1d22996c3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a4c0a6-ebdf-44e6-b500-d9912de63b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bc524e-90e4-44f7-8f65-d4a9fcf28060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77729575-1709-44eb-983a-2f5706fd524a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a889b7df-cd0a-4a21-882b-f0c500a0a7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aed35ce-0884-4991-a691-62070c46825d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4e81b4-e3e7-47cc-b3c8-003bbc475270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd87170-78ca-4fe5-aa17-11d6fb08bc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2813a8d0-07d4-4738-acb1-d8bbd58d5e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc84a250-0e5a-440d-8308-31c92a7b9eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f74c578-babd-432c-a376-f2028028f626",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cc1372-216d-42ec-8a6c-520715105035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f8fbec-2bd2-4eba-a2a1-ee0bedac2c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70744d9a-94bf-48a8-94b0-fc8b1e96bf27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bea8a57-4f60-41e9-8603-b6df7555af97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44e2f69-94d4-4fd6-95cc-93b7e7c9bb72",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1cb80c-b171-4900-9a28-c0c28cd6c381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bbe056-8193-472a-a0fc-6ef3efbc073a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a2f4f9-a340-4fc5-bf17-ce3a385b654f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade09ae2-34a5-47d8-a65e-94939a23bc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cf4144-4cc5-42c8-b8d5-cc0f971d7c7c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f675ba-b45a-4126-a1cc-0fdfa857c544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0910e5ed-a138-4311-ba62-4c6012857eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75570b19-3e69-43c2-8477-4010b0469631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0697c058-0362-4d0d-b2f4-9e2c576ac980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4765126-5aaf-40f3-adf2-377fa76e9117",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84e3bf3-8cd5-4458-b1a6-39593d7691fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01c19e3-56e3-4584-8ecf-8faffd0ac625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3aad62-a42e-4d5f-a397-00e15cb4af67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d309d6-0d58-47c6-bbce-467737ce50c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d382d9c-acb9-44c3-9b3d-444dfb8b405f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bad45ea-b841-4059-9b0a-4fee1f023492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3604bb-77b8-4c85-b025-5661cb3886c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19191e86-e6a5-48be-a03b-5f57222d1818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31a3f4c-0db4-492b-895a-9940a4d9adc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4124797e-9dff-411c-a15e-e63c28885852",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b2caea-1509-42ca-831f-f6b03eaf3a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d95f4ad-5b7e-4d83-ab67-41432974077f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77439384-47ca-41cf-864c-a3e962eada75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221cca71-6db1-4e95-bc98-728fb7215b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d42aa38-8bbd-4796-9054-cd21b1a2c0f0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47517089-a563-48ec-a0c8-6a7298120987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf7a157-3878-44f7-ae3d-41c05800273c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fb4ced-5133-4b22-a546-b7614838d3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8629d3-40dd-4d39-a073-532e91e7b3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f22b43-723d-4ea3-b613-b13c62207a08",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5db67a0-ae96-4b95-a3eb-c7df3eaff2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cca466f-5bba-4266-910b-a56d638a8282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8111a172-d6c8-41c0-b186-7a34fd7db87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1e17a0-ed55-40b5-b19e-d7ec732a2ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c30282d-64cc-42b5-8ff9-af060f3aa4c3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a9a0e0-be8c-41aa-a7be-81bfe586a429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb586b5-c9df-406d-96ab-f96584229ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be72947-134b-4eb5-b5c4-c4035ee0508d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24689218-ed35-4ae1-88b6-a37bafee7f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309470e0-4444-4ae6-a851-1b622d5d24b9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cfd24d-41ef-4909-9cb7-4c9af3c122e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def91d9a-922c-4ae5-a40f-2b8ff3f89b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbf57e4-ab3b-4186-9cfc-ba7d64c7951f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb68ed2e-2b13-4c5a-a6d2-ee43bc68f3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45acf5b4-8a2f-4040-baa0-bb6b96f37540",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa2c306-eded-4238-8b56-064ba0be53e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db0d283-d1b5-4599-b8bf-194074505e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16124ca-b8e5-449f-bc26-5f5ee262e599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781aca1b-00b9-4446-b189-301e9f7e1bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebbb2f4-1105-4968-8f89-7392c6e9a06a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2971a7-a661-4ba5-9ed7-6fe9be34b227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79ea604-62af-4088-b25d-80af010ff0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b47b12f-74f4-4f77-b21b-e9b1eaf5f01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709aa2e4-557e-418f-bffe-76718c4cad4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62574eac-e655-4e3c-ab11-f2247b9e7dd9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be20e0f-cbea-4a27-8107-acadb185211c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14a79ba-a08c-437c-9b53-147b0d34e350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9a3667-0bac-470e-a55b-a94886412636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043b35ef-b155-45d5-9a84-688e7e53b1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb71407d-91d8-4f3b-9ff5-3cee68e7e395",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcb1a5b-dc7d-4480-8e18-c0b7b9f6eee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93177b55-3f2b-4e30-b6d3-6e9819c2175e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bbe733-2035-4f7e-b578-f6d8529918d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad77a653-8498-4dbd-a1a4-8394c9499a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2762ca1a-5748-4157-92b9-444ea37c0812",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3f2c38-17ab-40aa-8acd-8a43d4157d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1b4dcb-b708-4d64-9ff8-4ca7823132a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eaa966-cb1e-425e-a0b2-5243fe9fb576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7da893f-bf84-40a7-8b14-6f6f208319e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa8f690-9377-477a-a504-1105876c8e8a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03222a2-bf23-4f0f-9005-3f2f5f99d674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c189f310-c944-4a2b-8993-5ef8140b4f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60deb0e4-bbda-44c2-bbc7-56fa0d5956c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054cb479-a17f-4702-84a5-c6999e5f8250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305383d0-3c09-4cd4-b2ff-03678043b5d2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd330a2e-da03-4811-9d05-83bc3b68cae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d05715f-87c4-445e-9f1f-5d9e7c621027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f5780a-fc98-474d-abee-69e3f8ab5529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c612dd6-71aa-42d0-b176-2e74ec6f81e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4391e56-4e6a-4ee7-bcd2-6bafc332a131",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585768b2-9445-4d19-8716-e18fc67929aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3393950b-11d2-4c70-bccb-634cc6c3e3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de38d7fc-eb26-4476-abde-c21093a4eacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c14e81-20b8-44cc-aa9d-6ab4987c2bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7bc356-584d-4f0c-a3b2-369b6bf9aab3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff66a03-3d16-45df-8a7b-e8f860449245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97b7e78-5d94-47ca-b544-38f61a1f4118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d00b87-caf1-4d85-8cb3-f50835c8751f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80d12bb-f6ae-4b9b-adb8-f4d0db5fbaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92378b30-c3f9-4ffb-b643-acf2fc70599c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08232b75-a769-40f1-ad3e-5a7fd82200db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c657974e-eee9-42d2-8b28-fcd85e0c6c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcacaac4-e9da-465d-836f-f1cd035dee8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8db8eb-1d6d-4faa-a1b9-438b9e36f3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ef8569-09a0-4659-9694-d095b70c932a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba45f3c-62b5-49c1-8f6d-3f44705b839c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac69910a-3e7a-4fa6-8ada-a200e3513ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca0ec0d-10c1-4943-8726-3d1d92b8e3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8502be3e-1de1-4d79-ae65-960e75d57958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef93bb0-0d5f-47c5-82c0-25872f78da20",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c90b79b-e33c-46d4-babb-a698ff0ba256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15044413-4f14-448a-869f-1b182c10f371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7283a9b-e099-4ab1-a29a-a0bc56c68c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df5240f-af38-4116-897e-6955a9338c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b8e4b3-ae7a-4959-a8ca-6eb962b84439",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5844713-a481-430b-afeb-872273498ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45921f0b-7c5c-4422-93ac-08a10bb5a3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb394ec9-a2b0-4214-89f8-f264f7611b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686bcc7c-4a62-4152-a910-6ee998db4b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bbfeb7-eb39-4cad-8061-797e0048846c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cb39d2-a704-433f-beea-cc4b574dad27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967ac8b2-fb70-476c-97d5-1c55d9bc4dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b2d26a-375f-40b4-9970-bd2f8a313389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42ff4d5-e9ba-4137-b6bc-37c91a289b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65361ccd-87c9-45b0-ac0c-cf3e33dcda4e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973eedda-e4a8-4008-a258-4b05f660d47d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbaa6783-12d4-4cbe-a03b-cc29ee341c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54007616-d6f2-4799-97f2-194257c150b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf09240-2732-4498-9007-3ca88d014d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f2833b-f01c-474c-b6fe-80cfe78e15a0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31e4a21-161e-4257-9be5-ba6874f9baab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8195d99-3092-41a0-83b4-746fce320a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89a42b1-433b-4ee6-8eb7-e568027f7abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548cc6cd-8af2-473c-9f3a-4e35251564ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c089c564-5f4c-4f8d-a396-cdee54663ab6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209e2fbf-040f-482c-9af5-637178c78028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061bad84-ec49-4fe8-af58-711d9a51ac17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2dc32b-bad3-49a8-9cad-fcdb21feec12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1aaad4-d964-4027-a652-c5a180f3f3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f36cd8-5bf4-4967-ab07-3c21f4b7d9d1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f3570e-5595-4ab4-ac9a-3c84482147b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e4d2803-aaac-475e-a6a5-75082273cf8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3aa701f-efa0-435f-8f48-2c85989c747a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba87f5e-6dfa-4b52-938f-143bbaa7da73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbd4205-b813-4cbe-b725-d8c376c256fa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad65991-9506-4637-b5f1-e5ccbd3d5522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c3483d-9075-48e7-8bb7-abb35034dc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4062ea23-154c-43fe-97a0-30451c85c83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54fe204-d1f3-409d-8e0f-a28498f1ef6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63a186d-c8f4-4222-9284-386691645f3e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa19499b-cf39-44ce-b069-8c19c4eca4e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885b3444-72eb-4806-8461-f66d74a2fe9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49da2161-0424-4823-927d-aa8f993fee7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da59baa-6b4d-4207-a55d-4dd924de8900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e83e2a-c3bf-45ca-8369-5ae2d9f87713",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad05c4ce-dc6e-47a1-bd34-ffbbb0ddfc16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33cba756-458c-410f-b882-ccb4d81bcc3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937de79c-6e73-4680-ae6e-37a42d4ffd7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6972623-d67b-46ac-9b0e-9eb29c5ea85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea859ba6-aeee-48f4-a315-41facbe08295",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9955cf0e-bcd8-47a3-926f-0026347aedef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "621ed0d8-bff2-4c85-822f-1452ead68da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfcbaa3-a40b-4816-9051-3e21362ba414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b3562b-17b7-4517-9d87-d16feff2f6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf205f30-5bda-41c3-9279-8862863c3c1c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90daed0-6a89-4867-bce8-446e73e5c131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff0ec0b-a379-43f6-9cec-e272cbbe43e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11599a35-75f0-43b9-b14c-4cade32fb83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504b37e2-170f-45d7-9fef-167698f78839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469784bc-aa66-46a2-b336-1ab4c0619795",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc8f252-7f0b-4ed1-b3df-66b68d49689f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b22b664-2493-4545-8c96-600e68c5598f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f4b378-7904-4fd4-b69b-4d0f159ecb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dc1b13-3f29-4051-b286-1459a57b7d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64941f62-cbfa-48fb-bb3a-54c82b2cbe17",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9bb48f-1dae-40a1-b5e5-14732a095b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7617f20f-15f4-4b0f-a930-beafe1438f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a781809-0445-431b-b29a-a3785b462139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbbe507-3379-439c-a621-8392a19b6ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7445de29-5126-46f4-bf48-bc3885964fb2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5da31fa-cf16-4184-80fe-ff20897a1dbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66853162-0176-4a7c-95a2-5507dbb96622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a46e11-ea6a-416c-8189-16dbcea0cd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5741319f-2955-4ff5-9153-4c70240a8ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e06b452-9382-4e2f-8299-b748978f68b6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeabf95-e63d-4f9b-a7fb-dad6d47fe13b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0d99495-6c16-4a98-8483-a3218f7a45bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6218a6f5-9677-4732-bfab-acd5d0fe650d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b0b83d-b673-414d-9f63-09a621762f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8db175f-435b-4a39-bf57-020f95507285",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c83a6c-2503-48a8-98c3-f97b06b48c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03587202-7ce7-4c7f-9d24-cda69ff1608c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4e9687-0318-4649-9030-854ee8e16f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5af6451-948f-46cd-b26e-979b2bece134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a69907e-2e14-4fbc-8eaf-1b768f8b25eb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ca1ccd-6e4d-4409-aeac-a910a8497fdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b965cc21-12b7-4f85-a6cf-2c17c3646c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf80706a-f9d6-49b6-86fd-e006ab1aef15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60539b81-3f80-4fe4-b785-e5cdf655cf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565f1f84-176f-4385-af7c-d73ddce7698d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4446de-ac4a-46cc-be43-68f87112845d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd493e39-85a9-4bd2-b7b2-32a71bfce80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a8971-2eb1-403d-91f7-d6c5b82b3389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5715cd20-5a1f-43a8-8efb-e5604a12acd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e191e3c4-324a-45a6-9844-7a9b8abd6c9b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c800ed9-c85a-410a-9233-0d0ef6580261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d1c469-aff9-4f53-b23c-3ea01999a8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd398ad-7d04-4ec6-8696-887cf83e828e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e7733e-ea7e-4542-a371-ff1b90961a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaca39f-4ef8-403a-95cb-1434c48d4630",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4386dc5-4e70-41ff-bdd7-75351c0177f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "401081ca-8555-45f2-8a9e-7b5be12b27d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041f945b-9afb-4989-8df8-293a052104f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32204a6-a0e1-4e07-bb40-f76f5f838f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36552de-0562-4dab-ab44-48aea23499ae",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05755a23-e273-44d3-a8ca-f8bb7dd9f0a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8076c9c5-2a04-4cb2-8284-795d83ada4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25be3655-5938-4815-b0b7-9646c34ac080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787d99a2-41e3-4444-bb8d-e18fa2718501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e72d30a-0541-4363-887a-36a5e99064c4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23856ff7-2066-4029-a3aa-e98dcea4acc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dcb4af4-960b-4561-8f6c-838aa767d445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12485c7-f7b2-4862-8848-9abd7f4ad379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d4cc8a-2d69-41f4-a7ad-2f6cddfce788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c017b9-ac9f-4086-8c0e-68ad3bf5732b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b249e0-98a8-4745-8bb7-97f9d50a24c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f27f00e-4137-4c1f-944b-6a504d6d44c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9230e4c2-4053-47d2-be86-0b097bfc510b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce508aeb-2753-4c78-9b9d-5c95b907e815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203638ad-ae33-44b9-b8c1-95f1d02cc969",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274f3556-90f2-4e98-b880-37d93c84e154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b0567c8-73ff-498b-bc2d-3abdb832a9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff575bb7-d2a0-4cdb-9437-535833f803d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25995bd6-29e4-40fc-a750-546d40278ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6b4968-db03-483c-b930-7d79a09068c0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3254d750-6888-492c-81c6-b35f8b284f24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d7076a-7cb3-44da-968f-5bc23b384ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6466671c-8433-47ec-901e-99a92fdaedac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54396b92-c799-4a0f-8a74-4c83c0978a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55047f51-3d34-444d-82a7-decf331a691b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3826e43-0791-456b-b72b-656d64fa2a77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1161d0b1-80ba-463d-b0c1-51992143b821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56f1954-cb43-4a18-a47c-675a815201cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b85bde-4a1f-4756-941b-60c2dc903c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e94eb4-ed2b-4998-a300-8bf36d098805",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0078d1-94cd-4013-9180-4a85dcf65dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3aa8ec8-1df3-4a9f-84dd-04f2acfcfe9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee793219-1076-42b3-9d8e-65835674fd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d17a42-aac1-4097-879c-23e8c08899a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7026919-f3cf-4251-97cb-b5be7ef30b7e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b37c75a-4592-4c62-851c-fd71f0a3659e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d97d721-2c76-40d5-a7a4-23ca6bf2b4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fbee1e-7744-4161-8b67-cc1041e4c8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bd03b9-fa95-4030-a010-d32ebba37744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826c4e61-095d-45cb-9b40-c79e716a4c31",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad02286-05f1-4591-8977-940739445d35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8858bd6-a44c-411e-81bc-eb0128f3e36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e42708d-a94f-449e-b81b-959b14fb43cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37776df6-7c54-4295-92d0-99578542a4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9153221f-1176-45a3-b808-0b4b0cc53523",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0196bd2-17be-44a4-913b-01aaf061e0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "686a2049-ef20-47d1-8b49-e298d6c78bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d98f61d-e324-4ee0-a2d6-95b54c11cd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba97bf8d-fef6-4a03-8fb8-a1edad38c268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdd1b64-a25a-4b37-9757-ba9dc11dca4b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f9067b-bcd8-45a8-a642-08999d95c6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5078dec1-ed1d-41a5-98a8-5571345396c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2fe259-a211-496f-9300-d50bc0191a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d414ecd-7a9e-4c1a-9e4b-2bf075f30af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7035e34e-975b-4095-a7f1-1a48432adb6c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5ae026-ac26-4c08-bbd3-12fd126ce9c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fadaa1ec-b9bc-4f38-8565-27a19e8531f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1284651a-a99c-4ea8-8bdb-c93388bf7304",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d728b4e-7124-4d1b-9af0-3bba968e7cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3976971-7152-4e0f-9e60-3d7059c80d83",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb180b8-b760-45cb-abc4-e66b91d79dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a28271ab-b053-4e46-b048-d51e1947b850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdaf3e7-ae61-46a6-9680-2529a617ecc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ab1981-d755-4a0f-b3a8-ad051120fe47"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37d9e138-b07a-4af2-bda3-7978b3604de4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbd03c29-c152-49f1-acb3-c75b0a9dab68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1b0d997-f065-4b76-821d-d15d5b5217ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9086994-b339-4119-88a6-d4758720dc55"
                    }
                  }
                ]
              },
              {
                "id": "83d57ac8-eec8-48be-9639-10356bc48349",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f76b9e17-2152-40e1-a1b6-94f27f8341ec",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f9d030-88f3-48bc-a0b7-8e035be46ab4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a8539fba-7d08-4a2c-a6f1-e475d53b1ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf672645-d61a-4392-a533-87eaba147519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2db52e7e-c1bc-4019-9c6f-760fa1f9217b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29b7c63d-ff54-4fd4-b224-1793883d0292",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "751c3482-6232-4e44-9f75-fdc20e7d2b8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1debcf19-23f3-46d7-8675-9cc89a2d04f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "478365d9-fd98-4b6b-8a46-efface48fa93"
                    }
                  }
                ]
              },
              {
                "id": "0363df55-32d5-4657-b0fb-282aa06e98c5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4509827d-babc-4e98-b61b-bd0799f359bd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a14ea9-a53a-4303-9470-5abc846c5ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f4b90b61-429f-4849-bb07-0fe128d7b21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b9d97b-c770-4901-a419-38552d634f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86eee77a-e827-487c-94aa-cd4845f39d4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7521d4a7-fad0-48b6-94d3-0ebe2f72bf79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad892ad2-10a3-43c5-8923-3e7e786a7f15",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60fda39d-a403-4446-85fd-dbd9210341de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "421e6314-083d-47d1-ab40-b3986be105c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "415afe9f-3f74-40d6-9c0b-55bf262434d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "352966ba-7c58-4f78-9af8-5a58d2807b8c"
                    }
                  }
                ]
              },
              {
                "id": "3655bab1-40ad-4d13-aa94-2f925b1c6c5f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a613b36f-aaf9-48bd-8a1e-3edba2e0752e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "20e5686f-8cc9-4d39-bef1-5bb46c8c5fc9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "150549a8-c428-45b6-8ef5-4524b1caa84d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54dd4d5f-688d-4fd9-96ee-8c1573a33ddc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "594e6be6-8a75-49d2-bcc3-b513b292d8c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "eadda527-cbb2-4ec2-8a58-68b30e8d75fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01018800-e2a4-48a9-982c-e11010bcc4ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2798c69-f707-4050-ba17-dcb480d22079"
            }
          }
        ]
      },
      {
        "id": "1ef641da-b894-494d-87e3-fcfc76220ec3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "399a21d6-482c-4cbd-bd0f-4a8c205bddd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1633fd8-dc7e-411f-abf4-a1504b811e6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1de9cddb-9d08-4912-ba53-562f3156eea9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313220c0-ac2b-4f0d-baa1-c189cd424694",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2b1122f3-4628-4187-8498-e6a2f0db7cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483d8916-b35b-439d-b8d4-e96911d04bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34ec8bbc-e97b-4aff-aece-26181a186512"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30105dd5-a8b3-4676-8d54-85ede88484d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ae95a21-890f-47aa-952c-88445e00c747"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48f36d96-7136-498b-b563-f8d49f53012f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68c184ea-2a52-47eb-9e00-be1f9606a024"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25e51550-91fd-4ee4-8641-3d070679097e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "059d827e-be95-4a7c-b928-13a4c97dc0a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60702e73-ea53-410b-bede-03a80b46bfcf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f9ef696-0e2f-4600-a44e-fb8c65dcdae6"
            }
          }
        ]
      },
      {
        "id": "c4a75182-c22c-4ab0-80c5-673a50f760fb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "71515f9c-2c85-41db-bc4a-9dd80b6b2847",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7714ed2b-8f25-48e3-9a25-1092c37a462e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d9c190b-e1db-4ffe-8401-ce9af6a6f5fd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79daf2e0-35f0-467d-8181-a5c7e4aa1aa3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86f5f193-e324-4f55-b72c-f42869ba11d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad634cb9-50b3-44ec-9395-2e29d1e56696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abde3445-5281-4994-8a0b-688967bed184"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cbc5361-2a4d-45ca-b994-16bb6d555102",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b21e3d8b-770c-4732-9dc3-c686621c00fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5f14efb-838a-4e25-a4e7-cba72c9e8bae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "095e9746-f1f0-4bad-a8a0-2d65af93e211"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "123ab0d5-4401-4684-94ac-56ee72c398f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d127200e-0057-4dfb-b647-d1af7b907c68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11c38f83-8f95-4b22-833b-3b583165bb7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7535ec2f-c96a-4875-9f45-f3831e88d9e7"
            }
          }
        ]
      },
      {
        "id": "d4407c51-610a-464f-8031-224c7d8e03bc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0a828514-d06d-4a7d-b8be-aa1bec7120b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2615e504-80a5-4438-8d76-51b7a1fb653b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9bbfc587-c7bf-4fc4-808b-8f7c5ea2d8e9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd564fca-abc0-4ac5-9694-344a8f7be3fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2978010-4f68-4e19-b773-950cca0a9598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fb9e34-7080-428a-84a2-6ed513285e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83bc18df-4b48-46c6-a894-9be082316290"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3df03713-2ae8-4b5d-9809-5eda8aad3225",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c43000f0-656c-4c9d-b4c5-2f176acddbf7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "423d1bcd-0f43-4597-8125-b8cc1e7b4628",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "543321b2-7268-4520-be19-ce94d6c3b8a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "485ad5e2-26e3-4718-afda-37c2c7165f1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87072f6b-036f-4554-954c-bc1cf600eaeb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6733b00c-8280-4a99-8543-70204e7d42b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c51467e5-6f68-4ce7-86ef-ad24608fefe2"
            }
          }
        ]
      },
      {
        "id": "8b118b9c-148e-470b-b8c6-691966df6f06",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f2c88ad-ccb4-4b86-bdc2-4abd06356f17",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc75cfa6-632a-473e-ac2a-ce0f39b1c23f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0030afbb-6188-444f-a9a9-36bae944eca4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf976bb7-9c3f-4333-8576-b8ce0bfd49d0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e890548-41e6-475b-835e-ba874e624b4b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.6631578947368,
      "responseMin": 5,
      "responseMax": 360,
      "responseSd": 23.933948813707577,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700267683707,
      "completed": 1700267712036
    },
    "executions": [
      {
        "id": "88bad013-faa0-4322-b91f-fb4ecd3ca185",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5942fdf8-1784-49ac-afed-76416d67da9d",
          "httpRequestId": "c10e4ab8-0bac-4c47-8d97-08e33f8467ca"
        },
        "item": {
          "id": "88bad013-faa0-4322-b91f-fb4ecd3ca185",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b576467c-8899-436d-ad70-36051d3c7d84",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "89118441-e510-489d-9783-4ce077dc0dc7",
        "cursor": {
          "ref": "b2b0381d-f6b6-4a72-80a6-98d0fb130579",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4e8fb3ab-0d5d-472a-bade-01165ea4a082"
        },
        "item": {
          "id": "89118441-e510-489d-9783-4ce077dc0dc7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "79ab22af-362b-41a1-b5af-3119d499af45",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "069b6357-f60e-45f8-a609-fcfd77026606",
        "cursor": {
          "ref": "06fe07fd-0f07-435a-9bd0-079240adfa26",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e6875e04-224f-4d61-9718-5d1532d1ef3b"
        },
        "item": {
          "id": "069b6357-f60e-45f8-a609-fcfd77026606",
          "name": "did_json"
        },
        "response": {
          "id": "71a17d48-2c8b-48f0-af91-8b0995e8ba5e",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd16b308-5960-4cad-8a2d-9fe96ec46884",
        "cursor": {
          "ref": "e12d59fc-0396-4e22-9091-bb8178f3e7d1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a594687d-a6b9-4b59-94ec-5788aaed9d2c"
        },
        "item": {
          "id": "bd16b308-5960-4cad-8a2d-9fe96ec46884",
          "name": "did:invalid"
        },
        "response": {
          "id": "a1c66a0b-6632-4a46-906e-8a25018e7085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd16b308-5960-4cad-8a2d-9fe96ec46884",
        "cursor": {
          "ref": "e12d59fc-0396-4e22-9091-bb8178f3e7d1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a594687d-a6b9-4b59-94ec-5788aaed9d2c"
        },
        "item": {
          "id": "bd16b308-5960-4cad-8a2d-9fe96ec46884",
          "name": "did:invalid"
        },
        "response": {
          "id": "a1c66a0b-6632-4a46-906e-8a25018e7085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f06b73-5be1-4c83-8ccd-eb021d04918f",
        "cursor": {
          "ref": "2ef88270-f203-4684-b202-836e54ee2adb",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8bd62103-63b5-469c-9fa2-b71c50ffb5d1"
        },
        "item": {
          "id": "73f06b73-5be1-4c83-8ccd-eb021d04918f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4446b1db-b952-4dbd-9c3b-0dfaeaa7ecd6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 118,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9200c66-f390-4f86-9828-d08964d314ad",
        "cursor": {
          "ref": "d10be5b4-6fc6-4776-85a8-0a8a1a4f58f0",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b49763b4-46ee-470f-a98b-b6a992f5831e"
        },
        "item": {
          "id": "e9200c66-f390-4f86-9828-d08964d314ad",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "012de274-3067-47da-b799-74be2d5e840c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26d5989-29bb-4ec1-8208-dd6ebf3d2c29",
        "cursor": {
          "ref": "ab5fc987-8e6d-42ee-aeeb-a4e778085820",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7b5d4c44-18d7-499b-b0a8-8da06ab180d3"
        },
        "item": {
          "id": "f26d5989-29bb-4ec1-8208-dd6ebf3d2c29",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ce78e95e-b424-4147-b9c5-2da3bf88faa2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363ab5b4-c775-42d2-82b8-dc03e39aa54b",
        "cursor": {
          "ref": "9b6870d2-a178-46d5-9ef6-e70aaede5247",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1cc276f7-2227-408e-bc72-b1a711854c17"
        },
        "item": {
          "id": "363ab5b4-c775-42d2-82b8-dc03e39aa54b",
          "name": "identifiers"
        },
        "response": {
          "id": "7a02f5c1-7c60-4d92-ac3c-8fa0d3c7d1c7",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad5f44c-ce1c-44d7-b077-02fce8d613dc",
        "cursor": {
          "ref": "0e49490b-f528-483f-ab83-c9b635dd9276",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6dd7f311-2d50-4e9b-9e86-e9986a7e37bf"
        },
        "item": {
          "id": "6ad5f44c-ce1c-44d7-b077-02fce8d613dc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9f4cec59-b30a-4744-aa65-68f5128162b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1247f17-8afb-4882-b009-7b813bf3fdaa",
        "cursor": {
          "ref": "e7da38fb-e347-419f-bb17-c2c912544bb8",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "123b6a13-3766-43a2-8752-177bee2ae02f"
        },
        "item": {
          "id": "a1247f17-8afb-4882-b009-7b813bf3fdaa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "377c3911-672f-436f-9ed9-95a1dd3a7ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c371f8-c7db-46e1-8954-672b782263a3",
        "cursor": {
          "ref": "f983f738-abab-4a85-96a3-aa03c677422f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8cc4c9a2-ed73-40b4-93db-de94b3aea831"
        },
        "item": {
          "id": "f1c371f8-c7db-46e1-8954-672b782263a3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1d66f747-4f22-4865-ae61-245d000582f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef18be04-e651-4022-a094-375344fde2fb",
        "cursor": {
          "ref": "00389915-002f-48ca-9f3e-d0426a5f58f6",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "27bb8d70-fb9e-41c9-b4fb-8dbc069f9329"
        },
        "item": {
          "id": "ef18be04-e651-4022-a094-375344fde2fb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "643af6b8-d21a-4cda-9ab5-07022181f049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a95764-efc0-4da1-a2dd-59b570b21dda",
        "cursor": {
          "ref": "2c4c56f1-d099-4d6a-a2c4-69f6a11450a6",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5c7bccdc-5e7e-4947-87c7-53ba0d34221b"
        },
        "item": {
          "id": "f7a95764-efc0-4da1-a2dd-59b570b21dda",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ffe97c7f-7c50-406c-a153-a8dbaebcb8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7bc17f-5d32-4bd3-8da8-065a8ed764a1",
        "cursor": {
          "ref": "ece490f0-14bb-498e-8360-23c6252f10ae",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2f93535b-ab32-4e82-a29b-a6452f493003"
        },
        "item": {
          "id": "4b7bc17f-5d32-4bd3-8da8-065a8ed764a1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "46d087bb-edc2-4677-9690-793c2e34df34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a09e2ae-35de-4731-a792-0928bb1487fe",
        "cursor": {
          "ref": "bd7475ea-de2e-49cb-bf74-1da18bfd7f8d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dc5130b1-edad-4da9-abbe-02a5056cc571"
        },
        "item": {
          "id": "8a09e2ae-35de-4731-a792-0928bb1487fe",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "74339cea-98e8-4a98-97e0-5daa6e96097b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317878b3-a2ee-4b22-95ed-091b5604c424",
        "cursor": {
          "ref": "c5549c28-fe92-4ff7-8b7d-ab19a67f4d09",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "38b7bc71-5978-463e-85f2-3f54b965d5b0"
        },
        "item": {
          "id": "317878b3-a2ee-4b22-95ed-091b5604c424",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dc1ceb09-7805-44f3-97fa-d6caade026df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba54790-2b48-4d31-ad23-1bdcfdba57f8",
        "cursor": {
          "ref": "c99968fa-4dcd-4ccc-8782-7dca4d78d8ed",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "35a300f6-e7ce-4bf6-b3a7-e53271c27006"
        },
        "item": {
          "id": "bba54790-2b48-4d31-ad23-1bdcfdba57f8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4cae62b2-a71b-4f56-80ab-2bf3a83fae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9533823-aba7-4c36-b1f6-da337e5aaddb",
        "cursor": {
          "ref": "6be31b47-760a-40c8-bcc3-f1da1c5a3a08",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ad1a04dd-8c26-4598-a0de-4223c86ef9b3"
        },
        "item": {
          "id": "f9533823-aba7-4c36-b1f6-da337e5aaddb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3c6d57c7-a891-4e05-96f2-19a32ad9a149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f15423c-2a10-445d-af3c-f0341e99936a",
        "cursor": {
          "ref": "2ad86c6a-d8b1-4c70-b09d-8795068d65a9",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "001d1d18-3e86-4112-84a4-dbd8c33f8afc"
        },
        "item": {
          "id": "8f15423c-2a10-445d-af3c-f0341e99936a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8ea07e0e-b365-4ac9-bc52-2bcbbf82d0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111fa236-9120-41e2-93e7-14aedf3b3df1",
        "cursor": {
          "ref": "98fe000b-16a3-41b4-8569-6760664a718e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ecf111ce-3992-4a2e-b350-091548fff68d"
        },
        "item": {
          "id": "111fa236-9120-41e2-93e7-14aedf3b3df1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d3bdd96f-cf5b-4a7e-a385-0bb63e78b38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b4d5a8-5f09-49e1-8ae5-67a58a0e5bb4",
        "cursor": {
          "ref": "538c6b00-e295-4b67-ab4f-407329c74c1b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2ad010ff-fe98-4b54-9d90-8e56acfb1620"
        },
        "item": {
          "id": "89b4d5a8-5f09-49e1-8ae5-67a58a0e5bb4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5edf90b2-2eb8-467d-933c-f73671f7132e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa6cf37-e156-4f07-894f-4dd92386e185",
        "cursor": {
          "ref": "6b774260-9517-4b5e-b1a8-60f9240c9fde",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fce6d974-3813-4872-a1c4-b8bc1890dd60"
        },
        "item": {
          "id": "1aa6cf37-e156-4f07-894f-4dd92386e185",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b2a42a45-b3f4-4920-9eae-90e08fc478b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a535c043-f1b9-4b74-b79e-72729f9e9cb2",
        "cursor": {
          "ref": "95f62ea0-d574-47ab-939c-c05eb7840d01",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "255e4143-db3f-4364-b1d5-18b4ebcd7207"
        },
        "item": {
          "id": "a535c043-f1b9-4b74-b79e-72729f9e9cb2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "93771c1c-7774-4f25-b4cd-675dd33f6a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d9f565-eafd-418c-babe-94f593b4435d",
        "cursor": {
          "ref": "df721545-a313-4839-8e7a-5973cca29383",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "13b814da-65bb-44c6-9c8c-64313bd8629a"
        },
        "item": {
          "id": "95d9f565-eafd-418c-babe-94f593b4435d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "405e855a-f736-49af-92bb-ce1d925f3820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f00b043-5f06-48c8-8570-e10c23b1cdc3",
        "cursor": {
          "ref": "fe0e398e-bfe3-41a8-b086-de5ed2686dc7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bb165390-b174-45cd-990c-f3a2cff8351a"
        },
        "item": {
          "id": "7f00b043-5f06-48c8-8570-e10c23b1cdc3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c6580136-e7e6-45a6-a507-f8484cb585ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb6bca9-bbcf-4771-854a-68ddcc56b737",
        "cursor": {
          "ref": "baa71bd7-90f5-4e92-9bf4-24388131ad5f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "87d1a487-f0e6-42fa-8a7b-4cc1c9cabd76"
        },
        "item": {
          "id": "dfb6bca9-bbcf-4771-854a-68ddcc56b737",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8d75e387-18b3-4de6-96d6-2ce2045f7591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543b2f5a-ee8c-4567-9f8b-bfb272c77f4d",
        "cursor": {
          "ref": "d15fafc5-bf3b-4ef8-9de6-4ba28233aea7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a6c804fa-d218-42ea-8e7e-8d06cf498762"
        },
        "item": {
          "id": "543b2f5a-ee8c-4567-9f8b-bfb272c77f4d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0ca37b7b-2b7e-4e8f-9514-841608e030ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af41b51-219b-4bd8-979a-1b214dbc27e2",
        "cursor": {
          "ref": "f4ee8f7f-a39c-4e29-9922-0e5413cb97cf",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "569f9964-9f18-4ffb-8ecd-b21c76aa534b"
        },
        "item": {
          "id": "2af41b51-219b-4bd8-979a-1b214dbc27e2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "77133bab-22bf-4dcb-a02c-12ab9d191b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee4835f-e4fe-4ec2-a49a-b99f4435f7e0",
        "cursor": {
          "ref": "61033a4e-a0c2-4559-88b2-81714c7db144",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "30dfc0f2-5316-4436-b999-eb007fc4ea22"
        },
        "item": {
          "id": "3ee4835f-e4fe-4ec2-a49a-b99f4435f7e0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "69619090-f2bb-4fd8-8b5f-833a32ef188e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f11dec5-8b34-4c28-ba12-0ea56092b21c",
        "cursor": {
          "ref": "932ddf0c-27a2-4b48-be47-6ef84d5202e5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9ed80b59-130d-400a-803f-052f120ad3d8"
        },
        "item": {
          "id": "1f11dec5-8b34-4c28-ba12-0ea56092b21c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3c5e3a21-ba49-4371-bda8-4883add61635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615a4677-3e74-471a-8226-487419debc7b",
        "cursor": {
          "ref": "1935f167-c6ef-4e93-97ae-4e8989c701f4",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "917a3a91-ffab-4738-a26e-3e25f4e3e348"
        },
        "item": {
          "id": "615a4677-3e74-471a-8226-487419debc7b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f2772e7e-7c63-41ae-9355-922d2986cc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64aaa22-bb47-4244-9a48-4b5a00654ad1",
        "cursor": {
          "ref": "41138000-6b47-4124-8760-5ccddc0c8624",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "37f7d7bb-51a1-4545-934a-7ed45d059e9f"
        },
        "item": {
          "id": "a64aaa22-bb47-4244-9a48-4b5a00654ad1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "615ffa0f-1f92-4a9e-929e-b785ab32e8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e088caf-5853-4f8e-b960-97093afe562a",
        "cursor": {
          "ref": "7d71d243-e43c-4a2b-850c-a5fd0962fbfd",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "24891c6f-3ee5-4cb5-b3a0-6006369e2649"
        },
        "item": {
          "id": "2e088caf-5853-4f8e-b960-97093afe562a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "86e3480a-b812-433b-b5fb-4de3ee12f569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe27bb7c-af2e-410d-aa90-f98fc6945ea1",
        "cursor": {
          "ref": "b9f0017e-f7d2-4756-98b3-100c70bd7fac",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "82ac49fd-44c9-4f9c-b481-5e454a54386b"
        },
        "item": {
          "id": "fe27bb7c-af2e-410d-aa90-f98fc6945ea1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5a22eabf-c00f-428c-9e56-5fd21a92ce15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a93027-ba3a-4def-8d6a-c8d00e4914b4",
        "cursor": {
          "ref": "e02e3965-c8bd-4098-9991-b12daa6d55d9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d907c47f-287c-477b-b5c2-000f45688293"
        },
        "item": {
          "id": "72a93027-ba3a-4def-8d6a-c8d00e4914b4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f4988f9a-d153-408a-89b4-009759760b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5a9a75-feaa-43bc-8730-c21ea9917d7e",
        "cursor": {
          "ref": "7545dc8a-fdca-4b11-8c88-f0fa5a2fff44",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "44e4c221-2173-4c4d-ba0b-3788ba9ec7dd"
        },
        "item": {
          "id": "0e5a9a75-feaa-43bc-8730-c21ea9917d7e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f1f06771-97c5-49f5-85ee-6656f283a6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65e9c56-7892-4581-b926-940fd1d9404a",
        "cursor": {
          "ref": "0e94bb70-294f-4bee-8fbc-3227c058b110",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "df1cb468-e9c6-4604-87ba-207ff1ec57a2"
        },
        "item": {
          "id": "e65e9c56-7892-4581-b926-940fd1d9404a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2cc21be9-e396-4589-a3e3-dba233400b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8e2a6c-c5c8-4e0f-aa02-1657bc655da7",
        "cursor": {
          "ref": "3ddd9940-f112-43ea-853d-97661f9f976e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2f986c11-5039-48be-8b36-cc95935943ab"
        },
        "item": {
          "id": "be8e2a6c-c5c8-4e0f-aa02-1657bc655da7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8526fb01-88cf-473a-bb97-532f9557f8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c0bf57-20b7-4a43-9517-6bf85db87173",
        "cursor": {
          "ref": "141939af-e09b-40c6-b7d6-040730c2f4e8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9cad399c-0508-4f7a-8754-c3bd47d85c1a"
        },
        "item": {
          "id": "41c0bf57-20b7-4a43-9517-6bf85db87173",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6cffd0af-d43c-4725-8b84-04845d41fa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea7cb9c-7c17-4c35-a7b4-e9012d907e3d",
        "cursor": {
          "ref": "b90c9f5f-296f-4799-b8f4-8e4cddf669ea",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a4753329-99db-4ecb-80d8-3a101c5f6a80"
        },
        "item": {
          "id": "cea7cb9c-7c17-4c35-a7b4-e9012d907e3d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f41755b0-7aff-4123-9187-4df02f5d51e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fc77aa-127b-4b9b-8d91-9b29ea0e0cde",
        "cursor": {
          "ref": "959767ab-946c-4867-b838-e3d8772189b1",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "677c33cf-f56a-4865-a0e4-852471230800"
        },
        "item": {
          "id": "27fc77aa-127b-4b9b-8d91-9b29ea0e0cde",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "07cfe402-9999-4945-ae3a-7923df9eea42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4d30fa-94fd-4fdd-92b5-d9eeae0058f5",
        "cursor": {
          "ref": "664112e5-f5ea-4a69-b3b2-4251fdd29b18",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8b2b5fb8-35f2-4a76-9ece-7b9e99fa4cf9"
        },
        "item": {
          "id": "1a4d30fa-94fd-4fdd-92b5-d9eeae0058f5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "738f2f86-7fdc-43a8-b1a4-2570ee72a80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade6f9c4-2164-45e5-bac5-056f27cf31d8",
        "cursor": {
          "ref": "185c5dee-ac87-467f-be15-c42b65a3d716",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "53adf067-4312-4204-830e-df1cf0c79059"
        },
        "item": {
          "id": "ade6f9c4-2164-45e5-bac5-056f27cf31d8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "67d4ca4b-da58-4c85-a4f4-d1dbcd7f9ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b128c9ec-b6a6-46da-b04a-61dab682cf35",
        "cursor": {
          "ref": "65b97617-e9e2-4877-8b4a-62133391873c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7b20599c-8944-4ae0-b99d-4aa8c8595061"
        },
        "item": {
          "id": "b128c9ec-b6a6-46da-b04a-61dab682cf35",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "afec479e-9ee9-454f-a82d-f4cf5f13bd33",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 90,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d206dc2-3bda-4b04-8368-191c60767c15",
        "cursor": {
          "ref": "ed6a8dae-ffa2-4960-8c63-fe813941f3c9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aa52991c-9f94-4207-bb3d-9f06e4e9bc72"
        },
        "item": {
          "id": "6d206dc2-3bda-4b04-8368-191c60767c15",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "16ee711f-0d38-4ec4-aef7-98cb4fee6e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7db6e39-dc11-409e-bd05-3b3ffafe067c",
        "cursor": {
          "ref": "d0d16479-8a3c-4c6c-bd71-6a6af31dcd5d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "99c563b3-9f16-430f-972e-6ebe3972699c"
        },
        "item": {
          "id": "f7db6e39-dc11-409e-bd05-3b3ffafe067c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "953a702f-1cf2-4529-b7c0-623ef9d792bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37490288-d164-47fb-8b97-ee3f2bd4a613",
        "cursor": {
          "ref": "57e212bb-1617-4139-8c38-718fe90a9f4e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6cd73e37-cd8c-41c1-87ba-69a79144cfb7"
        },
        "item": {
          "id": "37490288-d164-47fb-8b97-ee3f2bd4a613",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4f085d9a-880c-41b7-bc1e-43da487c97d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bc6c65-a5f9-474d-9c2d-95abe2a6d026",
        "cursor": {
          "ref": "8e7b6efe-cf2e-4b13-9eaf-b2c38bbd94dd",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a350766a-2533-430b-be46-b1116954f566"
        },
        "item": {
          "id": "76bc6c65-a5f9-474d-9c2d-95abe2a6d026",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "29c10c5b-c1b5-4ab9-a29d-f11705b9e849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4239b4a3-b780-42ec-8e05-7c6df0722a1c",
        "cursor": {
          "ref": "8e918549-064c-473d-a926-5fef26fa26de",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3c3a9bce-8a1d-4585-a9eb-c28126c2ccba"
        },
        "item": {
          "id": "4239b4a3-b780-42ec-8e05-7c6df0722a1c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3b00d3e9-5d98-4982-b33a-e303dbc9038e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef97f836-6776-4a5a-bce1-2e0a431e1b22",
        "cursor": {
          "ref": "e7bd4aa3-cf2e-4ee8-952b-8f92ffb07aea",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f49ab006-c731-4f6f-9b4b-bbc92c8e3847"
        },
        "item": {
          "id": "ef97f836-6776-4a5a-bce1-2e0a431e1b22",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cf0a7c41-01d4-4e8c-9d51-f7056757bd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870fc99a-bc23-4459-8fb9-8b191537b424",
        "cursor": {
          "ref": "cf20a984-6487-4ba7-b2e7-bb518925ab0b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b982dc2c-9b60-4e88-b420-cdd2b47229e8"
        },
        "item": {
          "id": "870fc99a-bc23-4459-8fb9-8b191537b424",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "95bbba24-fb60-4355-9029-2b2d5978c6bb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efbcaab-a4db-4c8a-a257-e8e90dcef4b3",
        "cursor": {
          "ref": "0cab404e-b017-4a6b-b849-6f2f03141d27",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "866eb496-d53a-4086-8e41-1a12fc05c0b3"
        },
        "item": {
          "id": "9efbcaab-a4db-4c8a-a257-e8e90dcef4b3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f12d16fe-029f-47c8-aef0-8e646bd1165f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189f914c-d937-4ed2-adda-3737dff73a07",
        "cursor": {
          "ref": "daa67814-e14e-446b-bc42-18328d83ef38",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4478a442-8de2-450b-a75f-68f8919e70e7"
        },
        "item": {
          "id": "189f914c-d937-4ed2-adda-3737dff73a07",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3da49fef-0aec-454e-b67f-06d4b340aa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef82aab-9d9a-44a3-a9ed-0a8f23926c72",
        "cursor": {
          "ref": "893ed627-a075-453e-9948-0fe14f49419b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "10238641-9483-41a1-b114-08e70ae270ba"
        },
        "item": {
          "id": "eef82aab-9d9a-44a3-a9ed-0a8f23926c72",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e2696e21-0729-4457-8bec-bb031b49bc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce516243-a15c-4637-8520-2fa7fee7918a",
        "cursor": {
          "ref": "7d26137a-4e03-40d3-86be-c0ae1c81be51",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a26de5bd-340f-4939-b1ef-f9c9bfd4b2d5"
        },
        "item": {
          "id": "ce516243-a15c-4637-8520-2fa7fee7918a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7d7c15f0-bacf-495b-9ca5-a439fb192c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f0bfde-2176-4b7a-92ed-7375e198c4a3",
        "cursor": {
          "ref": "5e3a53da-1179-4ff8-871c-82804583e335",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ef9fa70b-9c26-4c70-bf50-be6b9e71937a"
        },
        "item": {
          "id": "78f0bfde-2176-4b7a-92ed-7375e198c4a3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2788c418-9c82-45e9-a55e-81a6137800f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d0e443-1991-4ccd-80f3-0a7658264638",
        "cursor": {
          "ref": "c436708f-a8f7-4f00-8f78-c28ed56f4614",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4a7bd0ba-6b31-4f30-aa66-50537c68e52d"
        },
        "item": {
          "id": "b0d0e443-1991-4ccd-80f3-0a7658264638",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e883bc60-292b-49f5-9ac5-e5273ee83b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894dc98f-70d6-4774-abe2-d9aac88b4543",
        "cursor": {
          "ref": "c899b3bd-a8c2-4ccf-968e-6dc253f10a89",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c4726082-9013-467a-9ffc-e4aab7f44725"
        },
        "item": {
          "id": "894dc98f-70d6-4774-abe2-d9aac88b4543",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8a83aa3f-2fec-4e8c-92c1-9c0f15f4d8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c04647-d8c9-412c-83e5-ea0c8950a989",
        "cursor": {
          "ref": "2db63c00-260c-43c0-b088-a3b54d3fbdad",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d396ea99-b4a5-4912-a28b-b681abe6166a"
        },
        "item": {
          "id": "91c04647-d8c9-412c-83e5-ea0c8950a989",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5e9335e7-02ff-4d6c-8a15-f1a39fa60255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f866102d-a7fe-4f58-a18b-d2e9ebc75180",
        "cursor": {
          "ref": "e79911ad-e321-40fb-81b6-46e6cd7efe6d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ab6e8f89-2d6a-4ecd-9ecb-2d2494cbdc36"
        },
        "item": {
          "id": "f866102d-a7fe-4f58-a18b-d2e9ebc75180",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "43295be5-cd82-45d8-8f1c-bbcdb330b320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5007ba2f-b9a2-4da3-8302-8e55e7df4e7f",
        "cursor": {
          "ref": "c635313e-bd7f-4720-8f55-daa351b3e2a5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2a99f27b-8553-4c7e-8d6b-78b3ae5e67c7"
        },
        "item": {
          "id": "5007ba2f-b9a2-4da3-8302-8e55e7df4e7f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "de038388-1286-4510-96b9-5d7139dff9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79bff31-e2a3-4222-9587-6d94dc9276c9",
        "cursor": {
          "ref": "9fe84303-455a-4710-a708-2afe3952c70b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5fdcd431-f2cd-4348-bc0c-d8997abffe18"
        },
        "item": {
          "id": "c79bff31-e2a3-4222-9587-6d94dc9276c9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a1de6f1b-9cac-4f2f-bc0e-7eac9fe07532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737d0a47-4946-42e6-aea3-4098abaf2c00",
        "cursor": {
          "ref": "f6212ca2-14d7-4625-a35a-646ac3913b2b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3929e337-5958-45b1-9a19-44cb86688c4b"
        },
        "item": {
          "id": "737d0a47-4946-42e6-aea3-4098abaf2c00",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5b1bc344-ba89-47f2-96b4-4059f70531e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f36793-d3a1-4ae0-8400-88d43b1fe0a0",
        "cursor": {
          "ref": "18cb599b-b773-4c57-a4ab-27759f7f7443",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "04052d07-455f-45f0-8b7d-7b86c379bbb8"
        },
        "item": {
          "id": "45f36793-d3a1-4ae0-8400-88d43b1fe0a0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "76c9abcc-378e-49d1-a44b-54cf8bd102e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b9f7fb-7811-4a44-9963-38f87f18affd",
        "cursor": {
          "ref": "03e9705a-7496-49cc-8e37-ecbcae8ea090",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f835882e-1750-4bf7-af2e-72437b6e4dcb"
        },
        "item": {
          "id": "f3b9f7fb-7811-4a44-9963-38f87f18affd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0355668c-817d-48e0-889f-2dc8323391f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e863e51-d4c2-4473-ba71-a46039d6f2e1",
        "cursor": {
          "ref": "85e77997-675a-4469-8452-05f579e303e5",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c5e1ee45-2fcd-4456-8423-6563d37611fb"
        },
        "item": {
          "id": "3e863e51-d4c2-4473-ba71-a46039d6f2e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5e5d123b-9b5b-41b2-b1e4-fd1cdd3c4812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b92cb08-0446-4f48-9f7c-345905a0f0e7",
        "cursor": {
          "ref": "c1ddaf67-d9f0-4255-bac1-7aae35d9827e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f0380968-4c72-4af2-98a4-285b4cff10e4"
        },
        "item": {
          "id": "3b92cb08-0446-4f48-9f7c-345905a0f0e7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e3daa598-c079-4043-84c4-bbb42c233cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3bc7d4-1891-4073-94a2-9925507a8c78",
        "cursor": {
          "ref": "0b2ac2c9-7b48-4a38-94f5-320e51b14d24",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "57947f83-c05a-4d16-8ac4-df8001588ba1"
        },
        "item": {
          "id": "0f3bc7d4-1891-4073-94a2-9925507a8c78",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7f0f6e83-636f-4015-9f14-95f028fb540e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a7a48f-f1ec-4cb5-bb32-f5efb53b2de4",
        "cursor": {
          "ref": "42c69b49-b44a-4226-a47d-93f7c4002524",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8e7d3041-0a82-4e28-9c31-bbae26a44a19"
        },
        "item": {
          "id": "94a7a48f-f1ec-4cb5-bb32-f5efb53b2de4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cea3ef28-bea8-4abf-89d4-9ff804a418d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b744a1e5-92ed-43dd-8ebf-e4db3dfc0d2c",
        "cursor": {
          "ref": "4040cc61-7d84-4309-a825-21742f3cd38e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6db0cff1-73c6-4be2-b765-bebc4a0d37ad"
        },
        "item": {
          "id": "b744a1e5-92ed-43dd-8ebf-e4db3dfc0d2c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9a5678df-6e7c-46c7-8860-dc7ab61fd42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d770777-d2ef-4bac-8ca0-b9189c90c316",
        "cursor": {
          "ref": "e69072d4-c806-4465-80d9-9fbfa0a2603c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e1652038-0180-478c-8cba-f3b1dc4396e1"
        },
        "item": {
          "id": "1d770777-d2ef-4bac-8ca0-b9189c90c316",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "765f1d0d-db57-4e4c-a5bc-927a9633017d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4792e416-eb05-4684-80bf-97f73c119022",
        "cursor": {
          "ref": "475c8dec-1a75-455a-86f6-06a4cb41bec7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8cdb6671-6b42-48a0-812e-f2dc04f7fedd"
        },
        "item": {
          "id": "4792e416-eb05-4684-80bf-97f73c119022",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bd88b2d0-bffc-4953-b8f3-b4d9d9938c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f845d0-995c-4da7-9e51-e2101d768caa",
        "cursor": {
          "ref": "c1c8aa0c-a792-4370-8265-a760e07209c3",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "939ed461-6dd8-4b9f-b788-104445a34378"
        },
        "item": {
          "id": "f8f845d0-995c-4da7-9e51-e2101d768caa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "21c0b2aa-b72a-4bd0-9a88-460ba120b108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572519f3-6452-43ae-aded-8c9333217fb3",
        "cursor": {
          "ref": "70620ad3-7863-41ae-9e2a-63ed60ed1fd0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1d062c84-bd28-44f2-a501-bb4bafa558b1"
        },
        "item": {
          "id": "572519f3-6452-43ae-aded-8c9333217fb3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a6786fce-1c68-4ba5-b93b-4e1b4ab0658d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f0dbfe-0cac-489d-89bb-e4fd6ff587a9",
        "cursor": {
          "ref": "5ecf6050-bc96-4055-91b8-ef6c5a50452f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c36ea423-faf3-4057-8d89-2df26541e01f"
        },
        "item": {
          "id": "b2f0dbfe-0cac-489d-89bb-e4fd6ff587a9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d9b62371-8550-49c5-968b-9de96311f657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff915ba8-0019-4995-acbf-9ecc45f06f76",
        "cursor": {
          "ref": "728e5cf1-cf3b-4f2b-8079-d4e9b1814247",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4fefefd1-1e3c-49a2-8fec-2f70791c99cd"
        },
        "item": {
          "id": "ff915ba8-0019-4995-acbf-9ecc45f06f76",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3abb60d3-2404-4981-9e98-221f7cd0a897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a345547c-9611-4222-ac26-e5cbd13799c5",
        "cursor": {
          "ref": "7c7137e2-e36e-4066-839d-736f8b2d742f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c9c5a932-5915-490c-a8f0-a8d01c8483a7"
        },
        "item": {
          "id": "a345547c-9611-4222-ac26-e5cbd13799c5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "92140a5a-9f08-43c9-bbb9-12c7b386fa0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52261357-d384-40b9-bb1d-0de48737ffdc",
        "cursor": {
          "ref": "33a640ff-bbc5-4c9c-8244-65ac5fc870af",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e3ad9da3-123e-4a78-b6c5-74baa3518c6e"
        },
        "item": {
          "id": "52261357-d384-40b9-bb1d-0de48737ffdc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6d7ec5ff-8583-40c8-9309-1c090686d0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3454cdcb-c4cc-4d6c-a11e-d354a779f43d",
        "cursor": {
          "ref": "bb299be6-815e-4fac-b336-f8f78ec607c6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dea758eb-016b-4383-98dd-f269181f2c62"
        },
        "item": {
          "id": "3454cdcb-c4cc-4d6c-a11e-d354a779f43d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b90f6497-25c7-495d-82fe-e6d5cecdca98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575e95df-5d4f-44bf-ab5b-6865bf5ea0bb",
        "cursor": {
          "ref": "7bf34026-8036-4eb9-880a-baa7f3dab208",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "62dd5fb1-7b69-41a7-a772-078b397a6021"
        },
        "item": {
          "id": "575e95df-5d4f-44bf-ab5b-6865bf5ea0bb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cb33050e-9236-4647-b489-345d1bf4f21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f330fc6-1919-488a-9c9d-3eff91aef7d4",
        "cursor": {
          "ref": "e128121d-184d-455c-a8d8-0b9fd1cc761d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7db5a1f2-67bc-410c-b92d-f63855a8a72b"
        },
        "item": {
          "id": "9f330fc6-1919-488a-9c9d-3eff91aef7d4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cc3606cf-d5a3-4587-8277-f3c2c4491d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a43c7e-73a7-49e7-b3fc-d3b5e9ef3148",
        "cursor": {
          "ref": "22766a12-de85-419e-ab12-89f7cd169e48",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f7667d00-fac3-4ef3-bcd9-ad161bf42c6f"
        },
        "item": {
          "id": "11a43c7e-73a7-49e7-b3fc-d3b5e9ef3148",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e21f6bdc-3a56-49c2-93ec-7d513e5c5ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba604173-a291-44a1-b932-9e074e9b14bb",
        "cursor": {
          "ref": "5990aff7-75ec-40e5-91ef-b0a058254d8c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1a4198b9-8325-4a13-b1ff-836d8e8fb968"
        },
        "item": {
          "id": "ba604173-a291-44a1-b932-9e074e9b14bb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "118e753f-fabd-4d4e-950a-dc2e1f3c87e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b99d0fe-3c8d-476c-9af8-8e3e05f535f5",
        "cursor": {
          "ref": "f6915662-3e6e-4f43-9f0c-cc01b1b52a50",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "712c4f98-7f96-455f-8b4e-5a31e9036221"
        },
        "item": {
          "id": "8b99d0fe-3c8d-476c-9af8-8e3e05f535f5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "926377fd-fe75-40e7-9d83-f59994dae04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d646a105-ff61-4d02-818a-5e01828f0d86",
        "cursor": {
          "ref": "2852eb0f-2d33-47fb-ad05-9a717d00e31c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9e3418be-e413-4194-b5a0-aac42b04ed9f"
        },
        "item": {
          "id": "d646a105-ff61-4d02-818a-5e01828f0d86",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8f2c4910-52c7-4ddc-b15f-0e0247c8e573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff21fecf-b2b7-4110-96fb-84c3f254ecf6",
        "cursor": {
          "ref": "2e01850c-ee78-4b51-9e98-4f2ecbdceb87",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c37c0934-bb53-480b-9568-51bceeafbd1b"
        },
        "item": {
          "id": "ff21fecf-b2b7-4110-96fb-84c3f254ecf6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "66742b7c-2645-4fb9-8196-ca82dcb8c64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe040289-b9ba-41cb-8787-72da673ed6e6",
        "cursor": {
          "ref": "7aea4763-4d64-435c-8b30-7e847b30a478",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "33eb5bcf-86ec-46ec-99ff-47c4d454ceb2"
        },
        "item": {
          "id": "fe040289-b9ba-41cb-8787-72da673ed6e6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0bbeddd8-bf3a-4f47-879d-a58c72eb95e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8d774f-58ea-4286-96df-de69055068b9",
        "cursor": {
          "ref": "eb78d7fb-3c38-43fd-8fcd-4d94f238cb4b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f5df179d-596f-45bb-920b-434cf193f47b"
        },
        "item": {
          "id": "ca8d774f-58ea-4286-96df-de69055068b9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "af206a19-d97f-4eee-b1eb-7b21a25d55f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc6339f-c44b-4df4-bbf8-83579372e797",
        "cursor": {
          "ref": "18f7b576-b94e-4995-83e4-50893f3b7785",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2f6821ae-c6fa-4c8e-9c46-adec87106d21"
        },
        "item": {
          "id": "bdc6339f-c44b-4df4-bbf8-83579372e797",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "523ae4ae-148b-471c-b31c-98461b1b41af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3767f128-ab3d-4906-b488-48301f741ce8",
        "cursor": {
          "ref": "489b6580-67bf-4615-a115-bddbe7dc9687",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "954ecf1b-bd3f-4c6a-8cde-d1f047188e70"
        },
        "item": {
          "id": "3767f128-ab3d-4906-b488-48301f741ce8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "59f311fb-ac9b-45f7-b65e-3c856ac5263c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c874b7f-260c-440b-97ee-db82ac622165",
        "cursor": {
          "ref": "d9e6b422-b909-493f-a735-e978a98613e3",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "54307cd9-ac23-4977-87e1-a04e3cd2ab50"
        },
        "item": {
          "id": "5c874b7f-260c-440b-97ee-db82ac622165",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fa09a65a-c50d-4227-86f4-0f9b169c3298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46788b4c-3fcb-4ebd-b1e5-37da40b17c12",
        "cursor": {
          "ref": "04f2f40e-3ef9-4561-aed7-202d2897eb3c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6db538e7-0eb5-418c-a5e5-d83d9d0f05d7"
        },
        "item": {
          "id": "46788b4c-3fcb-4ebd-b1e5-37da40b17c12",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "20c2d98a-21d7-435e-884b-36f97da441a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d429f7b9-ac2b-441e-8d77-d3c5b0ed395c",
        "cursor": {
          "ref": "f72b63b7-f534-498e-8d21-ab9bc74bd221",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b11ef9de-867c-4207-bf81-01ee7ee081bf"
        },
        "item": {
          "id": "d429f7b9-ac2b-441e-8d77-d3c5b0ed395c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5027753d-9fcd-45b8-a527-5cdf4d5c94f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d49446-739a-4eed-800e-058069251b7b",
        "cursor": {
          "ref": "d08136ef-f4a0-4f1a-b43e-1ae210a3c887",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a4807395-bdb3-42c8-bcef-9e4e333bc5d1"
        },
        "item": {
          "id": "f0d49446-739a-4eed-800e-058069251b7b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3840e97d-cba8-47a7-9475-4df1e00eee8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698ad272-63ff-4bec-89c4-32b6c7150c1c",
        "cursor": {
          "ref": "10e26caf-1ef1-4ebb-826d-d0a01f43812f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e661400c-ddac-42a5-ad69-c923ff15f434"
        },
        "item": {
          "id": "698ad272-63ff-4bec-89c4-32b6c7150c1c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f126d23e-b8b0-4b28-a6f0-9e0266edecc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aef093a-92b2-438e-a3b7-e50497a7cbd6",
        "cursor": {
          "ref": "9da32843-f452-4894-9a5a-075cf9d31612",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "460528cc-a874-4b5d-acec-264ab6f30847"
        },
        "item": {
          "id": "7aef093a-92b2-438e-a3b7-e50497a7cbd6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "60f107f8-c43e-41c5-98af-4e94a3a775e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8b9ba7-0b2b-48d7-87b0-042219c22aae",
        "cursor": {
          "ref": "1904d9a3-c786-4ea5-9bb5-973f7df50f73",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f90fe0d5-f859-4faa-966b-103ce2f988f9"
        },
        "item": {
          "id": "ce8b9ba7-0b2b-48d7-87b0-042219c22aae",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d5fb884d-db67-4270-8074-a583fae55eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04272577-eecf-4de1-b81a-a5eb29dc9638",
        "cursor": {
          "ref": "b81c0f0c-d65a-4841-832c-0648b6b0f196",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b3645982-bcd3-42d6-a14e-1e65b472708e"
        },
        "item": {
          "id": "04272577-eecf-4de1-b81a-a5eb29dc9638",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "68d9cb39-d056-4885-9351-006ef6773f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836672ce-496b-43f0-97d6-0a3bff95853c",
        "cursor": {
          "ref": "de55eb8c-4542-4401-9805-c5cc00cff06b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5d8585b7-8f1b-4f74-8487-5467b5d17c73"
        },
        "item": {
          "id": "836672ce-496b-43f0-97d6-0a3bff95853c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4f571824-5b5a-4c26-aafc-15298f77f75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110aeeaa-ae72-439f-8350-3aefd256d77d",
        "cursor": {
          "ref": "1cb83480-9761-4c92-a851-ae91392cdef3",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "af36b97f-d174-42ea-bc35-882ab233dfe7"
        },
        "item": {
          "id": "110aeeaa-ae72-439f-8350-3aefd256d77d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eac5e5b5-8ebd-4100-ae70-80763ec3c55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c55886-5ac6-4484-91c2-7045b16ebfb4",
        "cursor": {
          "ref": "4198224d-be50-4ee5-a051-e0ebbc6dd6f6",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ad63a416-07b0-4b8c-9ee9-2962af10db3b"
        },
        "item": {
          "id": "d1c55886-5ac6-4484-91c2-7045b16ebfb4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9cb7aefe-745c-459a-b711-23ed7fc518e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b3400e-85c6-4966-9788-794cfc41ff5c",
        "cursor": {
          "ref": "6ba24135-11fb-4b78-91b6-414e128c1943",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8dd851fb-8d41-49d6-9966-25130b7d0493"
        },
        "item": {
          "id": "26b3400e-85c6-4966-9788-794cfc41ff5c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9ff3f1b0-9dc6-4974-9c58-167724f4132f",
          "status": "Created",
          "code": 201,
          "responseTime": 107,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0f3081-11d8-426b-95ac-51f5b73aba24",
        "cursor": {
          "ref": "c6d18de7-4bc0-4ddf-be83-268b599e1ffd",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "97b15233-4a9d-44ba-b76e-ffaa784235ec"
        },
        "item": {
          "id": "2a0f3081-11d8-426b-95ac-51f5b73aba24",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e059dd1d-02ba-40a4-b6cc-e191d0f7e400",
          "status": "Created",
          "code": 201,
          "responseTime": 360,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "620a82d0-cdfc-4868-b465-b920db4fa5a5",
        "cursor": {
          "ref": "d2bd26bc-6c79-4871-a839-7b2ad539c0d3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "51b62ee7-44cc-4499-9bf0-705b409f45ad"
        },
        "item": {
          "id": "620a82d0-cdfc-4868-b465-b920db4fa5a5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ff5705f7-0c6f-40d9-a544-bdd4bce13b95",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d9b550-fc77-4061-a13d-0aa93cde46e2",
        "cursor": {
          "ref": "222a60e0-e471-4a8b-9d66-bbb6d6449ec1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5da6d4cc-5e8d-4630-8c99-09f4f9d46aa4"
        },
        "item": {
          "id": "47d9b550-fc77-4061-a13d-0aa93cde46e2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0e4b56f2-afff-4591-8138-c585559b5b41",
          "status": "Created",
          "code": 201,
          "responseTime": 97,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9b44e4-2c74-4d7b-965e-ce49ce17b78b",
        "cursor": {
          "ref": "2044a602-2455-459c-bc93-841b79b53db0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e458be3c-37b9-45df-8507-ca3842897e18"
        },
        "item": {
          "id": "ce9b44e4-2c74-4d7b-965e-ce49ce17b78b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "37bdafec-8a04-4125-bc8e-40284cb2d57d",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0f3deb-83a9-4677-88b4-dc2d8939cb3c",
        "cursor": {
          "ref": "1beb4b00-f1ca-47c5-9f3c-8aa3c5a769c6",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0b1f1612-909a-4f0d-a6a0-6794a3c4841d"
        },
        "item": {
          "id": "bc0f3deb-83a9-4677-88b4-dc2d8939cb3c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cf84b275-a985-4003-b856-92a250c3cedb",
          "status": "Created",
          "code": 201,
          "responseTime": 98,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d80a34-3b85-43b1-81e9-ba19300796db",
        "cursor": {
          "ref": "0ed1f51e-8ed3-445e-987b-dcb592afb5d4",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "26adc97f-c5e3-4298-aebf-76b8550fb532"
        },
        "item": {
          "id": "a1d80a34-3b85-43b1-81e9-ba19300796db",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b0bd4ce2-bcc9-4842-bb6d-f4fb2ba50ada",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6863f540-27cd-4abd-89de-00f432c796b9",
        "cursor": {
          "ref": "266a30aa-b233-4fb0-bb5e-77710d4598e8",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cfbd8038-a927-43c9-82ec-fa75f25c1769"
        },
        "item": {
          "id": "6863f540-27cd-4abd-89de-00f432c796b9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "75c0c620-fb12-46ee-bb79-fcbb0957cbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb76d7b-7f44-4710-8a82-4e7cb751e3df",
        "cursor": {
          "ref": "49e6472b-9225-461e-b06c-bf2853a9111e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0807a074-0eb0-4a10-b618-57c1ce53722f"
        },
        "item": {
          "id": "ddb76d7b-7f44-4710-8a82-4e7cb751e3df",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "52633353-de63-4bb5-bcd7-44d479ab0d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d663e09f-4629-49db-b239-177468115998",
        "cursor": {
          "ref": "d1456516-f740-4604-858c-e32a7954d1e8",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b1178fc0-a8c9-4572-a86b-4c2d38802a67"
        },
        "item": {
          "id": "d663e09f-4629-49db-b239-177468115998",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c7863fd6-1b5a-4b81-a15e-9d8fca8a483c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508ea0ac-e02d-4479-8fbf-f8fd22a061a0",
        "cursor": {
          "ref": "0823cce7-daca-4705-bad2-b1a12dc2574b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "113a7370-2758-4b3a-8610-fb5a162e69ec"
        },
        "item": {
          "id": "508ea0ac-e02d-4479-8fbf-f8fd22a061a0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8e130d70-db00-4b7e-947a-607b58b9d06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5bdd15-f51c-484a-83d1-75a9fc576dff",
        "cursor": {
          "ref": "143fb1bf-96f9-4ffb-bf01-668d37736a39",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9c065a6c-01ea-4522-904e-bf31213614ee"
        },
        "item": {
          "id": "da5bdd15-f51c-484a-83d1-75a9fc576dff",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a49c25ff-b4e0-4abc-8977-7b0ac3761006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d946761-b932-4f87-b1f0-a582a1c87090",
        "cursor": {
          "ref": "ba380e1e-f254-4ff6-aef3-025597f3dfe7",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "19d38205-18b0-4cae-8f50-eb5a2c7990ae"
        },
        "item": {
          "id": "1d946761-b932-4f87-b1f0-a582a1c87090",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0b63119e-0175-4137-8d69-eb611489df2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70998e74-a2e9-41cd-8e1a-699fce0b2840",
        "cursor": {
          "ref": "9544e6fe-b554-46ab-889d-4dc335820802",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0382e712-3c22-485e-8069-11ac40165f42"
        },
        "item": {
          "id": "70998e74-a2e9-41cd-8e1a-699fce0b2840",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9ae19557-416e-4b40-8132-7fcdbef81544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23aa388-c70c-4614-ac45-9e27f06bff25",
        "cursor": {
          "ref": "6288bb7f-b8ed-41a5-ad96-b1a0fb17bf32",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "337b69d2-ca64-4eae-91b0-a5888212e955"
        },
        "item": {
          "id": "a23aa388-c70c-4614-ac45-9e27f06bff25",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b3e11894-a7d3-4c30-a6fe-ba74e5b0b0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d118deae-4375-4003-8f47-e40dafb89f4b",
        "cursor": {
          "ref": "9aacaa64-b88e-4190-9839-5d6613ad25d2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7738bd34-a376-422f-9a2c-07b844985529"
        },
        "item": {
          "id": "d118deae-4375-4003-8f47-e40dafb89f4b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f63ed82f-2e12-4c69-876a-af324d8e9cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a56d90-4eb9-469b-bfb7-00d14661481e",
        "cursor": {
          "ref": "01b074ab-7957-4b86-a087-7f944b793688",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "715fa0e6-1752-4bd7-aa34-0bf142eef9b8"
        },
        "item": {
          "id": "d7a56d90-4eb9-469b-bfb7-00d14661481e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fa274854-94d6-4edb-be56-38ec4c9390d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bed7f7-31df-4c81-8bd3-9e04248a8d59",
        "cursor": {
          "ref": "3fac2673-ffaa-4a34-95b3-c4d8fd092904",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ce142919-149f-48bc-9ec6-3f5f91f36856"
        },
        "item": {
          "id": "e6bed7f7-31df-4c81-8bd3-9e04248a8d59",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e9412445-5d98-45a9-b1a2-8fc11c3e0349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fe712f-e99a-4a40-8704-b59dffed9fcf",
        "cursor": {
          "ref": "b6ea9d8a-4bbe-43e3-8ff8-eca04290440e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9ada1fee-544f-48e5-b449-483878bc1337"
        },
        "item": {
          "id": "67fe712f-e99a-4a40-8704-b59dffed9fcf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c9a0eb87-df25-4f3d-bbb3-c06db649929e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06d4a24-d032-4521-983e-70a8e5080748",
        "cursor": {
          "ref": "921943cb-42b8-4ed4-a3fa-2fc0347ee6d4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1f3b900f-e336-4f7d-bbdd-a17ac2e23d2d"
        },
        "item": {
          "id": "b06d4a24-d032-4521-983e-70a8e5080748",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0f7c05a7-bd87-4ab3-a8a1-18b1943d4173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40a0a5a-250b-4bfe-adfc-2e79968ada9c",
        "cursor": {
          "ref": "82b79bca-5e21-411e-9714-2311941b190a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0ed3a1bb-d74b-46b8-92dd-4487a61d7840"
        },
        "item": {
          "id": "b40a0a5a-250b-4bfe-adfc-2e79968ada9c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "04dabc7e-b395-4d79-a4d9-f774cd0b3c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9308077-ebc2-4928-a0b0-942732d0d6fb",
        "cursor": {
          "ref": "b1be179a-a6c4-4f1c-b317-13871ec336ad",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e6416ee4-b6f1-4732-906f-6512d7d37df1"
        },
        "item": {
          "id": "b9308077-ebc2-4928-a0b0-942732d0d6fb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "091a2e99-82c8-4478-b687-a68558c3ce51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea321921-15e1-4043-908a-e5ca859cfbc6",
        "cursor": {
          "ref": "6734b389-ef45-4ffd-875b-d837f91813b8",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c9a12378-70d7-4762-9954-733fe3368993"
        },
        "item": {
          "id": "ea321921-15e1-4043-908a-e5ca859cfbc6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8110c415-b40c-45a7-ae3f-8506aaa45159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a03ed7-8943-48d8-8f36-5fe8a381f457",
        "cursor": {
          "ref": "e59a9d42-6624-4fcf-9c35-564710edaef4",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9274c80a-b6ee-4cda-b866-a10a8f0d4288"
        },
        "item": {
          "id": "b0a03ed7-8943-48d8-8f36-5fe8a381f457",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "230f312e-cd43-48d9-bd23-35a307a3c678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5020a7-260c-4612-a721-f7841bfdf228",
        "cursor": {
          "ref": "9750e16c-71c4-4d37-aa67-21ec2ee52fc4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a710cabb-ee21-4bb8-b48f-5f8ee79b8079"
        },
        "item": {
          "id": "4b5020a7-260c-4612-a721-f7841bfdf228",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5f5c1312-5b30-4e1c-b4ad-1d91d1f6ba94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8236ed6-f5f2-4b43-93e6-39d6f875eca6",
        "cursor": {
          "ref": "dc40201f-8a46-4d5f-9613-747f6477d7a9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c8cfd8ce-4a23-43b8-af16-af7011a5029a"
        },
        "item": {
          "id": "a8236ed6-f5f2-4b43-93e6-39d6f875eca6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c2b94904-e647-4409-a5ce-cd8a4b7f8f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d10b67-7328-4434-8cbc-448525833cd3",
        "cursor": {
          "ref": "81a419a4-a1dc-41a7-ab81-a678f50155fc",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e25b96be-fd8a-4bf6-b450-e7f51cea4d3f"
        },
        "item": {
          "id": "82d10b67-7328-4434-8cbc-448525833cd3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "995d612f-9f67-463f-b26f-8aac71b7161c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db5a6ea-8904-4b69-881d-f4e2166453fc",
        "cursor": {
          "ref": "2002af70-bc83-4495-b74b-b4d579307eff",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d0a43a63-74c8-473d-a44f-c220362430da"
        },
        "item": {
          "id": "2db5a6ea-8904-4b69-881d-f4e2166453fc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c8bb42ff-4d00-4f2d-9f6a-175db64e730c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc95d6a-c68e-42e7-93ea-a87f3c76c34f",
        "cursor": {
          "ref": "749837ff-ce34-49ab-a4e6-6b63935084f9",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ca74f730-be2d-4815-a3d9-c90d62b588a9"
        },
        "item": {
          "id": "abc95d6a-c68e-42e7-93ea-a87f3c76c34f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "80e92dfd-9aa3-4c14-af69-9698d05ea466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c621716-fb7a-445f-9809-fe4de09c4620",
        "cursor": {
          "ref": "dce1e310-f4c9-4ee2-bdbe-a87092ec0b4e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9119d888-25c5-4786-8c2f-a8b017ec3c83"
        },
        "item": {
          "id": "6c621716-fb7a-445f-9809-fe4de09c4620",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0769196d-75e9-4e60-8310-7e8c27bd2573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04a78c9-b3f2-4d37-9161-66913a12a5b2",
        "cursor": {
          "ref": "9242ae5f-cfc9-4370-a763-9e397e0420b0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c4686951-7523-4d4c-a233-70456c2b2c6e"
        },
        "item": {
          "id": "c04a78c9-b3f2-4d37-9161-66913a12a5b2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "87ed7c7c-8eb9-4715-99f6-e30ab5bd4747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0301e3d4-6152-447e-a803-f932036fd984",
        "cursor": {
          "ref": "65bb5283-8f9e-473a-b958-f065f9e26413",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dbf1fc3a-3ede-4dd1-be32-2e4e97c35f9a"
        },
        "item": {
          "id": "0301e3d4-6152-447e-a803-f932036fd984",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5d631471-74cd-4586-9b33-c90152be0b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5e4fa6-e3c5-4159-9a4a-5c1ea14b625d",
        "cursor": {
          "ref": "13a38064-7c73-42df-a683-51ea466ae2be",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "957d0c9a-b4b5-4208-bdcb-0f378a885e05"
        },
        "item": {
          "id": "4f5e4fa6-e3c5-4159-9a4a-5c1ea14b625d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "50206072-c290-4871-a76e-5bda9e8dd164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49d38f4-7835-45a1-8d25-ceee36c28911",
        "cursor": {
          "ref": "57fbd826-fa35-4c84-9277-31fa00fbc2fd",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "750207bc-ebab-4db5-8ebb-efc35ffc7e59"
        },
        "item": {
          "id": "a49d38f4-7835-45a1-8d25-ceee36c28911",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c67390e4-2761-4125-91a2-cd08794f8ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae635297-877e-46f4-b4ab-dd5534b1f8e3",
        "cursor": {
          "ref": "c2ec3752-2924-48ab-ba11-3a2e3c8d6bec",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bd7d67b9-0b04-4f03-a419-1b885f3a7418"
        },
        "item": {
          "id": "ae635297-877e-46f4-b4ab-dd5534b1f8e3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5f1fe186-3263-4f6a-9a61-20d884066602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a5dba7-898c-43b6-8f96-eb42ac931c23",
        "cursor": {
          "ref": "ea46b9b2-633c-4464-a873-572f56e48098",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bc452684-9709-4ec0-973b-7c8eb7eb1a28"
        },
        "item": {
          "id": "c8a5dba7-898c-43b6-8f96-eb42ac931c23",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5bda7494-5cea-4b63-acde-796d93b90103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf23e02-b992-4ea6-812c-f30164eec8a1",
        "cursor": {
          "ref": "e8a97cf0-3317-4bd8-a200-ae9f0dc5aba0",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "378ac3e6-adff-4cab-928d-86f811525bc2"
        },
        "item": {
          "id": "bbf23e02-b992-4ea6-812c-f30164eec8a1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "01af2681-01a6-4578-a674-8c560acc1876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7272aa15-b61c-4dff-a18d-905090e489a8",
        "cursor": {
          "ref": "0ab21596-ebe2-44f3-a19f-1dcbd9f4c442",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "99c39d14-efae-41ce-a80b-59ae8215752a"
        },
        "item": {
          "id": "7272aa15-b61c-4dff-a18d-905090e489a8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1e10c8eb-b489-4a2c-9651-b805018883c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd56e76-3f99-4014-82f9-6d4b815281fa",
        "cursor": {
          "ref": "3cf2adab-8a7b-4c99-870a-912e6b1c1bb3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "af96c40f-4611-4b9e-874d-14f3d9697583"
        },
        "item": {
          "id": "dbd56e76-3f99-4014-82f9-6d4b815281fa",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "89e6d949-1668-442e-b962-b430f1aed35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378a6840-dbbf-4995-9fa9-26324c9d3444",
        "cursor": {
          "ref": "fd13e0a9-923d-4241-8e05-5d837688317e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "64a94a34-7cda-4a77-b00c-2f54dc638152"
        },
        "item": {
          "id": "378a6840-dbbf-4995-9fa9-26324c9d3444",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2d9a80bc-36ff-4f44-9025-223eea75a10e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d07745-6f29-4b24-91b8-18f18bdab9cb",
        "cursor": {
          "ref": "44c0f86a-aab3-47be-be3f-680cc40d404c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ec81799d-1f38-4b33-8d12-885bb5a9aead"
        },
        "item": {
          "id": "62d07745-6f29-4b24-91b8-18f18bdab9cb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c0d92ae5-9703-457a-8b34-2c8bf99dd536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7af54b-ccde-4dbb-9bfe-63f789c180d9",
        "cursor": {
          "ref": "243dce24-2e86-4b6f-b13b-9818d788bb81",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "276bcd6a-b198-44be-ae41-4953f3a793d6"
        },
        "item": {
          "id": "fc7af54b-ccde-4dbb-9bfe-63f789c180d9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "288413d7-b984-4fe1-bd68-18e27210c9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c0f27e-8dab-4891-bc32-f3914182868d",
        "cursor": {
          "ref": "cc6c9e4b-905f-4be3-933c-fb418452fd4c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7c9ef19d-0caf-4bac-a303-ff678362a895"
        },
        "item": {
          "id": "a9c0f27e-8dab-4891-bc32-f3914182868d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2a002f9b-cfe5-45f0-845b-903df62ba30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab2f1b9-c3c2-433f-abe1-041b986773b2",
        "cursor": {
          "ref": "1dbe1aa6-65e4-4051-8284-ecbf262d78fb",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "94bfcc2d-cd68-4f87-8857-af9ed2bbb3b7"
        },
        "item": {
          "id": "2ab2f1b9-c3c2-433f-abe1-041b986773b2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0e839b03-50a2-4a09-ad1d-4674f3dd06b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e90a18-c0d0-4a02-a52f-d0e0a7ab87ca",
        "cursor": {
          "ref": "f8d479d4-e7c7-4353-be19-3eb65ff87804",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0f8ba014-ad55-47ce-bade-2b4ce6a3d5b1"
        },
        "item": {
          "id": "75e90a18-c0d0-4a02-a52f-d0e0a7ab87ca",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a37daa47-0c26-4110-ab83-01796001a4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c994923a-1507-4db9-96c8-a78f19cba5c6",
        "cursor": {
          "ref": "08de7f87-075d-4b77-98f9-1f533ae6b847",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e16b17de-4a8c-4dd4-a0e7-792f1da346d4"
        },
        "item": {
          "id": "c994923a-1507-4db9-96c8-a78f19cba5c6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d847434d-0932-44ac-b9b8-49429f35e130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfd64f3-f927-4551-8a6b-69bf5fcf29a0",
        "cursor": {
          "ref": "30bcec80-6ca0-4875-82b3-506a22b2624e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "912dc3b7-0c9f-4971-940d-9aac8e412b95"
        },
        "item": {
          "id": "5cfd64f3-f927-4551-8a6b-69bf5fcf29a0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1bbfbfc2-e926-45ad-99cd-52e3b5aa611c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dece082-b928-4acd-be8d-0a3c3bd5dd0d",
        "cursor": {
          "ref": "d42866bc-e000-4493-8c25-be152e1687e1",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7ace0206-5567-4138-9d72-34d010969a8c"
        },
        "item": {
          "id": "2dece082-b928-4acd-be8d-0a3c3bd5dd0d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c5a8ce5-59a8-47d5-8077-08e18abadf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7978a27c-0af3-4770-8c9c-538c9259998b",
        "cursor": {
          "ref": "5756de7a-0df6-42eb-8bf9-2907866ede13",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "daa03cf5-6719-4a14-9b28-e3f570035b7a"
        },
        "item": {
          "id": "7978a27c-0af3-4770-8c9c-538c9259998b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e5c29d60-db28-4646-9214-7e38ed9a06fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf059b5-10e3-4483-bb9e-cc47221b15ba",
        "cursor": {
          "ref": "83c2cca7-ceea-42c8-9a9e-f0989148875e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "037f6333-d136-4d99-b81c-8cc317fe76e2"
        },
        "item": {
          "id": "7cf059b5-10e3-4483-bb9e-cc47221b15ba",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2a85d7f4-b642-4ba7-9561-4768e8919dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9949e3-f1c4-4e17-b289-65bb000a0e97",
        "cursor": {
          "ref": "6a23011e-5298-4416-b95e-b7f344ccd274",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1573c886-a5a6-4508-885b-29b7d0d659f2"
        },
        "item": {
          "id": "0c9949e3-f1c4-4e17-b289-65bb000a0e97",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "25985e4f-81fd-4996-9c1f-c1e29e89c180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd388fe-30f6-4ac0-9e1a-90ecde5f9683",
        "cursor": {
          "ref": "077554d8-c51e-412e-8123-7ba733c207b0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9b48e8fb-c272-4422-b4b0-87bf9b61958f"
        },
        "item": {
          "id": "7fd388fe-30f6-4ac0-9e1a-90ecde5f9683",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5a8e2619-7e7f-481c-8c88-1735063b251f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92af44e8-634c-4987-bfa0-49308cc4f49e",
        "cursor": {
          "ref": "cd9bb023-9733-43f8-87e2-98b74fe782ff",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "558a5504-38a9-4f1f-ba6a-41e6758e42a7"
        },
        "item": {
          "id": "92af44e8-634c-4987-bfa0-49308cc4f49e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c185ec5f-feba-4699-ae88-ee3ca798a633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be911148-6e11-4138-9d15-58deed871409",
        "cursor": {
          "ref": "2741b739-9bd4-4406-9b54-20e007b10994",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0c4b5382-05d2-40ae-910d-d0c856f402a5"
        },
        "item": {
          "id": "be911148-6e11-4138-9d15-58deed871409",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cf10e304-d524-4480-8c9a-d146c72d1dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b083ae-ebff-463f-bb61-6d8665664362",
        "cursor": {
          "ref": "0eea3481-b9ed-4399-bf79-f80ad3545b33",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "07b6ffe0-82b6-4f73-8e82-8e6330d79782"
        },
        "item": {
          "id": "c7b083ae-ebff-463f-bb61-6d8665664362",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e665ffb8-a2ea-495d-8478-f840427a4265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea45436-5785-4179-9fd5-ae2a1dba23cf",
        "cursor": {
          "ref": "394f9dd6-c117-4784-9bfb-f3d1082ade0b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2ab91972-6812-4def-80b2-1dc158523bfb"
        },
        "item": {
          "id": "cea45436-5785-4179-9fd5-ae2a1dba23cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bf21a67f-a3b8-4936-a77c-f55f6b22bb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eed3b9-dd4b-48ce-b6d3-21019dec6b41",
        "cursor": {
          "ref": "fcb7718b-a0a1-4985-b3a6-f6f25dc30a23",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "85d6627f-8a01-47e6-95b2-28b949bac136"
        },
        "item": {
          "id": "08eed3b9-dd4b-48ce-b6d3-21019dec6b41",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2508fcf1-2651-4529-b96d-c0d6c7a5dccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83d3cf6-2380-4687-bb79-07e22e547c55",
        "cursor": {
          "ref": "bf8d485f-3652-473a-802d-f2c92c032814",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d5c30a0c-3433-42b4-8dfe-d7012c7978d1"
        },
        "item": {
          "id": "d83d3cf6-2380-4687-bb79-07e22e547c55",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aafe5120-44be-4558-a7b8-70a959b5644f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc1f48a-6dbe-4c01-b809-4a978618f863",
        "cursor": {
          "ref": "6c7bfa2d-27ae-4a61-af7b-97b1b978a98c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b860bec0-dc98-476d-8c54-e78cc04a9ad6"
        },
        "item": {
          "id": "0dc1f48a-6dbe-4c01-b809-4a978618f863",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5a02086b-286d-4cad-905c-635150173d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be96656-4d04-4e5c-bc38-fe970e8be6c8",
        "cursor": {
          "ref": "b3f85715-dbd7-48b4-b3f0-cd68a676633f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4a2bd8e1-dcc5-4d8b-9bbb-5f260c314fbd"
        },
        "item": {
          "id": "6be96656-4d04-4e5c-bc38-fe970e8be6c8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "049f293e-9873-4bd3-9b37-3a0ddaad52f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e12db22-4bbf-40c0-9228-bcdab14bee34",
        "cursor": {
          "ref": "30e1bdb3-1554-43a5-9753-a1aa5e6a9970",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bfe386b4-bb3b-4ff1-9bf7-7cfd681250be"
        },
        "item": {
          "id": "6e12db22-4bbf-40c0-9228-bcdab14bee34",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "466e6276-2703-41b3-8bfe-42f94b2f26e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad32d59-b17c-43a5-8ec8-dedc8edc1d49",
        "cursor": {
          "ref": "a4e7c775-5cf8-4c37-b2d6-f577cf0fc5b6",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c162585a-23d0-4943-9b78-a963e270558b"
        },
        "item": {
          "id": "6ad32d59-b17c-43a5-8ec8-dedc8edc1d49",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6beeeeda-5c49-456c-a0c2-3d020eb83055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9029f30e-42b9-441b-9e71-6b33d7ea6b6a",
        "cursor": {
          "ref": "59e1894a-39ed-4029-97cc-35b1f6d84d31",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fd7d9c44-341a-411c-8a89-92534d48d866"
        },
        "item": {
          "id": "9029f30e-42b9-441b-9e71-6b33d7ea6b6a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5ab4d8e5-6cb5-4707-8f71-1235d88cca89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd11941-e442-450f-b48a-7ecc208e6793",
        "cursor": {
          "ref": "9c5935d5-eeb2-4633-92ee-911196613dd1",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "340d02af-cdca-4915-974a-f6b9b0c9ff83"
        },
        "item": {
          "id": "cdd11941-e442-450f-b48a-7ecc208e6793",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "552f91ec-a93f-4595-931e-ca25b3fb3b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09aa6294-fe2e-47a6-9466-d440e7c911f4",
        "cursor": {
          "ref": "126e5796-4efe-4189-a58a-a1a66d15a8e2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d2418dd7-7051-4981-afda-d47ffc4dd2d0"
        },
        "item": {
          "id": "09aa6294-fe2e-47a6-9466-d440e7c911f4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "88ccb082-ec5b-4615-a95c-621d3bd05552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656dc238-9c5d-44d7-a078-3790f530f59e",
        "cursor": {
          "ref": "74a11c39-d343-4d46-97c3-c4e67b29fd33",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5a04d5a4-4346-4e7f-877e-5c49ab9f1cc6"
        },
        "item": {
          "id": "656dc238-9c5d-44d7-a078-3790f530f59e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7196e498-2483-44f2-ba8a-aead0b346e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f5b706-6c16-47c2-a30b-aff3f3321aba",
        "cursor": {
          "ref": "6041234c-921e-4403-8872-6206cf931c63",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "97817f08-e645-412c-b140-66b25b5818d5"
        },
        "item": {
          "id": "a4f5b706-6c16-47c2-a30b-aff3f3321aba",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bf47555b-c04b-40f1-bba9-fb9880a8807f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0d7293-ae88-4c3f-a555-97667a5dda7b",
        "cursor": {
          "ref": "7a51622e-f50a-4639-9483-031cb63ab880",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "18cb2b3d-f625-4a85-a7e1-8859a0cbdbdc"
        },
        "item": {
          "id": "fe0d7293-ae88-4c3f-a555-97667a5dda7b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cd5c05f1-e0eb-47a7-b022-2e32c149cd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93796741-9669-45ea-b614-e7d58ee045b4",
        "cursor": {
          "ref": "9d5f5646-0d94-4f67-8125-a16d98501a79",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ac50cf5f-3b7c-42d7-9fc9-1c5d52e006aa"
        },
        "item": {
          "id": "93796741-9669-45ea-b614-e7d58ee045b4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ca9c5556-faad-46c8-9629-309a67a35b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39827d0-82ce-4972-9460-000a7459abd5",
        "cursor": {
          "ref": "df34f5fe-cb7b-4e96-b2f9-dd703d585e4a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8288792e-9beb-4d94-9a59-13c196df81a7"
        },
        "item": {
          "id": "c39827d0-82ce-4972-9460-000a7459abd5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5122927f-9661-44a2-8d86-dfb509671b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af2b619-f2d0-485e-be67-432c1b11ffc2",
        "cursor": {
          "ref": "65d1cfdc-752c-4a61-9922-c597696d826d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4e85c7cf-ef59-4088-93f1-01fc6dd55333"
        },
        "item": {
          "id": "4af2b619-f2d0-485e-be67-432c1b11ffc2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8a216c8c-f701-4bee-948c-ce71eb9012b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d903db0b-9403-4445-b393-5492f027679b",
        "cursor": {
          "ref": "beea61fe-0c45-4474-a861-ab4d8daad48b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "76d41911-2314-4089-8bac-244272ae1d52"
        },
        "item": {
          "id": "d903db0b-9403-4445-b393-5492f027679b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "43094faf-5409-4bdc-870d-f0aefd84b44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e2e8cc-8f75-4273-a4b7-3ad9fdf1dde1",
        "cursor": {
          "ref": "27c4dc7c-a899-4637-be09-aad6ffc69783",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1ff2db1a-b07c-413b-936b-02cc14b7cc32"
        },
        "item": {
          "id": "76e2e8cc-8f75-4273-a4b7-3ad9fdf1dde1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3836ff44-a853-4466-a5c0-80dae4f98537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ecfae5-9a0f-4550-bf82-51e4c6aec93b",
        "cursor": {
          "ref": "112fbcd7-8078-4375-88a5-6249c634bea3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b4823bb1-3075-47a0-a7c3-70456d697722"
        },
        "item": {
          "id": "53ecfae5-9a0f-4550-bf82-51e4c6aec93b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "14135853-e8cb-49d9-8d21-6352c97b8172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553242c3-0426-46bd-94ce-68a62f9eb498",
        "cursor": {
          "ref": "aea314c0-5ee1-4f78-ab57-50ffbae95175",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2ec8e265-3ea1-4045-9b1d-ef5d222b0eba"
        },
        "item": {
          "id": "553242c3-0426-46bd-94ce-68a62f9eb498",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "284bc0f2-a44a-40d6-a826-32cd9a8755fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da187fd9-1433-4fd8-a797-c579532c33c6",
        "cursor": {
          "ref": "cbf0f6a1-e065-43e4-86fd-0c429357698a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7afffa09-ee6f-4233-8589-b700c9360e36"
        },
        "item": {
          "id": "da187fd9-1433-4fd8-a797-c579532c33c6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ed18f4a1-6d48-4d63-bcdb-6e0cc6b52083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f3c2c2-89dc-4e18-881d-caa54e10c485",
        "cursor": {
          "ref": "c4c55a4c-c918-427a-87d4-eefbfe1863e1",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "36fa7cce-c073-4c7a-b2e5-9d2947855ac0"
        },
        "item": {
          "id": "f1f3c2c2-89dc-4e18-881d-caa54e10c485",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f7f5f5f1-5d05-457e-8d18-492180b31df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da95935-b2a4-46a2-b774-8bb98383f53b",
        "cursor": {
          "ref": "a9c4eed1-e6de-4ee4-949c-222040cafd88",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e5ff80c1-a015-4a3e-9939-4e59384961c2"
        },
        "item": {
          "id": "6da95935-b2a4-46a2-b774-8bb98383f53b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "79805eb0-d066-42a9-abef-e5848672dc14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37bb940-d35d-4548-b59a-21b685b1030e",
        "cursor": {
          "ref": "5c6dad64-478f-4387-b76e-8f5fed1d9a75",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5c707ba0-d252-4dfb-9c04-74ef049cac0a"
        },
        "item": {
          "id": "c37bb940-d35d-4548-b59a-21b685b1030e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "670a4a3f-1712-4055-bd4e-e38776d4d783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcf677c-9413-4460-96f9-606923b72bb0",
        "cursor": {
          "ref": "68133dbb-f830-4a42-8e76-d2ec7fd82de3",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "39bc18a2-7cc5-43ce-b2e7-77b09e7e1948"
        },
        "item": {
          "id": "0fcf677c-9413-4460-96f9-606923b72bb0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8368e575-b857-4352-b744-209957687718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b507856-a7d0-4ded-bb67-a76af2e11607",
        "cursor": {
          "ref": "e21b91e3-2df2-4ba7-9778-fb7775fb4ffa",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "96bfa9d5-5768-4f89-a238-ae65591d0d42"
        },
        "item": {
          "id": "6b507856-a7d0-4ded-bb67-a76af2e11607",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e2c3f0d9-b8da-4a42-87a5-0d2eb4eb8a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b091273-b838-430d-af82-9dfd0aafe17d",
        "cursor": {
          "ref": "0077517a-9528-4605-ba63-58d4a2ead476",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0bcc2952-88f9-402a-9c65-88100a1bb11c"
        },
        "item": {
          "id": "8b091273-b838-430d-af82-9dfd0aafe17d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "681161b1-f6a8-40d1-bfa5-74897e40479c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec3eb73-9402-4ad6-b2b3-5f1133c9ccf0",
        "cursor": {
          "ref": "512c0ecb-2b84-415f-a00d-9b28b775cdca",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "309e95b4-1014-487c-acb3-fde4ad8c7342"
        },
        "item": {
          "id": "0ec3eb73-9402-4ad6-b2b3-5f1133c9ccf0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "65a613f8-89e5-4606-ac73-4a9dc2bba4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c86ea2e-b209-4b41-b436-3d1eac98931e",
        "cursor": {
          "ref": "73ff85c2-6930-4c13-a815-dd90256b17b1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b99b4255-93f1-4305-a36e-cae6fdecbbdd"
        },
        "item": {
          "id": "6c86ea2e-b209-4b41-b436-3d1eac98931e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d5e76390-1177-47c5-9757-464de9ee14e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249f3a16-e987-47e6-a14c-1354ac4df6d6",
        "cursor": {
          "ref": "c085d09b-1fa7-4c25-934a-327f674461b8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "26eb4c3d-2917-47ae-8abd-3f52e587c01a"
        },
        "item": {
          "id": "249f3a16-e987-47e6-a14c-1354ac4df6d6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "976bce84-fdd2-4082-81a0-073cdcaa33ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9846a8-807a-4341-a340-5ab8a73e95bf",
        "cursor": {
          "ref": "9b4120cf-5d12-4f10-99ce-f711b437eead",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "df6aa8e4-0386-4c9d-834e-00fa7b5a946a"
        },
        "item": {
          "id": "ae9846a8-807a-4341-a340-5ab8a73e95bf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1493b087-bdad-42a5-9eb0-53d036731b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1214ef2-a9e8-4529-a784-2512a6847042",
        "cursor": {
          "ref": "5e6daf12-31e1-4791-99b5-35f7e2b4fc6f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f372cef9-a686-4db2-93bc-9d9599f6973c"
        },
        "item": {
          "id": "e1214ef2-a9e8-4529-a784-2512a6847042",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "25cc8e69-76b1-405e-b58e-554afd8448b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45318ec-b62e-4945-b4d5-1605b9feb749",
        "cursor": {
          "ref": "35d2b5d2-43f5-4d48-96e0-b584bb7f4755",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f2687ac9-9863-49ee-992e-e388425e7404"
        },
        "item": {
          "id": "a45318ec-b62e-4945-b4d5-1605b9feb749",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5b484c74-944f-4fec-9969-a9e60b338436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f642828-2e7f-496b-97b8-f910d4aff78a",
        "cursor": {
          "ref": "64fb91c5-27ac-49e9-8069-1ed12a726f22",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "89c819e5-7931-4ab6-9e19-55a25ddcd60d"
        },
        "item": {
          "id": "9f642828-2e7f-496b-97b8-f910d4aff78a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "64e6b2cc-754e-43b1-80c0-050e906866a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6b61d7-a33f-4f65-a2e7-d85340d9c13f",
        "cursor": {
          "ref": "4355ab91-64eb-4b07-8712-d5ea21c4e9b3",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5316b35b-6016-4819-b938-8e6e57e832af"
        },
        "item": {
          "id": "ed6b61d7-a33f-4f65-a2e7-d85340d9c13f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "892d32ec-5798-4ffb-a19d-51b346498c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2074ba99-91d0-40b5-a164-649f9909b0e2",
        "cursor": {
          "ref": "599635d1-1eda-408a-a28d-be3c17c8ff00",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cc4d32a4-8d24-4643-8c9c-cab87c2dc0c6"
        },
        "item": {
          "id": "2074ba99-91d0-40b5-a164-649f9909b0e2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e4940349-63ff-4e12-82d7-8b46d1ca968b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ad93d9-11a2-4186-b93e-8e25be6a10f8",
        "cursor": {
          "ref": "b4d2b63e-9e09-4bc9-af4a-3cc3785b8a27",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9c7285be-ae27-4418-a8df-71000a39ca0d"
        },
        "item": {
          "id": "32ad93d9-11a2-4186-b93e-8e25be6a10f8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c5bbbc55-4d57-4bf5-b103-54f44b9d658a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb7553d-e1b1-4b39-aa1d-a80575509f23",
        "cursor": {
          "ref": "79b30daa-8be1-4dcb-bba2-85f476a585cc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e185f823-5056-487e-83bd-23dd23ccba9c"
        },
        "item": {
          "id": "bcb7553d-e1b1-4b39-aa1d-a80575509f23",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a24398f4-6be3-426d-b365-2449e73ce0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7adff10-7ce2-45e9-876e-98d12658d1e3",
        "cursor": {
          "ref": "6bf550d8-14ec-4853-b8d5-ccc9c457f724",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "feb096aa-6885-498d-9562-798d28b67f93"
        },
        "item": {
          "id": "f7adff10-7ce2-45e9-876e-98d12658d1e3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ed3ff600-37fc-4a11-ba02-a017fedf53be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404c1c72-6672-4fff-a86d-3963917525d6",
        "cursor": {
          "ref": "0464139e-b86d-4689-a227-0fd4d402de7c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "62fcd707-fdf4-4192-9d13-3d49d6c98763"
        },
        "item": {
          "id": "404c1c72-6672-4fff-a86d-3963917525d6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1bae36ba-e93e-4bf6-ae02-fdd0ccd317be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852c8981-4702-46e5-a9c6-982fad3e070e",
        "cursor": {
          "ref": "2aa4c632-1722-4b6b-9aa8-1ba13b53f768",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5e52c3ed-dcba-456e-9cc1-0ee1545b125a"
        },
        "item": {
          "id": "852c8981-4702-46e5-a9c6-982fad3e070e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "73890154-1737-4ce1-b269-d2b668730e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1e064e-9669-45f8-ae32-1c9d6d1c4a73",
        "cursor": {
          "ref": "df2950bc-2235-4776-aea0-55aee5156196",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ebecac96-9223-4a88-b07d-4288c98b18bd"
        },
        "item": {
          "id": "9c1e064e-9669-45f8-ae32-1c9d6d1c4a73",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6654b7c2-c34b-4bd5-9b23-57539fb76cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc055077-55f7-45cf-a8d9-dc4282c85834",
        "cursor": {
          "ref": "828629ce-77f7-4360-bd76-c2b8164a0e81",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "050ff68d-2cea-4002-b768-121c85bfd469"
        },
        "item": {
          "id": "cc055077-55f7-45cf-a8d9-dc4282c85834",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "477acc17-f1b9-4f8e-a127-ebb1df637df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc306ca0-7a3a-404a-a7be-1901bf64c008",
        "cursor": {
          "ref": "b79ed8ef-5353-4d83-a807-418dbae82c9f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "29274a84-6070-4831-a953-c215b0b9fdec"
        },
        "item": {
          "id": "dc306ca0-7a3a-404a-a7be-1901bf64c008",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e0e6eee5-fb53-4b56-a704-a6635fd19c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1c77dd-4ab1-4639-8ab5-f31c6c2a16dd",
        "cursor": {
          "ref": "1cfa6c4d-4e2e-4a46-a11d-aafcc5fb8a09",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f0737178-2c38-4df1-bd91-c560038d56fd"
        },
        "item": {
          "id": "8f1c77dd-4ab1-4639-8ab5-f31c6c2a16dd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "354ff096-e1f4-43b4-94dc-bce132ab4a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d75ec2b-3f0b-4ba3-b294-c6e9254f6108",
        "cursor": {
          "ref": "6f234765-e094-43e2-865f-31243693a5dd",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0f487976-cf02-4d6b-a795-c17eb7f044da"
        },
        "item": {
          "id": "1d75ec2b-3f0b-4ba3-b294-c6e9254f6108",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "86101383-9459-4973-a650-8584206983ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2190d684-8d4a-44a5-a462-1a5c6184c9cb",
        "cursor": {
          "ref": "209970f5-a80f-40ad-bcff-257df2e9b9d7",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "132b0785-5154-46eb-ba4a-03a8ee2e0977"
        },
        "item": {
          "id": "2190d684-8d4a-44a5-a462-1a5c6184c9cb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b5aa93ae-c85c-450d-8d36-1e2487e4e59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee560bc-757c-4407-9a6d-c9bfa0a7590d",
        "cursor": {
          "ref": "363533e8-210a-499c-b68d-eedcea7dd4ca",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8fa1981f-0427-40a0-a630-5702656b624d"
        },
        "item": {
          "id": "fee560bc-757c-4407-9a6d-c9bfa0a7590d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3113e686-4581-4eb1-9660-a360e4ba863d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ad18e6-dc2e-4b0c-bafa-0c707e359f52",
        "cursor": {
          "ref": "571bb431-8bd7-46d6-8cba-6b2c6815bf16",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "22b2a5ad-8428-406c-ba84-19893df54bdc"
        },
        "item": {
          "id": "b3ad18e6-dc2e-4b0c-bafa-0c707e359f52",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9a3a85f9-a403-4c1b-82ce-e058374cea15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfa794b-a50e-4462-8399-409a12d7276c",
        "cursor": {
          "ref": "a2c5dcf2-e712-47c6-b81c-db7e3086c1cc",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c9913a8d-a80e-4f3e-9fc7-3a9509475533"
        },
        "item": {
          "id": "bdfa794b-a50e-4462-8399-409a12d7276c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7766078d-ce98-495c-b5cf-eaa64a69b91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b49aad-8d89-49dd-bd29-c5b638d0626c",
        "cursor": {
          "ref": "fb2abe6b-0bbf-42f9-b648-19ed3c27e1de",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e05432d9-98c8-4a73-bc4b-e0850cd7ebc0"
        },
        "item": {
          "id": "f1b49aad-8d89-49dd-bd29-c5b638d0626c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a343d210-c827-4071-b1c7-ba5b9fd92be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc11ebce-9625-4f05-b607-757b8ac11879",
        "cursor": {
          "ref": "52f97afb-d984-404c-a5c7-dd6ae04d7eb1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "aca289cd-8a7d-4812-96c4-ab83c85d6a82"
        },
        "item": {
          "id": "cc11ebce-9625-4f05-b607-757b8ac11879",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e99e4f4e-360e-4f29-a41b-c7869109bbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca1484c-f0ff-4740-a219-25848f7c6c93",
        "cursor": {
          "ref": "2ae754fd-eeb0-4c0b-9a18-abab59a84821",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "377432de-e91c-4d4d-bd23-e09d7aae5e46"
        },
        "item": {
          "id": "5ca1484c-f0ff-4740-a219-25848f7c6c93",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c1bd49b9-c2bc-4dfb-b558-db7107d58c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a62753-7e8e-443a-9ac9-c2187a1c20c7",
        "cursor": {
          "ref": "aaba05c8-1bb3-4798-82db-599b9765822f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2e228b25-9726-4188-9d42-d731f89e2849"
        },
        "item": {
          "id": "52a62753-7e8e-443a-9ac9-c2187a1c20c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9fea8f02-693a-40e6-92ee-90f5bc995178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d003c4ed-5b14-44ee-8ff5-23e601dfcdc9",
        "cursor": {
          "ref": "285c72cd-ee3b-4726-bfdb-4a31a119c3f2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c6283455-72d2-4221-8d9d-d10ec6839eb4"
        },
        "item": {
          "id": "d003c4ed-5b14-44ee-8ff5-23e601dfcdc9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c040e885-e24d-4aec-a4b3-6ff68bdda443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d87610-91c3-48ff-9296-b1a747803ba7",
        "cursor": {
          "ref": "fe503c58-1d9c-408b-affb-2daf92ee8b96",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "802a7099-49eb-4f4a-a0d2-4320865ee872"
        },
        "item": {
          "id": "64d87610-91c3-48ff-9296-b1a747803ba7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7c73bc06-d876-48ed-a939-00edab9c3ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b0154c-b1aa-4695-b34f-095788bcfcf5",
        "cursor": {
          "ref": "84a85f65-8aae-46de-ad5d-21622d368964",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bb083486-2000-4c3d-a082-077dc2ec99da"
        },
        "item": {
          "id": "72b0154c-b1aa-4695-b34f-095788bcfcf5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0eda0dfb-9a80-4d90-8275-f25e1c78aeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce93f63-200a-4c90-8b5d-0983dea94e7a",
        "cursor": {
          "ref": "73a95036-abea-460e-b18b-937059396073",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1e572510-8483-44a5-ade5-ddd154de5898"
        },
        "item": {
          "id": "bce93f63-200a-4c90-8b5d-0983dea94e7a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "74fd785d-f32b-48c7-a192-3dc71f6ef054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a42bfa1-cfd4-484b-8a7d-4781039f78c9",
        "cursor": {
          "ref": "63b4225b-65d6-4918-a2ee-a4d7ba0f9e1b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3edb6e31-cd4e-47cd-8553-188c0cf22444"
        },
        "item": {
          "id": "4a42bfa1-cfd4-484b-8a7d-4781039f78c9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "39cae4bd-742e-4ead-a686-38f28f1f61a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bafab2-a542-45f6-a2be-848d7386aced",
        "cursor": {
          "ref": "1eb29950-8883-4a9c-bb82-a73eaa4165bc",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b8a9b105-cac0-4aa1-ba35-96d3edbf0f08"
        },
        "item": {
          "id": "12bafab2-a542-45f6-a2be-848d7386aced",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "93c081e1-be74-432e-9b51-64883a83c607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746bc8dd-d88d-4933-a070-5bbcfc340705",
        "cursor": {
          "ref": "aa6b2a67-05c0-4beb-b796-b230edd86abc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e1744d71-67b6-4495-a07a-f6c17c724bc5"
        },
        "item": {
          "id": "746bc8dd-d88d-4933-a070-5bbcfc340705",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "36baa452-c592-4402-88c8-ff7e0a83b440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144567b4-6273-4557-a701-cea8eb053d9b",
        "cursor": {
          "ref": "c5f516af-06a2-457f-a068-2b0449512def",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8b7de820-9f58-4832-9f4d-95dc71b48a7e"
        },
        "item": {
          "id": "144567b4-6273-4557-a701-cea8eb053d9b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b60ce932-b3ad-42b9-85b7-599a1d3d7aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143b882c-adf6-4aab-a960-a4f8cae8c23b",
        "cursor": {
          "ref": "59d16459-3b4a-4a6b-bc0b-819edf06de67",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d4076af9-8ff3-4556-975f-85ee6ff18a0b"
        },
        "item": {
          "id": "143b882c-adf6-4aab-a960-a4f8cae8c23b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1268cea7-7ff6-49ff-9302-73f5023f9c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e67080-a48f-424e-9876-3ec1d22996c3",
        "cursor": {
          "ref": "23f6ea81-c559-4cbe-bd40-3060dd14d4f0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bd0cb1c6-8ac6-4e25-9e2d-7e8350237ea3"
        },
        "item": {
          "id": "03e67080-a48f-424e-9876-3ec1d22996c3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a0bc4696-f5b0-40b5-bae8-54168f87105a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aed35ce-0884-4991-a691-62070c46825d",
        "cursor": {
          "ref": "89ba7166-74eb-4098-b5e2-4751dccd26ac",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b4e4887d-d79b-429e-8c71-e4a93d48be13"
        },
        "item": {
          "id": "6aed35ce-0884-4991-a691-62070c46825d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7756bd9d-2ff0-4723-aced-e47746d823ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f74c578-babd-432c-a376-f2028028f626",
        "cursor": {
          "ref": "4ff8fa9a-0b60-42a2-87de-86c0b7c1b24b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "91e515f5-e3c9-44d0-8335-02721604e6d1"
        },
        "item": {
          "id": "3f74c578-babd-432c-a376-f2028028f626",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f6e61f5f-96f9-48f1-8f33-fc3cf63aef1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44e2f69-94d4-4fd6-95cc-93b7e7c9bb72",
        "cursor": {
          "ref": "4bf0f676-9944-4a3d-a026-c7342fe3f0bf",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7249ac41-8451-472f-af9e-93fa7ea57743"
        },
        "item": {
          "id": "a44e2f69-94d4-4fd6-95cc-93b7e7c9bb72",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5da0c173-a864-4b15-882e-a1976fca314f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cf4144-4cc5-42c8-b8d5-cc0f971d7c7c",
        "cursor": {
          "ref": "014742db-6994-4349-b32f-1dbd513cfd69",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "48494aba-68ab-4a2f-a100-41e7159e76b3"
        },
        "item": {
          "id": "04cf4144-4cc5-42c8-b8d5-cc0f971d7c7c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f94b9608-267d-4f70-ad99-1930dc5cd282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4765126-5aaf-40f3-adf2-377fa76e9117",
        "cursor": {
          "ref": "bc88884a-2b71-4e0b-9fb2-924c550c29ee",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4bd3d5f0-7e36-4921-94de-dac36ace7541"
        },
        "item": {
          "id": "f4765126-5aaf-40f3-adf2-377fa76e9117",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "56fec1d4-d593-464f-ac24-c52b03c6a2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d382d9c-acb9-44c3-9b3d-444dfb8b405f",
        "cursor": {
          "ref": "46b158f6-5e84-479c-8bd3-2ceb0bc4a05f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0ea576a0-0815-4f1d-a24a-301e5f4c2f48"
        },
        "item": {
          "id": "4d382d9c-acb9-44c3-9b3d-444dfb8b405f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f5cb1825-991b-46b7-b1d9-3d91f4c272f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4124797e-9dff-411c-a15e-e63c28885852",
        "cursor": {
          "ref": "dad5b31e-e7a7-4def-bb2e-9de87dc4db88",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8c0488b4-92f5-4877-86b2-e87fe15973bc"
        },
        "item": {
          "id": "4124797e-9dff-411c-a15e-e63c28885852",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b5224cab-fec1-48b7-b2ee-02c674b375c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d42aa38-8bbd-4796-9054-cd21b1a2c0f0",
        "cursor": {
          "ref": "0bef3268-623c-4cfc-9964-c1e46ab6df1d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ac965110-378e-4ddd-93d5-cde20d4f7346"
        },
        "item": {
          "id": "8d42aa38-8bbd-4796-9054-cd21b1a2c0f0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3e9297c0-63b6-4100-92dd-c39a71398d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f22b43-723d-4ea3-b613-b13c62207a08",
        "cursor": {
          "ref": "c523306b-7734-4d68-93eb-01dd07824177",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "318191f1-e2cd-4ec8-9aba-5334c516833f"
        },
        "item": {
          "id": "d0f22b43-723d-4ea3-b613-b13c62207a08",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2fcfda1b-637b-4f9e-8d0b-4fd2e643fa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c30282d-64cc-42b5-8ff9-af060f3aa4c3",
        "cursor": {
          "ref": "982af501-1a7b-4562-b119-fac0d24280a4",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4f617179-cab8-41b1-9141-2e7e94f50999"
        },
        "item": {
          "id": "4c30282d-64cc-42b5-8ff9-af060f3aa4c3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "40dcd65d-b218-4e7e-985f-4e7451702d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309470e0-4444-4ae6-a851-1b622d5d24b9",
        "cursor": {
          "ref": "e5657fe6-fef2-404c-a101-82c301f06f39",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f0dd1837-073f-4b54-92db-e843d4bc827d"
        },
        "item": {
          "id": "309470e0-4444-4ae6-a851-1b622d5d24b9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "320a2d2f-7660-4395-b308-436e52b82d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45acf5b4-8a2f-4040-baa0-bb6b96f37540",
        "cursor": {
          "ref": "84681681-06c5-483e-a689-572bb2e9c203",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "79d4ee9f-08f0-499c-a091-4d1797bd994d"
        },
        "item": {
          "id": "45acf5b4-8a2f-4040-baa0-bb6b96f37540",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c3357ab5-c526-434f-8b37-f853164ac272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebbb2f4-1105-4968-8f89-7392c6e9a06a",
        "cursor": {
          "ref": "d6372206-3eb3-43d7-ba3d-04ca42dea5bd",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cadfa825-34e7-4462-a31d-7160458df39d"
        },
        "item": {
          "id": "aebbb2f4-1105-4968-8f89-7392c6e9a06a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1360d09a-014b-4e71-b3e9-cf23509f6bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62574eac-e655-4e3c-ab11-f2247b9e7dd9",
        "cursor": {
          "ref": "c0438eac-8949-4a96-bb9a-3c4be3306d93",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a4608b57-e027-410c-b385-3293d369e361"
        },
        "item": {
          "id": "62574eac-e655-4e3c-ab11-f2247b9e7dd9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2d35085a-78fe-45b2-9bd4-c79552105fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb71407d-91d8-4f3b-9ff5-3cee68e7e395",
        "cursor": {
          "ref": "6912c81e-0dbf-4493-87fa-c42c0ebc9a2d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ad378971-ed2b-4b82-9b4e-5e4874de1271"
        },
        "item": {
          "id": "cb71407d-91d8-4f3b-9ff5-3cee68e7e395",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4fb9b115-5af9-4bdb-b35b-a2590622dc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2762ca1a-5748-4157-92b9-444ea37c0812",
        "cursor": {
          "ref": "deab344d-85ac-4025-b4ce-d75751975395",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "59a84df8-7651-4dd7-a160-b2d52123bae3"
        },
        "item": {
          "id": "2762ca1a-5748-4157-92b9-444ea37c0812",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2b5bed90-aaa2-476f-b930-33eb8440ae3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa8f690-9377-477a-a504-1105876c8e8a",
        "cursor": {
          "ref": "1887ebc3-fe9d-4494-b024-11c5880e4b7a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a0d34ff2-1eed-4c58-8cb6-3160ad85a594"
        },
        "item": {
          "id": "eaa8f690-9377-477a-a504-1105876c8e8a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6cf06635-e493-4de9-a0b4-c874cd3a0a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305383d0-3c09-4cd4-b2ff-03678043b5d2",
        "cursor": {
          "ref": "7a27957c-4e1e-4481-972b-a72b6a1129ca",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2af3c588-2752-4316-aee8-4c2fe2fd5245"
        },
        "item": {
          "id": "305383d0-3c09-4cd4-b2ff-03678043b5d2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "11e7464b-44b1-458a-87c2-c57065b2bc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4391e56-4e6a-4ee7-bcd2-6bafc332a131",
        "cursor": {
          "ref": "395f22b1-ad51-44de-aa1d-ccaa49b382b2",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5d949529-2f29-4919-93e5-cb1d64544780"
        },
        "item": {
          "id": "c4391e56-4e6a-4ee7-bcd2-6bafc332a131",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d9249393-7030-4996-a2f5-0cc629ac4ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7bc356-584d-4f0c-a3b2-369b6bf9aab3",
        "cursor": {
          "ref": "6b113826-6571-4aa0-8cad-59a41e6431c2",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5421e2cb-30eb-4019-b0bf-28792d6cc385"
        },
        "item": {
          "id": "2e7bc356-584d-4f0c-a3b2-369b6bf9aab3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4c857a8a-6399-4b87-b427-92d214021456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92378b30-c3f9-4ffb-b643-acf2fc70599c",
        "cursor": {
          "ref": "6557d8c4-90c9-4573-a825-1cd39dbeec91",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0cc16dd9-5486-493e-9314-435443f4c1d7"
        },
        "item": {
          "id": "92378b30-c3f9-4ffb-b643-acf2fc70599c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c3ec7abc-b129-45c1-92d5-e183ffade87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ef8569-09a0-4659-9694-d095b70c932a",
        "cursor": {
          "ref": "3be0eeb2-d936-4591-9365-dbfd3b8fa6da",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0cd1562a-4632-49a6-9c33-2ffa20c08c15"
        },
        "item": {
          "id": "f8ef8569-09a0-4659-9694-d095b70c932a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c9e22fea-1c50-4008-9a14-164d10f52263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef93bb0-0d5f-47c5-82c0-25872f78da20",
        "cursor": {
          "ref": "2b6083f7-60f1-41f4-85e9-cfa403ffa312",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "26dc6df1-d545-4045-92ae-ac706f48caf3"
        },
        "item": {
          "id": "cef93bb0-0d5f-47c5-82c0-25872f78da20",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d668f3fd-ea06-4265-85ed-4a8db56a9df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b8e4b3-ae7a-4959-a8ca-6eb962b84439",
        "cursor": {
          "ref": "f4e214cd-2e66-4249-9990-e1be629e65b2",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "abc01a9b-ba0f-4151-96a0-81f9cb6eee1c"
        },
        "item": {
          "id": "b1b8e4b3-ae7a-4959-a8ca-6eb962b84439",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e3bc86dd-60af-4c6a-b3bf-3bfb1847f251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bbfeb7-eb39-4cad-8061-797e0048846c",
        "cursor": {
          "ref": "6c3ab183-c3a2-474a-882e-88e3548a5f6b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0b5d140a-1cf2-46d6-9a2e-d40fe9649d5d"
        },
        "item": {
          "id": "25bbfeb7-eb39-4cad-8061-797e0048846c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5a13ad6e-ae01-4ca5-8ead-8cf1810e96ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65361ccd-87c9-45b0-ac0c-cf3e33dcda4e",
        "cursor": {
          "ref": "55d14fdc-8c5e-4b87-8b9e-cff11a84c858",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fc2f1759-1399-4ae8-a224-d9d10dec95cf"
        },
        "item": {
          "id": "65361ccd-87c9-45b0-ac0c-cf3e33dcda4e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bf0a8051-1fda-413c-ab5e-1ab4e3671b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f2833b-f01c-474c-b6fe-80cfe78e15a0",
        "cursor": {
          "ref": "9361a072-767c-4040-9689-a8f66b50d064",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a5855e12-e61f-4f36-9120-031419795c51"
        },
        "item": {
          "id": "c9f2833b-f01c-474c-b6fe-80cfe78e15a0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "629188c4-9adb-4b9c-a273-11ef83d45957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c089c564-5f4c-4f8d-a396-cdee54663ab6",
        "cursor": {
          "ref": "a43515d2-e124-41cb-aaf7-9bc8c51c054e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0becd652-0505-406c-947f-f2dfe46a8943"
        },
        "item": {
          "id": "c089c564-5f4c-4f8d-a396-cdee54663ab6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "47176e98-3adb-476c-8398-fabcdff8444f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f36cd8-5bf4-4967-ab07-3c21f4b7d9d1",
        "cursor": {
          "ref": "80fe4ec0-cb56-4da5-9c39-0427acfe77e5",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0bbfc900-2674-46bb-b63e-3d0975aa2598"
        },
        "item": {
          "id": "a9f36cd8-5bf4-4967-ab07-3c21f4b7d9d1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f32a56cc-dfe1-47f5-915b-88da01711e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbd4205-b813-4cbe-b725-d8c376c256fa",
        "cursor": {
          "ref": "0ed47f2e-7b08-4b8d-a0a7-8564ca75c8da",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2202b1c6-2ef7-4063-934b-3a7148166773"
        },
        "item": {
          "id": "fcbd4205-b813-4cbe-b725-d8c376c256fa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f6253396-2dc3-46bf-a88c-bb6ea3c37d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63a186d-c8f4-4222-9284-386691645f3e",
        "cursor": {
          "ref": "52e1c0bc-411c-450f-903c-8e4419c268a6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "010615bf-7dd5-4d62-843c-b9980ed9cf02"
        },
        "item": {
          "id": "e63a186d-c8f4-4222-9284-386691645f3e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c54351d3-13c7-4896-9599-c67b2b3ed873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e83e2a-c3bf-45ca-8369-5ae2d9f87713",
        "cursor": {
          "ref": "9496d59e-0634-414f-9bb5-6fa925bdbd39",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3ecb5ebd-0ef7-4baa-90d8-3d74ba21842c"
        },
        "item": {
          "id": "00e83e2a-c3bf-45ca-8369-5ae2d9f87713",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "416c2c86-69be-46ad-ad2b-17d47db34268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea859ba6-aeee-48f4-a315-41facbe08295",
        "cursor": {
          "ref": "dd84060a-bc1a-4713-879c-94f345ee9219",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3d408012-b9a6-4ed9-8feb-5ec4fb0f65ce"
        },
        "item": {
          "id": "ea859ba6-aeee-48f4-a315-41facbe08295",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "39a55dbb-c195-45d0-9818-d0cf8b0e1b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf205f30-5bda-41c3-9279-8862863c3c1c",
        "cursor": {
          "ref": "78cb4054-706f-411b-9b78-907533023451",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a129bb02-d00f-4d25-86c6-28268ce7b486"
        },
        "item": {
          "id": "cf205f30-5bda-41c3-9279-8862863c3c1c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "88dbcff2-4c4f-4cd0-9846-3ff885744a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469784bc-aa66-46a2-b336-1ab4c0619795",
        "cursor": {
          "ref": "a4e57da2-5a45-459a-ad2f-dacc124ba91d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1f0f7e73-68e8-41e6-aebe-25c872809e9e"
        },
        "item": {
          "id": "469784bc-aa66-46a2-b336-1ab4c0619795",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2fbe3036-e85f-4a7c-b58b-46f145c89fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64941f62-cbfa-48fb-bb3a-54c82b2cbe17",
        "cursor": {
          "ref": "7c85fdab-0a1b-4490-aacf-cfd26d6df5a7",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d92d803e-b6b4-4334-bd53-f708cfbf453b"
        },
        "item": {
          "id": "64941f62-cbfa-48fb-bb3a-54c82b2cbe17",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "24e60e3e-dc1b-4053-8df7-f9abeaa51850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7445de29-5126-46f4-bf48-bc3885964fb2",
        "cursor": {
          "ref": "b611ca72-88e9-443b-8a82-c207802184de",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0ac26a14-4182-4ef6-a890-7bed36442064"
        },
        "item": {
          "id": "7445de29-5126-46f4-bf48-bc3885964fb2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d8cecc2d-f0cb-4648-b8c1-5dda2ce0bf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e06b452-9382-4e2f-8299-b748978f68b6",
        "cursor": {
          "ref": "ed35049e-8712-468f-9041-874657eece9b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0e389c7b-8817-4dfd-89d9-f443b974b0de"
        },
        "item": {
          "id": "9e06b452-9382-4e2f-8299-b748978f68b6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3fc97ace-744d-4132-8fc9-8ac193546b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8db175f-435b-4a39-bf57-020f95507285",
        "cursor": {
          "ref": "f541524f-3aa5-47f2-b046-6cc13fb7ac59",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "74b0ee0a-80dd-41a8-a3ac-8206125f6943"
        },
        "item": {
          "id": "e8db175f-435b-4a39-bf57-020f95507285",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1b242ac4-bf39-4601-a368-c7ed56ad4183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a69907e-2e14-4fbc-8eaf-1b768f8b25eb",
        "cursor": {
          "ref": "2ccda4d9-1863-4cf3-a5c4-6c99f437a3f2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "10e21185-3fae-417d-8e96-dba82bf47814"
        },
        "item": {
          "id": "9a69907e-2e14-4fbc-8eaf-1b768f8b25eb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "97417621-4982-45b7-841b-6bf581f311c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565f1f84-176f-4385-af7c-d73ddce7698d",
        "cursor": {
          "ref": "15f05923-eaaf-4dfd-ac76-3b70fb4007a3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f03c7c7b-2632-49ce-8bf8-4446de066843"
        },
        "item": {
          "id": "565f1f84-176f-4385-af7c-d73ddce7698d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4404a237-010f-4092-8e28-43a1626f501d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e191e3c4-324a-45a6-9844-7a9b8abd6c9b",
        "cursor": {
          "ref": "7840263d-af9a-4fa5-862d-fff320985831",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a1f5ed6e-f09c-4b34-a56c-17a79ef9563c"
        },
        "item": {
          "id": "e191e3c4-324a-45a6-9844-7a9b8abd6c9b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bfc7636c-159e-4495-8d60-b3724582b54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaca39f-4ef8-403a-95cb-1434c48d4630",
        "cursor": {
          "ref": "810c8f6a-8002-4660-90ca-56274d813ce8",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e1276ae7-75da-4510-9941-31938cc9196c"
        },
        "item": {
          "id": "ffaca39f-4ef8-403a-95cb-1434c48d4630",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6ff2b881-f842-4ee0-abfd-7dba3629421f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36552de-0562-4dab-ab44-48aea23499ae",
        "cursor": {
          "ref": "d38a7d66-cf5d-4ef3-b56a-4fce4f715be3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "12a62839-8724-4c5a-b3c9-2e5d3da5f9ac"
        },
        "item": {
          "id": "e36552de-0562-4dab-ab44-48aea23499ae",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b6e37336-f1c4-45db-92b3-6ba007cd0f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e72d30a-0541-4363-887a-36a5e99064c4",
        "cursor": {
          "ref": "61d73b29-719a-427d-bebc-a44799fb3e38",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "88028715-05f2-4b5b-b834-964e2275d08f"
        },
        "item": {
          "id": "0e72d30a-0541-4363-887a-36a5e99064c4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f15d4b3b-8fe1-4ec1-b56c-fcee17fd781b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c017b9-ac9f-4086-8c0e-68ad3bf5732b",
        "cursor": {
          "ref": "f687d61a-2288-4c46-a33f-6a74d0e83627",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f620d95b-9a1c-476b-bce9-a9b781d41c5c"
        },
        "item": {
          "id": "c9c017b9-ac9f-4086-8c0e-68ad3bf5732b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e4cc8ebe-23a4-4e54-867e-c6bbfbb89681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203638ad-ae33-44b9-b8c1-95f1d02cc969",
        "cursor": {
          "ref": "8f61b6fd-6c62-4cb2-80ac-416ee19a34dc",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d7933f6d-f5a9-434e-a222-a867eb146030"
        },
        "item": {
          "id": "203638ad-ae33-44b9-b8c1-95f1d02cc969",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "295a714e-5b40-4770-85a0-c6c0c8dfcf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6b4968-db03-483c-b930-7d79a09068c0",
        "cursor": {
          "ref": "5d4896af-1e6f-4206-873c-ced2ec7ff648",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f2c63193-3941-4f09-9ff3-ea06294c67fc"
        },
        "item": {
          "id": "ab6b4968-db03-483c-b930-7d79a09068c0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dfbc7821-d951-4ba4-97c1-00ee1146dcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55047f51-3d34-444d-82a7-decf331a691b",
        "cursor": {
          "ref": "27bb867c-dfa9-4c14-a161-63b67d52d473",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "347cedca-821e-4258-b00e-270114eab0e0"
        },
        "item": {
          "id": "55047f51-3d34-444d-82a7-decf331a691b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e2c3dea8-2ea8-497b-8ac1-c0c885b1ca0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e94eb4-ed2b-4998-a300-8bf36d098805",
        "cursor": {
          "ref": "21a284a3-78f8-4992-9c2e-2c2118edfdfa",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5658f5ef-5341-470c-a0a3-20e8b6239745"
        },
        "item": {
          "id": "21e94eb4-ed2b-4998-a300-8bf36d098805",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3fba088b-3351-4f9f-8eb5-8dd0e5ce2af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7026919-f3cf-4251-97cb-b5be7ef30b7e",
        "cursor": {
          "ref": "8025c193-8ab0-4752-89f8-4c8c45b77d09",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b76284c1-52ad-41e8-809e-df24f19ec411"
        },
        "item": {
          "id": "e7026919-f3cf-4251-97cb-b5be7ef30b7e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "527dd2ce-2dcc-4117-9ac1-1dedfd6dffb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826c4e61-095d-45cb-9b40-c79e716a4c31",
        "cursor": {
          "ref": "f5dc26b8-f7fd-4e74-9000-03d5caaeb70f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9901bbd5-0c12-4120-a136-397385da7cf7"
        },
        "item": {
          "id": "826c4e61-095d-45cb-9b40-c79e716a4c31",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bf2c3301-bf5b-4923-9afe-c5917f0569dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9153221f-1176-45a3-b808-0b4b0cc53523",
        "cursor": {
          "ref": "7d36cf2e-7cf4-40be-a48e-9d57e3aada1d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bfd69f30-cf23-44e0-b92e-b0a102b75d62"
        },
        "item": {
          "id": "9153221f-1176-45a3-b808-0b4b0cc53523",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9de76e7c-6a79-443d-8d84-81fcd9607558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdd1b64-a25a-4b37-9757-ba9dc11dca4b",
        "cursor": {
          "ref": "db108f68-ccae-4c97-a7de-d8311b810585",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "62748ca6-c21d-477b-b99b-4c4e2e8fc519"
        },
        "item": {
          "id": "7fdd1b64-a25a-4b37-9757-ba9dc11dca4b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c28984fe-58e4-4b7a-80ea-af2f40bf750a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7035e34e-975b-4095-a7f1-1a48432adb6c",
        "cursor": {
          "ref": "9fc2e11b-3487-4384-ba63-f90d7b45ba96",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4400441e-15bd-445a-a1a0-4fd4ff534cb4"
        },
        "item": {
          "id": "7035e34e-975b-4095-a7f1-1a48432adb6c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d622e4d6-998f-4dfb-90ee-71b6dba28402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3976971-7152-4e0f-9e60-3d7059c80d83",
        "cursor": {
          "ref": "8f17f6fb-e8c7-4f35-9a7f-41982adbc7fb",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a01ecfca-5e4c-4583-a373-f39286848747"
        },
        "item": {
          "id": "b3976971-7152-4e0f-9e60-3d7059c80d83",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ca66c356-2b9c-4829-a6a5-c526abe40300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76b9e17-2152-40e1-a1b6-94f27f8341ec",
        "cursor": {
          "ref": "70991b56-00a3-4a92-9c44-303573496b3b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "41f3536e-475d-44f4-8b67-3623f23c62c4"
        },
        "item": {
          "id": "f76b9e17-2152-40e1-a1b6-94f27f8341ec",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "21aa6910-a708-44be-a48f-91c10b94826d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4509827d-babc-4e98-b61b-bd0799f359bd",
        "cursor": {
          "ref": "afa29169-a1b6-4ad3-aa65-00efc8dc9140",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5b80e5bb-2bd2-4935-b826-be1fc630dd3d"
        },
        "item": {
          "id": "4509827d-babc-4e98-b61b-bd0799f359bd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5930e3d9-7508-4c68-bae6-62c8c13fbf61",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad892ad2-10a3-43c5-8923-3e7e786a7f15",
        "cursor": {
          "ref": "e963fb0b-2691-4ad7-a389-778ea19bf69e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1bbb7749-3eaa-4f24-aaad-d9d38bf20f5d"
        },
        "item": {
          "id": "ad892ad2-10a3-43c5-8923-3e7e786a7f15",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dee898e2-fed6-42b1-a5f1-11a220af6a92",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3655bab1-40ad-4d13-aa94-2f925b1c6c5f",
        "cursor": {
          "ref": "934912c9-e870-43fc-80de-37841316ce3f",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "33fa7478-67b6-47bb-80c1-dfd9683c226b"
        },
        "item": {
          "id": "3655bab1-40ad-4d13-aa94-2f925b1c6c5f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a2ea5a8c-ced6-44d3-80c2-149cf989310d",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de9cddb-9d08-4912-ba53-562f3156eea9",
        "cursor": {
          "ref": "16d402d2-32cb-4ff7-97ba-62b45817c888",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "41a04508-8d21-473c-86aa-6c42fed01761"
        },
        "item": {
          "id": "1de9cddb-9d08-4912-ba53-562f3156eea9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "87a97e56-4c50-45af-8ad6-31f427253c76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de9cddb-9d08-4912-ba53-562f3156eea9",
        "cursor": {
          "ref": "16d402d2-32cb-4ff7-97ba-62b45817c888",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "41a04508-8d21-473c-86aa-6c42fed01761"
        },
        "item": {
          "id": "1de9cddb-9d08-4912-ba53-562f3156eea9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "87a97e56-4c50-45af-8ad6-31f427253c76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9c190b-e1db-4ffe-8401-ce9af6a6f5fd",
        "cursor": {
          "ref": "d1539b07-cc3f-478d-9df1-bb27c94d9a61",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d7654203-fe64-47f1-9ec4-5ebb62ec9786"
        },
        "item": {
          "id": "5d9c190b-e1db-4ffe-8401-ce9af6a6f5fd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e8f20dda-d4bc-4d9d-9509-9d75121f13f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbfc587-c7bf-4fc4-808b-8f7c5ea2d8e9",
        "cursor": {
          "ref": "f8f736d5-f78a-4eb6-8054-d81eeef7280a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "63b82eb1-d8a3-46d9-8344-2bda39e9486e"
        },
        "item": {
          "id": "9bbfc587-c7bf-4fc4-808b-8f7c5ea2d8e9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "db54eea1-dabb-4a2b-95f6-b84556c555ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}