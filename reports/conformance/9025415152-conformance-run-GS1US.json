{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6dba5a62-4943-4110-929a-9f1e9eb05aa0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "27563cdf-f72c-427b-bb6b-a998246b142e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d3936b4-f628-41a6-a443-6f08a52534ad",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a64b2599-70d5-41cd-a38e-1503f5fb281f"
                }
              }
            ]
          },
          {
            "id": "5dbe17a4-6b14-4513-ab04-21d1ac8e91ce",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96d311e1-0aad-4f65-bb57-307001b91b9d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8ea7135b-f86c-4456-be34-1246b11b2c84"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e85a8ec5-1370-4068-854e-1a78a827f047",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3af9f99e-ba96-4626-8ada-3c7efc66de7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1149725a-1fc5-497d-9a98-da5c381e8191",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bf61f3e-3eb0-44d3-b51b-a4f2923f31e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89facf3b-9add-4417-9958-5ed5dd18db6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b0302526-6c73-4637-8411-4b3e7512f3af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c479f3a4-8c54-41b2-863d-a619f8e43994"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8e60adf-1adc-4968-9eab-9e42fea71dd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "188d9c46-0344-4c0c-b4b3-3cdc89359488"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09a8d8e4-b396-45c4-87c5-95b65bf4d379",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9d6e56ff-ea1f-4a9c-81e9-570de8b062fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edc189e2-15e4-447a-b4ea-e32244103123",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7f3b823-56a0-4133-baae-fdd1903bdac7"
            }
          }
        ]
      },
      {
        "id": "7ea06eff-4545-44c4-b461-8346a1a14f07",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1e9cd5e9-0dee-4b54-91ba-eb0cfa4a1a93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5df2bd5-2076-4456-a9b7-689527ddb368",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c3c62da7-1e4c-430b-a95e-852b73b7a357",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a751182-69b7-40d3-84a9-467b1dfbae50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5e13ef0-a47e-4da9-9612-273eb15b1ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b35ed0-dd54-464e-8908-5ef1b3c4dfa1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cfb39b-7c32-4736-bffd-44ae1b587f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59df03b4-a2a7-4994-8fb1-a20187f097d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9085e404-0d8c-490a-b276-9b9b673e3d4c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecb7d45-a78d-41b4-bc4e-9a9ae9332cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21e2c5cd-ac67-4cc4-97b5-17460f5c637e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3a23fe4-bf38-4b22-a0ad-288a23f5dc78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa8270d9-fab8-4f06-8fbe-cec8b1b0683b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad05400-38be-47ec-ae3d-c38afa48c1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa76d009-0d4d-48d8-8b97-d52b58c1fdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc1d153-12be-46a0-a177-a4141a155bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7c5ad5-24a9-4698-bfaf-5938d06a3637"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e3fd816c-ee94-4eb8-b513-1338bbc07d5a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "699ca5d9-7a6b-4e9a-b957-95c21c3a1d1c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "195cfe4a-5ebb-4af0-a4ad-c4c979c3b21f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d5bf280d-bf16-456b-9c5d-2578adbf44ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "456051f9-f16e-41d4-b061-cd2944d0d0b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "031cfb5c-5209-4f7c-8811-fd7c920812cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b80ce8d7-c443-4f5f-9125-98c05ac92ba0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c17796c-de5f-45df-9d14-1699af1e1e68"
            }
          }
        ]
      },
      {
        "id": "7e58879f-d1a9-4c4f-acff-dc0a702691b3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9d201ca8-eaa1-492e-9ae5-e90209d2e8c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3804715a-06b5-4a97-bfac-c4b48bed66d3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f052d984-f534-482c-91bd-4529e76b7444",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5c1b6f-62ad-4f15-95ba-7dc3e19ce32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a38b5ae-73ef-4b69-85ba-ff7d0df0243d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6c733f-5a6a-4023-a070-272acd3438f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77b84be6-18dc-4d34-a8dd-04edb2d4aab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb33782d-788a-4da1-b30a-38e7e435fceb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7726f0-9069-4c83-9a77-4b1c694e65b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e9d66d-cd3f-4e9a-8d01-3d78abf239e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5066774e-5bd7-4478-9b90-f711a08eccf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d35fc826-2111-44e4-bb02-4c2564600f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee1eb23-e83a-4f9c-8e91-e089e62e0f86",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882c0fce-dbd6-4d69-b6f0-3ce907dc0cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f2702d-ee9c-4df9-a1ad-372d05e44bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d70f1b-7c53-4517-b4f2-50fba256a029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a161fe41-2060-4660-acc4-448ac94f0931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663e84ae-565e-44d0-bb7f-15e2dee95b7d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534bac0b-5522-47ec-a399-a9b93bb3a22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6877aed8-32fe-4da8-b92b-5c4e1488d32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d0b62d-2c52-40cb-b677-a26f82b21f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b6d6924-32ab-4590-8e86-014088848ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6c6cb5-257a-4457-8cdf-cd0d6c8ca820",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144adeb6-8386-46e0-9e49-0771b9732a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626d3fe7-18de-40ac-ab41-e53290885602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c586124-dec1-4f4d-bc6f-9b573540c387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65511215-c78c-49af-90bf-98242af817bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b0db1c-3141-42bc-8ebf-127cf0c6702e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb60f9d-a5eb-4d29-9900-f19112f2f0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b863e811-72e7-4203-b2e9-d735edba4d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce84c16e-ba7b-4f87-9fed-190071f44508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "970a8748-4d8a-4019-84bf-4defbaf2aa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04624172-46c6-4496-8fc7-7806e724a9ac",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1535d64e-28c6-4aba-a449-9a6aed473800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3eacfe-ed23-4313-99c3-36d91f2df840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a58954-69f1-41df-81ce-845dd5e7b147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8918910d-43ce-4736-ba47-7f96bd872708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89d9cb5-a5a6-404a-ae17-1ccc077f3531",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59129e9a-ac10-40de-91fe-f324732cd8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f3251b-3e87-42e0-9924-3ef1914081f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed95bbf-d783-4f4c-92c5-8abea52e15b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db6bfa9e-9e87-43f9-ac89-e376b3ec3467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8946a0b-fd92-4ac0-bb96-86c45459b12f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60d7499-1291-4ebf-9bd5-3d256ebc1f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6fa53c-c7d3-4016-89ab-84c5d3d5f09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a89554-b1ca-4e9f-b575-16068e1f1a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ee0fb0b-70b2-444c-8681-38ae238bf3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2debf6-4c6b-460a-b76a-34ddedbb6467",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772b1d58-ca68-44a9-b8c3-c5299535582c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b14048-7927-4ba5-a60d-0d37c8b63ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453c0869-bd6f-4883-9163-5bbe679f95ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4b3ce81-7060-47ea-a77d-a319ff9dd748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366b8e51-70ea-48c3-bba4-7157a191d0a4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce354ef6-b5ca-47dd-adb1-8006a22cd5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cadd37-9b6c-4727-a57c-cfad46cac435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a87ef6-0d3b-4d0d-a486-8bb9cfc2d4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fb212f2-25a9-4a5c-9d3f-75409abaae8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afaee5a-91b4-410c-abe3-33d718bc69bc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b2a0b5-93dd-4a42-99e8-c8132e601862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33990368-17ec-4edf-8e7a-c466d502f0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d64a932-fcc4-4a0e-b701-51f60f2e9f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbc4f809-d6ee-47ab-9098-564663c2fb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a08ae20-167d-41f3-813a-36f2f68b0956",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6699053d-5d24-4658-bb2f-147a9af55ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cb939e-5fea-4fdb-87c9-cb1db5de4df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4520415-ef31-4471-a8b2-acdb45dcac40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "408acedc-d527-4412-82f9-bb0760272e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca0adf2-973e-4a8a-8010-98229a317a74",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f40c50-6169-4b94-946a-c56be2ec86eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9180c699-ad66-440b-bceb-aee4262b7dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3102a5df-c653-46f5-8d04-d59b20792a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d62245b2-543b-436b-be26-51a202094a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ad4891-e5fb-46b8-af86-5ae9f36fa4dd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb2b2ce-918a-46aa-ba3f-cbbed90c1758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec550fc-1533-467c-a89e-54a6d29118f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cc0521-23c4-4ce5-9592-e82f09e0ad48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cf39040-109b-4053-823e-ecbd245f9983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5620705d-3007-46ff-9cbf-665129531216",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d540c27-bef7-4488-a9e9-d4ef21ca52a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da8ac21-e68f-4224-9593-3c8d6d9ccb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb6684a-6ad0-4c96-a47d-1f2522b406b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed842de5-3fe8-476a-8a7f-8fde749accb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a44374-2642-419a-af7c-019ae8088a88",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dda6010-13ef-4149-ad79-38e76971eab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f10424f-3dcd-4827-acf3-2e5c19fe58f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d39adb-8713-4d6e-95a3-9f9f43edc6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2184a9f8-4be0-4dd7-a9b7-8c753084aa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8dc6f4-7127-4d6b-a061-0cf63931b16a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c94b3b-0978-4ca8-ae26-4df00e71913b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4514b4aa-8c81-4138-b506-c1d61bd5486d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a755d3c-572f-42da-a77c-551a06b4633c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7dec6a-854d-4aa2-9e69-e93357b47f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9578d65a-3000-48c1-92c2-3b20c0321d11",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea62acd-c469-458d-9ba6-bf12222c4a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4923596d-1c55-4dec-b5fe-b35449a45bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db431307-e46e-4aec-b5c2-23912379333a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3546260e-156a-4548-a68c-14239093b103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413ab15f-8a82-4c93-80b6-0f63e2d495f9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6af551-9249-4add-9522-62293d6b9af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e44948-26f7-4209-ab19-891c803e3d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333289eb-38bb-4230-8150-19552a0bc67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd398e63-1840-432c-940c-dc34195541b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38b4dcd-e4ba-4734-893e-06aa5ac90a10",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca7ed46-7b17-4c91-b497-07c2aaca4cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea65bf05-9036-4094-af97-5bf8f2a8eda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f26b936-369e-4d84-bb2b-70bf29cf89b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78475de2-2987-4307-9b86-5c1529b8c3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb23e499-cb48-4cdc-839c-bcf0137281cc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00f66dc-264c-4164-af58-e14c6971f82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3c7e4d-0bf0-442b-9b91-6a394206c883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3480e10-a1a0-4a96-9449-dd2b5839b2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26adfb8f-a54b-4604-b6d1-118bc1609455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2791e327-d005-4feb-8cc8-7bfeb76c76f8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a683a8-9f85-4cc0-9e24-40efb2a9579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cf82f0-cc49-4030-9cc1-1411cc3fac3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e0ea40-208f-4a09-a865-47a7833a24c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1939a5-49e3-4acf-a95d-b5009c1e7a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c157c18c-bb84-46c7-b2e6-cc89868de6f6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41390d4-f591-49d9-bc07-73a6ab599cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2700fcf-6661-46dd-8d4a-8ba6ec602fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ea6fc1-f71f-4319-b0cc-3966b75fd649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "788905c0-c37d-47fe-bf90-b286610b9211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a535e65-8cfe-411c-bf2c-e12ca9ccd588",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c32f6f1-c4cf-49e6-8dda-952dd95b256c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d11c7d3-f70f-474a-9d46-e110746e989f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b67594e-4095-4cb3-b980-564888fe5fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16446b23-4db0-43d1-9260-6213ffff3428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80488ca7-7619-430d-b279-5944d766237d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b51b925-6bd9-4582-8f84-706e87cdf10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cccab52-8733-44b0-be60-cf60850996e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40bc9b9-66fb-47e8-9f5f-b51eebe630ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8caea5f-77ec-4df6-9e46-0d64ae34856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396ac176-46be-4426-903d-acb92e7b01ed",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a750ae5-0945-4d0e-b99a-02421842a203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926b328c-8440-42a0-af45-69e13a208750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b716b157-2948-42cd-a54e-7dd95bca323d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc08ff4-ed15-4fd7-80c3-447b6f4b0f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3157bc62-c9d2-45c7-9d7e-39a54a5cbd6d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb5f953-bebd-4a90-ba82-4e1d581d0cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae90b03-c2b6-40e5-a2b3-f1e8beee75f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07594cc5-aee3-4e3a-b16a-e8174d3ddcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7829d2-935e-4190-abb1-26793189a37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eea31e-fa51-42a0-92d5-2dc25b3cf6b0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba2e656-186b-4f95-8f50-7964738458fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08f4400-e373-4716-abfc-27a928f449ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b579ece-6989-4638-a479-4f07e83b5bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8db4463-eeb8-4486-983f-15574ad7029a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b45a33f-6850-4457-9545-2c068ab302de",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6348464-b127-4213-a867-be18fd8f8b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e5fd49-56c3-417d-8d0f-e0800b72e4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5e1a11-254e-419f-91f6-76664050e869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b80bd1-6961-49ab-ac4c-703451188f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b58441b-d3d9-4ed2-bdb5-e60afe005f94",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201e593c-9300-4bc7-8cee-1cc1f77b9f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6a0ce3-9a30-45e7-a40a-e9cb13058139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caaa8e0-3ef5-48c5-b8dc-a31c9dfc8c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57cbe538-25de-4d11-8406-c8bc655cee5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf66b736-8676-477f-9ef0-f6101d9bde24",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b8d71f-f0a8-4afa-bf32-a89003fb9513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8adc690-35d3-4d99-9cc5-7d54b75cdacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d135da-fa83-4253-a12b-335603889f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "579ddbce-237c-4e53-8279-609cbf5aa7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38b2c03-21e5-43ea-b594-b8feda69a32b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df087ba-cefe-427a-b71a-4265ad1ed007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099d9310-6650-44b5-85fe-d9c05957367a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e1b67e-6572-4957-af27-4d44a1bd2b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34a8de2b-359d-4c6e-9187-fdb9ce1e1b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2e4e74-cf10-424f-abfc-184a49c17508",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bc29e0-db6b-4d50-92a4-165ef9334035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d501404f-cd2e-49e5-b00a-cfccb0b04600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32f6574-6fd7-40b6-b19e-47eff70c4463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda329b7-36c6-4121-ab9e-07ad69fcdb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0bdf86-d168-4948-aa24-73362861044e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf7980a-2570-45d0-8a84-41cfd067c8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66eb9fad-0e00-4837-bd1b-1ba86c037420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22acd597-2bc7-4ffd-b032-1836d87c4faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0798bfca-6369-4d8c-a8e5-cb74d4604161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3721a9c0-7a36-48c9-b125-605e71b1ae30",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ee21f2-52a7-4ac4-8a6d-930cf52066bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d8511fc-740f-461d-bfdc-3af1f08c8b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db57acf-d940-4045-be3d-5aabad402f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98d49a6c-3b37-44a9-8d95-5b0b6f80fdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae2da28-11fc-4627-88d2-2ed60032d11b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4113d1-60c8-4aee-8d85-73747dfca57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa4f33a-c29d-495b-8c60-54e7549b8e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6705127-ef44-4003-814a-83d4a38c58c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c574873-d0d5-4e58-a524-4d169ea3b4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27349a06-8c68-46db-8cbb-6f541abd013c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7975ba53-77a8-4314-9720-a44d707b880d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4185b0c3-acb4-46e4-9062-03b9633519be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e9df18-80be-4419-ac66-ecc6e6dd953a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "38d250e6-9b24-47e1-944c-bc223c1b80ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb6c207-f706-4950-8fdf-b6c1e57d8c3d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547e33cc-cfdd-4b86-98e2-287f82273d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2dfb5a-78d7-4049-8426-57168845a6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6409ae4-cc13-41a9-9d9a-734ef2eb7dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09181eaf-cced-482f-98d3-4706699be9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ba68d9-2628-4091-9daa-5eb418467d22",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859a53b4-1f6f-4028-8a8b-30e733a4d318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b231b57-bf10-4e58-a3fc-45592345fad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92da5d68-7929-434a-92d6-14c52296bd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b60d892-4350-4a89-9666-424bba909352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b21d3d-7790-43f9-9c62-bdb4e70c854f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594e9ebf-74eb-430d-9ded-e883597f361f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff6c99a-fe32-40fa-aec9-358e9c7f35b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6aa5e6f-d2ab-404d-9f67-4544f20629b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "adbaa2d0-95d1-4482-879c-2da518db6016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6690a2d9-53e9-4302-b41f-5b996f5bbb47",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5524a05-7b14-466f-b342-5a27a2b144b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b29aab-afa5-4075-a0a0-a77af22a3ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590a6f64-9757-4770-9a27-ab2b4022c852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3c1a1a-79cd-4dcd-a119-515f4ad68982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843fb17c-a5e7-4860-9c77-6dfc301bf35a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b345e1-e33e-43a9-994b-2cd79c864424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64eb3c1-0cdf-4fb0-ac4a-5dd4345911c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274a70a1-e815-4c05-8907-1916c77b36a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cff6530-bb25-4da5-b4e8-3d423e0c93a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939c26e4-deab-4417-829c-180694e31ca6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4b4c33-3450-4511-a035-357e0cae1395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a5a497-b99b-4d39-96c7-61a02255e7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee31a6d-f638-4dfa-862c-e1155d638209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e87d18e-6f21-4ab0-b507-d4f58e287d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e040f7b-88b3-46a0-ac19-086a2c0adf3a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8b988b-c549-4479-9474-f566316c13a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026dfaa7-2b42-4a8f-804c-155c74b3bdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2726af75-4ece-4af9-8ecb-69b8d490b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5fafca-5090-4393-81c4-385e9c6ba53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc967d75-4beb-408a-9aac-d418ca0ad343",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5ca5ec-119a-4549-a231-c6738e28254f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf094b9b-7e8f-4786-ac06-a5525e6355c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99e013c-ad79-439a-b565-da8f07a56a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8925621-fc70-49b2-9d8d-d5fd122baf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158cd3a0-c7e4-44d3-a409-29065d8b169a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c18932b-df9c-43a7-b37a-25c98793b2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64614681-b669-4f33-9181-a17268f98986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ef0894-93f7-465d-840a-0a108cb826c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07521272-0956-4539-beb8-7f12d2434c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb56047-7cde-4c74-ac51-8879c2485ca8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabb6a99-9764-4b56-914a-9cb69b4f94e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3210cbee-f121-4a47-9d7a-7f98fc45ba9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5cf024-1aa4-4963-8517-106751229e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd8605d-5626-4766-8c4b-20fe1e9a16b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d410c6-e025-4d64-957f-775d6d70e2dd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fd1a24-e56d-402d-8619-07e89248933a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d1fe41-9319-4ed3-9907-f02b1f1bfa02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d18d6a-68d0-40e7-aadd-a1355d25dc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "187caef7-72fe-4373-978f-764a27a96848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad681da0-a651-4491-bebc-b7b97ad05da8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12361a2-ea34-4587-ad68-7660ec97422a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e77324-4c04-4453-80cf-a91fb8880947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fae684-5c89-4273-8f1a-eb66971e066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de89dae1-7a0a-4b27-90aa-a93586d0821a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea986b68-4848-4219-89c5-e58ac2272517",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0c744b-906d-4223-922d-bd0113e7697e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28063041-0cbd-4f89-b99f-04739a1f2907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9441f37-32f9-46e2-a010-a12e169592aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f09cc03c-13d5-4da4-99de-760c4636c552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e6223f-f65d-44e3-9e6e-3044c9df04f3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaa9b40-7bae-4e18-ac5a-73b14642ee2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45da85b-55bd-4b76-b5d4-0f481cabd759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c399a997-19f2-4132-9111-598c22bec72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0b9136-6258-4936-85ad-d23147de16c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1821bcc7-c42e-4428-b841-45d0886a6566",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a163c07-dd0e-4a40-91d7-2dc05fd3501f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1443848-8db9-471e-8e6c-06769c13dd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16c1fe4-ec0b-47f4-959f-1a759cdf7327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15d02b60-abb5-459d-8155-08bd6015b4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d0b867-1c45-4e20-8cc8-50bb91728d32",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dc9ee1-ad34-4099-aa6a-3435197f77b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a05046-8286-4a97-9fd0-b79dc3f3eb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7804fe25-00aa-415a-baa9-f4e664852d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d7bf2f-00c7-4002-9ad0-8563abda3ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c1f545-c297-4176-9ff9-a37c54d9c1a9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d4ceea-84d4-47e5-945b-3e0aa5f9ca4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c2b729-3417-4c71-9e2e-31ad315db541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e636f1-fb10-461f-a47a-a02de529fced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b7844c-e178-4b6c-9451-bef41cdb9e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1cbc26-d188-4c12-86cf-8fe4e392a043",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a34ed7-a7d3-4ba4-940c-0d2bd610d0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12de9f44-5ca0-4f45-996d-22be8194f1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f7ffc7-ace3-4d33-8935-2a3832a167e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "500a0f91-6231-40da-ab29-a4351d5006b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30fa1de-f6a4-4586-950b-72352859a29b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0897f4fe-5784-4ea0-a1ca-7a7e19e656cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30bb806-b1a9-4ab0-bbf6-8f98d64ac110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d038bacf-088e-491d-9ccb-3d459c023ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a7d4d9-5e19-4609-b9b6-2359aca3d624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eb2bae-d830-4247-8644-fe5604bda403",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd23173-a0a7-488c-9ba2-b9be8794116b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32481d4e-c62b-490d-8f23-e3048b499f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc86153-6d7d-49d1-93d3-95936cc36a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "06a22980-506f-4776-ac00-1a6905888816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d3f3ad-8007-407d-a058-b3e8c6a6654c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c909fef7-f910-487a-bdb9-b8af44b0196d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd2288d-1015-47d3-a626-b081fd5e445f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145db102-e6bf-4c17-8931-3d0df1c92147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11f8e95b-ac68-4b07-b009-4bb0b2083344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434a5902-5cf9-4788-ac3a-79bf54ff684d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67afedf2-6742-4acc-a2dc-d58333c8d8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effa95c4-b427-48a1-8166-33dfbd08c990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1673f389-9007-48b9-b38e-47cff1b24874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe037246-fa54-4e65-b3c8-3c126ef60175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6adf33e-c938-453d-805f-6553cd89c90e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9568b292-5e5e-4be9-ba3b-108f8f462bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08dad0c-3475-4e9c-91c7-db17bfb9458e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf6c187-4aa3-4d53-b360-5165e45b30c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2586a721-87a6-4673-903b-38196bed95a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9a179f-6963-4837-ae4c-f235b72ba256",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb933a0-00c5-4950-a6a8-54c732c69962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becf1114-7453-4529-ad81-64a7a5ad1ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4edde89-f7da-4e60-ba50-1a112652ac0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d99cfea-d830-40d8-8c3d-bb2b84930045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0933bf-796b-4096-8a87-3c527dde2213",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bed2fd-e88d-4741-838d-c94be36ae7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d0d13f-8aff-402e-8ecb-53295213d29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f8a73e-5049-4fd9-94ba-9ca206d5db7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "502c1074-5467-4d06-99d4-f6edb23ea0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58df56ef-ae36-4967-af5b-a7492ef95dfa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0233c2-d2d2-49a4-83ec-8bee660ef294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11331c3-7010-4bce-a95d-0871029ee311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36386f9f-c774-44f6-b299-acb4b353217b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06780b10-822a-47e3-baa3-1870837d8b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d98d1e9-cc29-4d27-a6e4-05ff010fd4b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec532140-bda3-46e8-8199-4314f62ffef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5296c417-ea55-419b-99e8-e750d25872c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5ae7ba-ff20-4ed8-be46-04fc72d38c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b65afa-ff8d-44e3-8e10-0b3f9a28b1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2633e9a-b7f4-4107-9ab6-038ce7e37473",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa74eed-7499-40b4-8186-451d68315b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a02f1cd-1772-4280-b3db-953b21fb5dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eeaa38d-cde1-45fb-bcf7-0798d79d4cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb9cd90-fb0a-4367-ab95-d5a6985304dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd7f90e-0e70-4609-b9e5-151512a0eac1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c090179-177c-4b00-8994-1599ab44a914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386d8afa-eaa7-442e-88b4-834765ac8de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5e1dc2-ed1d-4892-a302-ce219cee33b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "224db950-f2fa-454a-81de-248c67260cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcf0135-b9ab-49e2-bd52-019b61a584ae",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead13638-4dd9-4b52-b0f4-22ba6826d73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e745f1-130c-4276-ae15-e17fe4fad92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52970167-87da-4e85-a575-388a78d8921b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e125cd6-b1cd-48c8-997c-5abc5f725029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6db1381-27aa-45b7-be3f-b4418c4f0269",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1a89f7-fc90-4ad4-afea-80cbb0aa2dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798e1b20-3c3a-4fe5-ad9e-c528c7b3bd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b09d50-49cd-4b31-b54b-c49c381497f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "686c5973-73d9-4ac0-b63b-ab4366d5e218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48a1167-02ef-427a-8ab0-5ee9d66e78e3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727512ef-e49d-46a6-a020-21ea15823723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98d2d39-e9b6-4e64-b87e-282d243c94f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ceee5b-63b7-4ca6-aab0-3d3dc5adf592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62b84165-945b-4922-afec-ed031dcb27b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61291c68-006d-4404-a0f2-c7ad99fb887d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd48865-17ee-492e-8198-060fe96ed8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd974d9-0793-465e-b948-24772a5d23f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559624d2-0de9-43e4-be4e-d80305950f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe27a58-9d7a-4b4d-a80f-63ae8b6731f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebc764c-3bf0-4d51-b474-7b5781b7866f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0ce14b-888c-49b8-9855-eab6f64bfadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b73c7d8-9371-4824-8c25-a55d2a5fdd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebaf44c-e323-43c8-8627-9feafa0bbc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dda9fb8c-09d7-4032-adbe-3b0616589fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed16286-e5b9-413f-aad3-222e70abb347",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aad2e06-4647-45ef-8b94-cbb4ffd2eaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad4e16f-91da-4059-b5e1-4883f41587b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ba6509-2d16-4d99-b681-d1d0c3964417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab58e8a-a442-497f-a6af-d2b7be5df82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80da921d-87ec-4d4c-80c1-1584c7a5254b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82662d1-4a33-455a-9c20-6d7ecebbb79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19c049e-65e3-4a08-864f-695fb865ad8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e994cff-feb4-4e34-82d7-cf6c406aec82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac466a4d-9806-478e-a5f0-aa10909ed331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917a33dd-47cf-47f5-a59e-2a159cee4855",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19c9b15-bfa6-4ca2-bfdb-167449609a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327f5075-c2dc-4da4-a16c-6efd59c93ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1569c4-1396-4dcf-9ce6-46fdaef40406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "025ff2e0-7502-452d-93ef-5fef9fc1d490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6db002-295d-4b9d-b604-3743ba8b8197",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d69992-9b1c-4a76-9e7f-b9797ef8811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8501785-35de-4bbf-aee5-c17b6e4da21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f246461f-926f-4dfa-812a-a3da0f4d63de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d59dc06-afab-428c-9c32-23d3da178018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be83504-b916-4f8b-bb91-a0e2126b74c0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7d69b9-40fe-428c-a767-628dec0d7ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d02b784-388c-4850-80ef-f0ad7e0a1c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c69e7c7-47f9-464d-8674-be259f0b90e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9d2fc4-badd-43c1-a9f9-5d9c46f2997c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd854db5-6acb-42e5-b6ce-8784aa7ad2a2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1d6198-3939-48d0-bbcc-4602e5fe8246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0c6638-46ac-40f9-8127-394fc42d35bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea9b928-2e61-4354-bdb0-32fe22291254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e953b4-045e-458e-b8f6-a4a24f4b5e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f890fe-759e-4e5c-8a61-608483c7b57b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce8c4a1-809a-4d86-9468-8bae9cc70f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f56b0fb-66f6-4e7c-9848-9f05f69bad3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9723550-1f6b-42fe-9b47-1025a38b5eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbe7210-efc8-4ee9-afcd-92f42e80e84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217de69f-2f3f-48e3-b034-32ad1bee9d61",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bf8dff-afb0-47d6-81b9-4b63dbd7c2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563855bd-9ff5-4e06-9b0f-7c2f5386759e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdac57e-b3da-48b1-9db7-6de9205478df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f91f81a-5b31-46d8-9bd1-190181754da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e500972f-23ee-4a45-9941-db9c295fe983",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b093a0-8a64-4a8e-8ab9-122ae16725ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766645a2-f8ab-429b-ae7c-570c8d307e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd2bd60-b985-4e22-852c-a25ac267efed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ba0d41-db6d-402d-8097-ecaf312842d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435dbf56-e973-4cfc-90c2-b0f593f219e1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60b6757-2d06-435c-9dcb-e56c2515f665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e00abd-b984-451f-84f2-8218207f58e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a01356e-effa-4bb8-bf57-da5da85ac67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27487868-e13d-4f0f-9eda-89f037b01d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105082f9-699c-4eec-a076-9ac443133465",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180fe738-75ee-41ca-879a-f6a3bbd4c31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcf9652-375a-4e7c-a1bc-6c1fbbd375d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bfc061-9fcd-4db5-8186-0f9a040afabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39d5b933-5054-43b0-afab-c9381abd809f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4b9ba1-90d7-4b27-87e7-dfa2b92c0b5e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d47f326-f736-4a66-9ea5-f3ee163e0063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4da8132-b986-445f-be50-b46567f21bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff6aeaf-04ae-4163-9391-5e8533b2f1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe759321-34ba-45a1-b874-1182ccc56511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e5fc64-806a-400a-89e0-3db41a86baa9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643cdf57-49b5-4568-a228-5b8d5808f48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fa0881-5e9c-4148-b2e7-a641f84d3b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6da7a1-d637-4440-b1f7-8cdc21855653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dede2f-4be0-49a6-b3df-2ae51429bc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2039bc1c-d2ab-49a5-bb36-f5e3c721a3ce",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd0df59-2930-4f07-aa0c-d83cbf91f643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4af6034-865c-400a-8637-b6fcbc8a39d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54feac1f-6244-4c4a-bf08-fb7593bb5399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78842bc8-6c67-4f6d-a81c-2c8ca5aaf7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ce7dfc-053a-4b3a-a841-3cdc8afef64b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71f4bc4-4ba2-407b-b675-e1167d51501e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2401f80d-1519-4613-81ac-96f4248b61f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9330c6-4858-4054-8837-117372e3a643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "489d981c-8751-4239-8775-a321c7b52c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b41c75-70fb-4356-918d-403ae6a24713",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc407cb-41d7-4e5a-a6cc-056ce35238ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97a41e3-7367-4cd6-9ab1-00e261518f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db67620-92ed-4778-8933-f9727e53bd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "abdb97d9-1e57-4fb1-ac36-077fc844c7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c359d1-3f68-4c28-92aa-7ff3834c4f9e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313bd311-5633-4584-8977-017423f66b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675b37d3-405e-4997-bdfe-c177cfd99e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82fe4b2-8f84-476b-9856-9febe6a8f908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "df5504c6-3798-4c1c-b7ee-07fa16baa7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61ebec7-27d0-4af2-ad3c-2de23bab9a83",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6f47b9-afcc-4e8d-8179-2e0537f50cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4e6310-1876-439b-8af5-0fa2e4a9087b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2b3e2b-e1b1-465f-a1f0-8b86054ca001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcae646-7e6b-4ab9-a846-d390926d66b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d25f03-9427-422e-b167-f0d81cc7a96b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3547d78-41b4-49d4-8e7f-58cf293089e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cbf4a2-d249-4b96-8e7b-60b928aef693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1fb4dc-2b70-4d5f-8944-23c304c58c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "05101c76-816b-4240-80b1-8fd4f2e1667e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79edee3-4e6f-4eff-98fd-d804f43048f7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367c6889-00b5-4dd2-95cb-ac2c0fc49e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d9c520c-b544-4f4b-ab24-3c0b7344209a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be84994-ccd6-4683-b508-06fa7545ff80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "85f91d46-9000-4f89-83c7-898f71174281"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66566600-52a2-4ffb-bcdb-93cfb18bef27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a8d8031-5c72-4fa4-becc-d068f5d9c3a5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03cd631-b146-4992-ac1b-5f6421abb830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29d1c9fd-0c34-4e07-ad4d-320f9f4a8578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8312e61d-dbf4-4c5c-8611-d3aa4c39cbd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93ce9b6f-e0f7-4071-b600-8ab453dc70cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4baedb2a-0251-411a-8d47-159e346b1100",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57073051-9409-4914-8e76-963e66cda791"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f9c03e5-07d4-4e70-a17f-6f63ce4b5a0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b101ab8b-6a21-4ad8-834a-8bf90d3f6b08"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80e64ffa-4c16-4cb6-b507-6aa8a0a41b7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b55e0ef0-b873-4536-9bcb-c7a5fe247e91"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7cd60f64-2583-45bb-86f4-50081cf44192",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a272cf7-949b-4c07-be16-0f38ad38dfa1"
                }
              }
            ]
          },
          {
            "id": "73432f33-38df-457d-9fd0-87fbb1a4217a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd055070-e9e6-4bc4-bae6-d88dbbbc10a0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "37d63264-96aa-452f-b7ab-f1e95f372099",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a84dfc-4548-4fa8-b84e-7a41b565767b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "596b37a7-53f9-4c53-b640-f634f088a462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90f98ce-4251-4591-a660-bff9436886dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e28500-b29c-42e5-8f84-2336573eb647"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4dc30633-cd36-44e0-b59f-e6ada5ff7030",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b21c2fe6-97e0-42ec-84df-a9815b85614f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f04457e-c90f-41e0-ba71-a1a4661a4e07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c19a6b6-981e-4645-9730-6b4e7a925a05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "880c3160-927f-4b7c-928b-9ab66159b08d"
                    }
                  }
                ]
              },
              {
                "id": "711b7b37-735b-4172-b270-a4a5bb0a330f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7594a2b9-48fd-4028-aac1-b48762ceb836",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2616ea9e-7a05-4ced-81cd-50475fb8620c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8475b60b-c085-48c0-a878-6b743b9f72fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3bfc889a-a50f-4534-a657-7e42164d29c1"
                    }
                  }
                ]
              },
              {
                "id": "78689743-3346-4bd5-8d0f-745e1b44b207",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d1e496e-5012-4ee3-838e-43a56c879b44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13f15929-24e2-41c8-ad26-d052299de6a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7841d8b-b74f-4bda-a61f-9cd046a816ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6580fdba-fd4e-41f0-9858-4ff5036b4bfc"
                    }
                  }
                ]
              },
              {
                "id": "d3893db2-d884-4e8f-94f5-cd3631fa26a4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2945e1c1-1924-46f9-9bdd-d818df06fa8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e182280c-ee28-4449-b2f5-bb57470c6f4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c295a4dd-56ba-47f9-856d-8b676d009ef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "773ba2c9-bede-441a-900d-a1b546197f0e"
                    }
                  }
                ]
              },
              {
                "id": "4cc2ad71-52ed-4964-a7db-5f80bc2ce38e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14941ee1-f3f0-4531-a029-748f370ea0cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8060b050-a508-4d7d-8873-1b885b0aa13a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdb02f52-180c-41fd-9ce7-5187c64ad760",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8101afce-1787-4eab-a658-a97166ede04f"
                    }
                  }
                ]
              },
              {
                "id": "2973de96-046e-4414-89cb-b672f0f41642",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0674eafa-dab1-43c1-9398-f2ca31407a4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24211515-735f-43b6-8615-cd819af4ebfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d87066b-71b9-4f43-9d2d-4b91745bfed0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7aa8275-57f8-4183-a335-2c5e4cb34056"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1042cf8-3d6b-4c1c-b429-ac4382e1eef5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61f0364b-102b-44de-b159-ca7216e6fe58"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "053c323f-6ae7-4198-b7b4-b8d6a6b95fd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4412a1bd-dec0-4e49-a2f3-c4de8616be4f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c50a2fe1-a17e-4fb4-aee0-f4dbfd14485e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cd2b964e-d4a1-4b84-99e3-717940a215b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2f8e6bc-b2b9-4782-bf1d-541035db1fa7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55274ca1-176c-44ee-920f-61cecf7a9964"
            }
          }
        ]
      },
      {
        "id": "768359be-58b5-4181-9cd8-2f8f67e6294e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d962993e-a4b0-41aa-b7e1-e030f4cd3412",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02a5c286-08e3-403a-a002-c321f789f7ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9cc33ab-d954-4390-adc3-703fb1adcd26",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca60efc-0bc9-4d5e-8a05-daf9e2c97780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc31994-8bdc-41c5-b78a-1dd6420bfc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037fa341-b766-4484-bcbf-4fd31a8f90e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "92cab9ec-1cf2-4f5a-a6c7-0623d9839a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0277e2bd-d5ad-44c3-8106-4347c7f1aa3d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ff0be9-5147-4abb-abc0-5d15e43eca98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beee66ba-bb2c-4bc7-bb3b-802463d7a449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3887c686-697c-4682-86f9-5754d195984f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0326cc6-0f81-47c4-945d-810a24cb73d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4ec251-bc55-4131-98f5-044271ac0014",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151497f3-ab52-4bb8-ae9d-78cad993e57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da15145-804c-4635-8107-3d41224c0843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d636e2-ca83-44e5-a4ab-e87bb166b674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea7ebe9-819d-4811-ab4d-4a1efe85521b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98e9370-a3c3-4db4-a16e-d55882c320f5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b69dcb-a89f-4baa-964d-b97d074b931f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8729fa-c885-4e31-aa45-26698b212145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29c00c8-c432-4034-99ec-2145c3a3bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ce887a-3770-4d17-b581-24abce5e7895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803d2011-42ad-4aba-8042-31d4f38c925f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedab8fb-6d9e-4224-8b66-00f39f026953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c582150-49ad-4906-a3e6-c0da6b4dcdfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c460709d-53e1-422f-a339-808f104f154c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6023fd74-e92e-4d97-bfab-de274884f026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984f2321-cf55-479e-a6aa-d9ea0f4be509",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c86a5c-8fcb-4e1b-b856-0794104e35ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c2845b-8b34-4a79-98ec-45218173f0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db8c5f3-e14d-4fd0-8178-14e4af9f8ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0ee8b3-4e61-4f3c-9a25-415370f93c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17570104-f82c-4b31-b5bc-12335e10b49e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927afb17-8ebf-4cff-8fc9-e97eddbc21ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df3339c-98b6-49a8-83a8-3fa6ab7ecdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cee576e-351d-4195-8820-229110cc91eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "649c1cee-e325-4815-b2a3-e2fb0f88715d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93da9b5-34c9-4161-8085-f69e2923d624",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854de6f3-cecd-4bf8-976d-5d1fbf5c6ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1609a59-acec-4e15-8a1f-66c7fc89649d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d4f97f-806d-4f58-aeda-bfc5c50c8e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c9b70a-cc94-4a42-b88a-27df923ce2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c6bc84-8c3f-4df3-88f4-173be70c61f0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b694582d-8169-4a0f-858a-c63fba045ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc974a5-aaee-40dd-84b7-0cb33e418aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c65719-6392-4171-95ca-c8e59422c558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "211e361c-3ea9-4a5c-b837-30c0db2dabcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4013578-3fe9-4d1a-9a8b-1cad6133f046",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5314caa-fa1a-4d71-ae61-696d006430e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f65e09-aa30-4ea9-b013-0cebdd03e6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d0a5db-ec5d-4c34-8db2-44082c80855f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0545016-be59-4c91-9403-898e4b1c3d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882d2da2-c82e-4978-81c8-b5c25bb93ff7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7101ee-a9a0-466d-83fe-b1364833951b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af13b23-4774-44db-b4a0-a491cd72396a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cc1f54-e8c3-4aee-ae3a-97e5b3babff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a09efad0-fe31-42a0-8a7a-73f34728e87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a82e9a-5baa-413b-ac20-e9c6f353bd29",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f282268e-2697-495c-af20-baf6fbaed68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dba2814-0973-4a7d-b898-721a6b731084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e1efff-56cf-4814-b0ce-87bf59194b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbac28e-b019-4781-a3f4-0ffab5d15ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf4c7ee-8e46-4b16-baed-4540d4b3aec8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c64bb1-724b-441f-a724-3d95fef6580b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dab6afa-7e53-49bc-9587-1c72e6cde74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf964e1-0f5b-48b7-b38b-e4599b21e7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c22d1c7c-434e-4ec8-9415-9f9fb22fcc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b534b0c7-c3f9-4c61-9daf-b8ae2cc85c10",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af2e5dc-1f79-411e-9b68-f7e792e5962b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def46562-d3cc-463c-943c-199cb6e4d84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ec1ec5-161a-4bff-ae5f-a6d99c8fcbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "70bd0495-73e8-499e-8509-40b24303b374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263e5529-cd47-45cd-b619-ef2d305d59c3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff987010-a800-4db9-baec-b20d1e14f0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4864b1e5-fb4d-44ee-8430-67fac86b82aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2486f6cc-0951-438a-ad34-82aca08ee8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "912977d5-4b67-40be-b36a-a7084d776140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d05c70-8a1d-4f4e-8b13-3e4145b4174d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b38da8-9798-417f-9f26-4b30cb206359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303c775e-2349-4ee1-a2ba-bb5df0986524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c374ae95-4b85-4e48-b54d-c4f925c5aee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1115a8bc-43af-4e98-a771-28203436ac30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6452d46-6793-4489-bd24-6867fb74d1be",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7410413-3b1b-4f61-84d9-654c1a28f86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09f2b87-c358-4d28-9424-8ef3cd07a9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455a57ab-711e-4612-a78a-e836ea124ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd038480-ae56-40eb-88d7-177a81b031ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cddd17d-4985-4ea9-8e25-155b91b4f725",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec431b47-209f-4400-a500-7454b39d2502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a1c02a-a20a-4e74-9520-078a14339505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80716fcf-e3e8-4f18-a44e-18c11feb02dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f925d52a-7c04-4ebb-839e-cce44b24763f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c941259-4768-40b8-b571-204883d2d375",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f79c0ac-ba9c-4d2d-b2bd-0c57c1b40cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7947d278-c84d-4fc9-ae1b-4e06e0d249d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca76ebb8-2ffa-4b87-8a39-e936f7b073a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d933182-057e-4e60-b613-7de38beaa882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d1cc92-a137-4926-bb19-e8bd505125ea",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb591b7-02a8-462d-9a47-d065772f9733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9334b2f-cc3f-466d-96db-a2f0e499cf64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e8bd3c-b2c1-477a-a886-91ee0662031d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27107f5e-1c17-41b2-94b1-584960d72583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b9df71-f466-4ca3-ade9-ff15e5122186",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac1ac1e-5f61-4eb1-9ccb-9887ad188b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb533eaa-8f97-4681-9efd-e811001bf93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0c7c7c-26b9-4e1d-a05a-53e61c47a7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb75eb0-0ffe-4a69-a902-0240b42f81c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf91e66-adef-4f81-afc8-38f54785ca98",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d93d31-75ad-4657-8c6d-41b3f2083f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d66880-51f8-43ba-b4ee-ab4b42b77dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9faa8024-d122-4134-93e0-bec29a7b16a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c471b523-c91b-44c5-a0d7-57e175db39b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72d0dd3-b6b8-484e-9b5c-83c31bfd5f28",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b7761b-2086-4e7b-8935-dd51c75d9c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b018d7-c1e9-4640-9332-e5136cc2947e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9ea497-797e-47be-88d8-2e73ee9c0c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a83b4e0-0392-46d4-8119-45df61c37f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25755c55-e91d-41c6-8e34-ec66cb73e8ec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d5de32-7766-4cf6-b13b-ccc27a1ab672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71e7840-429f-4c9d-96fb-c8cabe2b7fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4763157d-8b48-4daa-8b65-3f8c515d410b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6e28af-4139-48e6-95b0-cc35ca87122d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7383c4-21e8-444e-ad70-50a4c01cbca1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a30e35d-4218-43e6-aa68-683a7ebdda47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedd12c2-2561-4d3f-8ea0-417d3b33e062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d9cbb1-4e4b-43fc-abf1-d7826b3facce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4a43b4-428e-4547-b289-d9df2acdd9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94654caf-f6bd-489c-ab77-7090496644c1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e39a6e7-e4a3-4ddc-8042-6e763043a033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35cf1a0-9bad-441d-a9bb-68bc2a1f2e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa29099-ccae-4849-a558-b255f25bfaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08657f74-1cb7-4b8b-bf19-03ce2a86c9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7128f232-7264-4c6b-8732-bd1559df9570",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc8c635-5e47-4485-8947-05498c4e3544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a4d98e-30f4-4292-8171-9984e127ed71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08c988f-1e88-4c57-8b5f-ff1dca7ef946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41273f97-c824-4d4f-91d4-6aac3985cef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbe064f-8e48-4d82-a03b-d1023fcbe100",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab2ff5a-1898-49a3-bcd9-1e48cc6e5930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cffae1-bde4-4b7d-849f-66962b8126a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f95900-6666-4e07-9646-747f09260092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "841b5c3c-9572-4315-a754-64a77fadd65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27da76c-6e24-4f9e-bd9a-bedfb22c44c7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8cc82b-c69e-4f1b-8e4a-812ee665b0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88442f5-94c6-402e-94a9-aa44ef41ab6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bc370c-9c81-4096-a919-5a444bee0172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ead9d92-82cc-4334-8ee8-724885d37bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2933be4b-d7c1-47e7-aaa9-2ba9e9d08e21",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ee6986-4cc0-4fac-a94d-b6f2d44b7e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524f0510-89d9-4a6c-95da-ba863a0499a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8846dad2-c5fb-49ee-9613-d60276f73728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6f319f-b975-4188-9a16-d8b6150c92fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6583ee0-a1da-4eb2-bb29-5acdb9649794",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256a0771-f03a-406e-ac03-b0b65eff14a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8200f6be-947c-490a-829f-be11a3d66e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb784f1d-eee3-41c3-976c-c52d1a1def01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5da0d5c-fc41-4b01-9472-4627569df3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17d935f-3fc0-4cce-8965-14e6ed59bec6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44c55b0-eee3-43aa-bca3-53f0cd57fed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c8ea32-fb96-464b-bc25-b00d43e920c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a288025-fc6f-43bf-bcbe-66dd0ca944a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74e7965-fa12-489c-82f5-fa369ce0706b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0568f89d-25b8-4bfc-80d1-c8fdd3887e54",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2fbecc-4cda-40a3-877f-888be2d3e58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511f0450-25bd-4c20-83b3-f41fa0ae1510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68e066a-51cd-465f-b77c-c1c70bfad14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5641135-5fac-421c-9d30-82556e5da402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91936e15-7a64-4307-a648-3d1eec6cdedb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf99bc12-2d50-4a69-b447-f5bd93c5a9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b1a0f2-5c9e-4590-8a86-4618ae440c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b100bb4-3251-4a9d-a90b-12099f65782b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50103134-ae91-453f-a20c-283d5a60a350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effafacb-2cb6-4feb-af45-51780bc61332",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f16fe2d-1e82-4daf-8825-8cfa11a274f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3ba533-c694-4ac6-9c31-e355b9ede187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7469c94e-af9f-4ce6-971d-8f50aa049ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de2c68ad-36c8-45c0-b4ca-73bd823c3ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b200eb8d-878c-4c94-8ac5-fdb1d4b330d9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cac8af-309c-4f0f-a926-30c3534e3976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8583e495-2adb-455b-b5a0-b79ae24aaed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be42e33f-4679-4619-9628-76c757324b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4bfea2-da66-449e-8ac0-d4aff23ac2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafec9de-2865-4c28-8f90-bfb395216423",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9661eca1-bb03-4597-bc07-59095095661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f0d81a-b759-4474-aebf-856868cd963f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac53e558-3036-4c4d-a689-85409f8740f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8167a4be-5a2e-4d18-a8d3-9b64d7817b13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "904de23a-509e-46a5-a164-ee87f7304549",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d19c202-cb86-458e-8df4-49ef23d46f5c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ca76b8-5458-4d9e-bf1d-713d81766c6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1f6c2c-3268-4e2a-847e-0d9c5b65ab53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953ab451-10b1-452c-bd4f-d7ed1205dfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bc36c6f-73d6-4050-81b0-54e5e0b51e30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73cd2b07-8280-4084-815f-76eb0412d784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b2881b1-d003-43c3-b28e-a5c64663ce7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeb595fb-352b-41a0-af8a-993018cb2621",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7879af0-c7a9-4c2d-8507-68c9adfc70ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33bfb301-1559-4517-8908-9fd83d05cd47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c8e5f4a2-b055-4491-a37b-e0fa261f4f24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29f72732-dd80-4f4d-8473-e308a3707b5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c7f6a41-8be6-46b4-b99b-11b6e3e08626"
            }
          }
        ]
      },
      {
        "id": "d3da168e-1810-4891-989d-796bb99188f8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e8d0d4e0-1fdd-44ce-b9d9-bbdb26b212a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f287b06f-d501-48d2-849e-8b1f175b94a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19f5599f-8f63-4f77-9046-4b5386a1691c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29582325-4333-4b80-85c5-894b1f9a53d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38213b1f-4a80-48a4-ba51-a001596e7d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59a1342-e6cb-4bff-a86e-3f16c5fad141",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4f96e5-2af4-4b5e-9e8b-b337def152f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d84ead2-d019-4dbd-9d08-69f1bae3f51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232156e2-3949-4211-952c-c7a07a6eb0fa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4407b8-a18a-431b-bf1e-396ca84a994f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40516d2-804a-4082-86c9-e224454fe695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383dbbc7-5c3c-4582-8b33-e8a8b6aed14b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e66a0bb-e318-4727-94ca-5ebf99f1534a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e22f56-7d73-4cd8-a7eb-ab2c17f9a998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fd4f8d-7ff2-456d-8fab-8415d98e6497",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974033d2-2914-472b-aff3-41d8dcd229c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565ffd2e-d23a-4f06-84bc-f8958948d88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cd0646-e206-4f1a-aa9a-db24dc2c149f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d584c284-3809-47db-9ae4-81f84c56ff09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62f4421-ae58-410a-a9a8-24e705268a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0efbe3-fbde-46fd-9947-b1b1484a2e02",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505c85d9-eba7-489c-a95b-a262e2c7df86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f3043a-afa5-42ab-978b-40f433586950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f21e8e-9b4e-43f0-89ed-cae66bc22cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6e4366-b24b-4026-a683-c43bb42927c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3331653-a652-44ef-a4f6-cff739e0966f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad48b66-9bc9-4860-93f4-ce73b1be3a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a8eeb11-8204-4786-8ca4-6a816e4f85bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e963457-3c5c-40f4-b503-58e5e10200c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fb976b-0e4f-4e79-b8d8-a91c34bd18e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9dd6d0-34c5-42b8-89f0-442603e50219",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad6c264-9240-4c46-9b56-030bac75c137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "972d6b5b-4560-4c9c-b600-e00e92d8900f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59716dae-51e1-4ee2-82c4-642dd8a44b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0333ccf5-df1d-4f04-a487-481374fca63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ee4c30-ee45-4865-abdf-41a14562511c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4101c4fe-0d75-409a-bfcf-cfa5cd4a0dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01adcb13-d5c1-4cd4-8cf3-63c7760a3bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5434b8-48cf-43df-af1c-5ddf004ba522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04614bf-db55-4749-a3d0-1bcfaa250aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535c1535-08c7-4c96-8aec-69396fe9fd9c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075f2dca-f1ac-48e8-80cc-deb9409ff0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3296cc0-bb4c-48ee-9929-74d3f9470915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49faa24-c9c4-4b2a-a8f9-ea094af0ef83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96adf66-4c3f-4ee7-83c5-f3a799ebe3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5922a09-f519-4d36-b67b-45863db16c3b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298f46ee-5d21-42bf-a691-e03e511d9b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83604490-7775-4c94-ab06-81c977be320e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277eb514-fefb-426c-b8d9-cf9abb93f8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eef9e9b-56c7-4c2e-8a01-6fad467d546f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bba182-f3e0-44d3-8822-160d1af7f485",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c94583-8be5-490b-992d-9798a6ea4922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed90c6f-5c38-400d-a146-8c72a4ea7dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4daba9-3be0-4321-b88b-6ffd1371a5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c010d3e-4815-450e-9bf1-ccc574cca25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dfc033-f2cd-457a-844f-1cd97128a6dd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b1c131-eca3-4209-bc4f-13c3f98fe383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "404baf01-084d-4edb-a190-a0920c318fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d4d589-4022-4ab9-b273-49f376c5e66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487228db-7ccb-4f02-b5b4-585936009cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1241da02-bc48-45b9-94d8-c4ac4ed5a993",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf0a148-10e5-489b-8fb9-74583d3c99e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d40eee8-7231-4345-a4c2-f13657e37300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd600c84-af09-417d-bad5-79be16559b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1fb41d-0970-4e1d-aaf4-913f54995dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b888f08-665e-46d8-b15a-dd9eff8202ee",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a206630e-bec4-47d8-a95d-f89a0bed27ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ca4fd7-0463-432f-8ec5-6617945273ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3990312b-acb5-4b58-9d9b-d102da7d14e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324d50cc-58b6-474b-8235-f0296470bbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99df6ac-3898-4b83-823b-5c0ab4976a6b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2e1eaf-1fd7-45cf-92d9-ba897d1bf886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c038f877-3d34-40b3-add7-43ef2aae25f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdf5a09-bb74-43c6-8698-5f6108c2f165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0b9a6f-7416-4ce2-a2ea-5a7d5022e8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638f4a98-0119-4983-8665-bc10dff74749",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e30a8d-c83c-485b-908b-037dde91b9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf06b0c4-0cac-4906-97de-323b2474e237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6ba05f-4ea4-4213-9775-3f88f1625dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702c37c2-0768-41b3-9148-0be02efd1ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356eb225-3461-45b7-95c8-5eebda7327cf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b108697-c004-47c9-96ce-6d9b5e39657d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b1b4b7-c6e7-4588-b402-24368b812e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743a6f47-de37-4ba3-ba17-958edeaaca12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f935b1-6fae-4ec8-acd3-b19177e4a78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4860bd81-f184-4f01-bd9c-c7be2306ab06",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0caedbc-4687-4cff-aa65-437f0aad7cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82aed3b4-abca-4d0c-a51f-99a5e64e0d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c15bf45-7b80-480d-a048-2408132b4034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e0e17f-f339-4a80-9f5b-76732d8062b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d330fd0-10f1-442f-be81-4d69f9bce47b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1382ef4a-768e-4608-8fc1-95fffd18cb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47b29a7-bb12-42d9-bb7b-8969a2e96a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af06b29e-a058-4edc-ac7c-cc1f712fb0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bf5809-749d-44d8-8838-986f6a15ac78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ca45a5-4194-4321-9499-e53f402e1e58",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76db47e1-f42f-4c80-bc90-748410527685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f866d07-9b31-48b3-89e5-c0be6b489688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40519d94-b591-4528-aef2-c3e7509021f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647f53b5-e75d-4c2b-a90c-98a3216de57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d55dc6-3381-48d7-b060-e833caf36e69",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e56080-f4b5-4ac6-90df-d943704291c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4450ef89-154c-4574-8796-826c676e7cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "003e457a-cd8c-41eb-9b6a-f37d1235f78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646ccbf9-f68b-4e99-a631-0b164004b3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2448ae-11e9-4a51-ab2e-c0075bde2dec",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1452b52-79b0-45b8-8ac8-2efba89b371d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e61b544e-7a74-4b07-ae44-0d83a2e1698f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d455b5-53b5-4ab5-8d41-28fc5a6d0840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4115b556-6c9a-45cf-89bc-82f60024c281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a70963a-addc-4b40-9099-1d3c3ebd1a45",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884ad263-b477-476e-814f-39ef2fc080ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d565c43-2808-49ee-94cb-6a3c8d2ed115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668df45f-7478-485d-9ae1-bedb83db5a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d192f68d-4e1f-4562-9c69-f625bf184401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ebea16-a7f2-4142-bb3a-a058fc247efe",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68faeb8-4bdd-4d66-af83-cacade751002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ab454c-6997-45d8-b873-bc72b67918e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d24862-7632-4718-9a8e-011ab35ccee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effe0224-fdc0-4444-8cc5-a03a7d2b1151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84808f10-774c-4881-b0c8-d30669fcd4ce",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9932ead7-a6ae-4479-a1be-a39f86bd07a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd35d59c-a305-41f6-8021-0548171ea82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48145e7f-64c3-4772-a6f7-3290ba30e994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf455e7c-c6a4-4471-92fc-6d470f46075d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8631a9d7-0833-4a0e-ac73-1003d8dc229b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b602af6b-d69c-4c81-bbde-07dc577cde3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cc7703-b412-41ee-9cfe-245013dd0f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b7754f-fcea-40da-bc25-37e9ed83d0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8631206-984e-47b3-a041-909b5a702a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f385122-d56c-4dbd-bae1-5c3baf9bbbc0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f343049a-3a63-4678-9e60-9c61c897ef2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1396322-85d2-435d-b7f4-ae40a62a7ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d7318f-b286-4483-9c9f-0a8f166fc975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28bb294-2001-45a7-9c09-1acb0846604f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d877700-7f03-42d9-90d6-64f906c9e0f8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8f55a2-38fd-4d45-a864-1cc1e5aa9cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "404c4c81-35c2-47cb-adaa-7f9dded3427a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfcf0e6-45c8-49a3-bf5c-018af03464a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2968e186-b249-44dd-8365-e8a48eb34a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba434457-e0a5-448c-9287-66b0a0033399",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9805d440-b029-4ed2-a71c-a4d153cf1771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5828d488-1a67-46e6-8ef9-ad74835b2501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250e3870-4ade-496f-ac29-ff0f110b505b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abdc2cf-25ac-4c21-8a64-1ed207d8f4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74350e88-1af4-44eb-b5a8-0d592e46e3bb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910705d9-499f-442e-88d9-b8586d6f8886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c49e4631-9a72-48dd-ae16-d05923d8cc0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8bb7b7-ae47-47f1-a916-587dab2e3aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eefe8f3-d3a4-466d-881f-8857fa84e89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d33e69-b617-42bf-8c7a-cb0109b42dc2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5d400d-fb8a-4493-a587-5b7db64cb3b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ffe6f7c-6d9d-4b66-887c-884bb3d0c0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91b077c-af1d-44fc-ae75-24519b2f2ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5542b1a4-0771-43e0-b2cd-21b490d46360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df2e1c4-c515-46da-83a2-fd7b79799f02",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dfbd7c-2b49-43ec-89ec-68ec97135f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f64b5b0-2486-42ee-a9b0-74bf2a2a2370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3794a36c-eadd-4ae8-9b5a-231889a5f240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e16774-978d-4761-a67a-4ad0b03ac90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39452a0-4d98-4bfd-829c-ec4a3d7b5aa2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ab4724-b844-494d-94aa-be800b03c91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d092ca-1037-4fbc-8691-1cecca8c5f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff648f3c-f58c-4ba4-b2f8-f0f9c73c5279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fdee27-544b-4899-8bb4-635d66a31701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab0d6e6-1b57-48bc-b631-9a900ffab840",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3ce058-c34c-499d-9a19-a16fd4a5b864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc83659-bee6-4207-85b3-3f90876e878e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89685bfc-dfac-46b0-a82c-1d8fe3370af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a835b677-7186-40bd-baa3-5ef1859d8922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261de8bb-41ae-46cf-87c5-bd0a2a5c9219",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952c0885-b167-4794-8778-54f379b856e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4190d4b4-b706-45dd-bdcf-e8abdd4fad1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d11d7ba-ff1c-40df-9188-18b21e98e165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddd94d6-d94f-439e-95ad-6eaba133a5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8442636e-49ab-4fa0-b9dc-367a2f581084",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58c9b92-bfd1-47e5-b2b5-e089080f3f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941fce07-0ec1-47b6-b022-6b8bce9ac21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db56688-ae55-433d-8404-1b3310b62996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5255fd68-37b1-4ad7-9e5d-74ab15bbb078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65642c7-a246-466b-aef3-ffc29a7a9a2e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8275ee43-de8c-40c1-a96e-029abfff3c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35eb11bd-6a0e-4d51-8d42-7652adbeb010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827fd23d-ba02-43af-9bbf-e5aded17d882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab7d62e-9354-4b84-8bdc-e5fa4f1f300f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec79138-32c6-4c22-9482-1e33e996a061",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8912d075-43f4-4b42-8a35-f69db48dc889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a168cb5-d02f-4deb-b01a-5fe05febb981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69fcb36-cadc-4985-ac89-f1e91b9ad7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a39161c-ba76-4e9b-9049-dd99499aeea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0403af-351e-4d80-a1c4-0b39614c4f58",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8e963d-98df-4ee2-933b-c8ff6eff630d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1faf38b3-42f2-4a1d-9fc0-454c6e35aeb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9d4a0a-2113-423f-a1f1-6330e37ff093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8541044-4ac9-41e2-8d2b-f3155ef71275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ab1114-f0b6-4617-8760-16a0a8801bca",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e32a89-3943-4b33-acd0-b29d17d6e247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00265141-ea65-4997-9753-a899b173cb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a37ff9-8f08-4881-b5a2-17b5e5f23434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21085a42-74f0-4726-9beb-2781d6adbfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fc35fd-aff7-4dc5-b576-1aecedf97e6a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ae74b6-8c7a-4340-85b8-9239018b9f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3aeecb8-359b-4d8b-bde1-3edde554726b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b543e3bb-ebcd-43d5-8498-b15889499722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cabeb3-6bed-4754-af30-86348ca9ad9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20e5034-acc0-4604-8bcc-af9ede330839",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d42e824-cfa2-4ec3-9acf-e33e9b23759e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153d19e3-6b09-45af-bb40-5442f2bbc663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37eaeb1b-036c-49ce-a31b-579f48f03100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a66627-efad-4294-8ef3-4c94b70ba447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80eaaf22-a249-44ea-bcde-ca43672bfabf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563bebb9-519a-4c27-b1df-35d35e149eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5587506-55c8-48f5-8001-978072ef87ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edff64df-eae4-44ee-9e55-247f752014f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25503771-4846-4b29-a7ca-c2b7cdfd2ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dfb60d-d70d-4ace-8c73-aecb24062a75",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e25a49-4a2b-464b-a97a-2083cb53a352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df747d5-a416-4c93-bad0-c51746c73ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01658742-a00b-429a-8394-0dc94c84f0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed5005d-b124-4b4b-85f6-af8af0e4e488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a237e9f-58db-4c3c-b17f-7bca75c8c217",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a7d3ef-bc19-48cb-9c74-15a1b6e86575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0f8305-d036-4030-b54d-e5ea7445a675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1774378-0783-4b40-8bca-03b2c2dbd603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eecc43e-427f-4cc1-b4d3-490c07f1013c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1028f030-e03c-48f3-99ab-e47b5a9eb7e3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888af0a3-17dc-4a2c-acca-23892321c513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91408d5-c940-4370-b30e-b8dd0c066135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68662dac-ecf0-4f26-b286-43f601f86ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142ad46e-07d7-4ee2-9624-d0cd72178963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03afc91-964c-4d5e-a643-c11fe625fa8a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb3ff0b-31f1-44b7-9f8b-4a95ad5abed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a0b323-6e91-4b87-b84b-082c158988e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2fe258-34c2-4975-a614-b83592dfd862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90bf505-bc01-4fd9-81d0-b167818af1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78860abd-c920-494c-beae-a55545699812",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c078d64-f664-476b-85d2-a5b26c576721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4be6c5c-027c-489f-8784-c4895e51527e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a302fb7a-582d-47d5-a90f-9c52f05cc6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e83868e-3eec-4132-8352-2575d471f124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc3951b-97d6-42de-92e4-f563b964b391",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7f8aa0-8f45-466c-a32d-2359fb561f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26948124-2cb2-43c1-bf5a-b6d354b0645f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd3af6b-90ee-4476-8242-c3c2867d9376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0491c04-73c9-4718-8b9d-327aa5d14ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0103238-204e-41eb-b0fb-879352c3df48",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ffccff-9d97-4573-a579-53229f415ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bcde5a-2367-49a6-9bf9-7bce5423b5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08d386c-b0df-4af3-91a9-24216eee611a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5cae87-9c3e-4bcf-9737-c5617e157cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac66fec1-319a-4893-aac0-ab4cbe42fe95",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45388c76-c32b-462e-9d1e-80c703382b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886fa890-fce5-49d9-a41e-05f5d4e1b5ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73feddd7-79a8-4c7a-9655-529e808d1783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c65dd4-4ac9-4aba-8f85-d4e8cd384d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b2f286-bd98-415c-b2c6-b9b85bab571f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65ffeb8-6e84-4974-8b22-8360daae59a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05e236f-64ef-4b2b-915a-482868d35947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1e2922-b4ab-470e-be18-f4aea89682dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df07526c-c117-44f8-bd6d-401b0964cdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20fe3fa-56e6-4e06-8e43-98c4223e7d5e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01948e3-b043-4253-b08f-c9d68bb1e01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023eef67-4a52-4082-94de-162a9a48aad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15873f7-3749-46b2-9de4-d80cdfdbb962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dde3931-265c-4f96-9010-aadde8460d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c254ad-9c71-472b-a182-8f30cd490496",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7d70cd-6d0f-4568-907c-f64fd6ca4a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b98c534-c4df-4bcb-b228-ff3129e72241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28e1043-117a-4763-ae23-afcae2f6e892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccaeaa1-e139-419a-a44c-45c04a3f7b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49ee606-903e-440a-baf1-f44b3fe34d63",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f71f97-8355-4b9a-b742-a332052c64dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d602148e-9fd3-461e-8c52-2feeca01684b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4be357b-7f3d-418c-b158-fd5a454069a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7db9efe-beec-4b25-8b54-4aaa7c143a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b867f6-75f1-40a9-9cea-f30fa9d3090b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1126d751-9860-4571-a0f4-5f6be6548ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96b592e-9991-4a0f-8376-f1dc099e6491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f6d52b-7efd-4403-9e0c-ed635fd127ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245294cc-8faa-4e1c-8828-f6165587bbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6e15c7-08c2-4ab4-97e9-562ce81d5a41",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29db272a-5ebb-48c5-a642-13a5eee544d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4cf415-955c-4ca1-aa50-e3be86258552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87bf431-3cc7-4e49-8d24-7d4ce689d4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fefae3e-fc24-4e89-bbb4-3ff0f7ba3c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70162101-cb99-40fa-8d72-9ebfd0c515be",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806cbfa2-e4dd-4259-9c34-4f49a8b6c610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e2222b-1cab-47f9-ad63-8ae5d4ff72d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7e2f7e-df47-4ef9-b993-4b11219a705e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc240290-dc7d-4aca-bad9-0bac7b3dd2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f73e352-7ccb-4b71-bd07-67f5d6ac95c6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f968627-9f77-42bf-ac40-f1676f2d1d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c372f385-46c9-4dbb-b99d-732c49894f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7d3a4c-4578-4381-9023-74639dcff3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649f4f04-6515-4faf-8161-86b7b3c75639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e65b43-e8b1-47d4-9fc3-c9d81ff5877d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e41b253-10a2-4227-9eab-72f31acaed00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f03bb8-60ff-401f-a684-64589735b6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e74cc9-f6b1-4010-847d-f30c82a8cb5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f56d696-31b6-4009-91e1-b2a2c547bcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111dd764-5147-4c17-ae4d-a505d6431981",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbef8216-9c00-41c0-95cd-49b79b43e5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9340fe-da7a-40dc-900f-f45237ce0d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5feb9d-7e0b-4267-981d-2c8e443714cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a978ee-47c8-498b-b9bb-6632cdb30c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3a9df0-afca-4f41-9444-f3fa830207ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4d6111-ca3b-4623-b58c-d74ad2fe0f5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e3b537-8657-4c69-ab9b-942bb9e95c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418ab781-dea6-4410-952b-3591560036bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba1ae84-ce85-4774-8323-9bc83b013b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bc2087-273e-4b11-88b7-51118dfe9f7f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e86fc16-0aef-4853-a406-822cda989839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4920769-27d0-4a06-a39c-b117ae910f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166082b9-9b22-4a70-bd9a-a8c2bc48d43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe89496-c409-49af-b40d-2ad9e3e0f256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419da68b-317c-424d-a486-dcb138470704",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7340998-3a8d-4421-9bd8-82a90119e23d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9120f7e1-0a37-4f15-b7cd-416907a0c5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f51956-6658-4fd3-b419-33de9ba2c051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6858d99-98fa-4894-8d6a-2c24fff6ec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4795fe7-06ee-43f3-a440-481b871aa86b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07400879-a546-4575-a892-1c448be9c8d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61bfca89-b935-4545-8ac9-2c30230f3c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e247296-e199-4d31-849f-f2fca8eb7384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34ee91e-2a44-4468-8431-cb654617bfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b26988d-3113-4ea0-a87e-842b294b46bf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3874fe-5c2d-4b34-8300-e8c8b96bebf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d61c262-0727-461b-b5b4-abbab1029cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ae10d5-c972-44b0-acb6-1b8d7f51d40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c70a4a6-9318-436e-a70d-3733c848742c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc5c519-bbd8-4d2f-911b-0373cf57b163",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ac52d5-0655-4424-963f-4e95f202c6da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d783a7a6-9ab4-4cca-aac1-f9cd83a6058e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519b57a3-fd48-407b-a5d0-74baf88129af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590abaf4-97dc-448d-b3f7-c06edd7dab40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f825b6-ba33-4577-9f56-63585a6e296f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bd9a04-2c45-45c7-96eb-3ce5d7ac2c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25fae9e5-f5ba-45f5-abb3-e7f7f060858a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05fdc9d-59fa-4560-bb04-d4c7cfaf35b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33c9d5d-ca5e-4f79-afd0-158f8ee47fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac0be65-7a6b-44b4-a194-341dc0afa5c9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16621e45-75ac-407c-901f-d82fb733e008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e85dc67e-97b1-4695-bb3f-7c16013391e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7269c7f-1a8d-4b4b-a000-78f3c90a1295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23156840-324b-4216-ac5a-8efff423319b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862af88a-c96c-462e-8add-b5a9f4d493a5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2e7581-b14a-4f7a-8742-64856c7f8937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afdd663a-b39c-4eaf-b10d-2e67ba0e15de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7ef92b-dabb-40b6-ba41-5cdb92b431b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37776cf5-5a24-4e51-92d0-53165640b41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8b80ac-4cff-43b5-b869-f50e6791dc6d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e0c5e6-da96-4eed-908b-0586dcaab599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9016fb2-7bf4-4f7a-b31a-3974f2af45c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037d3959-049c-40bd-a1e3-ce8520636d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d07928-0a0c-4df0-851a-2da1dee5410f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d44e6dc-546d-4a91-bb48-59b9d724c276",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d02d9d1-a6aa-4b23-b36e-fce3e33a554c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa25f2f4-8093-41fb-8bc3-3794dca54a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a49c5aa-440a-44c4-ad07-5f73c74e4734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bee7a5-93dd-4875-acd4-16c40d7ed5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ccf71f-1ce7-4d49-8b1a-bfcadfbfcc54",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82730b38-1531-45a6-85c2-526ae4ee9a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d95028-5ae4-4ff6-9364-b9beb0e3681a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7e371b-f638-4119-840f-ed5e48c75a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7142f541-5ae9-4070-bea0-f0de358e1fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6002809a-2095-42f8-bc81-3b1dfea1740c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ca92e0-d801-440b-980a-33a5bbe69c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c2d905-09bb-4e81-b597-5cb8977aab24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed28231-e9b5-4d7d-90f3-be4dc5688e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa687b3c-93b1-4101-8cd1-3e209871bc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc73ecf-e825-487b-b728-b0911d2ae26f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf61c3e-b3df-412a-abfd-82d14b8129f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1add8c9e-0472-4805-a285-56e5caf5ac0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc944c9-7ec9-4ba1-adfb-27010368597d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655abf0f-44a6-4838-b439-45012f5614e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8c3cdb-bcd7-4c07-a890-340f933196c4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808f5736-9933-4674-9226-8fde389daa8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63dadc88-bc36-4ca4-a2ec-63c1c8a1577f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fb886e-1a42-4162-b696-0a8cf21b83c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a679182-62f6-417f-bfde-23eb96c95311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b26447-ac6b-4a39-b541-ff7b2a3628c5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b239aa-fb6e-40b8-80bd-d5851b85f352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82029c66-f99a-43f8-9595-4d8a75e45cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4b21b6-dd7f-4be4-b076-33e56740fa80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c69e2a8-d297-40b6-be77-68a8302495b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18938fa-d004-4668-864b-073ff3b6bcad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a35460f-78fe-4979-b678-bebb5d30ec24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0b0868-eaf3-4027-b6d0-767c576398ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888ec2b9-7d3c-4630-bad1-b1664ef5fbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d99730e-5f70-4717-a264-33ce7c3f34d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b6212b-6be6-4708-b2cf-8c3b689ce52d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8610f216-9a40-44e0-bba7-deb296fb7144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7153d045-2a53-40a0-a3ca-2c8a884fff1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183f9459-e02e-4f4d-915b-f0d3e997086d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f66e67-4dda-4934-b0a1-e68d8f153e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d6a1d7-f4db-43d3-a209-5ce6e63926cf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8dacba-2811-4ff7-8443-17e19c0ebade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb691c9c-5cc8-4d39-88ca-303f55907d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8f3655-2f3e-4aae-aac8-9f5bdf091961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4632a6-0c8c-4e14-95e2-a8e32c420b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e102fb7-5525-42f9-983e-89eab38e6e7a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59828ca4-7aa0-4226-9c0e-6376f627d5e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a6b410-00a0-4c86-9e12-212784844728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa29865-f863-435e-abe6-16797cd72150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f5e33b-7d12-4c02-958f-372a685e5e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6f7bc6-84e0-4931-8b5f-c4829445a776",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26441be2-31bf-4403-840d-cf70c97a0aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0d0e622-b373-4745-a887-e922cdf4a336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e6008b-5a20-4bf3-909d-0a6a46fb5377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303c01bb-6020-4763-b99c-b9c85ef38e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567a0f7b-9d10-4b07-896a-03dd1f7d4723",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa50639-d84c-4057-aace-14e8aedc6185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da3711b-2771-4f8f-b313-26a72ae63c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1939d4a1-9053-4a99-b0b2-ad806ad26a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9494f8-0a73-475a-9140-0a7edfb03f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5701d3-9a7e-46a1-acd9-0d5527bb11e0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723ecf36-9bc7-4eb8-83f3-7456bd015649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4fedc7e-6341-415c-aed4-08f362a75b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdf6b64-1c6a-4e08-865f-7f13c2dd532f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5877b5-ed2a-4d6f-b819-5eb51acbdbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7dd2fb-3b31-4dd6-a77c-94eda2c05926",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6341c3c0-59c4-4dff-b578-2fac61a87a24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3149940-fd06-4ad3-b4f1-b6da6f587fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e664ea61-8f5b-4d8d-8bea-85e1134560e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4818d7fd-2ed9-41b4-bd67-afc7b99e32d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909bba56-cbf9-4c7f-90d1-d3fef97b2127",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749cf773-d12f-4025-bf30-38f751a76fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6616f00-8ef9-4417-a83b-5eb31fb125ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a2ee4e-529c-426a-b99e-ea70a70ab07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b84a5ff-2448-4ecb-96f2-adb08a930e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db93c01d-36f9-4254-8764-5bfec5a9ae27",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aae55e0-9658-478c-96fb-2deea5eaa5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ea44bd-0713-4a2d-a7f1-fdca469bdab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93362082-acf3-48b7-a1fe-6ff1c15fa213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f68bfd8-3066-4b52-b0f8-75a7463c4bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5489dae-4610-42e6-acfe-f1332c5aace2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742b624c-5693-461b-913e-7a42efc3ea0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30065f2d-75b5-4c1e-b3ea-d893653a9008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b912e4-2347-47f1-ad97-770c829db3f3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ebd844-c308-45fc-9ff8-6362a2b16dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a558508-5a69-4f03-8f66-428b040297ba",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b834cb92-63bf-4cd9-acad-69f5e34ecad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a33bef-254a-4889-83f2-6d7fce92c449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65826938-49f6-4406-a9f6-fcf2d6bb58bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37792248-94d9-4a6b-82f4-68b322fae2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56ba822-e943-409c-a20d-bf97d62bb050",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d2c527-1c05-43a1-87c2-a29d185f2e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0493d120-7c2c-4eb8-b9b1-a3b71ed709f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c84d5c-d726-4bb4-9aa1-be7ea27e57c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7029cc-f42d-42fe-b026-dd3891a0c5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e619acd-de00-40ee-aa33-02390692c8c0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883a059f-281f-426b-ab77-4ffc8f2d0ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7180947c-8ecc-499a-b389-24a5a23c7645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de29de1-0909-4f1a-bcc0-e526dc7dad06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11931eb6-8a8b-41aa-9758-9f2e441c9f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27737c59-c59a-44a3-bf37-1c6c5fcc40df",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d7147e-6aa2-4bf5-8ea6-38ae4f9a9cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a98b198e-9914-40b1-aec9-8edb1394ed48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533b1ff8-299e-4578-9ea4-2a96072d1cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9947cb0a-fb3f-44c0-bf5a-fb1f75368777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9972e8d-b137-47cf-9cbd-41f59858c5f8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6bfc86-6758-4737-9982-c0db7c1fcbcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d2f324-30db-41cb-ba82-f1017708cd9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64832fe-6dc1-4aa7-955c-a93956762ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc8cd47-7986-405f-a16a-b5a4799d939d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9518e473-2f2f-455c-960b-b35a46913b4f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6609d2-ef16-451b-bc0a-edf61cc37106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e5410c-6574-48b4-8d9e-666010b2eaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986b0245-bb84-4690-972b-4d940f875cb3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c03d07-c364-4763-ab35-937b0c996a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c9fcfe-f625-40da-a8e5-9d5aecf786b4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca9e9b8-69e0-4c29-a43a-02b84ec8cfe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c94c2db9-a710-4b43-b13c-7cfb0a41c8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5690f3fc-94a8-40fc-83e5-c9c1df41e438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e0d86c-ca98-4b8a-bcea-9fb53a9692b7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f74080a6-d00c-495c-838f-e7ab6c2c9b4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d8c2d70-c203-43a3-abcf-d8ec70047917"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a68177c7-46cd-41ab-bbcb-b2f74d711278",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9144b5eb-c67c-4597-bfb2-34720e58cb32"
                    }
                  }
                ]
              },
              {
                "id": "df930ce1-215f-4b60-b1a5-760c025f14ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd631ea0-2545-46c7-82d3-e4bd490eb4b2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f1cee3-c8bc-46f8-8ca6-06eed219ac4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "aca8a959-f947-4741-bdea-900fb7139cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85b6a67-c3a2-4be8-9d95-37ecd922d0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "510ec9f9-0972-4a5f-8c41-8c379cee218f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec9392f9-2ef5-47f8-8774-2ab215822057",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bfa5c64-818e-4fa9-96d6-e6d14df3bb60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6efb6f2-7fc7-45ef-9e78-aa89277d843c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3888643-5b25-485e-a84f-af81e827394c"
                    }
                  }
                ]
              },
              {
                "id": "ae8f0bb6-2bf2-4100-9f0b-03571c3fe092",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "342c55ab-f13e-4ec7-a462-60aa9e714f51",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d39b990-5994-4ccc-ae1e-caf5d477b91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fc453a72-c28b-4c46-a5f8-4dc1f89508a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3347ac12-0e19-4887-9bcc-538794942ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152da6bd-108d-4dc4-b083-10919a643245"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "98b01994-b7b7-4bce-8e63-07e8d3d1d825",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f2637c1f-785d-4e65-b6c6-709a471136fe",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1ca72e4-4252-4f61-afe7-de9a441f438e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f24422f3-21e0-47cf-b843-cacb581b5391"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67fc8fa0-19de-4ec8-b0ba-138befb42487",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09b4eb9c-6513-469a-badd-0272f189099b"
                    }
                  }
                ]
              },
              {
                "id": "1ee9fe62-b118-4adf-a53a-d3b3d843a45e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "428f9e54-41e9-44f6-bd73-0e44c6c910d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d09ebcd3-21cd-46f1-8c03-c292d91662f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88c3dc6b-f5ee-419f-9ae4-d57eb2f27e64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ae4bc78-6da4-40d1-9454-cb86e451e24d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed6326a2-37ef-4cd2-a957-a84bd87f2ea5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "132a229c-3a68-4b19-bf8c-4e7376486a2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69fb6e61-1658-4168-a19a-ddecf36fed0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f95e7f59-3c2b-4f66-b40a-35a2b61b5a03"
            }
          }
        ]
      },
      {
        "id": "08fe10b7-0763-46d1-a21f-a60106807a2c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "42cea2d1-6ebb-494c-aa17-be0b33d2599c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "529d42e6-52f1-484c-b27c-048fbac3ba58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "914a4eca-cb20-4d1a-bedb-64d18a549692",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31d7132-733a-4d5a-8910-8b2b63a557b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74f2f2f4-926f-4bbb-a328-ff365c026cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a835f4-690c-4623-8a97-256fcc360c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0049f4b-44fd-4622-9aec-8c613645b2f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "418858b0-ee32-4b88-9f6f-23bf30db0537",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c210202c-2d46-45fa-a42b-f3ed01f02065"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4466f235-4483-4b42-99a5-b9d6fda701d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7cc76a8-daa4-4e7a-aa83-2ef6d44b3ed9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3a13058-5257-48e0-9be4-78f14f822335",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "599bfaf6-431b-4c35-ac8e-0ffe2ffba3c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69c15b15-aa26-4ef5-bde2-5e76856612e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ac20cad-d704-4c2b-bcd9-dc9f8fb298d2"
            }
          }
        ]
      },
      {
        "id": "e9c34700-2496-49cd-a385-b059053519d9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8952b294-07e8-4d47-861f-ca5f0a456514",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f59a8af-af60-4d6e-8357-55f56a410c4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9a7d338-8b8d-4381-8dbe-fd0c2c2a9b0d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd6abaa-de27-4cab-ab75-be7362048140",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c85637a4-f3de-47e9-9983-101303cd38c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d521dd40-5b5c-478e-a554-789ee8a0caaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6814b15b-482f-40fd-bac7-5eec67c7f24d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "571edd9d-c20a-42ca-a2e9-835fcdbd8d76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b958b7c3-e87b-49c5-8a43-f38d7588ff91"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d4824c0-83f0-45a3-b0b2-dc34e96cff41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbe11685-96ef-4309-82b2-9917de2de5e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e251a559-5b26-4be7-80cc-d858d5bc92a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "176e96c8-af12-4a0e-a044-6a05fc7cf1fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a4328ee-694e-4c98-bdb7-787230d8cfa4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5979fe0d-9ea1-4168-a754-924e04a4404e"
            }
          }
        ]
      },
      {
        "id": "865108ab-bc49-4258-a840-7e74a4c7b9fe",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b93bf1b5-d944-4a47-a905-7ed6bd8da4a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74b7375d-ea3b-4951-bdfd-d595d48043c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ec49967-2d96-459a-a89c-c3c957f24b18",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2980feec-6974-424a-b446-b14ae2a52a0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a2a2542-5526-4c24-a2c3-3016940052fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412d03bf-face-45a6-8b11-41b32fafb064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "097cfdc5-0e0b-438d-a5b5-836272b123ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c257c3e7-10da-463d-b614-8821ef1cbe88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fc15c6e-41e6-42f2-ba49-f0fc9676a623"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9ebeb0d-ea16-4e8c-a452-298edb9f03c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "116150a5-e939-4434-bd3c-aa9994283f4b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d66e381-9668-48c0-9146-fd88c1c27952",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c0a2e8f6-e524-4ecc-b90b-8838760bbc5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bac0d3f3-4c5e-4dea-846d-dbd619ee5a03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52e52899-9bd0-41c6-a7aa-8ca130584684"
            }
          }
        ]
      },
      {
        "id": "ded986a0-cafd-4067-bde1-4f20925e98ce",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "380d2e01-572f-417d-a959-b012363f59e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "465fb60c-02d8-4c34-9ec0-764c265ca566",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c394563a-d2c1-4b64-86e0-a0813a04c643",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b754b7f8-39c1-43dc-a544-b171ce4e0345",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "377f1519-7205-415c-be13-901659947458",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 124.25793650793653,
      "responseMin": 8,
      "responseMax": 10621,
      "responseSd": 731.5472628302776,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715301370161,
      "completed": 1715301409852
    },
    "executions": [
      {
        "id": "27563cdf-f72c-427b-bb6b-a998246b142e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7fe76552-2207-4889-a8a8-77afd2ee3756",
          "httpRequestId": "42600790-c7d0-47d0-8800-9b644ef2c757"
        },
        "item": {
          "id": "27563cdf-f72c-427b-bb6b-a998246b142e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9e2b3475-27fd-4c70-9bac-cd80b5c73381",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "5dbe17a4-6b14-4513-ab04-21d1ac8e91ce",
        "cursor": {
          "ref": "53d50f6b-9a0c-4a59-8d0e-f430dbb08870",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a3a25bcc-438d-42a5-a2e2-3415757af7b1"
        },
        "item": {
          "id": "5dbe17a4-6b14-4513-ab04-21d1ac8e91ce",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "26f8e6ad-7bf2-4cd4-a43a-6e723268f130",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "1149725a-1fc5-497d-9a98-da5c381e8191",
        "cursor": {
          "ref": "fc1a477d-7d96-45bf-aaba-566153fad1a5",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a10d4673-a245-4d9a-877f-15d26d2189e9"
        },
        "item": {
          "id": "1149725a-1fc5-497d-9a98-da5c381e8191",
          "name": "did_json"
        },
        "response": {
          "id": "3ee35c69-60c5-47b2-9c2d-9b6e494e4fb2",
          "status": "OK",
          "code": 200,
          "responseTime": 161,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c62da7-1e4c-430b-a95e-852b73b7a357",
        "cursor": {
          "ref": "bb383123-4ef8-4ea0-b0a8-58e335035de5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4d53b60c-36bc-4deb-8b6b-d9f368dc31ee"
        },
        "item": {
          "id": "c3c62da7-1e4c-430b-a95e-852b73b7a357",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf0d9427-723a-4862-8870-23a7f74893c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 493,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c62da7-1e4c-430b-a95e-852b73b7a357",
        "cursor": {
          "ref": "bb383123-4ef8-4ea0-b0a8-58e335035de5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4d53b60c-36bc-4deb-8b6b-d9f368dc31ee"
        },
        "item": {
          "id": "c3c62da7-1e4c-430b-a95e-852b73b7a357",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf0d9427-723a-4862-8870-23a7f74893c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 493,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b35ed0-dd54-464e-8908-5ef1b3c4dfa1",
        "cursor": {
          "ref": "8426a786-2079-4bb4-acea-a4315f2ea618",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ba038d25-9b8f-4a63-903a-245c83189fca"
        },
        "item": {
          "id": "a2b35ed0-dd54-464e-8908-5ef1b3c4dfa1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c8ce9546-074f-4489-be1d-741b59681a54",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9085e404-0d8c-490a-b276-9b9b673e3d4c",
        "cursor": {
          "ref": "696d6057-af04-4bed-97d1-1c8941c0f672",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ea15feb7-9188-426e-8187-59b184bc6aa3"
        },
        "item": {
          "id": "9085e404-0d8c-490a-b276-9b9b673e3d4c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "76c6fc6c-5c57-461a-8446-18fc0037f795",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8270d9-fab8-4f06-8fbe-cec8b1b0683b",
        "cursor": {
          "ref": "c5a37f19-bd52-424e-83d8-65f66194ee32",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4c07fc52-fbef-4aa7-8f22-1ea73168b83b"
        },
        "item": {
          "id": "fa8270d9-fab8-4f06-8fbe-cec8b1b0683b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4201929f-ce14-4f3b-96bb-9c6ab97311e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699ca5d9-7a6b-4e9a-b957-95c21c3a1d1c",
        "cursor": {
          "ref": "31eaa889-072b-4458-a2f4-23470eea6b22",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "21e7bea3-0836-49ed-87b6-da4571f46d70"
        },
        "item": {
          "id": "699ca5d9-7a6b-4e9a-b957-95c21c3a1d1c",
          "name": "identifiers"
        },
        "response": {
          "id": "92c86461-1649-4522-aaa0-59fadf4b396d",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f052d984-f534-482c-91bd-4529e76b7444",
        "cursor": {
          "ref": "139e52b7-a341-4932-9a15-fb004200c29b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "034186dc-76b8-4a58-8f7c-b0ade0db3b0e"
        },
        "item": {
          "id": "f052d984-f534-482c-91bd-4529e76b7444",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "38ae4d0b-f3aa-4e22-b6fe-e1323f5490c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb33782d-788a-4da1-b30a-38e7e435fceb",
        "cursor": {
          "ref": "bd75cc58-d081-4be1-ab6a-99cc3af9f8e8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "500cf13d-aec6-4882-94bd-c68f310fcd71"
        },
        "item": {
          "id": "fb33782d-788a-4da1-b30a-38e7e435fceb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5642f9df-6101-43da-913b-94180f98b00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee1eb23-e83a-4f9c-8e91-e089e62e0f86",
        "cursor": {
          "ref": "a8289a65-9fff-4251-a6d9-40c931e28fe4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a3863e2c-b79f-4444-a662-fdac519bbcf0"
        },
        "item": {
          "id": "0ee1eb23-e83a-4f9c-8e91-e089e62e0f86",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "66fe7dce-f987-4d5d-b1ad-cb9a03e53785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663e84ae-565e-44d0-bb7f-15e2dee95b7d",
        "cursor": {
          "ref": "7eef0df5-0424-4de6-9e5b-2f398ead7e8a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "86a52636-cb9e-413d-8f23-95b887aad869"
        },
        "item": {
          "id": "663e84ae-565e-44d0-bb7f-15e2dee95b7d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a6b0bee7-1ea9-4d7d-875d-7d7a29d9d450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6c6cb5-257a-4457-8cdf-cd0d6c8ca820",
        "cursor": {
          "ref": "8f643a6f-ab48-4702-97ec-1db6ad2f10a0",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f25e574e-84f9-41f9-9e5a-f95bb6ce3809"
        },
        "item": {
          "id": "ef6c6cb5-257a-4457-8cdf-cd0d6c8ca820",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "aefcb07e-383d-4c2f-a1de-ed4bd8384db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b0db1c-3141-42bc-8ebf-127cf0c6702e",
        "cursor": {
          "ref": "93cccf96-d1f1-4e21-92a5-56d1e011a06d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a6f217a5-0d54-4a11-b410-f7cd629e0754"
        },
        "item": {
          "id": "71b0db1c-3141-42bc-8ebf-127cf0c6702e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "56a61c1b-ba43-47b4-8bbd-06778b41eb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04624172-46c6-4496-8fc7-7806e724a9ac",
        "cursor": {
          "ref": "879aa6be-9fca-40ff-92ae-b5f404502104",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "be0c093a-c41e-4e16-b7a3-25f52a974781"
        },
        "item": {
          "id": "04624172-46c6-4496-8fc7-7806e724a9ac",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fdb2b3f6-a92a-406f-b020-5cd718752956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89d9cb5-a5a6-404a-ae17-1ccc077f3531",
        "cursor": {
          "ref": "9f7158aa-b8e9-487c-abb4-b9796095b2a2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d27dd392-c15c-434f-9152-f06d90c5f07d"
        },
        "item": {
          "id": "c89d9cb5-a5a6-404a-ae17-1ccc077f3531",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "633745ce-3fa0-4b22-88fe-c7dffc5d9004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8946a0b-fd92-4ac0-bb96-86c45459b12f",
        "cursor": {
          "ref": "46076551-c74f-402e-96e5-ce9a7cd6c930",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9f65711e-3e04-493f-9b9d-680c771ef76e"
        },
        "item": {
          "id": "c8946a0b-fd92-4ac0-bb96-86c45459b12f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "73520254-4ade-4c4f-8682-ae6c4f73f593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2debf6-4c6b-460a-b76a-34ddedbb6467",
        "cursor": {
          "ref": "60a166c1-19e2-4b82-b425-76591c6f5dcc",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "978a425a-63c3-4e32-a2ad-0dda6f734bcb"
        },
        "item": {
          "id": "1e2debf6-4c6b-460a-b76a-34ddedbb6467",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "17e52ec4-6491-42e2-b836-ef103b44069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366b8e51-70ea-48c3-bba4-7157a191d0a4",
        "cursor": {
          "ref": "469e0006-621c-4023-bc85-a34a8442bc05",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1d4aac02-4cde-4178-b9b9-b80991d8a195"
        },
        "item": {
          "id": "366b8e51-70ea-48c3-bba4-7157a191d0a4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d54c3009-efb0-42c1-a6ca-972d1f4430d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afaee5a-91b4-410c-abe3-33d718bc69bc",
        "cursor": {
          "ref": "f73c24be-b9e2-49e3-9891-955b41801849",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "384816b1-0989-4a4c-8aab-ef6d47318a0e"
        },
        "item": {
          "id": "7afaee5a-91b4-410c-abe3-33d718bc69bc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dbdf081e-7ae6-488a-968a-96515c6ea95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a08ae20-167d-41f3-813a-36f2f68b0956",
        "cursor": {
          "ref": "bbb8e352-bf47-458d-943f-29abe94183c7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dbd71d07-baca-4708-8610-06b400d64b8b"
        },
        "item": {
          "id": "4a08ae20-167d-41f3-813a-36f2f68b0956",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "35ff99d3-55e0-4ed4-bad6-28eaf6586ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca0adf2-973e-4a8a-8010-98229a317a74",
        "cursor": {
          "ref": "92d0f5de-2102-452a-b737-048e3afc11ad",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "819f256c-4197-485d-856e-7a2c41c726ff"
        },
        "item": {
          "id": "aca0adf2-973e-4a8a-8010-98229a317a74",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9ab699dc-fef3-471c-ac0a-4052bb5d417f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ad4891-e5fb-46b8-af86-5ae9f36fa4dd",
        "cursor": {
          "ref": "a916c809-76a9-44d5-8d28-de13e01e09fd",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4c67d98c-47cb-45d6-9ee7-3ee21d093569"
        },
        "item": {
          "id": "e3ad4891-e5fb-46b8-af86-5ae9f36fa4dd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "343ed11a-ceef-4478-b669-a1ecdcb497e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5620705d-3007-46ff-9cbf-665129531216",
        "cursor": {
          "ref": "6f154134-6559-4531-b591-39b396a5506e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "06b4bb3b-45cc-4e54-91c0-12ddc498d001"
        },
        "item": {
          "id": "5620705d-3007-46ff-9cbf-665129531216",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "99ac2458-0982-4085-b713-47eba5746bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a44374-2642-419a-af7c-019ae8088a88",
        "cursor": {
          "ref": "e940a445-f676-4a40-9941-9f470ec5e8ae",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6b4261fc-54e6-48db-a7b3-6a4231e94ae1"
        },
        "item": {
          "id": "d3a44374-2642-419a-af7c-019ae8088a88",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8f46b4ad-b79e-4b04-8727-f4cf014874c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8dc6f4-7127-4d6b-a061-0cf63931b16a",
        "cursor": {
          "ref": "1a54d769-9d83-4e0f-a0d1-a880a7df0d86",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a4cf9421-51c1-4b79-8a03-f4a665418f20"
        },
        "item": {
          "id": "2c8dc6f4-7127-4d6b-a061-0cf63931b16a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e4539707-d80b-4014-993d-273670f2ad0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9578d65a-3000-48c1-92c2-3b20c0321d11",
        "cursor": {
          "ref": "4841becd-9be8-4309-ae3d-2fa06a273049",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "64c59c74-10cc-41f0-84d9-5bbb96d8b82d"
        },
        "item": {
          "id": "9578d65a-3000-48c1-92c2-3b20c0321d11",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ba45f399-987d-4577-beca-bfbe059a8ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413ab15f-8a82-4c93-80b6-0f63e2d495f9",
        "cursor": {
          "ref": "ced3c229-f817-4899-9d79-f1328bb47506",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6f1cfd15-3ead-4483-a729-99e514b46322"
        },
        "item": {
          "id": "413ab15f-8a82-4c93-80b6-0f63e2d495f9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c8dfc672-f6a4-407a-b965-66688516c888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38b4dcd-e4ba-4734-893e-06aa5ac90a10",
        "cursor": {
          "ref": "8520ac06-1c54-42c9-8c95-30797d5d4a0b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8ebb6093-91f0-49fa-90cd-85bc125a64d8"
        },
        "item": {
          "id": "b38b4dcd-e4ba-4734-893e-06aa5ac90a10",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "61a6c073-01ab-48b5-90ff-0faaf3ab1f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb23e499-cb48-4cdc-839c-bcf0137281cc",
        "cursor": {
          "ref": "48016fbd-c09d-4226-972f-0846ad6ae960",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7dde576f-6a65-4739-bac6-31a4f409ad20"
        },
        "item": {
          "id": "bb23e499-cb48-4cdc-839c-bcf0137281cc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a93440bb-3f96-4073-8cbc-d356fbf0f502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2791e327-d005-4feb-8cc8-7bfeb76c76f8",
        "cursor": {
          "ref": "03db8911-0faa-483b-823b-340264f77b5e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6abd5235-ca1e-4af8-9068-6c20ccd29689"
        },
        "item": {
          "id": "2791e327-d005-4feb-8cc8-7bfeb76c76f8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "874627f8-cc0a-4fee-b5d5-f6f450569660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c157c18c-bb84-46c7-b2e6-cc89868de6f6",
        "cursor": {
          "ref": "8bada1a9-3de4-4f6f-a676-8b0976ade58d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d52a9b1b-611e-441a-a2a6-64230048c453"
        },
        "item": {
          "id": "c157c18c-bb84-46c7-b2e6-cc89868de6f6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5b811d98-95a4-44c0-837e-edabe98bf35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a535e65-8cfe-411c-bf2c-e12ca9ccd588",
        "cursor": {
          "ref": "d2b0eec0-5e3d-414b-a100-209229ec7189",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "21704281-c19d-4565-8c46-94696c46ddcc"
        },
        "item": {
          "id": "7a535e65-8cfe-411c-bf2c-e12ca9ccd588",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "101a6ab4-e82b-40bc-98b5-9cace1b2a383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80488ca7-7619-430d-b279-5944d766237d",
        "cursor": {
          "ref": "3b46bdcf-a7d7-451b-98eb-9ef18d19d809",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "317a42d5-906f-44e4-baa8-5a747e2f37c5"
        },
        "item": {
          "id": "80488ca7-7619-430d-b279-5944d766237d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "05b08df0-1392-413f-933f-e0ea8d764803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396ac176-46be-4426-903d-acb92e7b01ed",
        "cursor": {
          "ref": "0abc5c8b-73f0-4eb5-a350-a41b47fba101",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8525671e-c123-479b-adf0-6c0b8adda4c5"
        },
        "item": {
          "id": "396ac176-46be-4426-903d-acb92e7b01ed",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7bf3e3e3-5cdf-4c86-b1eb-8b28e4a21f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3157bc62-c9d2-45c7-9d7e-39a54a5cbd6d",
        "cursor": {
          "ref": "e0f39e1c-ae2f-4528-beb5-cccd5bf47b99",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b2a5bbea-9942-4bb2-b327-dc2dd08048fe"
        },
        "item": {
          "id": "3157bc62-c9d2-45c7-9d7e-39a54a5cbd6d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "52d92229-9cc1-4aa4-91a7-a8aa68bc31bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eea31e-fa51-42a0-92d5-2dc25b3cf6b0",
        "cursor": {
          "ref": "0910c244-1bf9-47df-b33f-4e4271cb3cc4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ccab29a5-f532-4e90-b629-9098acf12337"
        },
        "item": {
          "id": "26eea31e-fa51-42a0-92d5-2dc25b3cf6b0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7012c0cb-2587-44bf-93f0-c91af61923bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b45a33f-6850-4457-9545-2c068ab302de",
        "cursor": {
          "ref": "d48c02f2-3bd7-4bc0-bd9b-e98b1454091e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2a2f6a11-c184-4831-a155-0105f3e2c56e"
        },
        "item": {
          "id": "6b45a33f-6850-4457-9545-2c068ab302de",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "92539055-23af-4472-8f23-95b6a039a702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b58441b-d3d9-4ed2-bdb5-e60afe005f94",
        "cursor": {
          "ref": "7224ab37-2c08-4ef7-8eb3-ab25ce4ed75f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6d442c30-0a50-4060-aee4-a707a6a96358"
        },
        "item": {
          "id": "9b58441b-d3d9-4ed2-bdb5-e60afe005f94",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "47158506-1992-4687-a5e2-23d5373c2a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf66b736-8676-477f-9ef0-f6101d9bde24",
        "cursor": {
          "ref": "92146b12-abd8-4eb6-99a7-75c8467b58ed",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "19f444d3-efb8-4bb3-a9f7-a7bb85f55058"
        },
        "item": {
          "id": "cf66b736-8676-477f-9ef0-f6101d9bde24",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "27336ef3-766a-4eb5-aa65-958536b1be68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38b2c03-21e5-43ea-b594-b8feda69a32b",
        "cursor": {
          "ref": "ac619ebe-4cac-4b4c-b669-8a581e383306",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "369edd51-9f04-43da-9754-33bf0b1eb2ac"
        },
        "item": {
          "id": "a38b2c03-21e5-43ea-b594-b8feda69a32b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0957635c-bf0f-42f3-bb60-57030f535d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2e4e74-cf10-424f-abfc-184a49c17508",
        "cursor": {
          "ref": "84d30c86-09f5-492e-b48c-542c64e16dde",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "01e12bde-fc47-4eac-8682-f29f8e91911f"
        },
        "item": {
          "id": "ce2e4e74-cf10-424f-abfc-184a49c17508",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4ec53304-8736-4d0d-8473-497be82ecb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0bdf86-d168-4948-aa24-73362861044e",
        "cursor": {
          "ref": "f42ed6e7-233c-4895-aafd-f85272eea514",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f9bf8143-de35-4614-8af2-1fb36e696c82"
        },
        "item": {
          "id": "dd0bdf86-d168-4948-aa24-73362861044e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ef88918c-752b-4c76-8b5b-691b64bccd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3721a9c0-7a36-48c9-b125-605e71b1ae30",
        "cursor": {
          "ref": "c8445ade-a4a9-44fe-b925-c576f18189eb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "99e12b56-58a3-47f8-b604-5dfb060c3bcc"
        },
        "item": {
          "id": "3721a9c0-7a36-48c9-b125-605e71b1ae30",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c8def7c5-f075-4257-8dbc-b14389b5d670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae2da28-11fc-4627-88d2-2ed60032d11b",
        "cursor": {
          "ref": "35898992-5440-4af6-9ee0-8666ae233525",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "81ef1f29-9514-40df-b3d8-b4a76b2d53e7"
        },
        "item": {
          "id": "7ae2da28-11fc-4627-88d2-2ed60032d11b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ce64815b-9358-4f77-b8ee-10d299fa9f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27349a06-8c68-46db-8cbb-6f541abd013c",
        "cursor": {
          "ref": "64d82dd6-eb54-4bc1-b2b8-d0454b969bba",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f4b77611-ef53-446b-8608-729c78609a5e"
        },
        "item": {
          "id": "27349a06-8c68-46db-8cbb-6f541abd013c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9e311a77-9922-4393-b432-7fab51f6b63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb6c207-f706-4950-8fdf-b6c1e57d8c3d",
        "cursor": {
          "ref": "2901a04f-d7e7-430c-a3a2-ac26f4f097d4",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "06a3ae56-5656-4fc9-abbf-1585e9606dc6"
        },
        "item": {
          "id": "7eb6c207-f706-4950-8fdf-b6c1e57d8c3d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2ca33bc6-6c88-46c4-a4af-e6b566ba6771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ba68d9-2628-4091-9daa-5eb418467d22",
        "cursor": {
          "ref": "1db631cd-726d-46e0-a3a0-35e6c051eaed",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a55ddb78-c83f-4e93-a28f-76f138661ca2"
        },
        "item": {
          "id": "75ba68d9-2628-4091-9daa-5eb418467d22",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9525c041-0920-4c19-9a30-5a148333ff67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b21d3d-7790-43f9-9c62-bdb4e70c854f",
        "cursor": {
          "ref": "61e4a2da-1bc5-4245-85e2-d06aed79761c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "29a7b1ca-73cf-44f4-babc-a34ce8e337dc"
        },
        "item": {
          "id": "f3b21d3d-7790-43f9-9c62-bdb4e70c854f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "28e65ea0-e8e2-43be-9a6d-97152604a1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6690a2d9-53e9-4302-b41f-5b996f5bbb47",
        "cursor": {
          "ref": "89435430-9195-4260-806d-ccdff6ee1e92",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "10456fd5-0dd8-4fba-9314-e6953a84ee24"
        },
        "item": {
          "id": "6690a2d9-53e9-4302-b41f-5b996f5bbb47",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8df95839-2542-4e8e-8051-8b4e5a891a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843fb17c-a5e7-4860-9c77-6dfc301bf35a",
        "cursor": {
          "ref": "8b995675-824d-4baa-b71c-3bee9bb6ff2e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "618d8638-0355-43b1-96df-9e0df77cbe3a"
        },
        "item": {
          "id": "843fb17c-a5e7-4860-9c77-6dfc301bf35a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c4036372-70ad-4bef-8085-27970ce31888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939c26e4-deab-4417-829c-180694e31ca6",
        "cursor": {
          "ref": "d4425b2d-2bdf-41f0-9535-d00b4cba207e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8ca8c491-6e6c-4dde-ab90-efaa08a49e10"
        },
        "item": {
          "id": "939c26e4-deab-4417-829c-180694e31ca6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e59469c2-1eca-4a10-9d00-15804beb3328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e040f7b-88b3-46a0-ac19-086a2c0adf3a",
        "cursor": {
          "ref": "e7f85de8-6551-462e-ad06-3e2e159769c5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a0e7cd16-9bad-4ec0-929d-91846a4ea616"
        },
        "item": {
          "id": "1e040f7b-88b3-46a0-ac19-086a2c0adf3a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "eb88c0aa-e9e2-46f1-9ba4-d6df26d0b9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc967d75-4beb-408a-9aac-d418ca0ad343",
        "cursor": {
          "ref": "5eca6c45-5579-43ca-b60d-0d92b022645a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4f894d3b-09a6-4f18-8bc2-73179b6596c5"
        },
        "item": {
          "id": "fc967d75-4beb-408a-9aac-d418ca0ad343",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "87b2f125-9eec-48bf-957a-afb25a833cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158cd3a0-c7e4-44d3-a409-29065d8b169a",
        "cursor": {
          "ref": "fe1fa13a-1ad0-429f-8e7a-0a7eab45c447",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2db4afab-dbae-4d8d-9578-b5b76799dc23"
        },
        "item": {
          "id": "158cd3a0-c7e4-44d3-a409-29065d8b169a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "55d67bc7-2f0a-4d50-80d7-dce6e1132157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb56047-7cde-4c74-ac51-8879c2485ca8",
        "cursor": {
          "ref": "4c201992-b2bc-41ee-941d-0ec1d8381c67",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "51eaa965-0671-43f2-961b-729cb28380a2"
        },
        "item": {
          "id": "3fb56047-7cde-4c74-ac51-8879c2485ca8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "33e6419f-fb3d-4f5e-b541-3d16e2a2433c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d410c6-e025-4d64-957f-775d6d70e2dd",
        "cursor": {
          "ref": "7997308c-509f-4f7b-9ac1-6da273008372",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ddeb80ea-0af7-4601-956d-1f25f9867fde"
        },
        "item": {
          "id": "b3d410c6-e025-4d64-957f-775d6d70e2dd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bc7cce54-d187-4e2e-b5e0-fc7bdc1f6096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad681da0-a651-4491-bebc-b7b97ad05da8",
        "cursor": {
          "ref": "7dcbaed5-0c3f-4f97-9ab2-f5cad8d00cae",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b9add91e-bd4b-44b3-9ef2-fc64721f4adc"
        },
        "item": {
          "id": "ad681da0-a651-4491-bebc-b7b97ad05da8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "78c9bc21-6fc1-4dfd-a06e-71a5d7428db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea986b68-4848-4219-89c5-e58ac2272517",
        "cursor": {
          "ref": "950c1bb8-abd9-48ce-8aa1-c36e797e4e02",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f48e1315-8752-486f-b82c-39f0b1702556"
        },
        "item": {
          "id": "ea986b68-4848-4219-89c5-e58ac2272517",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8b286028-391a-4982-9c55-776b5405cade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e6223f-f65d-44e3-9e6e-3044c9df04f3",
        "cursor": {
          "ref": "39c2c257-a9f3-442d-b58e-7a064d5b8619",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "893a85b0-e14d-4fb6-8f80-e2a462b1f9a6"
        },
        "item": {
          "id": "e8e6223f-f65d-44e3-9e6e-3044c9df04f3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "338a854c-f54b-4613-ba68-230429a868fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1821bcc7-c42e-4428-b841-45d0886a6566",
        "cursor": {
          "ref": "529e15e1-9a00-4c19-a47d-4772e680384b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "99501959-7dbb-419b-8c73-04055b05d3af"
        },
        "item": {
          "id": "1821bcc7-c42e-4428-b841-45d0886a6566",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "52a0e597-0783-4a1a-a28b-8bcf406f7521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d0b867-1c45-4e20-8cc8-50bb91728d32",
        "cursor": {
          "ref": "46f9a912-0452-4bd0-a2d8-5c6df84c6cc2",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0a0d3b62-e69a-4ecb-baff-97da6bfe61e1"
        },
        "item": {
          "id": "29d0b867-1c45-4e20-8cc8-50bb91728d32",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "66fd2306-46f0-4af1-b52e-efd732b848be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c1f545-c297-4176-9ff9-a37c54d9c1a9",
        "cursor": {
          "ref": "ad7a45ca-6305-4581-a0aa-1d15b9a1a436",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "85ea53c1-1804-46a2-8539-ebd1ca3231c6"
        },
        "item": {
          "id": "47c1f545-c297-4176-9ff9-a37c54d9c1a9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3b4b5e1c-dcf0-4711-9300-275e13766c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1cbc26-d188-4c12-86cf-8fe4e392a043",
        "cursor": {
          "ref": "6011e86d-c012-472f-8a16-d08a22b824b1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c4f839af-be85-40e8-9c66-259a11837029"
        },
        "item": {
          "id": "5f1cbc26-d188-4c12-86cf-8fe4e392a043",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "815881a2-52ef-477b-b382-e08567363f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30fa1de-f6a4-4586-950b-72352859a29b",
        "cursor": {
          "ref": "db9bad36-caf9-4012-97c2-fe03bf89971e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c48243fe-9313-4869-9a59-e127c36ba35c"
        },
        "item": {
          "id": "f30fa1de-f6a4-4586-950b-72352859a29b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ef71bd99-3191-4a61-adcf-0fc448eaa5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eb2bae-d830-4247-8644-fe5604bda403",
        "cursor": {
          "ref": "1705d12a-d312-4959-b75e-52328ba08c0b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "87c80e16-683d-43bb-99f3-6691ca7eeacd"
        },
        "item": {
          "id": "26eb2bae-d830-4247-8644-fe5604bda403",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "51d9b572-ca88-48f1-9d1b-173fdeba4b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d3f3ad-8007-407d-a058-b3e8c6a6654c",
        "cursor": {
          "ref": "e3266633-faf5-4a92-89f8-940bac631b3b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0db8d0f8-c26d-4b36-880b-6465aee3d00f"
        },
        "item": {
          "id": "80d3f3ad-8007-407d-a058-b3e8c6a6654c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "17353637-5827-4837-951f-97bfaf41c3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434a5902-5cf9-4788-ac3a-79bf54ff684d",
        "cursor": {
          "ref": "cc30b57d-cc93-48db-b838-bfd127907262",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "44a1f9d3-6d04-468f-8543-4241bdccdf03"
        },
        "item": {
          "id": "434a5902-5cf9-4788-ac3a-79bf54ff684d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8dee6461-f7a1-4315-86f8-6cf60d46ac15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6adf33e-c938-453d-805f-6553cd89c90e",
        "cursor": {
          "ref": "46a44a16-1d35-484d-9eb4-dafee69df3d4",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ee66078a-038c-4716-8303-94dd650f81bf"
        },
        "item": {
          "id": "c6adf33e-c938-453d-805f-6553cd89c90e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "88668dc5-7ca5-4d74-85da-3191058d9ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9a179f-6963-4837-ae4c-f235b72ba256",
        "cursor": {
          "ref": "3fef7af7-3fd9-4e5e-9bdd-5217605f7aeb",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fd52c79e-0a14-4ea6-a64c-fa5242972ba0"
        },
        "item": {
          "id": "4d9a179f-6963-4837-ae4c-f235b72ba256",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3d264eb6-3355-4c8b-8a44-b6ef778f315e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0933bf-796b-4096-8a87-3c527dde2213",
        "cursor": {
          "ref": "df923dd0-59b6-4978-a436-b0d254ac847e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7e541864-26b9-4899-8b52-6623dafeb5ad"
        },
        "item": {
          "id": "bc0933bf-796b-4096-8a87-3c527dde2213",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bd5314f7-5e67-44cb-abf2-d6e00666d7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58df56ef-ae36-4967-af5b-a7492ef95dfa",
        "cursor": {
          "ref": "e05b30dd-858d-4ce7-a39d-a4a27bb2e5c6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "40cf5422-5caa-45d9-8d44-65b6097b9046"
        },
        "item": {
          "id": "58df56ef-ae36-4967-af5b-a7492ef95dfa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "31197c8e-2c71-43de-87b4-6cf460fea96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d98d1e9-cc29-4d27-a6e4-05ff010fd4b2",
        "cursor": {
          "ref": "cbeec19c-bd6f-46ab-9950-560ca02885b4",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cc1bb792-5ddc-4fd9-ae5b-6c4580f160e3"
        },
        "item": {
          "id": "4d98d1e9-cc29-4d27-a6e4-05ff010fd4b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d6a34bec-68d9-45fd-b498-ba9a3e9883a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2633e9a-b7f4-4107-9ab6-038ce7e37473",
        "cursor": {
          "ref": "ce20ba5c-797f-457e-90d8-f6711f418cf0",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "73ccbc3a-602b-4547-ae6e-7ee88d67947c"
        },
        "item": {
          "id": "f2633e9a-b7f4-4107-9ab6-038ce7e37473",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "537ffbd5-cdf8-44ad-b63e-a98de3be32c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd7f90e-0e70-4609-b9e5-151512a0eac1",
        "cursor": {
          "ref": "c41cf904-af56-492e-bb01-58267df29f1a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "26685c40-e10f-4df8-833a-944dab35449f"
        },
        "item": {
          "id": "bcd7f90e-0e70-4609-b9e5-151512a0eac1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f72ff92d-b136-492a-a2de-3928a3651dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcf0135-b9ab-49e2-bd52-019b61a584ae",
        "cursor": {
          "ref": "ba77f30a-df2a-43eb-95bb-85316af7b140",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f9923b76-2cd4-4d9a-bf66-579ff6b36afd"
        },
        "item": {
          "id": "dfcf0135-b9ab-49e2-bd52-019b61a584ae",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "193f9cf1-7ce2-4c84-b1b7-61959a018974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6db1381-27aa-45b7-be3f-b4418c4f0269",
        "cursor": {
          "ref": "cbb6aee6-c6db-4e3b-8fba-e7d9e2dfa942",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "db4a62c0-8cf7-41d9-adf3-0fdd235a7608"
        },
        "item": {
          "id": "a6db1381-27aa-45b7-be3f-b4418c4f0269",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "021e556f-ab22-4e7e-9641-c6b6574562e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48a1167-02ef-427a-8ab0-5ee9d66e78e3",
        "cursor": {
          "ref": "b5b637e1-1dba-42ca-8981-90d94687fe48",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e96ca251-6adb-4f0b-9b92-f8c5a74a944d"
        },
        "item": {
          "id": "a48a1167-02ef-427a-8ab0-5ee9d66e78e3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6320c96e-e1fa-426c-8548-f47bca9aa38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61291c68-006d-4404-a0f2-c7ad99fb887d",
        "cursor": {
          "ref": "5355560e-06cf-4985-8dd5-11ee2c0c8f9e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "362e93c9-8ee6-4add-92ea-ed2a09a72d7e"
        },
        "item": {
          "id": "61291c68-006d-4404-a0f2-c7ad99fb887d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e3afe5b9-9ca3-40ad-9b45-d056764c6ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebc764c-3bf0-4d51-b474-7b5781b7866f",
        "cursor": {
          "ref": "3b5d351b-adef-446b-be6d-79802f548341",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "53a44b70-f5de-47c5-a9a5-f1aa2336b479"
        },
        "item": {
          "id": "7ebc764c-3bf0-4d51-b474-7b5781b7866f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1bde6f13-2297-499c-9212-cac2b84e3559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed16286-e5b9-413f-aad3-222e70abb347",
        "cursor": {
          "ref": "a33be306-966b-4d6f-9567-81b3e7e9484f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1f05e362-7d6a-4359-8b57-5aa856c7114f"
        },
        "item": {
          "id": "8ed16286-e5b9-413f-aad3-222e70abb347",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "74185fe3-68b6-4d1b-a007-fdb523bd11ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80da921d-87ec-4d4c-80c1-1584c7a5254b",
        "cursor": {
          "ref": "1135feca-802a-4fb9-88f4-4e89173e8b82",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3b52aad5-5a87-4677-852a-b857f736affe"
        },
        "item": {
          "id": "80da921d-87ec-4d4c-80c1-1584c7a5254b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ced613df-ab1b-4d28-b296-e2e92ffbf7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917a33dd-47cf-47f5-a59e-2a159cee4855",
        "cursor": {
          "ref": "b3fbe1e2-5cab-47fd-a9f0-fb64540d4334",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0b28fb03-87fe-4abd-8acc-94ae485b23d9"
        },
        "item": {
          "id": "917a33dd-47cf-47f5-a59e-2a159cee4855",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0f6281a0-71d7-44ce-b0d8-175775c61b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6db002-295d-4b9d-b604-3743ba8b8197",
        "cursor": {
          "ref": "2237454e-e1df-48b6-8ae8-a454ffdadb00",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4373d073-877c-4539-b9e1-0652d50b3b99"
        },
        "item": {
          "id": "7c6db002-295d-4b9d-b604-3743ba8b8197",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9b9d3425-f573-468d-bc43-cf5c7b8a5d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be83504-b916-4f8b-bb91-a0e2126b74c0",
        "cursor": {
          "ref": "091be9f0-03f4-4571-a56d-ce094c94b257",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "743f07d9-387f-4c4f-9169-a14f2c4046e0"
        },
        "item": {
          "id": "4be83504-b916-4f8b-bb91-a0e2126b74c0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "64463f23-eb9f-4414-b772-38a1e2dc31e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd854db5-6acb-42e5-b6ce-8784aa7ad2a2",
        "cursor": {
          "ref": "ae51b138-ab96-41bc-95d1-43067f716927",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d7563f02-2ce7-4ded-bcb8-2f3a7561c209"
        },
        "item": {
          "id": "fd854db5-6acb-42e5-b6ce-8784aa7ad2a2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6610bd11-66f0-438d-ae27-2e011b8f14bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f890fe-759e-4e5c-8a61-608483c7b57b",
        "cursor": {
          "ref": "c23ed06f-0475-4fe3-bf5d-cf8cfe8b68ce",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f9b6f6f4-ecac-4c44-944d-1f909cef324c"
        },
        "item": {
          "id": "76f890fe-759e-4e5c-8a61-608483c7b57b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f3223824-d552-4708-b6f2-3a8b4a7723b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217de69f-2f3f-48e3-b034-32ad1bee9d61",
        "cursor": {
          "ref": "b33d7261-db8e-4b5a-81aa-f9fdf555696f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ab3e7175-de2d-4f10-b9c2-0440397e1b7c"
        },
        "item": {
          "id": "217de69f-2f3f-48e3-b034-32ad1bee9d61",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "993b1f3f-b929-4f26-b798-c9988c377212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e500972f-23ee-4a45-9941-db9c295fe983",
        "cursor": {
          "ref": "f3998209-103e-4040-9287-695e2de37277",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4c2b1544-7abb-46d4-a6dd-66381d771590"
        },
        "item": {
          "id": "e500972f-23ee-4a45-9941-db9c295fe983",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fbfc0dcc-6a1e-43b5-9387-eb020e16e24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435dbf56-e973-4cfc-90c2-b0f593f219e1",
        "cursor": {
          "ref": "e4b85951-39ab-409f-996f-bee8fa25f797",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "66ad3d64-fb3d-424a-88b0-4e2fc5fcb30b"
        },
        "item": {
          "id": "435dbf56-e973-4cfc-90c2-b0f593f219e1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "37b20d83-bace-430f-99be-b83edaa260ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105082f9-699c-4eec-a076-9ac443133465",
        "cursor": {
          "ref": "6d2be327-43a6-494b-807c-9d5782b18b25",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2ec4904d-a46d-42b1-8128-6ce7cd1d513e"
        },
        "item": {
          "id": "105082f9-699c-4eec-a076-9ac443133465",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "21d17e3f-cbdd-4c33-a030-2ac86d5ba943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4b9ba1-90d7-4b27-87e7-dfa2b92c0b5e",
        "cursor": {
          "ref": "5e93cb93-bf75-49c0-9b6a-988f50fc6bfc",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a8b184c2-146d-4b76-969a-a6a1e3028fd2"
        },
        "item": {
          "id": "0c4b9ba1-90d7-4b27-87e7-dfa2b92c0b5e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "774f2758-39ce-42cc-8fd6-3617ae8d842b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e5fc64-806a-400a-89e0-3db41a86baa9",
        "cursor": {
          "ref": "ce684d96-4fe3-4a16-afce-156831fb2df6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "aeed2cab-2c41-4088-b7bd-ca4c1c9b2aa0"
        },
        "item": {
          "id": "10e5fc64-806a-400a-89e0-3db41a86baa9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "440630af-f436-4942-9210-8e29dcbf056f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2039bc1c-d2ab-49a5-bb36-f5e3c721a3ce",
        "cursor": {
          "ref": "dd383ad2-1673-4177-bb3b-67645b1fb06a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5b08e83f-7cdd-4e90-ad73-efdc8ec6c4e4"
        },
        "item": {
          "id": "2039bc1c-d2ab-49a5-bb36-f5e3c721a3ce",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e5aeeda8-717a-428f-b13a-183655603f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ce7dfc-053a-4b3a-a841-3cdc8afef64b",
        "cursor": {
          "ref": "a120c9f0-abd3-4b0e-885a-18eee9c77a59",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "99a00952-eee7-4082-8ca5-1ed694fddf69"
        },
        "item": {
          "id": "a5ce7dfc-053a-4b3a-a841-3cdc8afef64b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dcead7b1-e171-4b6b-9aef-001c99a7e724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b41c75-70fb-4356-918d-403ae6a24713",
        "cursor": {
          "ref": "8bc99a0b-9830-4cd1-aaeb-30fe118eef88",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "067f116b-c7e9-430f-991e-dbce5ed23b62"
        },
        "item": {
          "id": "a2b41c75-70fb-4356-918d-403ae6a24713",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8cd534b9-3d9d-4e6d-ae2f-8b0e715a1ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c359d1-3f68-4c28-92aa-7ff3834c4f9e",
        "cursor": {
          "ref": "d39c2c63-049c-476d-a08f-d61654354da7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c29d2b13-caa0-4252-9197-a28f438b5b1c"
        },
        "item": {
          "id": "43c359d1-3f68-4c28-92aa-7ff3834c4f9e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ccd5bf96-0914-489d-b57c-c444ca2c346d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61ebec7-27d0-4af2-ad3c-2de23bab9a83",
        "cursor": {
          "ref": "5bfee6c0-a166-4cd5-a70a-1768f95d10b4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "63093f22-78dd-457a-b4d0-b3a9bf25407d"
        },
        "item": {
          "id": "b61ebec7-27d0-4af2-ad3c-2de23bab9a83",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "04146d5e-1fe1-45c6-a813-95581fcf7093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d25f03-9427-422e-b167-f0d81cc7a96b",
        "cursor": {
          "ref": "4a2cc46e-b154-4204-ab04-578360c64949",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "810be599-8104-4ed6-a486-6e0fd56b5edf"
        },
        "item": {
          "id": "54d25f03-9427-422e-b167-f0d81cc7a96b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0703fec9-bb27-47ea-b558-7129030932a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 988,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79edee3-4e6f-4eff-98fd-d804f43048f7",
        "cursor": {
          "ref": "10a1d1f5-f034-444c-aed3-687ed1415fa4",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9db1321b-273b-43f1-814d-07d318e9a8a4"
        },
        "item": {
          "id": "f79edee3-4e6f-4eff-98fd-d804f43048f7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ae3b28d8-b4d1-4383-a34d-9df3f41f6faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8d8031-5c72-4fa4-becc-d068f5d9c3a5",
        "cursor": {
          "ref": "a5ce97de-1d63-4b83-bafb-6213acb440d8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9da00284-21e9-467c-b26c-46a13cbcd465"
        },
        "item": {
          "id": "1a8d8031-5c72-4fa4-becc-d068f5d9c3a5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9b94ff3a-6679-42e5-8e95-42247555cc48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d63264-96aa-452f-b7ab-f1e95f372099",
        "cursor": {
          "ref": "cea7937e-157d-4681-850a-2c60ad5920d6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "55697796-0d13-418a-92cb-0e7e7a7270e8"
        },
        "item": {
          "id": "37d63264-96aa-452f-b7ab-f1e95f372099",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "992db7e2-84be-4d42-abb9-b6118b2e3e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4dc30633-cd36-44e0-b59f-e6ada5ff7030",
        "cursor": {
          "ref": "5f99fece-38b6-47f9-a563-48f8de3c6b33",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "00024d1a-65dd-4cda-bc8a-7a90bcac36ab"
        },
        "item": {
          "id": "4dc30633-cd36-44e0-b59f-e6ada5ff7030",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9cb2d1bc-3b80-47b3-84a8-faff4f22f7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "711b7b37-735b-4172-b270-a4a5bb0a330f",
        "cursor": {
          "ref": "4dd457ea-2aa9-4358-ac4d-ad815319f022",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3f76eece-9469-42e1-afbf-41661a3a3ee7"
        },
        "item": {
          "id": "711b7b37-735b-4172-b270-a4a5bb0a330f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "070f742c-e762-4f48-ad1d-06b1e1436d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "78689743-3346-4bd5-8d0f-745e1b44b207",
        "cursor": {
          "ref": "0d52af0e-4b3c-473e-9730-4b89dee0affe",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0825c532-2482-4e08-ad9e-7b1fbb0b1456"
        },
        "item": {
          "id": "78689743-3346-4bd5-8d0f-745e1b44b207",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "59300c28-c569-4cb6-b2d3-9b4f9db736a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d3893db2-d884-4e8f-94f5-cd3631fa26a4",
        "cursor": {
          "ref": "78f821bf-7841-4178-8c8f-e3b95654eb98",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "53703034-fcbb-46a0-997f-959f63d0733c"
        },
        "item": {
          "id": "d3893db2-d884-4e8f-94f5-cd3631fa26a4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b45dd603-8d61-401b-8da0-9270aa74cecb",
          "status": "Created",
          "code": 201,
          "responseTime": 10621,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc2ad71-52ed-4964-a7db-5f80bc2ce38e",
        "cursor": {
          "ref": "c336ad76-d51a-4ed0-8d7b-7c7c89c9a148",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "37e706c4-4dae-4407-843a-05085d2f18ca"
        },
        "item": {
          "id": "4cc2ad71-52ed-4964-a7db-5f80bc2ce38e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6837062d-8ef6-4bfe-aaf1-b2810a009ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2973de96-046e-4414-89cb-b672f0f41642",
        "cursor": {
          "ref": "8ed62d99-3c9a-454a-9612-b5902d1e553d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c772c5ff-f243-4917-81b3-efe45a1f3c34"
        },
        "item": {
          "id": "2973de96-046e-4414-89cb-b672f0f41642",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "90089a1f-b36e-46e4-9c32-2d9e7a5ba7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b9cc33ab-d954-4390-adc3-703fb1adcd26",
        "cursor": {
          "ref": "dc60b6c3-d5a0-45dc-98bf-fc9460408fbb",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "95694966-5e86-44bb-924c-4dedbb433d49"
        },
        "item": {
          "id": "b9cc33ab-d954-4390-adc3-703fb1adcd26",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c66e5120-ccaf-4e93-9126-79bb3308e72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0277e2bd-d5ad-44c3-8106-4347c7f1aa3d",
        "cursor": {
          "ref": "5dfd2039-c0e9-4f6b-a163-e4222da88eda",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "94ba7428-a406-4699-9ace-045b5a8fd4a6"
        },
        "item": {
          "id": "0277e2bd-d5ad-44c3-8106-4347c7f1aa3d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4dc70fc0-a298-44cd-8af4-a16165f36759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4ec251-bc55-4131-98f5-044271ac0014",
        "cursor": {
          "ref": "0bb160cd-68c6-41e3-86c3-c6853115c175",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7fbeac67-22a4-4fc5-ab05-c57dde0540a6"
        },
        "item": {
          "id": "cc4ec251-bc55-4131-98f5-044271ac0014",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "676d4f0d-a52f-4301-9084-5fcfe603793a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98e9370-a3c3-4db4-a16e-d55882c320f5",
        "cursor": {
          "ref": "5af30892-c126-49c7-a4eb-90ececa06e4e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9da29b6a-1001-4164-9b3f-179a4df49239"
        },
        "item": {
          "id": "a98e9370-a3c3-4db4-a16e-d55882c320f5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "96f17559-3644-47b1-a83e-db3052ae3ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803d2011-42ad-4aba-8042-31d4f38c925f",
        "cursor": {
          "ref": "3bade627-8dcc-490d-a665-42a817a55b88",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "584ad080-bd05-486a-910e-f2c5324f7682"
        },
        "item": {
          "id": "803d2011-42ad-4aba-8042-31d4f38c925f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "efa7d54d-d2b0-4a0b-a6ee-1bdf1dc30351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984f2321-cf55-479e-a6aa-d9ea0f4be509",
        "cursor": {
          "ref": "ae796ed6-b8d6-4f92-9fe8-73d8d603312d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "93bf13f7-6b7e-4365-9a3e-9ebd77b9a01d"
        },
        "item": {
          "id": "984f2321-cf55-479e-a6aa-d9ea0f4be509",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3643a1a2-5f63-4491-9f46-644be2bec679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17570104-f82c-4b31-b5bc-12335e10b49e",
        "cursor": {
          "ref": "e3bf40a0-ce45-42bb-8768-d80b314e4b20",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bb531e46-c543-46e0-bfc2-eedc08b4051e"
        },
        "item": {
          "id": "17570104-f82c-4b31-b5bc-12335e10b49e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "06e8a7aa-a9e0-44c4-bf89-e8d6975a3fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93da9b5-34c9-4161-8085-f69e2923d624",
        "cursor": {
          "ref": "825a8e90-c7bb-42d3-94f7-5b993a1db884",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "68d77b05-6114-4047-b493-8d43b9a37d68"
        },
        "item": {
          "id": "d93da9b5-34c9-4161-8085-f69e2923d624",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0018550a-dc9b-4d48-8a21-f35e151cd12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c6bc84-8c3f-4df3-88f4-173be70c61f0",
        "cursor": {
          "ref": "17c2ee9a-6b92-4489-883d-593fde666f71",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e2254571-5b00-4216-9898-8ddd3d96c7d3"
        },
        "item": {
          "id": "95c6bc84-8c3f-4df3-88f4-173be70c61f0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b1c33f2f-5f00-4f0d-86a0-033f00bffcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4013578-3fe9-4d1a-9a8b-1cad6133f046",
        "cursor": {
          "ref": "d67e0cf2-788b-4fd9-ab02-d15ba98d6f3d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "03f27924-28b8-4b77-bb22-1166a76f2f92"
        },
        "item": {
          "id": "e4013578-3fe9-4d1a-9a8b-1cad6133f046",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b404762c-c4d0-43ad-98f4-38767c95f618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882d2da2-c82e-4978-81c8-b5c25bb93ff7",
        "cursor": {
          "ref": "e0831999-9298-4a35-a890-e4b12287f569",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f06c9113-b588-4364-ab95-6ba9dd3bf92f"
        },
        "item": {
          "id": "882d2da2-c82e-4978-81c8-b5c25bb93ff7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f64875dc-64ce-4bd2-bb4f-c3ab1c51646e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a82e9a-5baa-413b-ac20-e9c6f353bd29",
        "cursor": {
          "ref": "046409d2-9992-45ab-89cb-37362a08dd52",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "133b4795-cd85-416d-bddf-1260e8815aef"
        },
        "item": {
          "id": "60a82e9a-5baa-413b-ac20-e9c6f353bd29",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "84905d7c-5c2f-4cad-b0d3-2895e07eb776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf4c7ee-8e46-4b16-baed-4540d4b3aec8",
        "cursor": {
          "ref": "ab1ca0de-dbae-41c7-92d9-e73407d954e2",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c94dee33-b34f-4ba3-bfc4-0e66ab5465cd"
        },
        "item": {
          "id": "faf4c7ee-8e46-4b16-baed-4540d4b3aec8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f144e309-d37d-4b79-8d5c-e52f24f5ac7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b534b0c7-c3f9-4c61-9daf-b8ae2cc85c10",
        "cursor": {
          "ref": "1d82e42a-4bb0-419a-9b2a-d56952a8761f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "30408e0b-1fe0-4ce6-9425-c75c42f174c8"
        },
        "item": {
          "id": "b534b0c7-c3f9-4c61-9daf-b8ae2cc85c10",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "02b004ea-beca-45d8-9554-621b9b315b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263e5529-cd47-45cd-b619-ef2d305d59c3",
        "cursor": {
          "ref": "2c5b8677-7b92-4b8c-9565-f95c1b0e61a5",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "73e25918-9a33-4160-8a7f-48901eb157e0"
        },
        "item": {
          "id": "263e5529-cd47-45cd-b619-ef2d305d59c3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2d6b0bcb-fe66-4b00-a242-c3f869fcf56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d05c70-8a1d-4f4e-8b13-3e4145b4174d",
        "cursor": {
          "ref": "2dc9cc6b-a42d-4b98-826e-94ea01b88fbd",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "df6b04a5-3efb-4e36-9d3f-e98f895fcaa0"
        },
        "item": {
          "id": "f7d05c70-8a1d-4f4e-8b13-3e4145b4174d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "449429e8-fb8c-4e9b-bb12-0f5a64ffdefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6452d46-6793-4489-bd24-6867fb74d1be",
        "cursor": {
          "ref": "5a26d6d6-c3c9-49ff-a277-9d90e1a9a138",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6414620f-54df-42b3-a9c8-c92f409e893f"
        },
        "item": {
          "id": "f6452d46-6793-4489-bd24-6867fb74d1be",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b0d733ef-9f22-4479-b992-9af46418dd6e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "4cddd17d-4985-4ea9-8e25-155b91b4f725",
        "cursor": {
          "ref": "c2967978-a409-4493-9e1a-3f5ceae3d048",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a4f912bd-ee0e-49f5-8b16-4a77e8727fd5"
        },
        "item": {
          "id": "4cddd17d-4985-4ea9-8e25-155b91b4f725",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a57d71bd-22fa-4811-aa02-3e237e7afc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c941259-4768-40b8-b571-204883d2d375",
        "cursor": {
          "ref": "a6386d4b-12e6-4c64-a054-de47f8eafb7e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1139dd14-40c7-4254-bb10-0c72242b6d47"
        },
        "item": {
          "id": "4c941259-4768-40b8-b571-204883d2d375",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "83de8cbe-c3cb-42e7-982a-1be06522fa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d1cc92-a137-4926-bb19-e8bd505125ea",
        "cursor": {
          "ref": "f212fc37-8147-4c36-8429-1eb02c93a9c7",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8f68e998-a68d-4ab1-9687-aefda3425b62"
        },
        "item": {
          "id": "21d1cc92-a137-4926-bb19-e8bd505125ea",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cc0fdf24-9234-4eaf-ae88-597fb5eada2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b9df71-f466-4ca3-ade9-ff15e5122186",
        "cursor": {
          "ref": "22389979-869c-4da8-b71c-0fcefdba81e5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "98a0fe92-9d11-4fc6-9377-6930c2e1dbfd"
        },
        "item": {
          "id": "a4b9df71-f466-4ca3-ade9-ff15e5122186",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f6995637-b1da-49a1-8a75-0b936cb2e2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf91e66-adef-4f81-afc8-38f54785ca98",
        "cursor": {
          "ref": "029a06d0-8e13-40ec-875e-2853483ec622",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bb87e9d6-7434-49c9-a632-24e2cf048cf4"
        },
        "item": {
          "id": "fdf91e66-adef-4f81-afc8-38f54785ca98",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6fc31b13-b10b-4a59-ac5b-51e4d1842e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72d0dd3-b6b8-484e-9b5c-83c31bfd5f28",
        "cursor": {
          "ref": "137692e4-36fa-4c2d-a5fd-60007704daf9",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cc64426f-2278-4f38-8023-671abf7c60f5"
        },
        "item": {
          "id": "d72d0dd3-b6b8-484e-9b5c-83c31bfd5f28",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3d9a0b08-7bb4-4531-b947-6cd6f8f4a170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25755c55-e91d-41c6-8e34-ec66cb73e8ec",
        "cursor": {
          "ref": "a62c7e32-34b9-4b7a-beae-58f5b42d386d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5805ab76-f645-4fc6-8de8-2ae27da76563"
        },
        "item": {
          "id": "25755c55-e91d-41c6-8e34-ec66cb73e8ec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a9921b5c-e1b4-49a8-a0af-5450229c9126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7383c4-21e8-444e-ad70-50a4c01cbca1",
        "cursor": {
          "ref": "e9ae55c2-07b0-48ef-9579-c7aeec36cdd0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ce567694-bee9-4232-bb9f-7ba1e59c59e4"
        },
        "item": {
          "id": "0f7383c4-21e8-444e-ad70-50a4c01cbca1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "af446a3a-8b67-4d1b-ab29-55a11aed8f7c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "94654caf-f6bd-489c-ab77-7090496644c1",
        "cursor": {
          "ref": "9ae1032b-cd16-440f-9681-d376b931937e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fc7d0e71-45f6-40c6-9ea0-ae8378ac3cec"
        },
        "item": {
          "id": "94654caf-f6bd-489c-ab77-7090496644c1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "475408fa-9983-455c-b59c-1a9173f40774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7128f232-7264-4c6b-8732-bd1559df9570",
        "cursor": {
          "ref": "4d0958ce-e0a8-4aac-b3f0-df6d71c77de7",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2eaebdf9-d868-4f73-9eb3-db461afa5112"
        },
        "item": {
          "id": "7128f232-7264-4c6b-8732-bd1559df9570",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6abe4644-37cb-4f55-9c2a-caeba760146f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbe064f-8e48-4d82-a03b-d1023fcbe100",
        "cursor": {
          "ref": "ba89f42e-b6d4-43d4-bed5-74ebbcb63530",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "31949a72-b34b-48b7-ab89-cea92418bfb6"
        },
        "item": {
          "id": "1cbe064f-8e48-4d82-a03b-d1023fcbe100",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5d157dcf-1779-4661-b49b-26411d4af4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27da76c-6e24-4f9e-bd9a-bedfb22c44c7",
        "cursor": {
          "ref": "1149cc45-0c90-4553-8f89-04a9f34a1d29",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2c845c7f-d492-4eff-aad1-37a42c2c28d2"
        },
        "item": {
          "id": "d27da76c-6e24-4f9e-bd9a-bedfb22c44c7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "36016b99-a815-4fa6-b5e9-6b5292854a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2933be4b-d7c1-47e7-aaa9-2ba9e9d08e21",
        "cursor": {
          "ref": "4a0bfbe3-6f2c-4481-b04d-c59263291c89",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c2ebe606-d2ac-4951-b370-2b5de5b0846a"
        },
        "item": {
          "id": "2933be4b-d7c1-47e7-aaa9-2ba9e9d08e21",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1453dbe7-8117-4331-841b-c1106b537a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6583ee0-a1da-4eb2-bb29-5acdb9649794",
        "cursor": {
          "ref": "5224fb51-3fdb-4111-8ef0-3af067967853",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ab80a281-6758-419e-abcf-a1475a3ca275"
        },
        "item": {
          "id": "e6583ee0-a1da-4eb2-bb29-5acdb9649794",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a91da85c-5503-4a68-a59e-736428b2af79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17d935f-3fc0-4cce-8965-14e6ed59bec6",
        "cursor": {
          "ref": "c6a19762-0318-4860-8687-ee230bf0f5cb",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "13656165-30e8-4e94-bb25-a0560586efc7"
        },
        "item": {
          "id": "e17d935f-3fc0-4cce-8965-14e6ed59bec6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "632f900a-d018-433d-9e7e-cb48af9b0ff6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "0568f89d-25b8-4bfc-80d1-c8fdd3887e54",
        "cursor": {
          "ref": "f08597b7-58d1-43c9-b18f-b3b308682ffd",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f181f0df-d3cf-4d8f-b7ce-1b4b1a217f91"
        },
        "item": {
          "id": "0568f89d-25b8-4bfc-80d1-c8fdd3887e54",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "03a13741-feed-4fe7-a574-f0c53fa1b84d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "91936e15-7a64-4307-a648-3d1eec6cdedb",
        "cursor": {
          "ref": "1755f380-8193-4215-9715-8e0c275c442c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3bc97ddc-09ca-43f6-abe0-f1206798260f"
        },
        "item": {
          "id": "91936e15-7a64-4307-a648-3d1eec6cdedb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "770a58cb-3884-4584-978e-2bd2d562eee6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "effafacb-2cb6-4feb-af45-51780bc61332",
        "cursor": {
          "ref": "443458be-61d7-46df-9209-ed8934a20119",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b442c976-645c-417e-8530-eef9b2fb6b96"
        },
        "item": {
          "id": "effafacb-2cb6-4feb-af45-51780bc61332",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "02bc120c-46fb-481d-945a-cfeec3c1f162",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b200eb8d-878c-4c94-8ac5-fdb1d4b330d9",
        "cursor": {
          "ref": "0eb69a2b-b9ed-4040-ba89-05a7ce3d95fc",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "79ffaaf2-20ea-43ec-91f2-b09544bc3841"
        },
        "item": {
          "id": "b200eb8d-878c-4c94-8ac5-fdb1d4b330d9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "799cb5a7-1c0c-43b9-a034-08bb726d3197",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "fafec9de-2865-4c28-8f90-bfb395216423",
        "cursor": {
          "ref": "1f42ec8b-8aac-45a4-b9a1-9ed79552071d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9753b676-e31a-45dd-9af5-35e8af0c98cf"
        },
        "item": {
          "id": "fafec9de-2865-4c28-8f90-bfb395216423",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a727fe6f-6233-41ef-a1cf-0c58fe0abfbd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "0d19c202-cb86-458e-8df4-49ef23d46f5c",
        "cursor": {
          "ref": "aa34f64a-28dc-4424-8af6-8168c98cea1a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "21bad151-9992-4863-8e9f-c74389a91a15"
        },
        "item": {
          "id": "0d19c202-cb86-458e-8df4-49ef23d46f5c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ccadc029-e6f6-4937-9620-8e23678a7bee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f5599f-8f63-4f77-9046-4b5386a1691c",
        "cursor": {
          "ref": "ee85ec6a-c421-40e8-92f9-36fc3de66f90",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b67e9653-407f-4378-95b0-785f78b40119"
        },
        "item": {
          "id": "19f5599f-8f63-4f77-9046-4b5386a1691c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1ef8dcad-8944-455e-8900-3a07636ed9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59a1342-e6cb-4bff-a86e-3f16c5fad141",
        "cursor": {
          "ref": "4b46d96e-acce-4405-867d-82bd89c2a57c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ac2a01e0-0f8e-40ac-8bc2-d90ee2a74272"
        },
        "item": {
          "id": "c59a1342-e6cb-4bff-a86e-3f16c5fad141",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a745f150-3c6b-41bc-a4d1-7ee4c9a52d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232156e2-3949-4211-952c-c7a07a6eb0fa",
        "cursor": {
          "ref": "110d768f-1e25-4a17-8691-4a7d010b66be",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a5a5052e-bb2f-4bd9-90f3-6003dfdb3e3f"
        },
        "item": {
          "id": "232156e2-3949-4211-952c-c7a07a6eb0fa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d6cf544f-9a5f-4a2e-b646-7fea36c57f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383dbbc7-5c3c-4582-8b33-e8a8b6aed14b",
        "cursor": {
          "ref": "27da7f4f-71f1-4ad2-a03b-0a758e5cfc88",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "68492004-9978-4718-b9f3-89fb958038e2"
        },
        "item": {
          "id": "383dbbc7-5c3c-4582-8b33-e8a8b6aed14b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8aa27290-6051-40ad-ac9a-9974823971fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fd4f8d-7ff2-456d-8fab-8415d98e6497",
        "cursor": {
          "ref": "ea517b0e-461b-4b76-b256-9b3685167fea",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f29c02a2-995c-4ab6-a755-0628a50d242f"
        },
        "item": {
          "id": "36fd4f8d-7ff2-456d-8fab-8415d98e6497",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e789de09-fba1-460d-8a6a-6031e734acc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cd0646-e206-4f1a-aa9a-db24dc2c149f",
        "cursor": {
          "ref": "02e64c48-0c2f-4f9b-88e5-338b3104bf80",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fffecb6b-a280-448d-813f-dcc9953c9cd8"
        },
        "item": {
          "id": "f5cd0646-e206-4f1a-aa9a-db24dc2c149f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f5bb3ff4-b8f9-4555-a82f-fb0222517d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0efbe3-fbde-46fd-9947-b1b1484a2e02",
        "cursor": {
          "ref": "8b85aaa7-af84-4547-aa56-4379fe8e2a45",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c242dda6-4934-49df-aa7c-56626d2ed923"
        },
        "item": {
          "id": "3e0efbe3-fbde-46fd-9947-b1b1484a2e02",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a5b92265-a074-4584-b66a-2a956dd2f409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3331653-a652-44ef-a4f6-cff739e0966f",
        "cursor": {
          "ref": "1708af5d-acd5-476c-9fc8-5834fe969d71",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "92fcc5c9-3fd9-4770-b3ee-a999a0b436d7"
        },
        "item": {
          "id": "f3331653-a652-44ef-a4f6-cff739e0966f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "23dabe42-88c7-41fc-ace4-67adbe6694ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9dd6d0-34c5-42b8-89f0-442603e50219",
        "cursor": {
          "ref": "5567ff4b-d8d7-492e-9dbb-8a6f5fb33de9",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "eeaf9e62-21a3-4373-8c2e-6f2e29b2c5b3"
        },
        "item": {
          "id": "3d9dd6d0-34c5-42b8-89f0-442603e50219",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4cef3670-a8f1-4da0-ba04-349062e35653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ee4c30-ee45-4865-abdf-41a14562511c",
        "cursor": {
          "ref": "7176270d-744c-486a-baaf-3cb4bd38caaa",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0e2fd69c-9e80-4943-9e5d-ccb5e2ae6fa7"
        },
        "item": {
          "id": "03ee4c30-ee45-4865-abdf-41a14562511c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "38d93274-d974-4856-80d2-a374bde85e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535c1535-08c7-4c96-8aec-69396fe9fd9c",
        "cursor": {
          "ref": "2c40e245-6630-45c3-b647-eb15235f1f7e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3cd0ac80-b8f9-4def-b72c-0cc63451ea97"
        },
        "item": {
          "id": "535c1535-08c7-4c96-8aec-69396fe9fd9c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "241c2f8a-e044-4316-b980-754bb36c42d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5922a09-f519-4d36-b67b-45863db16c3b",
        "cursor": {
          "ref": "94c63c9d-abb3-4af0-9f33-c08cd6179eec",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ef29db4f-31c7-4ec6-9cc7-b13b2721fd98"
        },
        "item": {
          "id": "a5922a09-f519-4d36-b67b-45863db16c3b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "002b898e-dbdd-466f-9fad-562f5c52b3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bba182-f3e0-44d3-8822-160d1af7f485",
        "cursor": {
          "ref": "96b0adec-c9ee-46ed-a0ab-31e559266b1b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4e8014ff-6c60-48ac-88cf-3925be6390a5"
        },
        "item": {
          "id": "f9bba182-f3e0-44d3-8822-160d1af7f485",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "df79a92b-d75e-483e-bd13-15959ac5a757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dfc033-f2cd-457a-844f-1cd97128a6dd",
        "cursor": {
          "ref": "abe22c84-d17a-4006-83e6-97a66c9b78f4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "20b7d1ec-b142-457e-b22a-0daab16fbd57"
        },
        "item": {
          "id": "a3dfc033-f2cd-457a-844f-1cd97128a6dd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "00a41220-29b8-422d-a954-d5c62bb419e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1241da02-bc48-45b9-94d8-c4ac4ed5a993",
        "cursor": {
          "ref": "8dfd7cce-d280-422b-9b29-6d4ff1b503d7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "584b3006-d06a-4ba2-a39c-1a2359cf4ef6"
        },
        "item": {
          "id": "1241da02-bc48-45b9-94d8-c4ac4ed5a993",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "95e11b06-0ffb-4714-a407-91927e7b3726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b888f08-665e-46d8-b15a-dd9eff8202ee",
        "cursor": {
          "ref": "97d2bbd4-bdce-4453-aa64-c9fa02e57074",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "81287c7e-06ae-437d-81ad-f390d389c386"
        },
        "item": {
          "id": "3b888f08-665e-46d8-b15a-dd9eff8202ee",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8d059af2-1fc7-4868-8f94-51216e75ae1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99df6ac-3898-4b83-823b-5c0ab4976a6b",
        "cursor": {
          "ref": "4a14c122-565b-437b-a132-f0707aa00a9a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9855f0e9-c14a-4c68-b038-6d0774392874"
        },
        "item": {
          "id": "e99df6ac-3898-4b83-823b-5c0ab4976a6b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "250d3591-2f6e-4acc-b25d-0b2dc34a232f",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "638f4a98-0119-4983-8665-bc10dff74749",
        "cursor": {
          "ref": "d5d4a4ca-28f0-41da-86ba-596d0b32282a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b0c08742-68e3-4328-a4e7-9f5c25ad144c"
        },
        "item": {
          "id": "638f4a98-0119-4983-8665-bc10dff74749",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3f448032-404a-461d-8672-7be65ec57f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356eb225-3461-45b7-95c8-5eebda7327cf",
        "cursor": {
          "ref": "2d0737a3-5b0f-4a6e-921a-33a7c0d5a3cb",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e99ff434-30a5-4070-a93e-fb422ce53794"
        },
        "item": {
          "id": "356eb225-3461-45b7-95c8-5eebda7327cf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "61b0f600-2383-4c8e-9404-fb9f3bd86968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4860bd81-f184-4f01-bd9c-c7be2306ab06",
        "cursor": {
          "ref": "7f64c58e-0c01-4f8d-8db0-3afff7765cf6",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "230b3ccb-2a13-480b-82b6-eae313312bdc"
        },
        "item": {
          "id": "4860bd81-f184-4f01-bd9c-c7be2306ab06",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "40c642da-a614-48f0-acbd-b0a14778a624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d330fd0-10f1-442f-be81-4d69f9bce47b",
        "cursor": {
          "ref": "54f4220a-1de6-4087-b639-cb2a6195e7b1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "23104273-8cb6-498d-a68d-6eb89f8deaca"
        },
        "item": {
          "id": "2d330fd0-10f1-442f-be81-4d69f9bce47b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7b81b132-ba15-4bd6-94f7-878f1c6daa25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ca45a5-4194-4321-9499-e53f402e1e58",
        "cursor": {
          "ref": "a3d16f21-4754-47c0-88d5-434a20ccba7c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "64cf6f7f-2ece-49c8-88e6-f888d25f5fac"
        },
        "item": {
          "id": "a2ca45a5-4194-4321-9499-e53f402e1e58",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7ca61956-eed4-41f3-9ade-df4d7324d816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d55dc6-3381-48d7-b060-e833caf36e69",
        "cursor": {
          "ref": "27588c55-74bd-44f6-bbc4-4d839f2de756",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2e16b321-3b56-43e1-bb07-30a4ae09e059"
        },
        "item": {
          "id": "94d55dc6-3381-48d7-b060-e833caf36e69",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "326e24e7-b0ba-458b-a3b5-dfe55fc93332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2448ae-11e9-4a51-ab2e-c0075bde2dec",
        "cursor": {
          "ref": "90a16b8f-4128-49f5-8071-bf2a77343a2d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9bd22728-7c23-436c-ba19-965988894704"
        },
        "item": {
          "id": "4b2448ae-11e9-4a51-ab2e-c0075bde2dec",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ad0cabaf-1f74-4aae-968b-409759aa4881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a70963a-addc-4b40-9099-1d3c3ebd1a45",
        "cursor": {
          "ref": "5deefe79-6fa6-4a88-86c5-c71034a357b0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "73d30555-7569-4dc4-a7fb-ada147619e6a"
        },
        "item": {
          "id": "2a70963a-addc-4b40-9099-1d3c3ebd1a45",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "22f47a89-7d30-419b-87e8-44b6ff044809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ebea16-a7f2-4142-bb3a-a058fc247efe",
        "cursor": {
          "ref": "713177f4-677d-4955-b6a2-99502705249f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "274d7845-06da-40c6-b913-6f8687db8407"
        },
        "item": {
          "id": "98ebea16-a7f2-4142-bb3a-a058fc247efe",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b82953f9-e728-47a8-94b8-8893321354fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84808f10-774c-4881-b0c8-d30669fcd4ce",
        "cursor": {
          "ref": "591720ae-1d3a-4d99-aa85-764eeba09ebf",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "540b9367-e618-4489-a0c7-3fa3ad004d5b"
        },
        "item": {
          "id": "84808f10-774c-4881-b0c8-d30669fcd4ce",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6dbf03f3-1255-41d4-a5a7-7adac87d5e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8631a9d7-0833-4a0e-ac73-1003d8dc229b",
        "cursor": {
          "ref": "4d8263ae-8b86-4a42-bbdb-c04119ecc6a9",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "87215149-4aa5-44a5-af0e-c83d5c9272f7"
        },
        "item": {
          "id": "8631a9d7-0833-4a0e-ac73-1003d8dc229b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "627188a3-39ae-4c5e-932d-d6e647e35b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f385122-d56c-4dbd-bae1-5c3baf9bbbc0",
        "cursor": {
          "ref": "e2ffbe9a-08b2-496e-989d-41d8844ad5b5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d26c0d10-c41d-4288-b314-565ea1228d69"
        },
        "item": {
          "id": "8f385122-d56c-4dbd-bae1-5c3baf9bbbc0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "386d7c69-e220-41e6-9dc1-6735c9291ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d877700-7f03-42d9-90d6-64f906c9e0f8",
        "cursor": {
          "ref": "dd646e45-8e54-4fbd-b846-771436d46974",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4539dc50-72b2-47ab-9700-829866ad3444"
        },
        "item": {
          "id": "8d877700-7f03-42d9-90d6-64f906c9e0f8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d0e1d9b4-539f-4b83-af17-4f80d9a87f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba434457-e0a5-448c-9287-66b0a0033399",
        "cursor": {
          "ref": "4fdb4580-e573-4d66-a875-4a52a6dfec12",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2b77e776-19bf-40a9-b7f2-e3448c44bdcb"
        },
        "item": {
          "id": "ba434457-e0a5-448c-9287-66b0a0033399",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "00afb50a-51c7-4195-b7a3-4cbd9e5fe568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74350e88-1af4-44eb-b5a8-0d592e46e3bb",
        "cursor": {
          "ref": "e6b94c8e-7591-4da9-af43-4b1131ed7881",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4759f3af-422b-49db-9449-b634803a068d"
        },
        "item": {
          "id": "74350e88-1af4-44eb-b5a8-0d592e46e3bb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d2d193f8-e74c-4cd9-9ce2-8d20f2f0755a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d33e69-b617-42bf-8c7a-cb0109b42dc2",
        "cursor": {
          "ref": "2f4628a0-5595-4234-ba1e-9c3c3e9679ab",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c1eedd54-586a-449c-a0f9-e5f8f0d00256"
        },
        "item": {
          "id": "31d33e69-b617-42bf-8c7a-cb0109b42dc2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "86d15564-710a-4fdd-b941-c6ad6c1213df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df2e1c4-c515-46da-83a2-fd7b79799f02",
        "cursor": {
          "ref": "2c805825-21df-4402-91ae-50e613d959e5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "068b202a-0703-4a47-be86-b595e9851855"
        },
        "item": {
          "id": "2df2e1c4-c515-46da-83a2-fd7b79799f02",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "85704717-0af2-4452-ac84-f8c03e7faa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39452a0-4d98-4bfd-829c-ec4a3d7b5aa2",
        "cursor": {
          "ref": "4d19ee11-8284-4d53-8737-3798c612386f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f1080513-4466-4e10-b4c4-5e3c96451c48"
        },
        "item": {
          "id": "c39452a0-4d98-4bfd-829c-ec4a3d7b5aa2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8da56631-8df7-4ac6-ac5a-b01c96e46c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab0d6e6-1b57-48bc-b631-9a900ffab840",
        "cursor": {
          "ref": "aacd5680-722b-4c46-bc4d-21dffbc11b40",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "aeac0d80-bb85-42df-a35a-ced1569022ef"
        },
        "item": {
          "id": "dab0d6e6-1b57-48bc-b631-9a900ffab840",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4377d893-0405-4105-ad8d-01c37b60dbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261de8bb-41ae-46cf-87c5-bd0a2a5c9219",
        "cursor": {
          "ref": "d329791c-6307-4abc-953f-04f70adc3d80",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "11d2a8aa-6950-447f-b993-fa0f6479b5ac"
        },
        "item": {
          "id": "261de8bb-41ae-46cf-87c5-bd0a2a5c9219",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bd1df193-b3c7-43b5-b2d0-db67041fcf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8442636e-49ab-4fa0-b9dc-367a2f581084",
        "cursor": {
          "ref": "c49ac5f4-9a23-4b9a-9c27-749062708503",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c429af3a-3450-4cfd-9f51-0fa745afe036"
        },
        "item": {
          "id": "8442636e-49ab-4fa0-b9dc-367a2f581084",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0f77a440-eb90-47b3-aab0-6339c0899c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65642c7-a246-466b-aef3-ffc29a7a9a2e",
        "cursor": {
          "ref": "53207e35-9ef8-4cdb-b8d4-3d5364d0f1e7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "32953466-3001-46a4-b923-f38adf3291ca"
        },
        "item": {
          "id": "b65642c7-a246-466b-aef3-ffc29a7a9a2e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ed089268-fdc0-4f95-abe0-724f08ffcf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec79138-32c6-4c22-9482-1e33e996a061",
        "cursor": {
          "ref": "dd7b25b0-f304-4508-a758-70ce84a4ae15",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1a9714a9-70d3-47ee-b7ac-76fb4ebf1ace"
        },
        "item": {
          "id": "0ec79138-32c6-4c22-9482-1e33e996a061",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f18d565e-f6d8-4ea3-b388-2ec0e27a58f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0403af-351e-4d80-a1c4-0b39614c4f58",
        "cursor": {
          "ref": "4a43e3b0-a927-4199-843d-9bf56f33bbc4",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c413262b-1d3d-4625-99f4-7ddb5d830343"
        },
        "item": {
          "id": "3a0403af-351e-4d80-a1c4-0b39614c4f58",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0a651313-f3ae-434e-aa0e-93f4f3b59ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ab1114-f0b6-4617-8760-16a0a8801bca",
        "cursor": {
          "ref": "fc4b6d4d-ef3f-49ef-9871-76d5997ff425",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6c218892-adb1-4866-b9f0-02d208c635c0"
        },
        "item": {
          "id": "92ab1114-f0b6-4617-8760-16a0a8801bca",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fbe3d4ed-aac3-4203-9629-0815f87de82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fc35fd-aff7-4dc5-b576-1aecedf97e6a",
        "cursor": {
          "ref": "4ce77572-65a7-43a4-af0e-9e3c1d726fa7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "93015a19-b954-48c3-af7b-a586b7612271"
        },
        "item": {
          "id": "51fc35fd-aff7-4dc5-b576-1aecedf97e6a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6fc50e2b-b03c-4bf0-8b90-f1542923144a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20e5034-acc0-4604-8bcc-af9ede330839",
        "cursor": {
          "ref": "e67abbbc-0f89-4975-be29-65b8437f351c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e6e49f13-d826-4234-95c3-0d0f8f7afe6b"
        },
        "item": {
          "id": "c20e5034-acc0-4604-8bcc-af9ede330839",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c6b7a32b-24d4-4fce-80db-12bba7d18cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80eaaf22-a249-44ea-bcde-ca43672bfabf",
        "cursor": {
          "ref": "042974b2-094e-45eb-9d28-7709c597e5a7",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "57e56cfc-76ff-4438-8221-eac06d92dd91"
        },
        "item": {
          "id": "80eaaf22-a249-44ea-bcde-ca43672bfabf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cf6db706-d769-4dff-95d2-d6a61bb73e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dfb60d-d70d-4ace-8c73-aecb24062a75",
        "cursor": {
          "ref": "d5ca739e-4639-41c1-b780-55879470eaf7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9b761ffa-5011-4742-9f83-030cecacd0a6"
        },
        "item": {
          "id": "25dfb60d-d70d-4ace-8c73-aecb24062a75",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a8c07693-6a0e-4ad9-91e8-359a52551587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a237e9f-58db-4c3c-b17f-7bca75c8c217",
        "cursor": {
          "ref": "77791974-c938-4b9f-a26f-1fbccbe5ef8a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "af9f4eaf-a3ec-4ac9-8086-4b28fd33da03"
        },
        "item": {
          "id": "4a237e9f-58db-4c3c-b17f-7bca75c8c217",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1b272eae-527a-42b9-9ce7-0cec0faa8380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1028f030-e03c-48f3-99ab-e47b5a9eb7e3",
        "cursor": {
          "ref": "49beb889-c75f-4f62-b63f-671b9418b2f4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e08327c0-faaf-45a6-8e7e-2612b8b99a79"
        },
        "item": {
          "id": "1028f030-e03c-48f3-99ab-e47b5a9eb7e3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b5621437-245a-4a06-98b1-0a96c4e840e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03afc91-964c-4d5e-a643-c11fe625fa8a",
        "cursor": {
          "ref": "f9b27a89-fc39-4aea-85d8-560bbb8c1980",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d2b02599-5c3b-4ab1-97c1-3faa5ed6b3bb"
        },
        "item": {
          "id": "b03afc91-964c-4d5e-a643-c11fe625fa8a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ad0a3b0c-b9e6-4528-884d-86747afdecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78860abd-c920-494c-beae-a55545699812",
        "cursor": {
          "ref": "af32b2cc-bc0b-464e-87ea-9fb370c4f9f8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "405f5aeb-b08c-4262-9527-d07eaab754c1"
        },
        "item": {
          "id": "78860abd-c920-494c-beae-a55545699812",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7c3ca931-5628-4bdc-88af-dbf0c135b2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc3951b-97d6-42de-92e4-f563b964b391",
        "cursor": {
          "ref": "ad70f522-d303-4ba9-bf10-48d6be648d7e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "efb8665d-d83e-4d27-8879-e58f0aa2347a"
        },
        "item": {
          "id": "adc3951b-97d6-42de-92e4-f563b964b391",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6c284f00-c839-4693-8c28-022442826554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0103238-204e-41eb-b0fb-879352c3df48",
        "cursor": {
          "ref": "d8d6f15a-8db8-4559-83e2-468895abb35f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "975d1d84-3272-40c0-8c45-961b62dd6667"
        },
        "item": {
          "id": "f0103238-204e-41eb-b0fb-879352c3df48",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aa73cc65-6862-4930-8ed9-cbac2e1132af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac66fec1-319a-4893-aac0-ab4cbe42fe95",
        "cursor": {
          "ref": "baa7e485-4954-4ebc-a730-d3dee8837eb8",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6ad9f66a-ffa6-4fe4-bce1-a206487c4731"
        },
        "item": {
          "id": "ac66fec1-319a-4893-aac0-ab4cbe42fe95",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4b81d218-7dfd-4c60-8b5c-d978c1925a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b2f286-bd98-415c-b2c6-b9b85bab571f",
        "cursor": {
          "ref": "8c31217d-fdcf-4fce-8683-6fafc1971f43",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5482ea73-de26-45b6-a009-53b3f4d14dbd"
        },
        "item": {
          "id": "f5b2f286-bd98-415c-b2c6-b9b85bab571f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "08fe8354-f62d-4cec-8160-3c5ed48b6b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20fe3fa-56e6-4e06-8e43-98c4223e7d5e",
        "cursor": {
          "ref": "ebafcb41-7b75-4f29-83d0-b3ce50acf334",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d7f14336-feeb-43e9-a7e0-1ec2baad52cd"
        },
        "item": {
          "id": "a20fe3fa-56e6-4e06-8e43-98c4223e7d5e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6875bde6-f2b0-45fd-aa88-b71b5046849e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c254ad-9c71-472b-a182-8f30cd490496",
        "cursor": {
          "ref": "8af878bd-0b1d-43e2-92ed-14ec1e9ab44e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5189d820-7cee-4bc6-8087-fb7ccfed8ae9"
        },
        "item": {
          "id": "e3c254ad-9c71-472b-a182-8f30cd490496",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "64d86b0b-3585-48ce-9801-1e9ccd55e227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49ee606-903e-440a-baf1-f44b3fe34d63",
        "cursor": {
          "ref": "79e7735c-a962-444e-9e74-b315b158a10f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a4e3553f-8f56-42c5-802e-6436398a45db"
        },
        "item": {
          "id": "f49ee606-903e-440a-baf1-f44b3fe34d63",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f6d24d61-6956-4846-a8fb-7196d1d776f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b867f6-75f1-40a9-9cea-f30fa9d3090b",
        "cursor": {
          "ref": "4c98e3eb-0997-4765-8010-483be5de538a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a8e8eb5b-b055-49e3-bf57-deabf4f6de81"
        },
        "item": {
          "id": "24b867f6-75f1-40a9-9cea-f30fa9d3090b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e7d0ca55-f545-44d5-8f8e-a3af54c32af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6e15c7-08c2-4ab4-97e9-562ce81d5a41",
        "cursor": {
          "ref": "2a7e0c27-efeb-4de2-ad13-ec29932bfe5d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5bc4f9ed-d121-44b8-bf89-b664dc38dc2f"
        },
        "item": {
          "id": "ab6e15c7-08c2-4ab4-97e9-562ce81d5a41",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fae3a339-58ed-4a32-b70f-dd624075a547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70162101-cb99-40fa-8d72-9ebfd0c515be",
        "cursor": {
          "ref": "0b2a8d70-665b-43f7-992c-e97b3a65891f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "244c508e-f93a-4ff7-9f24-d20fbd18809f"
        },
        "item": {
          "id": "70162101-cb99-40fa-8d72-9ebfd0c515be",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0351ae21-695a-48d1-bd3d-6e2223798c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f73e352-7ccb-4b71-bd07-67f5d6ac95c6",
        "cursor": {
          "ref": "e1ba4de9-6326-4233-bb43-1114012d0d31",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b4e4d75c-203e-4083-ad4a-3246864b0708"
        },
        "item": {
          "id": "4f73e352-7ccb-4b71-bd07-67f5d6ac95c6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4d7774f2-6eb8-4a3a-87a6-7d16d6432d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e65b43-e8b1-47d4-9fc3-c9d81ff5877d",
        "cursor": {
          "ref": "81bdf886-ac79-48a1-9397-7a87fd59ab74",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "32f53ea6-5d08-40cc-8204-614e5066830b"
        },
        "item": {
          "id": "f2e65b43-e8b1-47d4-9fc3-c9d81ff5877d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c4d63cdc-919f-4d56-a61f-c4451564db10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111dd764-5147-4c17-ae4d-a505d6431981",
        "cursor": {
          "ref": "318ba96a-a0c2-4b36-87d5-3b9d15405a60",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5f6a8428-523b-4e50-94b0-590e266ac162"
        },
        "item": {
          "id": "111dd764-5147-4c17-ae4d-a505d6431981",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ab33833c-c52a-4176-95fd-e3fc7e946ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3a9df0-afca-4f41-9444-f3fa830207ea",
        "cursor": {
          "ref": "f67542ea-3e9d-43e6-ab4b-72ac82db7737",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ac671ce9-05ec-4de6-8c19-3e59df741074"
        },
        "item": {
          "id": "3f3a9df0-afca-4f41-9444-f3fa830207ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9bea9dc5-340f-46d9-a3e6-9beedb350c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bc2087-273e-4b11-88b7-51118dfe9f7f",
        "cursor": {
          "ref": "ca9581f6-7fbd-4a7c-9579-b4d2ebbf00c9",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9c32610d-e151-4ffe-b3ff-527fd1330317"
        },
        "item": {
          "id": "41bc2087-273e-4b11-88b7-51118dfe9f7f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "68f8e1c5-acce-478d-bda1-425e904d3fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419da68b-317c-424d-a486-dcb138470704",
        "cursor": {
          "ref": "a1f5204b-214b-48af-83f6-dc1dc7ecd2a6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "82d4df9f-9d82-44b5-988f-bdb37a198a0b"
        },
        "item": {
          "id": "419da68b-317c-424d-a486-dcb138470704",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a4ffa3f9-8c5e-43af-8382-3e2e32ad40b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4795fe7-06ee-43f3-a440-481b871aa86b",
        "cursor": {
          "ref": "9d6ac253-af71-455f-98a0-5bce683b555b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "27b0c6ef-0f58-4f9a-a1bb-99adec115be3"
        },
        "item": {
          "id": "b4795fe7-06ee-43f3-a440-481b871aa86b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9a98c7e8-3917-484e-bc4b-d881eba7dda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b26988d-3113-4ea0-a87e-842b294b46bf",
        "cursor": {
          "ref": "6c782361-82f5-49cb-ad22-900e8ecd6c13",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "94d4314e-a6f7-4804-9a22-ab951e7cb9ba"
        },
        "item": {
          "id": "6b26988d-3113-4ea0-a87e-842b294b46bf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f99dbd9b-75aa-40e2-86b3-2a63956899c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc5c519-bbd8-4d2f-911b-0373cf57b163",
        "cursor": {
          "ref": "87d6720e-a946-4e5d-a023-025ad61380e3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7111c2a5-9489-4b2f-a015-a329071e331b"
        },
        "item": {
          "id": "cfc5c519-bbd8-4d2f-911b-0373cf57b163",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a7fc9b43-9de0-4b7e-a36b-c99003e85bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f825b6-ba33-4577-9f56-63585a6e296f",
        "cursor": {
          "ref": "96f46ea0-81a2-4dee-a581-3e153a500c31",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a2d07b8c-e814-4370-a2ab-1558430c38bb"
        },
        "item": {
          "id": "10f825b6-ba33-4577-9f56-63585a6e296f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ba3c2d64-37b4-4532-af5b-4327a5257d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac0be65-7a6b-44b4-a194-341dc0afa5c9",
        "cursor": {
          "ref": "13dfce57-c4f5-4ac8-b6b8-67ef99123ac3",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e97fca43-8d0c-4fc0-b83c-87d1e471c666"
        },
        "item": {
          "id": "bac0be65-7a6b-44b4-a194-341dc0afa5c9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d89028d5-245d-49a5-aa13-1de241f620fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862af88a-c96c-462e-8add-b5a9f4d493a5",
        "cursor": {
          "ref": "0b0f007b-542b-4a95-acaf-a51977058f14",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f3428e6a-39a8-47f6-a815-d54c170b5882"
        },
        "item": {
          "id": "862af88a-c96c-462e-8add-b5a9f4d493a5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "25317ee3-289a-4e0b-a682-7155590af974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8b80ac-4cff-43b5-b869-f50e6791dc6d",
        "cursor": {
          "ref": "c55cf4c1-c57b-4e33-8aa9-966f98d41dc3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ceb5ce27-8bc3-41b4-97ae-fc91212a9fe5"
        },
        "item": {
          "id": "4e8b80ac-4cff-43b5-b869-f50e6791dc6d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d8aed77b-06fa-4415-9e8d-716fc7451d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d44e6dc-546d-4a91-bb48-59b9d724c276",
        "cursor": {
          "ref": "077edd5b-2b1e-4eed-b956-919aa8923314",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cb5e9532-bb5c-4845-bfe3-8a9e69b70e00"
        },
        "item": {
          "id": "1d44e6dc-546d-4a91-bb48-59b9d724c276",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "105cd124-2534-4967-9850-437757ad69fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ccf71f-1ce7-4d49-8b1a-bfcadfbfcc54",
        "cursor": {
          "ref": "b68ed531-ece3-41ee-a6cd-83f73dedf29d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ec3caf4f-6df0-4d7a-bdc5-ec8469f2d34f"
        },
        "item": {
          "id": "d8ccf71f-1ce7-4d49-8b1a-bfcadfbfcc54",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "40a21b76-7421-42f0-b86d-2f72b542f2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6002809a-2095-42f8-bc81-3b1dfea1740c",
        "cursor": {
          "ref": "ca50f380-2457-4091-a580-639cfcec47e2",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d0dc3dee-9fbf-4a27-a8ac-8921b7fcfa7a"
        },
        "item": {
          "id": "6002809a-2095-42f8-bc81-3b1dfea1740c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a5411533-d583-41eb-a421-1b068fa95f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc73ecf-e825-487b-b728-b0911d2ae26f",
        "cursor": {
          "ref": "f78ef1a1-e75f-4ddb-8b60-0b11fbbf98dc",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2ee68e2e-152d-4c4f-a6e3-483a69933b9c"
        },
        "item": {
          "id": "acc73ecf-e825-487b-b728-b0911d2ae26f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e7244483-1cec-4159-8dc2-436fe12fa058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8c3cdb-bcd7-4c07-a890-340f933196c4",
        "cursor": {
          "ref": "a46acabb-b739-46b4-a44d-a5f6854d1933",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "af381091-15d5-46b6-937c-8678a25e0c40"
        },
        "item": {
          "id": "6b8c3cdb-bcd7-4c07-a890-340f933196c4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2e4910cc-65d2-488f-affb-3118ced05861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b26447-ac6b-4a39-b541-ff7b2a3628c5",
        "cursor": {
          "ref": "656f9647-a7cc-4913-9644-2467bf7bb10d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ffc33ebb-a2e1-47d2-9d83-4fc6f1aca340"
        },
        "item": {
          "id": "19b26447-ac6b-4a39-b541-ff7b2a3628c5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cd05f490-4742-4f68-b004-d3ab0a5a301d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18938fa-d004-4668-864b-073ff3b6bcad",
        "cursor": {
          "ref": "059adddc-03d9-48e3-be52-416bc39342ee",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b9f52a56-cc5c-4414-9d21-0a4abe324e32"
        },
        "item": {
          "id": "f18938fa-d004-4668-864b-073ff3b6bcad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "43db7248-eb6a-4201-9c59-64479b356aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b6212b-6be6-4708-b2cf-8c3b689ce52d",
        "cursor": {
          "ref": "057b043f-423d-4e19-ae68-27b3b3be7260",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dfbb2578-46a4-4cf7-9a19-ae59a6d3aa31"
        },
        "item": {
          "id": "81b6212b-6be6-4708-b2cf-8c3b689ce52d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a9ce18d3-ed4c-4e50-acbf-6536621618be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d6a1d7-f4db-43d3-a209-5ce6e63926cf",
        "cursor": {
          "ref": "fef7859a-f241-497a-ac66-e036108f1260",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "872376e9-409f-416f-8e0b-e183071a499e"
        },
        "item": {
          "id": "59d6a1d7-f4db-43d3-a209-5ce6e63926cf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "52a51b2d-2ef2-47fd-a41b-028532054038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e102fb7-5525-42f9-983e-89eab38e6e7a",
        "cursor": {
          "ref": "83f0c6ba-741e-446f-a6ed-9acdfdd46c40",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fdd4d9d0-7ba0-48a9-a345-4d6b362a366a"
        },
        "item": {
          "id": "4e102fb7-5525-42f9-983e-89eab38e6e7a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "81b4fbd5-6cb9-48f2-8b41-d7f3255ed9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6f7bc6-84e0-4931-8b5f-c4829445a776",
        "cursor": {
          "ref": "563282d6-a4b9-4ea9-9978-4ed20e74296b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fd370c15-2c82-4fd9-993d-4199f50215e5"
        },
        "item": {
          "id": "6b6f7bc6-84e0-4931-8b5f-c4829445a776",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "07d669d2-4f59-4b8d-8ddf-d8e79a27729f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567a0f7b-9d10-4b07-896a-03dd1f7d4723",
        "cursor": {
          "ref": "ebd20514-2359-46a3-9c12-4d8603c62f5c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f0baefa6-978e-45cc-bdd1-a303570b6604"
        },
        "item": {
          "id": "567a0f7b-9d10-4b07-896a-03dd1f7d4723",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "64bc499c-d435-4ac1-8f7d-973bbce8ecf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5701d3-9a7e-46a1-acd9-0d5527bb11e0",
        "cursor": {
          "ref": "7fd642d3-d841-470f-a519-44c1a069aa20",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4a989f76-8659-49eb-a9cf-511008061a69"
        },
        "item": {
          "id": "fd5701d3-9a7e-46a1-acd9-0d5527bb11e0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e11ca0b-e155-433a-80ed-57483adf6f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7dd2fb-3b31-4dd6-a77c-94eda2c05926",
        "cursor": {
          "ref": "6a6e9683-7fde-4397-9706-6a8ed19bd97b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1960ed37-af4a-49e0-930e-d89f4e55b60f"
        },
        "item": {
          "id": "8f7dd2fb-3b31-4dd6-a77c-94eda2c05926",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6d8e74c8-53da-4921-a428-f4b11e613fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909bba56-cbf9-4c7f-90d1-d3fef97b2127",
        "cursor": {
          "ref": "2d2cda9c-b7a3-49a5-8fe5-55bb8198f6e4",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "94f4d763-7737-438c-9373-02de44435b42"
        },
        "item": {
          "id": "909bba56-cbf9-4c7f-90d1-d3fef97b2127",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "61a01419-8e49-455e-aa3f-49b60db2c511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db93c01d-36f9-4254-8764-5bfec5a9ae27",
        "cursor": {
          "ref": "3bb911f6-d0f6-4781-802c-bca0ffaae580",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e38d4f22-d410-4412-9efc-6930efec9daf"
        },
        "item": {
          "id": "db93c01d-36f9-4254-8764-5bfec5a9ae27",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0a0ea9a8-a120-4dc1-9459-88002eb6e57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5489dae-4610-42e6-acfe-f1332c5aace2",
        "cursor": {
          "ref": "dc3816d8-4a1d-4773-802e-52c7e57b4872",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "02f56626-428c-4d02-a1fe-d3b756937b0b"
        },
        "item": {
          "id": "d5489dae-4610-42e6-acfe-f1332c5aace2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "66599aa2-09a3-4b88-8c08-b84f21d72afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a558508-5a69-4f03-8f66-428b040297ba",
        "cursor": {
          "ref": "d2b420ab-bb12-4864-88ce-a08c17c974a2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1ce014c7-8ab7-41de-be0e-2e3b59d695ed"
        },
        "item": {
          "id": "9a558508-5a69-4f03-8f66-428b040297ba",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "109812cb-981f-499e-9e6e-49f2e06178b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56ba822-e943-409c-a20d-bf97d62bb050",
        "cursor": {
          "ref": "e8d0575a-2e9c-4a2a-b5ab-91dd2b604bbc",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "325ba1df-abd6-4170-8b75-fcd6c750d5b4"
        },
        "item": {
          "id": "d56ba822-e943-409c-a20d-bf97d62bb050",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "75d480ec-2a36-4efd-8f82-2b94fdaeccc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e619acd-de00-40ee-aa33-02390692c8c0",
        "cursor": {
          "ref": "e715be7c-8493-4672-9bcc-05dec6d00e3d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "12ae09a8-c652-49b4-a9f4-1fa42acd85a4"
        },
        "item": {
          "id": "3e619acd-de00-40ee-aa33-02390692c8c0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8f594f56-5f46-4668-a4b1-ef586d872dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27737c59-c59a-44a3-bf37-1c6c5fcc40df",
        "cursor": {
          "ref": "ac899618-5685-4efe-843e-d959087dc8c4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e9bcb894-e16c-4cd9-94e2-5dda8cc4442d"
        },
        "item": {
          "id": "27737c59-c59a-44a3-bf37-1c6c5fcc40df",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fa580b2f-6afe-46bf-866b-b353acbf920b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9972e8d-b137-47cf-9cbd-41f59858c5f8",
        "cursor": {
          "ref": "b2840234-719b-457e-af4f-fc5b3af971e3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d002aaf4-50c8-4632-bae3-ac91ff710a7c"
        },
        "item": {
          "id": "c9972e8d-b137-47cf-9cbd-41f59858c5f8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "49fd3d86-d50a-4bbe-82cb-ea7838a9c2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9518e473-2f2f-455c-960b-b35a46913b4f",
        "cursor": {
          "ref": "22e288b5-57f5-4c65-a793-a14bc0b14794",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5e8e7c60-05b1-4671-a5b0-c38b641de408"
        },
        "item": {
          "id": "9518e473-2f2f-455c-960b-b35a46913b4f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e18ad01c-fc2b-447d-88eb-c0f2f284c341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c9fcfe-f625-40da-a8e5-9d5aecf786b4",
        "cursor": {
          "ref": "450ae702-1013-46b1-8bcb-58e5b4cb14d8",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0a19179e-dc72-41ec-9f20-3a85b5048142"
        },
        "item": {
          "id": "f7c9fcfe-f625-40da-a8e5-9d5aecf786b4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d01aaa90-b2b4-40f1-a9cb-056e6e7f3f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd631ea0-2545-46c7-82d3-e4bd490eb4b2",
        "cursor": {
          "ref": "f4b45fb6-e921-40b7-9554-14848c3aa493",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "22a5e0c2-a34b-46d7-8057-365925fc300a"
        },
        "item": {
          "id": "cd631ea0-2545-46c7-82d3-e4bd490eb4b2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e65bc302-6581-4350-89dc-4536a748a307",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342c55ab-f13e-4ec7-a462-60aa9e714f51",
        "cursor": {
          "ref": "463c5deb-5950-40a2-9800-07992309ad9f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "da498b54-be59-4cc9-8e31-62e8305ac0a7"
        },
        "item": {
          "id": "342c55ab-f13e-4ec7-a462-60aa9e714f51",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a1352430-cae1-4e08-9bdc-a512fdc3eb09",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2637c1f-785d-4e65-b6c6-709a471136fe",
        "cursor": {
          "ref": "fa530603-e396-4bc3-89ec-113386a8057b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5d96be53-5fea-4b84-850c-80a7c4735e52"
        },
        "item": {
          "id": "f2637c1f-785d-4e65-b6c6-709a471136fe",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b3249565-49b6-4cbe-ae8c-2c99702da001",
          "status": "OK",
          "code": 200,
          "responseTime": 3951,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee9fe62-b118-4adf-a53a-d3b3d843a45e",
        "cursor": {
          "ref": "b7614861-b557-42a1-83b2-a0536b75c938",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "22fdff29-9548-4647-a946-cd7074c92c3b"
        },
        "item": {
          "id": "1ee9fe62-b118-4adf-a53a-d3b3d843a45e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "00e066ce-eb8b-4dd8-87cb-562d49b3f656",
          "status": "OK",
          "code": 200,
          "responseTime": 2037,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "914a4eca-cb20-4d1a-bedb-64d18a549692",
        "cursor": {
          "ref": "c5322817-982e-493d-ab69-2a5b9c006672",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "26249013-16bd-426a-867a-8cbd55b2ea50"
        },
        "item": {
          "id": "914a4eca-cb20-4d1a-bedb-64d18a549692",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "874fc668-2645-43ce-8f7b-e96396796b34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914a4eca-cb20-4d1a-bedb-64d18a549692",
        "cursor": {
          "ref": "c5322817-982e-493d-ab69-2a5b9c006672",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "26249013-16bd-426a-867a-8cbd55b2ea50"
        },
        "item": {
          "id": "914a4eca-cb20-4d1a-bedb-64d18a549692",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "874fc668-2645-43ce-8f7b-e96396796b34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a7d338-8b8d-4381-8dbe-fd0c2c2a9b0d",
        "cursor": {
          "ref": "ea497b6d-9ac5-469f-8f41-f0f75f5f43ea",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c2ade564-0dee-4f33-a0b4-84282367d4c8"
        },
        "item": {
          "id": "b9a7d338-8b8d-4381-8dbe-fd0c2c2a9b0d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "95c49f16-63a3-4d77-adea-c858155172e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec49967-2d96-459a-a89c-c3c957f24b18",
        "cursor": {
          "ref": "d68e626f-46b0-4c69-bdba-6148cc7fb5fd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "be8420f2-b581-4f40-b73c-347b53e03f49"
        },
        "item": {
          "id": "9ec49967-2d96-459a-a89c-c3c957f24b18",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6088ea04-7580-48a9-9971-564da2ecb003",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}