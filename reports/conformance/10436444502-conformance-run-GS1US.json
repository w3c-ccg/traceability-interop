{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1a255b5b-0fbc-44d3-a2b0-68d34465e9c2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f0eda0df-8616-4f8f-aa57-6d4f058f549e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05f1e5f6-9b00-40e9-9224-c97868b9e132",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ebe95f1d-e512-4ea3-9cd5-3afd08e38a95"
                }
              }
            ]
          },
          {
            "id": "9ebec8c8-c29b-458a-90d1-e8b6d9e4490d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3114fb8f-f68d-4340-97d3-5b5283a7ff28",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1523e586-176a-4649-8928-750cac42178b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fe7f0752-9d40-4659-a458-3fed137822d6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "eadb179a-802c-449b-a375-0610478170d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0fc56a96-96b1-49dd-8404-f61ea140fa6a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c4021b5-86f7-4fc9-b80a-4281708298b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbfeaedb-b6e9-44da-af1a-a68f94e5bb8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "773b3135-0efb-4499-8989-2fe35f2f3892",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a216ea1-4160-4707-b771-8fcb23d74b7e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "acd8a0ea-8586-4ff8-857c-634f71b4cd00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e070fd47-b27f-40c4-b0f3-dd3562fdf13e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7df48f8b-b49f-4ce3-8573-e93fd11f4789",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b950768e-ca92-4715-9d1c-74edac5bf605"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2be8856c-9669-47b8-aded-095504f3d596",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c336d700-76d9-4504-b94d-05ae843e67fe"
            }
          }
        ]
      },
      {
        "id": "f5fa2bd3-2ec8-42e9-bb11-cf0a840efb68",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "91dc5123-5e04-4217-b5a1-28d9eedc55ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ab8a7df-42e9-48f0-8cff-4480b60b4499",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f277a44-e6f4-4d91-90af-f662c44f66ad",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e11b77-5ade-48c4-b4e8-ab17af9e1384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68386a86-7dda-43b6-b11b-84e216b542df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5605885d-f65c-457a-8257-8921a3f6a6e7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a37e3dc-dd30-4dd7-83b6-4ef62359f004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4f13ab9-39c9-4882-83a9-df4d94362262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869b48f0-8ddc-4298-93ce-d841708249b4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071440e7-3db2-42e7-b0cd-5ecccc296901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "340c0c99-9a9d-4ba7-8c2f-a8a0647465ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3369570-b918-4e63-99cd-75871a71f1b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee67dbf7-d422-4745-bf55-a89b825899e0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e40da67-8e26-4170-b2f4-4adedd99574a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75b17110-f56f-4972-8012-4afccd8355ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fc82b0-977c-4fc7-b785-982e77209410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecba792-f466-4b20-ab88-47a999b783a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "54853329-595b-4e02-b4b4-15f74c6d24ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1d220e0-544e-4bd9-ab10-9fb47b566b29",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86c7baeb-f122-442b-a69b-34a4abd53aa2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "eb9e0ba2-9a3a-4613-bb5c-b92f3dea2758"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b1a116b-2bb9-42d1-b3d2-b6b1e8d771f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "15047082-d87d-4d44-9672-8e35ea436bcf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6361557-d4d7-415d-b023-895905824399",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc30e1d3-b5f2-4156-bd03-ed91e4497cb4"
            }
          }
        ]
      },
      {
        "id": "f5c96fae-456e-40b2-ae7c-6b5e86fb27bb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3498c1bd-7553-4977-b0e7-14e67047af92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b9ee8f5-cb5f-496d-b96a-de20acb086a7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "58e29208-2875-4950-87cb-372a3dc41642",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0941f4d5-513b-4ca9-ab76-e5f1c026c50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db32451f-bfd2-4a5a-b9bd-912894cadeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8b7284-9a31-4fc7-b8db-579fc7329b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a868478b-840a-443d-abb1-72686d58ed70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9663d4-451b-48eb-94ca-8dc105ce1f30",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e347ce4-8b3c-43a3-855f-177d12848af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73cea09-d79f-4cb4-b883-3f772b89ae07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5057b321-2342-4984-9251-1c9d7beefe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63377811-0784-471d-80b1-9079a611edb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54546c67-7e8e-4921-8070-a1ebe1413976",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cd48c6-2ad5-4049-862e-e638b0a514eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40568caf-26e5-46c1-8667-141e288d4667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02975897-f811-40be-99b3-5869e8e17c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0be392fb-c5c7-4d48-a5e6-a0053a0b9157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00939dde-ba1d-4d0d-af1c-dd319b87634c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5df6a2-8c2e-4510-aabe-d5599e78b04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3682d0d-5ed4-4239-991d-c211efd26e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecfdaab-8b88-490c-902b-315332607bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "224ce8c2-028a-4774-b465-345e682133e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177a370e-a07b-46ef-b04c-cc6c6522bf1f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f02f02-1d82-4737-bd47-ae0eec333b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fe726b-a7c1-4fef-83cf-e778a0227780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72cbc79-64d3-4ecb-849e-d3869552ef85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deb60c8c-625d-49b1-a098-94162e51819b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c9559e-7871-4678-82ea-a90b49cfca04",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102a367b-2b47-493c-bc14-383519b2deb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b384e727-c2bf-4294-a258-b9f814dd2151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cda4a5-3c69-4cf6-8b14-8496f85b622c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e1b833a-738d-4c41-90f9-e1c69baee991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bd525e-be39-4571-a37c-dd4c42a7d65b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb1ca53-bcf4-48f8-9615-d91e54916b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a286d434-2a59-445b-8875-1fe7bcbe4c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849224ac-7d9b-4db4-85e8-f14aba843ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a82089e5-6c89-4fe5-a2a1-2388f4e12cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d546cf-d073-4f21-8690-d0416353a7c2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5471931c-65fa-464f-b25a-cdcd405611ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce2edf4-fb1b-454d-8d7a-43b97455e593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ea3407-a2e5-497d-a768-b809b6bd715d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "419d58a4-6154-41e3-bd8f-4c9a11fb7dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b136358-cc95-4285-861d-41513afab639",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57d328d-441d-4e8f-82a3-5adca853a9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5913e5-7361-45e6-97ab-916c78cefa7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f992deb8-642f-4b44-9da1-e8c92a838de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1528974e-2caa-43a0-9376-e15594d5e43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8f1191-140d-4204-b05a-7d2c4d410e09",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941c464e-c987-4181-854e-e52e69d057bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5252523f-2552-4d40-a9a8-fe5b8a187fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2105250-01d8-415d-a6c6-f4c25774c796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce63217a-4db8-4a31-a425-9dfd917b855e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7129144-601b-465f-a8da-a439da020748",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f880a1d3-0e3f-49fa-ad86-5e310b7b6a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f527fa-0c5c-4b06-92a5-dd28f271d15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cceb317-16fe-4cbf-9269-c9abbda45c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbd33c4f-8130-4644-afa5-f5cf14f8b16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de390953-09ca-4e57-a797-91519857be3c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd2c709-93e2-40c6-b0d8-1a4bec3d286b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d379d90-36ba-4a57-a998-a5237fe099f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d84a83-96fa-4a52-b10d-e888ceae9789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "360dc477-fbdf-4ed0-8878-92b05e99ef18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f349aaa-d153-40bd-8b43-ab6931137881",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851328e0-e4c4-44eb-8002-bf3bca8be2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07f81a0-60e5-4f42-a30f-90706afc7fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6ef320-2827-4ac5-8d3a-64527c0384c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb532c3e-3464-4094-b7af-331bc9795abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcb8bcf-5cbd-4082-b6e4-f0bce6e277fb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a034dda-4812-4d22-bd29-7adacb766e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11009a25-c625-410e-89a8-2be5f765053a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e90654e-e9d3-4087-8632-fd2f671f3286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04236d6a-6318-4cad-85b8-e1e62d43e721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b11370e-31a8-4bbc-a88c-22ccbccec3f7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb089a78-537d-4873-8ece-5a402dd284eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf711e5-f0b7-4543-a835-12af48cea9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d79244d-273a-4475-888c-5cf424d29478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfd478a5-b949-490b-9719-dc7d7bf6cbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8abfb7-f207-4684-87c0-4c4bc8bfc811",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41cac35-559b-417d-924a-b45ed48b7522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6de4eca-1288-44c0-ab42-8773961dcba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d4c73e-5814-4b4f-b5cb-bef7beef875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "930cc1dd-a09c-4824-8bb1-4ea6e2799de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bb13d5-fe32-42ef-8098-bdf5c9011c0a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1e0c4c-f3e0-4fb3-a082-66ea4ae17889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f35354-42c3-433f-83cd-97ed09515a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa700de-9617-4da2-a21e-5d85c0bdd631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70593948-4c8b-4e3e-8aed-e6c3643caa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad9d58f-aa38-464a-97c8-53ab2d7c4928",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f82cf6-bcb8-4756-afc4-64c0b85a99ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8106b175-cf99-4504-907a-33ff77696c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b15337-a826-44bb-985f-3078430c27f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ef37a7-fa61-45a9-95a8-11bf768e0bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cce8f9-afc7-4eb3-90c3-241cf2577885",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f57192-036d-4745-849f-c8812a30cd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253b10e9-3083-4e38-9d5b-bf63386024a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4029412-d768-4953-a5d1-6a421c79740a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4e3466-4cac-419b-a3f6-2286c3b5ebde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474e60af-dbe5-4241-bdbc-7ef26a95e858",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae78bea5-6071-4fd6-bfaa-30f4ad9bb5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57327f8-797d-4c41-94ac-6aa6fc838a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d631a452-3a63-4383-8e1b-d29de0d2f447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc8a811-4fa9-4a16-b25c-7e0ef2619470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a063cd-841e-4440-bf50-5611395e7bec",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01991d1f-c386-4da4-93a8-4689076e93e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb2254d-e58e-4bd5-bbcd-0202389a556c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bba986-9a2f-4710-a90e-e4f1a81e6964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b54d292a-80f3-4803-826a-708f3190cf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20dd012-4494-4090-a438-d6ab39065c7a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc912fc-b340-4cfe-8b10-c7c49e90af34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fba5271-8735-47ed-812a-833bebf03b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cca76f-5298-4973-8d4a-1d46642140c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e889413-2966-41fb-bc8a-fbec5fe90a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92f38bd-5013-4cc3-9ada-dfc5894e27bd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7361af8-7f4e-40d9-8c30-4156b15b2569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe70f83-3bc0-4591-ae54-8a34f2b5c921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ebd95d-dcc5-468c-9324-55ff6aa90b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2c71b5-9422-45f0-b4ff-95441a254eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f07aeac-8d51-4888-b315-6b47ee2eff86",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bc5350-8d27-46c8-9fb7-f4c6e89f02c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee34deb-27c3-48cc-b901-698ccd7a6bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1e829a-91a0-4379-8b69-5f75d73a8779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c38e0029-3821-41a9-ab04-0d668012520e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8936d0-77fe-41e3-94a9-cd6e80146c6d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5622ed76-5d9a-4b55-93c7-72bd9a200df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c87730-6d74-4025-9858-0adb8a9627f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083f52d5-bc10-40f3-906e-86b717fa49e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "426eec3a-10f3-42b9-8dfd-c12b3995a067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c06b317-8602-49f8-a9f2-13cadd09e823",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b23bf3-f56f-4ffc-8481-6c2698940a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe99e488-ed97-4296-8d79-3e1e508d7e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be75b88-4180-46ac-9972-1ab642037559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2372ffd0-1f92-499a-be4b-a5c284a8860d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae7aebe-140f-4a5d-9c34-4c29df75f749",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0e1668-7d18-44ba-b4ce-17f839b792de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac80910-eb7c-4c8a-a951-e9803be70d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f746d78-4f37-48b6-80bb-4800485eda16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aef0ef0-3e4e-4619-a9f0-c0e8912ea7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e7e730-2c44-44a7-9d50-0e6071ffe751",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da75f31c-d217-476a-aa2a-fc4b86c771f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7f2f86-c80d-4064-a53c-2f615d488537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7df412-ea39-41c6-9857-e52a22b903ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b47da279-2565-4663-9aa0-0c2436389cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55308fee-744e-4eab-874a-e602d45bcbfe",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dde886f-dc48-4bc1-bc46-aec4529c423c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68eda71d-1316-401e-bdb0-50629941800a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a1d24d-2ce1-40ee-a77c-305f16773e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d217aba-ae2d-4560-854d-8fd82ac11fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5d1271-1225-4b5d-beee-474a958e7b65",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b677f1dc-8dc8-4e5a-9790-81d961a0534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbd5201-f240-4abd-88bf-32357f3fb153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d49175-5d98-4250-9273-04ca3a93643d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "07a38f7b-be26-4ac3-a4e0-5ceaff7cdfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88f2828-d4d1-4378-9e93-8900bfd3139a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc06c82-25c5-4d9b-916b-096f73e6aac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1e15c5-e0ee-43a5-b9f9-802ad1e2e4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10807a2-80cd-4141-b234-79c505bf6cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb8037a-ad5f-49cb-ab3f-651d01ad2a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24d3033-56f1-4727-b5eb-dba9e72a01cf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efd35e3-8d05-4c94-9ceb-424970d957f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e731cf5-0f77-49a5-94fc-731bf0699ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed9602d-dc96-4ea5-b092-57d38961dce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a0a3db-e65a-4516-b98e-9c358a2c0228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aac9566-03a5-41c2-959a-617547cd955c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c39a2cd-c80c-4edd-85d6-b98fe78c8712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcf83a9-451a-4366-9d52-89d9d8c563e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6163fe3-9893-4636-a48e-b4860ef2c670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ce0f91-afc4-4433-b7da-53f77c24608d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ce1108-854a-4d84-b0d1-b0525f295202",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce125f19-e371-4391-998c-b2c7cf94ef2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9330ce-4833-4a41-b505-617a7a97432e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c96a09-73d1-414c-8768-d4cfe619d54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ae47c9-dd02-4671-81c2-4caa9f6bedb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6115aab-40f2-40e8-bc7a-4ec9db774612",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474c64c8-00bb-4254-b5b5-736151a3c88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06fd29e-3335-4d6a-90d2-cf270792cafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49938bbd-8720-48d1-a1b6-f4ecb12f3d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b715b8-a5aa-47e0-aec9-730ed69534ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567e48cd-9d09-48fa-9771-f5f393c370c1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4fd383-b9b8-4f1a-b6a3-f4e28769c3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "090a417d-de6e-432d-949b-144e4e3994b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fd8a5f-852f-48e1-adb2-8e88b66d0d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be56c503-740e-49fb-8f11-3950b3d8caab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c446ad95-cd7c-4a44-8ac5-e246b9019963",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d7933f-7a7e-4e7e-ac24-b858ab0f6734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea98f6f-75d0-4614-a922-f1294e547555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b2f1ba-bf83-4cac-9715-0a16af0f101c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f591352-f013-43c0-bc91-520b67e6141a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b67b21-a362-4806-b4ff-f6045cb9c77e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cea9d80-30eb-4bb1-898a-a38bb06b095f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb50fc5-3591-4d72-89e7-501a46cfb0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60b3a76-4cfd-42e0-a196-1d6dfdea6b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe13de5-efe6-46c7-aef2-ae9436eaa99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95acb739-2a01-46a3-befa-cceb7e3332da",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350c823a-36c0-4e9f-a78c-942dec241f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be48c357-727f-4689-96cf-ee501705d68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce2c896-a999-4ea8-81e0-79f7130c08f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5b1b47-9b5f-4be8-88e0-86092425cbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc65001d-55ac-4a2c-9ac0-f7edbfb00a18",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3938adda-c5a2-4525-bab8-81839363bd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a58a85-c172-4833-b7bd-178eef7699ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80d4405-9f5f-45f0-9c1f-e8dad6d408ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd29f29-fb9c-4d26-b0da-5dde38dc5c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fd8ba2-1f76-40c8-a91d-fbfd6c7dd2c1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5cdf72-c8b3-48f9-a41d-690d1a1c71e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e6bc91-e0f1-4996-b2ed-1b678f875972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761a0f6b-8245-4e45-a0fa-231cb3e8811a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58ffa80a-1d3d-41f6-a143-5f7f83010f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2e69a9-31f6-4a68-b180-2726be6330a4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9189e4f4-78b8-4078-a94b-206d95ebebfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ce8b2c-9eb0-4bf0-afba-215b61741639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c234289-9d25-4d18-a278-5d5e4804884a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c73fcdd4-ab7f-41cb-b58b-118b21fc3a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38342c43-cf94-4a93-9510-7f3315b8450f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fcc865-c768-4b6e-bdfa-9e66a3fa2cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e860e9-3e15-4c6c-9c73-f8970f6a2ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082f5cfa-6b3b-4403-9eb8-90397e158aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c29eaf76-1409-47fd-9801-276380f6e4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b215abf-96b6-4ee4-abac-8fd609bbb4e9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f0d137-09ea-419d-ba2c-330bb23734bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fe0ce6-b1cc-4cb4-9636-a5212f9fc4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235ddc9f-add3-4cb3-882d-e98da5916fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c853f0-2288-47b2-96a9-0ed71a54dac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760cca60-a424-400a-a4e5-7e8cb6e958c9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae561554-c6f4-4197-934c-b8d54b423274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2d89b7-673e-4351-a4c6-4d392b7c0aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2ec7b0-d7c5-47d3-8f69-6e07c0cf33c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82b2805-a404-40cc-85cd-28ad8cbb10b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a9a455-1e0b-4dc1-949d-af3af947eff9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dac7b6-30e9-4d5b-9e8d-67f745579134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954202ab-eb0f-4f5f-abfd-65ad87d62b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2d2a98-0b86-4eee-a538-f361acf2794f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d379250-4c45-4b0d-89b3-969d46d69f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71575487-5b86-49fa-93f9-ef04b18b5fbe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ddd169-1e34-4e65-bebb-6fbba2f217f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba978217-b862-459d-8db1-f3bc67d91ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989d9eed-c834-43f9-866a-ca7eb4312281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c144e10e-6555-48c2-82eb-e1f3006f3444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cdac24-3b3e-4c64-afda-684b510c6c80",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595c16cc-eb9b-434a-81c3-6002cca36473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aad6390-3d5e-40c8-a215-359a857ea33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d0b726-f953-46c1-8460-3ad9914a60e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8492a259-ab71-4a32-8f64-99ffdb2dd3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135153fa-aee6-46c0-84e5-f62c949a0f87",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff98875b-bca4-4bf0-bcee-3da8bd8df592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a210d0b-9cc5-4b78-a4de-a215f8130562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab9df60-becf-4280-9bb6-a2dd5daeebe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bcfd9c4-656e-4058-b7db-b37a81278fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d75d85c-74ce-491b-88e8-ae8810f4800f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bb061f-fc12-4355-adb4-51af964e32c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8230633a-dfce-416d-850a-2d9e28ff0feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf9f61b-8f16-46fe-81b4-1815c4cc1d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10c8707b-9ed1-4387-a9c1-cacc0c122abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f794fc32-f6fe-47cc-a1f2-c8dfc0085a11",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67adf043-1944-4844-81ab-11ce33f2e6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec28589f-aa19-4b69-9afa-0ed900f79d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904561b5-1823-4347-b5d6-899d714e6034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0be94ce2-e647-4774-b47e-7ec763ae8383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75440cd-efd8-40a6-b201-3e55648f576e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5878035-ef0f-4edb-8c11-5ab85d94219f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0feb4ea-9516-4185-ab3a-9a46231ac531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1f87b9-5963-48d9-8fca-198198a36f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6201336-b253-444b-83ba-efe00ce7f057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3697bb75-567a-4f17-bc14-6f04b50e4b51",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59f3cdd-1cf1-41c7-8541-480a819cb6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a3f30b-3968-49bf-9290-7d2d147eff47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8018333c-6549-4e18-8182-5072b86773fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02847b2e-4ac8-4a58-993e-ae33b2c22516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21b9dc9-2d88-4999-b90e-7837aea3c487",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0967f083-6ff0-4644-a566-fd9f2e7ba26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea226569-070f-476c-ad0c-a893fc597c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f01533b-0312-4ee0-b043-e54d13e4ce60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71706135-b6ec-45d6-93d6-4dbe6b3e10ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c655fdd-8adf-40ce-9fba-7e72008cc8a3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ff34cd-44d0-44bb-b2d2-1734a8e9820a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cbaab7-88f2-40f3-86ad-acb1405acaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b617f3d7-d618-40f9-b706-015fc1e2ad47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f77806ff-5b0a-4096-81e8-c4a2901290cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780f53b7-6709-4061-b48b-052176f7cc8d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3ceb14-61d2-402f-b52a-ba5504dc9eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43785647-e1e2-4387-a10e-9776476bf7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e7a230-17a3-43d4-bd8c-c833c2cd13b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "80467e2b-441e-4d42-9248-633799598779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c2c3d9-68f7-4718-950c-57784b914a5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9861b8d-600d-409e-b66e-c50fb8766576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6e929e-8c80-44b0-b1d5-4011de5af49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5df3707-5b48-4f40-9d95-c6684966c7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "29ffc278-d55a-4d98-8387-58f164b3ed07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5361be7-d7c2-4956-801f-66c7b171bbae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37719fa-4aeb-420e-969d-b69deaabc62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be539352-7647-406a-8a31-ab55b5649503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ab5bb2-9a2e-40ab-b782-82d9842b1da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00e3c483-a7f5-4436-a576-d89defa8b98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa06827-be75-4877-ac5c-35f571eda663",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938958e9-8dfb-435d-b7c6-671c7e63c746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e316bf8-1d06-4f94-9aba-a096088e845a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26b492d-6c12-4a7e-895a-2ca6f1b9eda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aacd893-4e16-45cf-b890-8878572e3154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6fa546-f7e8-4af7-b3b2-7f897aaeffda",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e97b7df-21f8-454f-a38b-50360824d12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b13365-dd39-479e-a0cf-9950ab9a0b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec53582-4dcb-4dd8-86d0-175e51a2ce5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea33f2d-9191-4604-a0eb-98ce350446b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a158c3b-61a4-4efa-bd20-e7d42cc7f582",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5192af04-aacf-4995-a817-4057ba2c11e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3a1c5e-cc4e-4975-8ceb-24ff4dc5186f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6743801-7d70-408c-927e-6be76bcc2305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fcc795a-435d-43ae-b1cb-172ff6d88312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc16aa3-6f04-40e6-8343-ec5f6a28f547",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cbfc34-c54a-48d0-8bbf-0135a9f1d305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210e892d-50d5-4e2f-bbd6-39f1b9a2faa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bcd52f-e5b5-4e27-a15b-ffedefef57ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f50fbe9-a1a3-4af7-82e5-b390c881e990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a62105f-9766-4ad5-92c7-147a45a83b42",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4496844-5d4e-432c-bac9-2aa26937afe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bada507f-2169-4fa8-aefb-996129e9c5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9140370a-e9e7-47f9-b2f8-d119bb9b5d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "35697d16-d7b7-40b8-ad3e-701c82539e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331f472f-5975-4c82-aac1-12464db191d3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2858f76b-6975-42a4-a929-6a64a174de92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e273206-231d-4ec6-a2e8-dd1616f81512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e207bc-3835-4478-a2bc-08889feeb147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4fe9f1-908f-4afb-a7f5-8fbdbb1ee440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91a01d3-2143-4019-87b8-70844a503c15",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a8444c-618b-41bc-8fc6-d01ec3b18a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0641fc-6118-4f36-bdb1-ce0247b01217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c57b00-b778-4b1e-9f35-368de1650ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1cde02-0f05-4028-961d-c00745f33a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f72a45d-9d8f-4dab-9b2f-fe735247dd4c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b70b89-5989-48d4-ad72-1d9b455b5cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd178eb2-0294-41ff-9144-cfdbfe63039e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409c2234-d9b0-4021-b0bb-da4410c5ca5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "974c95a7-c7cd-44bd-ad4c-8f0d3a165b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4d7b5d-c5cb-4974-bfe0-b60ae1e857a8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3fa347-b386-43b4-9a23-3616798d5f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c83bad-d1a0-4dfc-816c-8339c8545478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e7d304-9830-4ee0-896d-a36faa36d37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f28cdae5-56a7-4f1e-bd91-4a7efd70df85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf86ecee-0dde-468c-b4af-9653f7f4d58b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d1f9bb-1d20-46d6-9cf6-1e0b58d3d51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2779eb-e200-4f3c-8bec-440efafcf1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca06061a-671f-463e-9d85-148f8cb46b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "de98b0af-cf55-4945-adcb-9bb1f5c0b2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596ef149-b671-4ca4-ba30-58415c16d2a3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f3f6d3-8345-40e0-834d-4b2b42ccc126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af74967-c052-4fcb-9171-6c9648c0679d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae941cf5-f3b3-441e-8f7f-fea923a27635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6edc81-eddb-460c-b583-db143b03efbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd1ca13-ae7d-4f4a-a8da-556959ed149f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc7dd43-b9e9-4036-a9f1-47edc98b72eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e24f8c6-5fb4-4cb4-9df0-9c7c1065cb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0bd76e-0490-4740-a02d-e650a0306477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d27d8fc6-abbc-4ea9-87b4-5d47325f66d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef043b0a-2617-4ea1-ae43-527af15de25c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514cdb01-d257-4f00-b0d6-247d6f8f0560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0986f36-a59f-4fc1-b470-4197207a9b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa91d22-48ee-4f3b-890c-71bf2874f2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b297e85b-8574-4136-815c-6a20a029cb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba47d7f-e6df-4c08-89f8-64ba9b21201b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae27585-d8cb-46fe-863e-a2b89141d076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbceace-d439-4d29-8c43-339ee151f9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6824ae-0846-4479-b121-bda836987eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffc1cf5-ad77-4bcf-9793-ea881861dd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c55ce97-14ff-4323-b88f-af4d2f5149b0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c8daac-28e0-41e6-95d6-94878b01484b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee22c045-f3dc-424e-ba43-90aeec7b7763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b095d0d-0986-493e-adc8-3b9134c4c651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ceb2123-6dec-4c01-86df-18e3d3d9b201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a1ab47-4c5c-4307-96d3-70fd661a61ac",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9236dfa-f439-4a7a-9797-299984b5157c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407af24a-9155-44f0-916a-e2557e3baf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e28dd0-204c-48fc-9fc5-5a95041d8056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb2ddb0-f43b-42d3-9659-c4ab4a025041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e93564-d8e9-4f6f-a187-ea577b22d90b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5347409-dcdd-436c-949a-5dd52ab09da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0787100e-ee97-46a3-a01e-0234ae1f79fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff171972-a227-4089-8db2-8fd235e42941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd44ea6-0fe5-4a64-a592-08514df98c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7ce12b-2108-4018-9d1b-886921822ee9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f6d65c-6fd5-4b54-9dac-463374bdee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef316a00-027a-4001-9f2d-a9fed1fc58e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9116d5-4f01-4536-9f5c-c087da9452df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb59069-9ad7-41de-ad28-a18ecd3193d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be59bd5-1f8f-41d6-be8b-dc8ae22859f3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a91708b-5875-4dc8-9ad7-a9be21b9eea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044e69db-4e86-477d-9409-4acdecd593ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1779d94-1be0-4cec-9e46-f27ef7b493fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ba21fc-6a97-4aa1-abda-65b0f81315d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbd7d6c-1e7b-4eba-9a2f-73b7ae166f1f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d1b9d0-89ca-4f9b-8940-51a0d0a77e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5361721d-f22b-40ba-8ed2-618b76821b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560413b1-99e3-413f-98ad-ddf12ac3352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4323562d-8e93-47e1-af83-3e0faf14bc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355ff6da-65f1-4151-b742-4885abe5c6d4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6d2bc8-a980-4489-ac0e-3a8c968714fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e97bc62-1885-4fd1-8f99-0398d05f43a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ac60ec-b824-4ff2-bfa7-87edc8f99f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adbbddf9-e1de-41b0-bff2-71034fca97e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfa51b5-cbfb-4f8d-b627-394444403f9b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53e9590-a00e-49a9-886e-c341362108f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61c8b66-87ff-4f79-a211-58e81bf2a237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253f3258-32f0-406c-a254-3f1c0c065c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf3b1ca-2e73-4000-b441-381f0678852c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d647669b-2122-4f9f-9933-0dc1e6439a6f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fad67a-6109-4042-856b-72b881f293a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76653618-3921-4e4c-a458-8cf04e7011c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fd013b-9177-48aa-9a83-2b813c7b00c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6209c267-4b5d-4f43-bc88-d32aa5973160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45368bfd-c72a-46a7-8091-64709bea1c4b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3b21e6-b433-4b9d-a879-2a00c6505b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738ba0cf-5436-4824-956c-6a56e63c0fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be59e0e-fcf3-4c4f-a606-7a27f8015f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3d85af-85d5-4ebe-a5b0-02478197a815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabc3684-3217-4695-a7a3-cb2f134a683b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced49863-1cf6-4423-b41b-60b4fb11a3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1f539d-fd81-4080-87a6-52c09db387bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae05ea8-2873-4387-9f3b-68992881bea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b0d0da-6dbd-410e-bafa-0285ece45317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea041589-6c74-44a9-a2ae-7fcaa6dfc3d6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a24dd8c-3c50-43ae-ba9c-8ccfd4588277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61c1b0f-53c8-4ff0-a0c0-b83f52951131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5d68ed-aab7-47dd-91ff-db738dcbdd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c88872d-47f6-4d1e-b002-66a94302181f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe1d320-cb7b-4bfd-a1d7-eb733ca7e600",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e987fc-9c17-497e-8cb2-e18b52e40121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c513cc1-867b-479a-ae05-ca0e4dae3dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41a533c-3279-4abb-9ea4-11f87ebe4b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d17075-cad1-467e-a1c0-9447b9103111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d257a20a-0ca2-49ed-b07a-ae2272d0e87d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a9bff8-9e45-4d2e-b807-c7ccce26f31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7ec38d-33c7-4c12-bc9b-69dfe7591d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dfd5f5-2ef3-4ead-8d5f-9209e93ed65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8f2a98-ff24-4ca2-9605-78c2b2bfcc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92476835-cb65-4308-90bd-c80e020515e0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df65fef7-f620-4969-9631-6b99d21077fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f4d514-a7db-4469-bbe3-69572c06f81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2327c74b-8040-419f-91c8-a1049ebc2bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c22afe62-2825-4b4a-93a6-368aa7cb39f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55fc9d0-24e8-43b6-bef1-8c63804169dc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37800b21-72a7-4863-a87e-ffd10784e5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90702ce9-55bf-4805-b2f8-25eb3dbe4838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b3ac86-f200-4c97-a3f2-a6928bf348b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "86755700-d7fe-43de-9714-d177519339db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce6fda9-de45-405d-9b73-22e1597b1503",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03bc678-0bfc-4aba-8887-8a92da67ee41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbf3e94-2c2f-45a3-953f-ac5ce8590758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76919c9e-2289-40c1-ae1c-0fb98258b875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ed9178-3273-4136-9b7d-17f4a6631559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51656143-9d80-47bf-92d0-d31b3acccf14",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bbb915-6084-4e8f-8745-bef8bf18e091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a30f07f-7869-4052-8f54-c06360e4f63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51e95b6-46f5-4141-9628-16582b938994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "333fa991-c0ca-48c1-a444-85b2597ccd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efb1bb4-13dc-4cc9-8269-25d027c62eeb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ccf5a3-e414-4249-b282-54bddc684aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca023b4-67fa-4f2f-9ac1-5e55f0a5a270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb1c28a-cc90-437a-9209-965927c992cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3a72eb-3090-4fe1-8c1b-b5f205bfe0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d33952a-5108-49d4-99d4-595ab7e101cf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f00f7a4-534d-43ec-992c-25fc0fb1a494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "14620e49-14b4-4a14-b91a-af942f2b7b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9d3ea0-5994-41ad-8314-ffd15a7e32ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0e69fa-a31b-4b3b-8eee-647038977ebf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90d5da14-807e-499d-9565-3ce77ef89bfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ee72c18-7220-4ab8-9921-c5a9f2fff8e8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5156ff5-76a1-458f-aab9-52c6c2db9759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5e6ad17-8002-48ed-8b25-4ce107481254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b773fd3-e4cc-4db2-90da-1172a8ae3fb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceb4588a-96a4-45ba-bd39-12efe60f32f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "200c3397-4f1c-491c-93bf-9d53c1bc5c23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93718f33-dc2f-4371-9ae9-15649b742959"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db58f165-2866-4b9c-98d0-c583b2aadc06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03143f1f-e1d3-4466-a604-ab23bc8764fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08483cdf-db66-4b54-87e3-07fe57a35d99",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39e75e51-4c49-4dfa-8c41-e3bd25581f3a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7a8fea46-027f-423e-b039-a4b832b0d04e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5611576e-54bd-4028-8a42-23cc5c8be2a6"
                }
              }
            ]
          },
          {
            "id": "6ad4adc4-1465-454e-9ef1-5167abed0661",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d0f2cb0-0848-498b-88d7-8e8de89faece",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ae959d95-9563-4bcf-bcfb-b1adb08ef069",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814cc5e7-487f-4083-9c32-8d78f2e21936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f998f90d-b387-4565-9c5a-e06de1043e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5783bce6-2377-4022-95bb-859976b97147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b46581-ee1e-4f69-93af-75d637f2ca8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39d77a4f-2dff-46fa-bc27-2b128d048da0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f25a16b-aea6-4f5e-b6c9-e1c7b6224daa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "849a6925-8515-47d8-aa38-8008c2113a86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9a33fc9-1d27-487e-a6f4-55fa98103b10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1c659703-6bc0-41e1-b3db-f1b90cea6a92"
                    }
                  }
                ]
              },
              {
                "id": "3306ad9d-0940-4c6b-a58a-74d580e766ce",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8766fcb8-b1c9-413a-8844-56b5949cb415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ace75f34-e29d-4512-a90a-74984b1ddd2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98aed452-2083-420a-91be-576455a7d715",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7fb3d24c-8650-4d93-8220-11fa50adc79a"
                    }
                  }
                ]
              },
              {
                "id": "fdc36bf3-3de7-48e8-815e-2274a353d183",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5253b2c2-ea3d-4000-bf41-d91baf81b235",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "322f9212-983f-4690-8f4a-fb79ad297a59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c27091f-18bd-41d5-8e37-7fb8c754964e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "37abc3d9-3a4f-4734-b757-c2575e16c474"
                    }
                  }
                ]
              },
              {
                "id": "f416c722-1734-4a33-8111-fb3c93a71eb8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bce3b976-614c-4a77-94a8-b8bd45dd2ca6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62d2d68f-410d-42e1-8c69-00a45453fb22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b54478c9-7dc1-46e8-8816-f44a250f441f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a1b68f52-d264-426c-8d05-61b33cf04f86"
                    }
                  }
                ]
              },
              {
                "id": "2ba74dec-5196-43e3-bedc-421b86bc00e5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11d25b4b-aa00-4a87-8181-dbbbb86eddd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eddcd2eb-8d70-4c26-b8ed-07c2e912b1a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c77883a4-6bd1-444e-8e71-8e079e63c7de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0c6e76d5-7a3f-4c1b-b58f-40f5760a03f2"
                    }
                  }
                ]
              },
              {
                "id": "3ff7f666-7a61-4364-be38-9a98f2b14259",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4551ad12-955a-471c-bac5-9f666b53bf62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b079bd2-49fd-42bd-bbbd-7bb8fd1584f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b28d100-0eac-49bd-ae31-0dbc0d5300b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cbf163e-5327-459b-9429-db6c1c4ec9e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71edfb65-0f3f-4aef-9ac8-87efcf2e7f95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66e16cc7-dfa5-49b8-8434-0bb66cd0edf1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "618db6fd-2249-451c-9cc2-8a2006aebd88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a63eb8d8-ba9c-49ee-aa97-cb0e8ec368d7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad2189be-66bc-4c80-aabc-1c9158ad0edc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "02d828b5-6f30-4749-8566-41c3dc75d25e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "317beb01-8801-4343-8e42-d03c1072ca50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "651121e2-0d26-4d99-8c82-b831128caf49"
            }
          }
        ]
      },
      {
        "id": "d56f2912-98b1-4c17-bbd9-848ac05c7b2e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "96897e45-5e07-490b-bb9f-50db5b2fa1f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c588d4b-f588-47f9-a5d1-ee8da611f0c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c8e1e61-26e0-473d-95c5-72ed6308cf03",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750e02b9-dcb1-4e25-b640-8d187f04395b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021358a5-e3ba-446b-8ff1-73b8cd1c0771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ef6308-ebe7-44b0-b1fb-3c51c3ea671e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f1532f-f19f-4b16-acdc-2929001a5b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a41432-5458-4bf3-9211-f8a4722dccc5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31236e6a-8341-476d-ba2d-551f0fdd0bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646ba001-3d8f-4935-92de-454e488e96ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ead5a63-34f9-4313-9b2d-94f7e1d95ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50694f5-8699-44d2-a493-271e266c40d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1908d021-67af-4769-8c81-9cdc0167e35f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d05ba52-7f65-43f9-a1d3-04fc52542961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0cb0b9-7918-4071-a168-b15aff5998ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf859c96-6f4f-49a2-9e4f-deb15a21411f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2fd1be-06e5-4534-91e2-9c1d0f2724f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05dbfad-7225-49ce-874a-ebfcca7478ab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a35959-a8cd-4cb6-b176-c58d450e1c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077bf362-5f80-4208-81ee-5bd7bdbc680c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9a9db9-1cf3-4da5-b7fa-9f2af3123d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69cfc123-bd5d-40f1-9f95-cb3a0827d7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5198b0e-bcd4-4827-ae0e-fdb574540ff7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10239fa-5ee7-442a-92ed-3923d719eb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf857c8-efd3-4354-91be-050c29aa55ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021e2ab2-fbcc-4193-95d0-291c420280af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "581dd318-6afe-45c7-948f-9b268747ca70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cc8dbe-f535-4843-b574-2be8554b1ed1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7616dbb3-bc98-4c75-acce-88199129f672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1453c867-4c4c-4b8e-822c-e64719a9f00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643fbb9b-99a7-4a4e-9f08-9de53f131321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78303c3f-ac53-48b0-a525-257613b6aafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f644cd6-efd9-431b-90ca-27c410ab5a86",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d994b743-8ed0-4a2b-a01d-d30ebfba9a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daab156a-435f-4b4c-a919-c316713a8378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc0849d-d5c5-438b-a57a-12f38ca4c26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c06394a7-23bd-4911-8131-991072528d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a799b2e-fb4d-4899-86f3-91137880644b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b500796-62ca-447d-93cf-b49941b9e9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347d21fc-a70d-4c2a-9e13-1830b76c1096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ea1c4f-ea5b-4e1e-a16b-25e91b12b2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ee072d-ecb1-48db-8ac1-522e564645b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54caaa8-e4bd-4ecd-b307-37c80c2ed114",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e23f60-b485-4e9a-abd2-449b762f474a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a30bb5-8641-4831-bd7c-f9a714ad28f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad0ff0d-c6fa-45e2-abe4-be8a70dc6e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "739b1f8f-af0c-4216-a6b4-9ba14b721c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699b41cf-e13d-4f71-9955-51f58e7b025a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10562509-cf1e-4b5f-8f25-f6fa31faa7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6164764a-3e41-4a0f-984c-0f4231c12832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8532f358-44b6-4800-a5a2-3a5885e0304e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57a3ece1-162b-4f10-ad8b-c8de650c5605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7153d6-a450-4746-bd45-b876c2009bfc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f020c60-610b-4bd5-b301-580801ebea7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c014d6-e831-4ca2-b647-b4bbd5f1b1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468007c6-fd97-4043-964f-0eace11851c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ade5fd11-bbeb-4317-a02d-e26b205cccdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13012527-6336-4b01-9586-5a6ec71915db",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3e08c7-d81a-4742-8e35-c9a3c55de27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb4ef5b-21b4-4758-9578-36434e17159c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ea1732-0f02-4e1e-a913-f128907092cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4dd513-95dc-4d27-8e03-81f160a099e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caad36d-a42c-4ff2-80d7-de55c070e2a4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fc1586-3728-41cc-a01a-b636863f4ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa7d488-157d-4b78-9533-c10cedd152bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b4ff87-f5df-4cf5-b887-6ec6b2ab111a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee2202b-5b5a-4c54-8219-ac7f05439d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe02d9e-2876-47e7-99f4-214c16984f9e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c04c54d-1258-4f10-b43b-6f4ca6270a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85858cbb-320c-42b3-bd58-6e70ccba3bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccc7c26-3764-4f9e-8cb7-2a3e653d69ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a301b63-64e9-40e9-82dc-09d726ddf3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce03077-7d97-4747-96c8-da917989ad7a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533a118f-2073-4569-82e5-c5a554f75e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e318f1d5-1146-4438-875d-c99373e0d006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c503276d-56c7-4d1a-b822-8096e8918acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9dfcb14-a8ee-4590-8e2e-fb4479788ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f6ec77-659b-44ef-9b9b-4e259c548d61",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1c2c0c-6c76-4e5e-8bc2-c7de37df7087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3254996-8de4-4bd6-bd78-4810db2741d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5739e12-9be8-49c2-b468-ea1cc9c74f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5683cdb9-0a76-4edc-854d-33eea1817db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad67aa0-f8fe-495b-a4f1-36489a5d4a61",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e71210-6ed7-4dc8-bba0-3ab6120439ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d2de01-b845-4d91-a97a-0cc5ae75efee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ec4e1c-7ebe-4255-84c2-288e2ccfc8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a565294-86a1-4d15-a472-563516d942f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7505f3-f5c6-42e5-a638-6e9a848281e7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487bf397-0c99-48ed-997e-6fbe52750a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e600a4-b078-433d-92dc-eff953f079b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0685b49d-d012-4353-9457-e6c4bda3bf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "162c4de8-6b0d-4dce-b552-867bcb1a3be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab7de76-6451-4d6c-95c8-caa8307332f1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dfadd4-cc01-408a-8166-995abf1f0f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae14b8a2-6f5d-486b-98c6-bcf01a8be113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49a0fd0-7f16-400c-a3b2-07cc88179da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da12c0f-47b0-4ca8-a83b-5f4c7728593d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c743e07-1c7b-4a4d-b4a1-d34fa1283c20",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b03c8b-d3c1-42ed-be3a-2f2b7b9f389e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9c4c8b-d76d-43c2-b112-7fac0f3ff50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbe8b6d-f130-4d20-ab01-3262317c10f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "894be69c-7f3b-475c-b6f2-4395b9568834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3932ee-bdc5-45a4-8c7b-80e2af22e806",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71564d2-eb5a-4a37-bb65-88c9b32fc1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a59ef59-390d-4b95-b104-45d10d373cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2907f0-d888-446b-983f-a390dd36e0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1ce483-44d1-42c1-a863-a23b25e64ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0ce14c-a505-4ac0-be08-7522450e0706",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e478e19-ead1-4e33-82f2-5388366a1e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce31f577-35b1-4750-9b25-b2ae18bd885f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc521f3-fc1d-4494-a86f-d7cc83a0649e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b9cb4d-f43e-4bbc-b335-91866817a894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0276c4a-2121-41dc-836b-b2462a8eb600",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f8cc27-3a78-4164-adc0-e6325bb8f970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd524f1f-25e7-445b-855b-8857e76bb74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75a7548-0822-4f74-bc33-5779be21cf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a655218-a7a6-43e9-936c-e95d476bb45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8135d79-1ea4-4464-9440-31850b2a033f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041243d0-f297-492d-9d4a-85118e486868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e17c983-c9e8-48d1-ae2a-5fe14538f2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb6d88e-2159-4ed3-b11d-be881c147346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd9cf7f-de33-483a-9b17-9e0b0953769a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5554174-91d5-420b-9b84-be694087a4c7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c116d51-2625-4439-8dec-9da86dd9c4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3438b16c-6b45-41b0-bdb2-df5c49d916f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d1be80-dfba-4489-8cc3-8f46d4274d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e975c5-8ab5-4f8c-975d-969344e380af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8035161-12ac-4352-a840-4648eae577a4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d831ddd7-2a0f-4311-84b2-8b3f8c8d4a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb2b2e6-cc45-4b0a-a46b-cc64fa1a8376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab810f0e-b03a-43de-86be-944527cebb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed0c77a-9476-48dc-9171-b1306c20d058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3c7e1f-8483-4aa2-a1c1-ed53dc60b8a2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebe7576-7136-441c-a727-95bfb73001bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f51098-e84c-40db-a249-06b719a71a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2b77eb-e5c5-48f0-a38e-9d5600495d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90c73b4-272e-4fb5-9be5-438ef46c4b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a8decf-569d-4b8b-8736-3e3c68973afe",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7232b298-35ea-41c3-be4a-2b868abe721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2671593e-2b74-4a47-91c2-92ec851f1f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6e975c-d384-4228-bd6a-8a66133bd6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0327f298-474d-4fdf-9b92-e20c02a63367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc638ea-6f99-465c-afb5-555aac6846da",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a215258-4849-4be9-a9ce-6329d4164c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0419a44-95e8-4d22-b551-abde8f5482fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce343fa1-cef8-4dfc-9bae-f783ad77b9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f796e3c-4535-41fb-a2f6-c9a617a32bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0868960-78d8-453b-8b86-812715e3d8ca",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2097acef-215d-42ab-9ee3-1324d159ab3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371387a0-176a-4341-b80e-0c3b8f86b5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41fbef2-c392-4094-9a38-6257279eef93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc052c5-56a0-411a-a2bb-fdd92c298fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83878b75-f4d2-4f7d-aed7-31a0765dd41a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a7c499-6964-42c1-8be2-0b16b0448fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10612b85-9fca-47c0-ab5b-e3a43f257dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e83bb3-078e-4379-a43c-f4266a1efaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca155b2-1f07-40c2-b974-6a0dc57d32f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8d7ad6-f5bd-483c-a149-16274610ce39",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc050b5-fe46-4adb-818d-3d911a45961d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c365b9ba-e0a4-43a9-8b9f-2d667cfd4db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88e2631-faf5-46bb-bd61-5a24bd5b17e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3616d94a-ffcb-4cb6-8461-d4d23fe29022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f6f989-4c05-4294-b491-f4b58e0abc2d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c903b4-acb0-450f-8d68-5f3d92641082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed63ccb5-3919-4c40-8e10-0e3f47f93278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4b7aa8-da30-4dc3-8c29-ce746b9c381c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d450242-6226-4c2b-ab87-1cf363fd4531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a906f9ed-1c0f-4ce4-987d-84bf58d10c80",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771c6d5b-ddde-4ef9-bb1a-453f6d9e0b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779fd3dc-41b9-4f0d-ae0b-87a3afef4d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba03ac46-2b28-4ce4-8d19-4bf39bff19c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c41efb59-9096-4636-86d0-c3b23fedefc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8289e439-cb5b-4b39-927c-df7bcf3608ca",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1c145b-10c6-477f-8f3d-1ad97a81bf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1099720b-b799-403c-9458-4b40d6a46734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4910dae-cbc0-433f-b7b4-262eb00b47e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35116409-974d-451e-8a4e-7bc180602c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824ff52e-d707-46b7-93df-c0dedda767ce",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27344e16-d688-4976-9f09-e4078e4f9598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ab3a55-3b9c-4f67-9b8f-f5db35b80fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a16749-98f1-4efb-a0a2-e006757862d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7672fa2b-8c9f-4f87-a3fa-3e347bf31261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cdac41-2087-4daa-9f85-2bf1f6fd40eb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619a6b5c-d960-4e5e-85be-a2e674ab5d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1be1c69-79f8-44a3-a441-ce147551547c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a831ecf7-4fc6-4988-95da-5af0d35fd54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e7d58e-132c-4253-a2c8-954a412afb8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb9b3922-2750-4f82-8045-67ca5c80fb90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2116ce2-cf93-440e-a0e5-abf48fdc57a1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d564b4f2-2b2d-40f8-a9b1-46eda1428798",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bcdcd3-29dc-485a-9ec2-a04a6ab143eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4abf51d-e529-4507-9b7a-6578a7e80856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ce2d6cb-d356-4af6-9da7-e6d4fc221ad7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5bd966b-898f-4192-a7b1-78e8907d7f29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d7684db-0a12-4b07-a482-08163804b4a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78ffd360-ae89-4a74-8abb-766cad88233b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39496ae8-ee87-4592-b472-5949a7125246"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65254cf7-2fd5-4e5f-b0e6-be2641da3244",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2733f2e8-1003-4862-8922-9f9d4409b991"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58aa12e5-77cf-49de-937e-d49baef44331",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fe3346e-a178-4f17-aee7-acf32e09e780"
            }
          }
        ]
      },
      {
        "id": "b20d8cb8-e30b-4931-aeeb-6be7a932217f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a6d9f973-35d0-47bb-83a0-8bea2f788dd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "075d20f2-887d-4da6-a2a6-fc7f4c2748db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9e21c04-9840-4f3b-9c1c-d6ef3632e2d3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f9a06b-3b4e-4532-b10e-a80cf4f3c71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ea9bf9-5c08-408e-a634-f7e518752d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4921a1-b718-4c0a-8724-c6fc0dc79b41",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7f45da-1252-45e7-a340-3f7048455eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db24b5d-b63c-47aa-a104-b73e41b1b8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6551a0bf-9648-4673-b46a-bde54dc4e288",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e86d17-81bb-4e33-acfe-3fec2f2d0305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d4a8c1-d3ec-4f20-a10f-9a46816f9dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4b0b9b-77df-4197-ae6e-ce19128936e5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779567c0-f560-4dad-b9dd-67722eee98a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366ae35c-9d60-4147-8205-095aa68174ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e997ff9-6cef-479f-9e85-47517fec53e8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5359b606-ed49-4d8b-b1af-814001db3306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b760235-e52c-459e-94b1-9375a6868e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f92406-1c7e-40ba-b24d-49b802d73a29",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95088e64-77a7-4451-9ebf-858c0812089f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3207f5-4ab9-4683-9163-4df8fdc81847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fb8574-bf71-4ad0-9546-1ac6db4315b3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8370835c-ccfe-4fdc-86d4-454fb9dc0bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0d4f68-fe2b-4a39-84ac-dafb577db6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270cedfb-9b2f-48fc-85c2-c267d0595dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf382e0-3b49-4057-93db-41f7eea2414e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18c06e7-6c0a-48b9-ac54-934c4cae8599",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd5aa47-faf1-4990-901f-6771894a398b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d4bacc-8daa-4e6c-99a9-4f8930b3cc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2567fff5-5586-4fed-b089-54039e169c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53edfac9-18db-4c9d-936e-d46db999e177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbc8dcb-bd24-4753-837a-d65b6fa50d0a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31762c35-c1bf-4eb4-906e-bc7dff0431dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe8737e-74fa-4dec-9054-838eb11ead35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b662267-0c53-4111-9b0f-ba734dde3783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325e7b58-35ca-4fea-a725-8b1c50319dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c4532f-3667-49d5-9129-ab8201ed4ace",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610e888a-f707-439d-9ac8-e60b4463160f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abd3ce1d-4dcc-4b1d-ac74-da4d2884dbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65985bf-d94f-4de6-aca9-3f268ea5bf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94207058-6698-4d09-bbce-63c05327c5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d1635e-b3fb-4004-b11a-48d5ef36315f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f7d87f-4909-4c50-8bbd-972c004a5cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682d8a06-42df-4b1a-88fc-1ded149cac39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b619ac2-8ec8-4b15-98ee-1143091c9594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e341e5a-990b-4f8e-bd21-1fba28b9ad23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d769a9-c542-493d-943a-6843c886643c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38b9aad-73a8-49c1-8177-7cb2e52082ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda42e99-f6a9-4278-9fd9-95714508b75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4db4cd-4d7c-4514-aca8-d4ff8b80b30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09655af6-c772-414f-ae23-0ba369df5d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cc5a72-ef76-480b-b51a-e0bf2c32a512",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c47719-77d8-455a-9cb9-3068ae1f1003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb186ad-7475-4277-8856-9e06822d0a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5974936b-4e67-4481-a093-19fc10773393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f64d19f-54bf-4418-917e-73fd9bdbd6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0636aede-ceef-45a0-a23e-f100741246e6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810ef689-122b-4daa-a6d1-edefef9115cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0372283e-569d-41d5-8636-f7046e60fa9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d11cfeb-9559-49ec-bd17-b0e2f28740ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01d0e8a-d090-462e-8411-9fda70df6390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edac03ff-ef22-4c07-a97b-6374ad8018f0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bed1def-5305-48f0-9216-bc43e28e30fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92bc0145-b99f-43c2-85db-b0da51fcf1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650439ef-01e3-4859-893a-37cedd4adab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b5beb6-57c8-49f7-a6c6-af2c229c9fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95733473-0f47-4489-8ca0-8ca1b5a05ee5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed38d3fc-717a-4525-8aab-d5dc1296d133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "891931e8-7d8c-42f6-9356-36efd3afd408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777a7055-3229-49d3-9314-ac4fba1164f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7405876b-d48f-4c92-9a2a-fcd425d615c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa694ee8-9668-46ac-9720-8929351cab80",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d699db-fae3-4a35-a9a0-3a7c389b0146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b797f0a6-25e2-439b-b3f1-17a930755c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430cb299-05cb-4859-bf80-a2077b8e2b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1727de57-268a-45d3-9957-870b371f3e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678cc78e-bd98-41e4-9716-98efe776258a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c854c9c-0a93-404a-a8b5-e209bbc6f00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b853060-12df-4a64-9e64-c9d4e455db1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3836a208-7499-4717-a28c-888b7e8227bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c95414-225c-4486-8f5b-181e13ba6c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c1dd21-08d2-43bd-a9b8-d93c96316450",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cce00b-273b-4dad-a837-43f13ba0ad54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bf1a21-b80b-4369-aa95-b63d1d061a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a3b1c0-803c-472f-b4a9-4b51863c4c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83367ebd-f29e-4956-a8d1-6a013ee25b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70030a96-6e4b-4283-a562-f98b810a5abf",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f4e83a-8d69-4cad-9dbc-407619b79087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d403e172-c0c0-41b9-8e03-92168ac8962a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f247f5e7-520f-4690-82e0-af3c66daafaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b21ddfa-caf0-463e-a777-74ef2585d846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea4ad37-f0de-4281-b3f3-8935caf8b91d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb56008b-1787-423f-a465-327344b962c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3219420-78f4-4064-9f92-57a091bc8ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bf6808-23f3-4826-9cd6-ec0e996ce3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73489d69-5f36-4d04-8a6f-0086f53b4b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7804f681-b522-4276-bc0e-a899c9eceda3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35523a3-ee89-4bfd-a1b1-09dda61abcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42c0b81-59dc-4135-9665-28e983645221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a71cf5a-d155-4b81-9451-0098a966f2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc95900-5adb-4af0-bb82-bc6748faf873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138048c4-35b8-4f2e-ade2-32c90462d88d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c64f50c-ad3e-446e-b4f4-6540788ca0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acce9bd0-0448-41c0-829c-7360a58a9c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9252fb-fc38-42ca-9a49-50437a0a85de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516abc68-faa2-448f-8ea1-4e22ac4bd4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7477a05-db8d-420a-8b2a-1abca1ee7946",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad507951-50a8-4931-a991-02648d7158dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55989f18-90c8-4564-8c61-83774da716ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925a650f-915a-4c44-9e04-6708fe034e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0157637b-948e-48b0-97be-04f5e4ab07fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9ba6e4-0bed-49b9-b922-1a5e84b4a750",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea62026-7327-4903-8876-5b360addf9ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01052d7-3863-4c9e-a4a0-94e9a0610b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2732b777-cb27-4f35-96a0-04fff1cf6b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3fd471-815f-4adc-a43e-a7a218563bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4904bc-a119-4694-81af-6204edbc8187",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7b8506-a70b-4926-aa9f-ae4533d7b75d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa6c9bab-1adc-4e06-b340-76fbf3abbebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82225598-7e80-4b98-949c-2f639b18dea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21eb249-6813-4687-8352-dcb8fd8aa2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fe8350-1cda-407e-9f41-ba9c3f96606b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11a6f74-87bb-4f87-ad5c-0ef6c2f531b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d75e1c3-01d7-48cd-9a04-2ed7093a812e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bb2baf-2728-498c-9d64-35f39366e393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b54989-2682-4347-afba-acca078ed71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d12987-6ee6-4806-98ca-eabdcb1ccc55",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5174bd72-8546-44c4-a888-e2ad7b39c217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e050c857-1324-4012-b2e1-b8f6b7114162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13112500-d36c-4730-8423-3c03728972a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26c46cb-4b87-4f27-a06c-ba244024c6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ed128c-e6b4-414c-b30f-6d5da43d4b46",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ee5909-3f21-45eb-bbc4-264050b8b43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be484c95-778c-4442-98c3-37b422e1bc41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42318744-241e-495b-a423-4843e4785f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3f0d18-2d90-4b63-a906-31f469ca8100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40988417-23d3-4b72-8af2-13f9ffd51de8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd0c158-d350-4b2d-b7b5-4f490d03d766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045b99dd-819c-425d-8c07-a27680c51674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698fe91c-fc93-47a5-9b63-b25b390948ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d214479-f75a-438e-ad76-0514cbd4357c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6517db85-70a8-4a80-8030-a6a13bcb3e0b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f51805-8f1f-48e8-a25c-cf2047f3f813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "792236d0-1cd6-4059-88cd-61829ccdc6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcd5bab-ab85-406f-947c-79dfdf2f5646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9555b1-f1f5-4ad0-8f2e-0ca74d89cfe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc243c1a-202c-446b-840d-f226cb01030c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0b948d-039e-47bd-ac67-299cbfdfb55c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf17903-4067-4c5a-8cc1-5430043e4a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eae36d5-9bc7-470d-88a5-642618377221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbdcf9b-5980-44c9-b739-598f33dd17b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e975de-1d11-4f02-ad30-a8edc44c7cd4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b39c99b-93c8-4336-bb88-4bbfa31d1f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d2e0a5-53a1-4d2b-abd3-023d7e4fe9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fdfb3d-ba9c-4715-9a78-fc61d91c266a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb244f96-02db-4703-9373-403598b9a86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8193efd4-e300-4ed9-a250-6bc3a3f2521b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1b4dfe-7e7f-4d35-88c1-e6ae86e452d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc853da-8b73-43fe-afa6-f59085f5623c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791bf40a-a409-4281-b901-ecc6a245ccf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb31351-6ad0-47ea-b099-812c6b943845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e5ed31-26ea-43d4-9b92-cd402bbd421e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98930af9-6550-4186-91fc-2a1a07dc1a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd58ce28-60d8-4917-a88d-12dc168c9b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2564ebe1-2a4c-4ecb-a967-9cfd57afc867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd10124b-6425-4654-a0db-e7d4679481b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35af225-35a9-479f-bc0a-bab1a2f12ab3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a5edfa-e62b-4438-bfd0-21022f30982f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bbafb0-d7cf-448c-b493-64f4b3def764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89af168a-0f4e-4fc1-9c99-a1bdf74ebd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f9e7db-0a43-47c5-8614-43efa353b97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7c859b-d0a2-4c7c-a29c-b708705199cd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6dd46d-11ae-4b30-851e-c86ed74906bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a68c2f-4ae3-4f82-b663-192ca16b0680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6b27a7-8c7c-4aae-ae84-5cfaba31dfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914f85c4-f943-4bd9-8b0f-76fc387a5b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb08618e-78a1-4469-bfb5-b5845b223c34",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de42f31-16cd-48cc-8d23-58101f17ce56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b55711-1b7f-4899-8aa9-e72e17739cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32013612-994c-455b-85ae-1b5f2eb72136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a7c910-3a28-4d81-b109-f7abd63c8e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d1e853-50f4-4dc9-a991-8e29b97fd03b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde2a018-16f0-41f4-b593-92bdade77621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5bca0a-a076-428b-8c1d-de739ea541e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb984722-bb2b-4095-993d-7659a667b4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0978cec-af52-416b-aade-c518581c5d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0cbd18-6622-4499-8228-a9393fac2f9c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39b66aa-ba16-42a8-b778-12ddead5fcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cb58b4-4c42-4250-b4de-5be1819e4468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2678a10-7886-40b2-9f6b-c78bd9022509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7ce368-60c0-4c2c-b3f7-13406031c9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b661ba-ffdf-4d73-8c3e-50e5d3836171",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f897ad-2560-4391-804f-3ca91907ab4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6271c81-a712-463a-8f22-cd711e4a23f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b48b2fd-83f7-43aa-bcd6-f8682765168e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e6c711-a77b-49b6-bcfa-7e6326a321e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bbd8ed-9ca2-40ec-8655-e54fc8d180ce",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed4cc00-49c3-4997-b43b-70245b791e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef7d730-d2b8-4999-abea-3059254236e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0715225d-b25a-448e-ba3b-7f611887a210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c883b91f-34e2-4a1b-9869-5cd3a6f79a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff50572-f599-4c91-af87-140c49f62097",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54274d65-4168-496e-9159-c8b0ee5a285b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b255829-edf9-430e-8677-e4d036a77794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170e40f0-141e-4f01-bd3b-a7d316e585e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840d79b5-30f9-47ac-ba30-5569e2275c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c46ab1-4046-487f-9d0b-788f0ddb921f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2911ad29-6848-47f8-a910-aad1ba465926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a37344-9b66-424b-b8ca-258f23bece68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ede68c-feaa-44bb-8496-04b134baaf20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267dde6c-6420-4067-bfb8-428e113b6c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6f005e-ad90-4e9f-aaa7-f2126970d637",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f1297e-0bb6-4211-9302-1507b890f1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a685b97-2189-4b64-8b63-f2b486735e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240b6ba6-8d2c-44ac-9794-a30f4d93b85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63c3af9-3e97-47c4-923d-77a9f7a2b046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9c88e6-3bf3-4481-b600-2bb170a1bada",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb41282-a0bf-46bd-a6a9-fbe4b5db0941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7c382d-ac95-4e92-9798-a9bbefd030ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea238f4-aadc-4435-bad8-21c993ba9131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b062573-50ef-4455-bad8-4625a6992dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89880b27-e400-4a23-9826-ff339618052e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f44164-a553-4bdd-a52a-7a66c2f2e2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dd8c25-6897-4a56-9b1a-f44b8c07234f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2def384-a1e6-4138-a1d7-2d7c703c7764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcb9172-8567-4a52-81af-baf66a097f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48bf8e4-e10e-4133-a522-f9c59ceda3b4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef463a1e-c817-4777-ba6a-4606df062ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666e5804-8f37-4112-969a-60f11de164bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620ac27f-f116-4c09-9004-22f35b93b1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a107290-080f-4fda-afb3-4b59c0ca4295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fb690d-581d-49dc-b8b0-8e806b532f16",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e44e17-58dd-4eba-98c5-2ed047234fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5620b52c-f9bc-414e-a77c-f0c66ca2682b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfad255-a2d3-4938-a147-0d84c4b343ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e9c04f-5448-41b1-bf2d-bb2e5e31e4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fde0a1-36ce-4d52-80be-da9f90377640",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df74052f-526a-4c4e-8a1f-687676245a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf772712-d17c-49ce-9714-c5d0cfc0b222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3aaacb5-b5de-45de-903b-96829518a253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f4fbe8-7af0-44fd-8abe-7563a94ac2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e97ad5-b8bc-4f34-b443-0c06004d71c8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addfb9f6-8e03-4751-b51b-63d867d35e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e30bac3-03ed-4d81-bef8-e1a0dbad1ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5206eba-7fcd-498e-9e48-867d046970ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29037ca6-5dba-4413-a72e-398e86059174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48341a83-f9e8-495d-8f53-19d7281b2076",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8605ef3-d4c6-4939-b7d1-d0ffc6721160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29b7e2b-6ca5-4d51-b7ea-08995d583e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf65bda-fd4a-4a1e-aca9-967ad2ec4227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab77c09c-6c02-4325-ab89-e0dca70ffb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d866540-56aa-4c5c-a2d9-5ffeca16b946",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e439b4-7804-4856-aa54-6279154a988a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd39ab40-3069-4b44-a68d-f1ef0a1d5de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad2ee43-d333-43dc-b5ca-263246bbc082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306d5d2a-4631-4a77-842c-3254d3165eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de3b8cb-0c49-47ce-af05-827030ab87bf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eed1f3c-8b81-48d3-86df-0b463bbb899c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2ae6a3-a152-4ba4-bea4-a94a14fd0770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f607a8-ba56-4210-81df-8446f8b77503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3654f4b6-30d4-49a7-b55e-3bebedcc5c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c9c043-3f70-4190-bad6-86001bc24765",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d24e5b-6278-454d-bbf5-16264d11efd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60483eeb-050d-4ff1-86d5-46f1ce64f5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b870e37-216a-465a-93b5-10f655f380d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dadbd03-2ccb-4d70-b977-d96c57d1c0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c216dc79-5e97-4575-a624-2349405454d6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583e81d5-b30f-40fa-b452-7d168cd2f9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba6308f-5452-434b-a498-5595350a132a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cb006d-db7b-4742-aa0b-f0e5761d3fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dc5b55-622e-4792-bd8d-e317725a0a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b873954b-50e6-4a2c-9432-408fbd2bc3df",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b664da22-bade-435d-bb08-3f9c0837a445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf7ae36-46c3-4763-8ae8-b63aaf5b3887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097ed01b-8c2c-4f7b-82a1-0ca379d9a035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b10240-4854-410f-98d8-5a2012ab06b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305ceb35-8998-4c92-b482-8d8365e1fd91",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6b2119-5806-449a-ab13-90248fc62c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c653274c-6ded-48d3-8e3f-f0ccc4c3a9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe36844c-d078-41a0-bcf9-3636dbda4682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19f84da-3d94-4b11-a30c-ab6d789d4914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56ea33f-57b3-4470-a586-1606e3d16059",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a56b81-6f53-4525-bbe1-33a96f0ff309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc20f61-1fed-4c76-8efe-b606d854d310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dadb96-2788-487c-a5b0-5e07dede8ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2cd6eb-831c-4214-a010-e6d99becfb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98be146f-5c67-4b66-8fa9-d04a715314dc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0a3d57-8f94-4eea-a126-bf546a7a840d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ca6a78-9e14-4281-9f0a-d509f859d61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd70eab-6df8-4280-9d1b-d9aac732a0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb76a0e9-0bb4-4b9f-bf76-af5c88c84eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b65373c-b95f-40d9-8012-9d7c0b437820",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9604c44f-fa23-4a46-b789-c5f2a4e4c967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98ae63a-ade3-43c2-afc3-138ed9d2d2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf89b76-930d-4e6a-9c5e-13353ebcda95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c90361-4444-4d03-b6c6-95c4ac64275f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2386f5-9f3c-49fd-84e0-0f60bd68490a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637140c4-7330-4d92-9cb7-4837763d02c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f203c21-8f08-40e5-8e63-4f7b2c886e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2557b7-e7e9-401f-b7ea-68ecdc1f79b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f706114-e965-42dd-8dc4-defc129347d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef0ac5c-581e-4b7f-9ce8-879f56c7c805",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627014e5-9a77-4373-a57d-55f572c59aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158ed29c-27bd-46bc-ada7-e3162de8886e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc52e743-86e0-420b-a5ec-4c4646eea668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7060e6f-16c4-488d-8c35-c9fc0720e282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d779762a-3ba1-4cf8-b909-1259e7bc6fb5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7137501b-7dc3-48e4-b1fb-80614f52196e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80fe2ed-8784-4394-bed5-3292c5ea1e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c25684-78cf-4789-8dd9-bec07dfe83e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9b2922-6336-48bd-bfdf-2ce4377ff285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945f1edf-ce5a-4093-a5bc-6ee0a30a0c48",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff7555e-b786-49c3-9fd3-39abc13f840e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1c4e76-12f4-433e-a386-174080be218a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b90b50c-aaba-4d58-b54b-b49b9f362e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64403578-616a-4aec-96e8-4a94b0d27ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6763d038-d0de-4c19-ab9f-563762620834",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1b37c9-1720-4292-9710-86257c9201aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e207a42f-4d79-4728-80f6-ba8f8114343e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eab59e3-7df3-402e-940f-f16452827a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd745579-3378-475f-affe-1e34a9d6525a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4679a7-39f5-4e9c-9e35-6846ec07e742",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68259703-d379-472d-964d-858813b7c265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7593ec4d-96d8-496a-9e09-c573bd90567c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0f2aa3-4bf6-45aa-a22e-e97f95a49629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea0e878-a420-47c9-8f86-bee386f11e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b441f5-65aa-47c2-9384-867d9aef4d34",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cd8c4f-29b6-400c-9d12-8b1c4e222470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0015e9bc-8011-4b10-99f6-e5f09c19ccb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bb9797-87e4-4495-ac7c-04c30ef43bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555267e4-edc3-4f63-afee-df9d09dfde39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adab04b4-dd9c-48e0-91a3-df0e9f3144eb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410743d5-87dc-413f-bedc-c60aa8f78148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f84232dd-7528-4ae5-b6a0-b4894050c5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d18b6a-d259-4118-b152-c85403ea19bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200b9be7-17e0-4f01-abb6-549b4c9e232c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00223d98-ffc3-420c-86fd-511609b286b3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df2ae6b-fa54-4db7-b949-2943e9aef3a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "182c4fe4-9274-4f71-978c-193028ba85dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddec8e17-60d7-4358-988d-9808b9951647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44d876e-0096-4a98-aac2-f196805dcaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ecb6e2-ceb7-46a7-8910-1e04a6aa5e7d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c3f617-8b5a-4984-8582-3c4bf6115d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99dee23-9d70-4fb1-ad40-c46eadace20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775ff288-321e-43f4-b134-9d1e32b2226b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827784bc-6dd9-4576-8835-3c12058052f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31a40a5-84ff-42dc-8010-dea06732f65b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86492bb6-d857-4b8e-b160-9b3acbb45447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2cf79eb-4b1a-4247-a737-701fcae0e907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67d1344-57c4-40f2-8ab9-208d4c1d1857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012d9545-f4b5-4ae0-bae9-72e9a313f529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84cf240-d984-454c-b821-ac0e18027093",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e29afb-f3bc-4b79-9fe4-09f32e3d0730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc4619f2-2787-41d4-9ba3-931057b9dd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf46ad1-e3c3-4010-9686-75b7ff0c0e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b90ba47-83db-4c80-b16b-dec7d28040fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb4319c-ed17-4e7b-84ce-e684f3a2697b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85a0c5b-9a3c-40f8-970c-ad9fe3fb0e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c0b21b-fa15-40fd-8ed8-575292eb1c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cc33e8-5606-4980-8309-ccd414dfeb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b1e53a-2a89-4045-a70c-6712445b7e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63876419-f5a8-4988-b4f7-5376f363ac37",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1dac70-925b-4e1a-bea0-d66bf9f5e763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4beca771-a49f-4180-b108-692fd4c84538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de0d77f-baac-4d98-ac80-7c74f4eeeece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a271772-bdf2-4671-b798-6b0cda6a229f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5397abb-5635-4df8-94de-dc5b593aeef8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57cef60-373c-4630-be0a-d65f291333b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4b45e7-8717-4004-bea2-5d6f2d5cb5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc5c645-3034-47c7-8d99-d27f4e5d1e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311bfaf2-6510-4d42-9b81-c50a2be81de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d63c23-14e5-4704-ac43-3cb877e19138",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93639154-436f-43a9-9589-e48b5f9c7938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "876deaa2-871e-4324-8a7f-432e4ae8b7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74e339f-19d9-4be5-bdbd-f28bb410d6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab4a36f-9956-4eb2-a0fa-a0c7525e419b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2af7c30-b773-417d-90a0-6bb6f79c5f49",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95760fbc-ab0b-4747-9b82-0c26911ef940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d174b9d5-3ca3-4a02-a063-bf656840d571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cf7584-00b6-47de-8294-82f3a0df2238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861111e0-90eb-4316-8677-836eb2d82b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71488d63-0ff7-4c36-a691-335956bf6ccc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9717f819-90dd-4bed-9787-6e12e2a23c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5232c54-baf9-4154-9582-0754593947e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4e16fc-f652-43ac-8258-4198e475d0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4f7b5f-9dde-40a9-af24-807b9a91cb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0cbf15-7466-4cd9-9630-7a41e512d36d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41679856-7062-4b19-96a7-9bdc2503339e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9775f1f-6c99-4895-9795-b262010a27d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d75241-773e-432d-860d-6c9c1da350d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2143d687-1859-4a01-8074-ca3f73e8e9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96932aa6-477c-4664-a27b-b87d83e4780d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ef2448-245e-456e-ac08-7aa1eba20799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d3d9e0f-9f7f-4a8e-bf45-78a6896f0921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df93758e-5835-47cc-bd7f-b0dbe53ab6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313d4cda-a3e7-4d66-bf82-2e597f44e89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a70fa7-86f8-43d3-b583-04a5e87ace98",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e77dce5-7f33-4bc6-8dbd-0891e8476d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd63af01-4c7f-4389-9380-d48eac65c51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631f620f-70d6-4753-810b-412859ec37be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00438522-07bd-4b99-9be5-5a206cf3401c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc229d5-c9ac-49c8-b060-9ebb55782f8a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d56f00-84cc-41cf-8e95-4be8ed4d65fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "598686e1-7e76-47f3-9142-62d052f6ff97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1fc2f2-5731-4ea2-8c1a-d89fd1334647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c57ba4c-07ae-4f56-82e9-443b087063c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86186ead-5f1f-4412-8af3-62a81c24824b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2071d59f-ebc9-45d0-b303-414f270abc67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f7372d9-a015-475e-9cc1-7316b930f91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b7fe43-9cd0-4a32-ab3d-58bf5a0117ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e33f0ef-2006-4f07-8426-151fdc19a0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d07190-854a-44e0-a0c2-a085217c7a8c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c160fbbf-b325-4a71-95da-3abe65a2626a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02813b33-6be1-4991-a676-e3b515e6bd00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8a42ee-5144-4f4c-8a19-aeb52a7cf8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a5eeb4-132e-4583-9064-5ca5b74788d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639c19e8-65b1-4988-8452-b9a252d5d015",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26dc3e07-f515-4de3-90a2-11a038b02c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e56ca74-4724-47ce-97c1-95a74805ea90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d4c965-5a63-40b5-8870-a9b5696594ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aeb8b41-e9c0-4efe-b74b-49461fb2b19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa974d15-0f72-4ef4-9f1c-dfb4064cb4ef",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7a0233-00ba-4432-a7d6-eb0a8167d193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db5fae42-1d0f-4878-b8ac-eacb6d6f0706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfa9f3f-5785-468f-8edf-1ef4550e9391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ba8a76-5105-463f-934e-c84a7358add0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70eea96b-9bd1-4dba-af7c-46ef7595c6e6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f9aa37-7873-451a-a909-1ae283756946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9321a7cb-db8b-48a4-a271-9207e676d07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6558b69d-be24-41d8-b47e-3896d5a5c51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f153e42d-303e-4186-bf4d-9095d78d0ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f0cc17-c4aa-427e-9384-e3aac08a85e9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a59261-45bb-47c9-a414-68bba2e77b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52696c69-e144-46e3-8b77-d95b1d5c459e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f4cb24-77dd-4577-b25c-7474af5a5337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d34c442-fd93-49f8-a0bb-dc59ea7b6f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba124426-b8c2-4790-976f-e4838fef31ce",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7915cc-77fb-4989-82e5-1bc50887850c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c052352e-aee2-4d7d-a5df-3e70837a0cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b12b6b0-67ca-4535-bb31-4add7cc80e39",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bb2b6e-e307-402b-b2fb-059fcb77fe0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac6ccd4-0484-4340-aac8-3ec465522b63",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08cb892-c042-4b8e-8f53-7642e1f86697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df392a08-504b-41d6-9450-074fd90afad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f00c524-a147-4a27-9ee5-c52c2bde6568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d029482-c611-447a-8a4b-19bb6ff7d995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10856df-a141-465e-970b-ca06e3128fa3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3308b535-6ccc-4b83-b3ab-a29a92657f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c443b3-3b00-4d89-99a8-31ff24e9137b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4b2fed-a71c-4481-be33-01640c433343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1271bd-7bad-4197-bc80-c80a7c0bdf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ca71da-9b0d-4912-899a-f946fcdf7ff6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776fe0e3-8de8-49d3-af2b-b485f682b799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e9f517-74e7-446b-bd85-b717608ba53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef9530e-4f97-4205-9ec6-9ff2d1864bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc316f1-32de-4ea6-b693-033d9ae0d627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63919a4-1d4c-443f-b4f3-21e8899761e0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe406e8-3b14-46f6-9efc-4fa1aa5ed836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31fce4b0-c96b-4c7d-90c6-a6919494efc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b517b93b-f58b-497d-b601-e8fa1a5647ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34ff68c-9a7e-480a-b53a-0b67bf10cc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3887e6-b839-42c6-a5b9-b825977a0ef3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d56892-ec39-4a90-b74d-f86c716d5d95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30842176-5fde-48dd-bcf6-ede2d8cbb3c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f55a99-abe3-40d7-97af-81e9a057505b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cb33ae-c97f-4485-88fd-6be39bcc2368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7fe367-103c-4adf-9365-56d529bb4cde",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343ceb07-6bdf-4e74-a13e-3978d6232e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b5dd12-fdea-43d5-9f95-13f61f9b49f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18602d77-8eb5-44cd-a900-626b3c0608f2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf298e18-18b5-4082-86f0-20e40d7430ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec234f9d-8755-4ee7-811e-7056001ecefc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d0357d-1e73-41b4-9a11-1d1a0b9d7c96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3170e9a-0565-499e-a153-470cf46e79ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da57b163-43f6-4698-b931-40a3f3d42433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6626dee6-150e-4f2b-aafa-c22833164e8f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "597d8c05-3263-465f-80c5-2094e6baca3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5761f708-fe27-4a72-aa86-e913b1487ccd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "730ff4fe-3cc5-4035-91fd-572390bf1d55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74d350ad-b633-47ab-b157-e80e93c435e6"
                    }
                  }
                ]
              },
              {
                "id": "b5853940-31c6-46bb-ab8e-603d0c408036",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38df1775-23a7-44b5-86d8-dfff11ff7040",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3784929b-bacc-45e1-b2f5-a9a642fad27b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fc4e79eb-626d-425b-a75f-91a48d810846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9316d19c-78b3-4b5a-a6e5-f3c22243bcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ea85542-841b-49f4-8c43-2d5267a5e41b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23716c08-e60d-4d72-acfb-571820e9e6e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8102b560-6a33-4bef-ad79-8352ae1acd09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22acfab5-9505-4961-8b6f-12880b9fd184",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4a9913f-e8b6-457e-9153-1e81820bde4f"
                    }
                  }
                ]
              },
              {
                "id": "750abe1c-e93c-4025-bb85-999d6fc5b0f9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f3212274-45ca-4431-b4dc-d91eb5acd842",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af485c8f-e9ca-433e-ae52-8521327f5e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "09d8db86-93f5-44ca-bc73-5d03721f7b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85abc72-386a-4078-96d4-72f41922db6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c5b27d-2b8f-48ca-9807-3443463a4c86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "756dadc0-df23-4a2b-aa68-c2f6806762e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e03f0dee-2e4d-49b7-a3c0-1b7a00f9bd9f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fc0aedc-2f70-42c9-b415-8de47ba5f5cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9f4667bc-acbc-4f2c-9c47-0d3c178d34c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a88fd2d-4b36-4353-bff9-8ed3684b9dd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22653a9c-9479-4f70-9bde-da7f8c832200"
                    }
                  }
                ]
              },
              {
                "id": "99dca96a-99f4-47de-bf37-a15f49e6bcea",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3434c675-df87-4c5b-9302-dafbce0fe7f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5448d6c1-da81-457f-a40e-1098d7bc951f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b96dfcdb-cf91-4dc1-ab69-d7a1b9ca3248",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d5c05e1-c376-49aa-8fa3-7216aa7dfc37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c645e377-0009-46ee-9fd8-1d8974a48b44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a729d557-8177-4ade-a3d1-24de71c5a0a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "441a0f57-f5c2-4f1d-b0c1-a3bc6ea43c7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c46799b-0f7e-42ce-b202-c808dfd4115b"
            }
          }
        ]
      },
      {
        "id": "54881bc8-bbac-4a2c-b895-02daf2fa98a4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b6009912-2eab-47f2-a6e2-76acd70ebb27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2e7b7b0-2217-4574-970e-c47cab577230",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77c62982-79a2-43da-87c2-8b14fc025518",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b500a3cb-d8e2-40cb-9d61-426e3eae7edf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "380f2f6f-bcf2-43db-bf7b-cefd285aef1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb4df45-3803-4a08-ab53-138fa5ff363a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f1012a3-8042-4978-a31e-44c91d62effc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5b44b60-3f25-42bf-9170-e84aed543191",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7098223-8d56-41e1-8b26-313c3eda71f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95a4890c-f95e-451a-8687-e9048fe92f46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62d81178-8c95-407d-87de-02c914e549aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "077a4ab9-e14d-4986-8982-457da201c46e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e27b739e-96cb-418e-a0d0-064c3ddb0680"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d552c36d-d468-432e-b130-a362f0ffccd6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "541bba0c-bfdb-4cc0-baa1-2390c0d7202d"
            }
          }
        ]
      },
      {
        "id": "869dd800-6525-41b2-83e5-d51523cf5968",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "24b80147-2217-4f9f-aff9-b9e5d93c2ab9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "206b93db-94f9-4d65-9eec-1e900957f8ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e99467a2-4b7c-4382-ad24-eee4987949ba",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e584c4-4396-4918-86ac-d1c16d82efef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33ef11c5-c183-4a73-b2db-b40ee04a96d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aec6336-4ee7-47d4-8f4d-7612f20188eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5556c86-8332-41ce-b6b1-7131df2909ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44f7887a-0c13-4f19-9d4e-784194b13657",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70ca5f46-affa-497a-bb0a-4088cbdf4b15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53191e16-0c4b-4114-92b8-78d7b1c7a11b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6e4fbdb-3c73-4ae2-9a80-934d71702008"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "462dd041-c4b3-4bb8-8b18-9fb76f9737b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b114a206-ee99-4af8-8482-43e6b0e4b449"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c041113f-5ece-4538-85f7-8857a6e92415",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5865b215-2674-4444-adaf-514ec6469fc4"
            }
          }
        ]
      },
      {
        "id": "2a463276-1435-4fae-b7a8-39220a4a0b97",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1eb1923d-9071-4ebc-899c-76908bc8c268",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f935e41-cabb-4030-aeef-ed4d6f8ae3a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88b26945-659a-4839-86a0-0e8e20957b76",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83e96d6-5915-4ff5-b6bd-855ed3407f3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "101997c9-5dd6-486f-b954-57ea95f26789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9994794-750b-4178-aa6b-3fb92400c00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1361244b-832e-4e2b-a971-6e6878f4777c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c304e0b9-8910-4fdb-8651-0c6df367d2f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "226813f8-0398-4660-ade0-524064f20d59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9696cc32-f797-45e7-a700-a0482c7ff639",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34adb5fa-f3f6-4179-be57-56f9bc5a0b9b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17d8916a-e693-4701-a5b4-1cf2e29c1b1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f5d0285-8ebb-4cac-87ae-f9162e5e7734"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a9a9781-d0e5-45c3-b228-9bc1f337db84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7ee64f6-c718-4abe-a6ae-233a62b48699"
            }
          }
        ]
      },
      {
        "id": "d6b722e2-97b8-4655-92ee-2fe5d976f6f8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cccca7da-6294-4f8f-905b-09ca8c5b178e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2d4f9af-35e3-4850-9b91-4ae84bccd9e8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "630d645b-58fb-4756-a31d-2f33c6aac772",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e590c936-70f8-46c5-afdb-76cca4d8bd9d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd3de61e-dc94-4812-8e8d-f3050a0ca356",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.95634920634919,
      "responseMin": 3,
      "responseMax": 10948,
      "responseSd": 782.1037272370589,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723941821599,
      "completed": 1723941855304
    },
    "executions": [
      {
        "id": "f0eda0df-8616-4f8f-aa57-6d4f058f549e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a3400b0d-dd96-4f79-a53b-51156099777c",
          "httpRequestId": "a872391b-9ff3-424a-91b2-d403a38383c5"
        },
        "item": {
          "id": "f0eda0df-8616-4f8f-aa57-6d4f058f549e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "90894dcd-b764-47e2-bec2-aa3a625108d8",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "9ebec8c8-c29b-458a-90d1-e8b6d9e4490d",
        "cursor": {
          "ref": "1f555e2d-5c21-40ea-bf34-0aad1e09f7b0",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8631ee6a-0cd1-4c6b-8492-d3d2538b8bbd"
        },
        "item": {
          "id": "9ebec8c8-c29b-458a-90d1-e8b6d9e4490d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4f30fdba-ee73-4a8d-941c-60706a99bf02",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "0fc56a96-96b1-49dd-8404-f61ea140fa6a",
        "cursor": {
          "ref": "5face976-a989-4a33-8c01-6642dd260738",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1a565272-9063-48dc-8d9f-d5b2f02d64e8"
        },
        "item": {
          "id": "0fc56a96-96b1-49dd-8404-f61ea140fa6a",
          "name": "did_json"
        },
        "response": {
          "id": "733edc20-dd20-4c8b-ae98-59028b543691",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f277a44-e6f4-4d91-90af-f662c44f66ad",
        "cursor": {
          "ref": "18afe8a8-987d-4818-8561-39f7abf34c15",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c2622df-e097-436d-900f-cde2b735b89a"
        },
        "item": {
          "id": "8f277a44-e6f4-4d91-90af-f662c44f66ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "92483cac-cc7c-4d77-bc88-86ed9d79295b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 458,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f277a44-e6f4-4d91-90af-f662c44f66ad",
        "cursor": {
          "ref": "18afe8a8-987d-4818-8561-39f7abf34c15",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c2622df-e097-436d-900f-cde2b735b89a"
        },
        "item": {
          "id": "8f277a44-e6f4-4d91-90af-f662c44f66ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "92483cac-cc7c-4d77-bc88-86ed9d79295b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 458,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5605885d-f65c-457a-8257-8921a3f6a6e7",
        "cursor": {
          "ref": "e523928d-87ed-4824-b408-09c10f7820e5",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3823d67a-176b-48e9-a07c-0f747c3b27bc"
        },
        "item": {
          "id": "5605885d-f65c-457a-8257-8921a3f6a6e7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3e7d55ee-60dd-41e7-b8a5-e4bef61a61ff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869b48f0-8ddc-4298-93ce-d841708249b4",
        "cursor": {
          "ref": "9a1c0106-f88a-444b-af1f-15aab3878faa",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "27bd68b0-9826-4c41-b1f1-35686111cace"
        },
        "item": {
          "id": "869b48f0-8ddc-4298-93ce-d841708249b4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eab7b43d-3b0c-406c-8dd1-9d9f5688bf11",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee67dbf7-d422-4745-bf55-a89b825899e0",
        "cursor": {
          "ref": "f53c2116-1d07-4c9a-8650-3a55432f51f2",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e12a7ed1-cd0c-415d-b4a6-f9d56d0a5011"
        },
        "item": {
          "id": "ee67dbf7-d422-4745-bf55-a89b825899e0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ca127547-885a-4b1a-9d2c-acfbde99aa96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d220e0-544e-4bd9-ab10-9fb47b566b29",
        "cursor": {
          "ref": "eb3a98a7-f0ec-4000-b4a1-d6d7fceff93a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6eeade47-9712-4545-a914-6d5a1b14ff0e"
        },
        "item": {
          "id": "e1d220e0-544e-4bd9-ab10-9fb47b566b29",
          "name": "identifiers"
        },
        "response": {
          "id": "ce1a0593-fa6c-45ca-b627-d7078d85864e",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e29208-2875-4950-87cb-372a3dc41642",
        "cursor": {
          "ref": "02b652a6-92ec-4253-a182-ffa0d850536c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ec3c1ce8-d902-4532-9c7e-f2f4c5a43086"
        },
        "item": {
          "id": "58e29208-2875-4950-87cb-372a3dc41642",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "886a05ac-a7ed-41e2-83ec-626fe88a5b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9663d4-451b-48eb-94ca-8dc105ce1f30",
        "cursor": {
          "ref": "eb6146ae-4ab0-4f33-956a-9a6ca7d38aa5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4ca1a730-df80-4d6f-951f-e1ddb54702c1"
        },
        "item": {
          "id": "8d9663d4-451b-48eb-94ca-8dc105ce1f30",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b8bde01b-2e4f-434e-b001-ad4e00d989ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54546c67-7e8e-4921-8070-a1ebe1413976",
        "cursor": {
          "ref": "40768250-b238-4fe1-957e-ff21fc638491",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "982fe93b-eaae-437e-a94e-3d715422050e"
        },
        "item": {
          "id": "54546c67-7e8e-4921-8070-a1ebe1413976",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2ec5b5b2-eb64-45ce-9814-dadf848dde9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00939dde-ba1d-4d0d-af1c-dd319b87634c",
        "cursor": {
          "ref": "8d370089-0154-4f7f-aa32-1d880955e3b6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3e52f724-651d-4cce-b665-9cf1ac09b8a1"
        },
        "item": {
          "id": "00939dde-ba1d-4d0d-af1c-dd319b87634c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8b2747b5-75d7-433c-95da-78f9502a9baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177a370e-a07b-46ef-b04c-cc6c6522bf1f",
        "cursor": {
          "ref": "ff2de2ed-f5c2-4dba-a57e-6b558d199564",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a1b75b0f-5e96-42ee-a587-f6bd579c3396"
        },
        "item": {
          "id": "177a370e-a07b-46ef-b04c-cc6c6522bf1f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a20db6e1-059e-490c-9349-3a9e74e9dea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c9559e-7871-4678-82ea-a90b49cfca04",
        "cursor": {
          "ref": "7eb22dd8-e4d5-4ff5-aebc-86e4ac6f7eb9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b6d3e976-bb0f-4e62-81fb-fb0c1e7d5c8c"
        },
        "item": {
          "id": "c1c9559e-7871-4678-82ea-a90b49cfca04",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c1bbbe58-b0d5-4c17-8768-fd44095303b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bd525e-be39-4571-a37c-dd4c42a7d65b",
        "cursor": {
          "ref": "8149354e-6f4e-42cc-a0b8-2a381c5a6365",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "79d83c32-0b1f-4b09-ba09-2f7a14c3b930"
        },
        "item": {
          "id": "d3bd525e-be39-4571-a37c-dd4c42a7d65b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "19db7bfb-c930-4a6e-a36b-de8ae36760ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d546cf-d073-4f21-8690-d0416353a7c2",
        "cursor": {
          "ref": "07e5d854-ca4b-4848-8299-a25d65a67f41",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e3becd71-9f3a-4e59-8438-ce649321611a"
        },
        "item": {
          "id": "97d546cf-d073-4f21-8690-d0416353a7c2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8f60a903-3e58-4ba6-8632-5dd416a2e4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b136358-cc95-4285-861d-41513afab639",
        "cursor": {
          "ref": "c4566ea0-18b5-4bd7-9a80-1999b6dc52c4",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "16946805-f680-42f2-9c20-175b18daf457"
        },
        "item": {
          "id": "2b136358-cc95-4285-861d-41513afab639",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e66abc68-86ee-4690-a15a-12df3c471bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8f1191-140d-4204-b05a-7d2c4d410e09",
        "cursor": {
          "ref": "c5733025-bc4f-4d7c-bc60-8e91c74d0ab9",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c2c8710e-f134-4123-930b-6b48c6abb220"
        },
        "item": {
          "id": "de8f1191-140d-4204-b05a-7d2c4d410e09",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0a54b5fd-e59e-4cf9-8739-03c35b52afde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7129144-601b-465f-a8da-a439da020748",
        "cursor": {
          "ref": "12d00d57-0d3f-412d-a21c-728f4e51a0b3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f320395f-8eb0-4387-ba61-f2bf6b129ce4"
        },
        "item": {
          "id": "b7129144-601b-465f-a8da-a439da020748",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "093a6796-9c72-4ddc-bee6-7dd72aef68cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de390953-09ca-4e57-a797-91519857be3c",
        "cursor": {
          "ref": "865b7dd3-fd1e-4ae1-b7be-23422f54df57",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b6742e0e-0564-447f-8bf5-2fdfbbe91ccf"
        },
        "item": {
          "id": "de390953-09ca-4e57-a797-91519857be3c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a95f6738-804b-47de-b71d-a718a43c180f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f349aaa-d153-40bd-8b43-ab6931137881",
        "cursor": {
          "ref": "7aa8e06c-7fd4-4403-858c-72a6ef8d8346",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "33e49880-83a0-42f7-87a9-ac6f7faba182"
        },
        "item": {
          "id": "5f349aaa-d153-40bd-8b43-ab6931137881",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "89187943-9a01-425d-86ea-7f1b84785702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcb8bcf-5cbd-4082-b6e4-f0bce6e277fb",
        "cursor": {
          "ref": "bfa28786-d042-4b11-8048-0a04f72b7465",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "12db9ade-eb9c-40e4-a9b7-c1ea477068f8"
        },
        "item": {
          "id": "8fcb8bcf-5cbd-4082-b6e4-f0bce6e277fb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "616a0e91-352f-43d8-9472-3486cb19b045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b11370e-31a8-4bbc-a88c-22ccbccec3f7",
        "cursor": {
          "ref": "98bef2d5-e1ae-4486-a7ac-3bd7564d3e1b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "34211b48-a59e-4b0a-be20-1bef3b823d96"
        },
        "item": {
          "id": "6b11370e-31a8-4bbc-a88c-22ccbccec3f7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c46aaa17-6348-4094-bb85-3ced4683cd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8abfb7-f207-4684-87c0-4c4bc8bfc811",
        "cursor": {
          "ref": "e735cc23-4e49-4281-8dea-04e4f51e1fe4",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e7db3668-ad10-46ee-8ced-14d31a2a80da"
        },
        "item": {
          "id": "9a8abfb7-f207-4684-87c0-4c4bc8bfc811",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6abd4e6a-3028-4a40-9271-93a63c6598b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bb13d5-fe32-42ef-8098-bdf5c9011c0a",
        "cursor": {
          "ref": "05f1aa86-1ae8-4663-845c-80f02ca8cc29",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "896bc1e8-a07a-4681-8dff-d9a6331a196e"
        },
        "item": {
          "id": "c7bb13d5-fe32-42ef-8098-bdf5c9011c0a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cf5c7dc0-0cb3-4ab5-9177-6186268a3b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad9d58f-aa38-464a-97c8-53ab2d7c4928",
        "cursor": {
          "ref": "b107ee6c-9ce5-4c20-bd0e-4b3145e8a78a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ed378135-69bf-428f-b3c7-517384b1adeb"
        },
        "item": {
          "id": "bad9d58f-aa38-464a-97c8-53ab2d7c4928",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a390d752-efe5-4020-a677-b4d49ee9e080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cce8f9-afc7-4eb3-90c3-241cf2577885",
        "cursor": {
          "ref": "b7aa1029-69db-4b3b-b1c1-d6b1ddb1c176",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2dc2d9d9-99c8-4e2c-98c1-66faff1a997c"
        },
        "item": {
          "id": "f8cce8f9-afc7-4eb3-90c3-241cf2577885",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f0d9b9a7-c3af-4260-9bb0-01c5597c4f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474e60af-dbe5-4241-bdbc-7ef26a95e858",
        "cursor": {
          "ref": "ec9d5905-4790-4dac-9e3e-d250829883bc",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2a3806a9-6a0c-49fe-b42f-bdbdfeb0c329"
        },
        "item": {
          "id": "474e60af-dbe5-4241-bdbc-7ef26a95e858",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b2ccf9ab-6cf0-4ddd-bde4-d75123da57df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a063cd-841e-4440-bf50-5611395e7bec",
        "cursor": {
          "ref": "2a2c80e3-bf1d-4771-b392-ad490348b0c1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4852f174-0a70-4ffa-83d4-8e4cc8f828b9"
        },
        "item": {
          "id": "99a063cd-841e-4440-bf50-5611395e7bec",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5b7fd370-4cd8-4e43-be8d-5dd14a135a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20dd012-4494-4090-a438-d6ab39065c7a",
        "cursor": {
          "ref": "d5b301e6-6be1-45ec-8a45-26c8f7080720",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "31a487f7-afb1-4118-879a-5e599aacc291"
        },
        "item": {
          "id": "b20dd012-4494-4090-a438-d6ab39065c7a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a52990d4-7925-4641-a4a4-7098258dcef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92f38bd-5013-4cc3-9ada-dfc5894e27bd",
        "cursor": {
          "ref": "82729685-a11b-4958-aa61-61a511b59a4c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f48d2eef-a806-4b06-9800-498aad8bda7d"
        },
        "item": {
          "id": "b92f38bd-5013-4cc3-9ada-dfc5894e27bd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6ae5ded8-9f39-416d-adf2-2abd0ea65b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f07aeac-8d51-4888-b315-6b47ee2eff86",
        "cursor": {
          "ref": "4e16cfdb-2c2f-4948-ab7f-cea2a14282e4",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "321fda11-1bf7-42dd-b01d-c5361575c3d9"
        },
        "item": {
          "id": "3f07aeac-8d51-4888-b315-6b47ee2eff86",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9658af40-b21f-424c-86ad-61e5727240e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8936d0-77fe-41e3-94a9-cd6e80146c6d",
        "cursor": {
          "ref": "ab9bd256-88ef-4904-a232-d5bb75b27ee1",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "29cacdd7-8655-4c1d-8180-482db64512cd"
        },
        "item": {
          "id": "7a8936d0-77fe-41e3-94a9-cd6e80146c6d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4413efad-a05e-4743-887c-e1710c784c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c06b317-8602-49f8-a9f2-13cadd09e823",
        "cursor": {
          "ref": "d5ad0c62-9007-4e28-91a5-1bfbce68beb4",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2229181c-64d2-4cad-b251-60286fdd0615"
        },
        "item": {
          "id": "9c06b317-8602-49f8-a9f2-13cadd09e823",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4d5455b4-b203-453d-9a59-185284af437c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae7aebe-140f-4a5d-9c34-4c29df75f749",
        "cursor": {
          "ref": "1675fba5-25a4-453b-8c65-254c9fca2feb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fd69cdd9-8e96-4de9-a710-90c79edf4be4"
        },
        "item": {
          "id": "dae7aebe-140f-4a5d-9c34-4c29df75f749",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6c7ad1d6-3e03-4f3d-9a5b-c62b6d2f56d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e7e730-2c44-44a7-9d50-0e6071ffe751",
        "cursor": {
          "ref": "8fa84089-f786-40e2-a62f-a8c107993873",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "afc7ed75-82c6-4a68-8cf7-7b873876e1b0"
        },
        "item": {
          "id": "f6e7e730-2c44-44a7-9d50-0e6071ffe751",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "48bfa12d-4fc2-4f60-a8db-c41183e093af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55308fee-744e-4eab-874a-e602d45bcbfe",
        "cursor": {
          "ref": "9bf5d7e7-33b1-4fea-9d00-7c1bed7202e1",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "27c9624d-283e-4108-be81-436e5b27c07d"
        },
        "item": {
          "id": "55308fee-744e-4eab-874a-e602d45bcbfe",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9601c8df-b126-4785-8e94-c85fa87d011e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5d1271-1225-4b5d-beee-474a958e7b65",
        "cursor": {
          "ref": "33968a7f-a76c-4835-b953-3148b77b08c1",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7a684310-28ce-42ff-8d91-acd459dd0ba9"
        },
        "item": {
          "id": "dc5d1271-1225-4b5d-beee-474a958e7b65",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2bfe8e5a-564f-4454-886c-402e9e2b9421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88f2828-d4d1-4378-9e93-8900bfd3139a",
        "cursor": {
          "ref": "f1c3c368-860c-4b87-ab91-0f387e408d13",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "001f83e9-fe9f-487d-b8ac-4c71ab81683d"
        },
        "item": {
          "id": "b88f2828-d4d1-4378-9e93-8900bfd3139a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3b6bb8b0-4bf2-4520-90b3-01c8b4b5d025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24d3033-56f1-4727-b5eb-dba9e72a01cf",
        "cursor": {
          "ref": "dc71d9bc-7f6e-41d3-abd6-0dab843e3f19",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dda20a50-5b84-4dcc-9115-f6a44cee7c7b"
        },
        "item": {
          "id": "f24d3033-56f1-4727-b5eb-dba9e72a01cf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4f33b36d-a211-4417-9673-70240ff865f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aac9566-03a5-41c2-959a-617547cd955c",
        "cursor": {
          "ref": "5d6565e6-b008-4ce1-bc40-4b7e2b6165e0",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "78aa013e-cb94-435b-a4f0-a3656bdbd200"
        },
        "item": {
          "id": "6aac9566-03a5-41c2-959a-617547cd955c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "db00538f-1467-443c-a7c0-976d3fe95a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ce1108-854a-4d84-b0d1-b0525f295202",
        "cursor": {
          "ref": "720fd5c2-4b6a-419a-8f05-5459cbb17aab",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "41811807-67e0-4217-9443-dca7b7b7aac4"
        },
        "item": {
          "id": "98ce1108-854a-4d84-b0d1-b0525f295202",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f36ed565-63ed-4090-b965-bc87416fe799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6115aab-40f2-40e8-bc7a-4ec9db774612",
        "cursor": {
          "ref": "0df8c092-0c2f-45e6-86e2-d9fb65918714",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "814df7fe-efea-41db-a270-8266a57f3e8c"
        },
        "item": {
          "id": "b6115aab-40f2-40e8-bc7a-4ec9db774612",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fee57442-7e95-476d-a63e-e3bff6df6617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567e48cd-9d09-48fa-9771-f5f393c370c1",
        "cursor": {
          "ref": "b2a07b45-3898-406a-853f-0d7e74b78f9e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3537f327-4cff-4dbf-a882-40ad118e0dd5"
        },
        "item": {
          "id": "567e48cd-9d09-48fa-9771-f5f393c370c1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6054556c-3314-48c9-9c3f-0fabd0e5eb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c446ad95-cd7c-4a44-8ac5-e246b9019963",
        "cursor": {
          "ref": "11b7b43a-bb56-4d22-a640-117b2b545c83",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5ba47d8a-9323-4df0-87ec-3cc477647b5c"
        },
        "item": {
          "id": "c446ad95-cd7c-4a44-8ac5-e246b9019963",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b0656192-7006-49f0-839c-07f2571a0451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b67b21-a362-4806-b4ff-f6045cb9c77e",
        "cursor": {
          "ref": "f67c06c0-ec20-4313-9abc-21c071857038",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "afd45f75-0338-4faf-821c-24c101166e0b"
        },
        "item": {
          "id": "e7b67b21-a362-4806-b4ff-f6045cb9c77e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "be68b279-6d3b-4a9a-abae-80603f40ee4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95acb739-2a01-46a3-befa-cceb7e3332da",
        "cursor": {
          "ref": "5035ae4b-ce6a-4314-9c1a-99d562717926",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "18f8faec-6899-4912-abde-4f28fbaaf68f"
        },
        "item": {
          "id": "95acb739-2a01-46a3-befa-cceb7e3332da",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b9d5a034-9e2d-4776-a4f7-d5d656d7c9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc65001d-55ac-4a2c-9ac0-f7edbfb00a18",
        "cursor": {
          "ref": "c4ba8811-f5dc-4d44-86f1-2198527a7090",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "26d164a5-7c12-4f65-a3b3-0cbc7d713204"
        },
        "item": {
          "id": "cc65001d-55ac-4a2c-9ac0-f7edbfb00a18",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "75953719-561e-4cfc-8095-c800eb2f053c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fd8ba2-1f76-40c8-a91d-fbfd6c7dd2c1",
        "cursor": {
          "ref": "63fc8bc7-066a-4b81-82c1-b7e3e54e7e5b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "846d7009-6f96-4e54-96ee-4301caa22002"
        },
        "item": {
          "id": "25fd8ba2-1f76-40c8-a91d-fbfd6c7dd2c1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6243943d-835c-47a9-b1e2-40e33187cd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2e69a9-31f6-4a68-b180-2726be6330a4",
        "cursor": {
          "ref": "aded7642-a1ce-46a8-bad6-aa442fba03b2",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3f0c0579-be42-439d-a97f-f6d38663074c"
        },
        "item": {
          "id": "ed2e69a9-31f6-4a68-b180-2726be6330a4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "67dd5b99-f65f-4d88-ae4f-a118d98e4654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38342c43-cf94-4a93-9510-7f3315b8450f",
        "cursor": {
          "ref": "7274f648-cc1f-4f9c-9d31-5c076b9e0aa1",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2c064fd4-cfd4-4190-a8bf-956591cfd7c1"
        },
        "item": {
          "id": "38342c43-cf94-4a93-9510-7f3315b8450f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a1130cda-f9ad-4ae1-bfd7-f48f648cd250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b215abf-96b6-4ee4-abac-8fd609bbb4e9",
        "cursor": {
          "ref": "00966f52-2a53-49fc-98ee-99b7be1a35e2",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b6591311-b46b-4a3e-b966-afd72e2ec754"
        },
        "item": {
          "id": "4b215abf-96b6-4ee4-abac-8fd609bbb4e9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "50315565-e788-488e-b72c-39d7fb6d39cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760cca60-a424-400a-a4e5-7e8cb6e958c9",
        "cursor": {
          "ref": "28f0a705-a09d-4a8a-a96d-4fa7f8407c35",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "63de0bd8-5ede-4e32-8462-d5d233f29bf8"
        },
        "item": {
          "id": "760cca60-a424-400a-a4e5-7e8cb6e958c9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0bab949b-bf23-4825-91dc-1daa27a43f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a9a455-1e0b-4dc1-949d-af3af947eff9",
        "cursor": {
          "ref": "4437926f-cda5-4cac-b820-9ed847d3b9ad",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f1fa3764-6ec7-49d4-ac20-ff9eee7e043c"
        },
        "item": {
          "id": "89a9a455-1e0b-4dc1-949d-af3af947eff9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "83307aa4-3138-4972-91e0-417c5156e8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71575487-5b86-49fa-93f9-ef04b18b5fbe",
        "cursor": {
          "ref": "0994ff6d-9e1a-4981-9a3c-d3740dd1052f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f8fafb3f-9ab5-4a84-be84-183f8b18b1bf"
        },
        "item": {
          "id": "71575487-5b86-49fa-93f9-ef04b18b5fbe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ca75eb4c-1a17-4d1a-99c1-447de90a66c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cdac24-3b3e-4c64-afda-684b510c6c80",
        "cursor": {
          "ref": "d5fc9e92-aadb-411d-8292-9d746a08e380",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "aa28b9d9-f895-464b-9c85-274818f1999a"
        },
        "item": {
          "id": "46cdac24-3b3e-4c64-afda-684b510c6c80",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5c3024e4-5f63-4f67-bc97-2f181be4da28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135153fa-aee6-46c0-84e5-f62c949a0f87",
        "cursor": {
          "ref": "dfe7fd21-eebd-40f2-b258-b968e1f92c95",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2b99117c-25c2-4439-97e1-74b70919fcef"
        },
        "item": {
          "id": "135153fa-aee6-46c0-84e5-f62c949a0f87",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "912a59cf-292f-4f30-ae14-7173506378cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d75d85c-74ce-491b-88e8-ae8810f4800f",
        "cursor": {
          "ref": "ef77f45c-4345-4932-94ef-0744449b8d02",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "15f607e4-4566-42af-b865-5a9b1a41aed9"
        },
        "item": {
          "id": "7d75d85c-74ce-491b-88e8-ae8810f4800f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "002e4d00-c671-4e37-801e-3c6902641a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f794fc32-f6fe-47cc-a1f2-c8dfc0085a11",
        "cursor": {
          "ref": "64d06b60-0f8a-4885-a95b-b6cc168c5925",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "20cf9c2e-021e-4d57-948d-3e297bb6c1ed"
        },
        "item": {
          "id": "f794fc32-f6fe-47cc-a1f2-c8dfc0085a11",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "71a2e8cf-9f9c-43b1-898f-31f8a08973db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75440cd-efd8-40a6-b201-3e55648f576e",
        "cursor": {
          "ref": "dcc2a831-ee3e-4f50-81c4-75a450ccdfa6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5000f653-1d0a-44c8-8781-19a467b601b6"
        },
        "item": {
          "id": "d75440cd-efd8-40a6-b201-3e55648f576e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "eed90027-ca39-4e6d-ab29-e3216be3580a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3697bb75-567a-4f17-bc14-6f04b50e4b51",
        "cursor": {
          "ref": "7d126fba-5c46-427b-94fb-032d6f7bd3e0",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "43fdfe04-85cd-4595-8192-e2ea56bab69c"
        },
        "item": {
          "id": "3697bb75-567a-4f17-bc14-6f04b50e4b51",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "befa7c10-d2ef-4c50-8f7e-0b61cc105e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21b9dc9-2d88-4999-b90e-7837aea3c487",
        "cursor": {
          "ref": "d5b4faf8-84a7-4004-9b3e-65b9f07fc95a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "019702ef-b577-4f3c-b2e5-81ff097cbb6b"
        },
        "item": {
          "id": "b21b9dc9-2d88-4999-b90e-7837aea3c487",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8bbccd6d-60bc-4444-905b-95ce1b42ca7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c655fdd-8adf-40ce-9fba-7e72008cc8a3",
        "cursor": {
          "ref": "f5470e81-9e16-4bda-9189-039947d01c69",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c63b1bc5-2f02-4afe-a3ae-6b46d4644bd6"
        },
        "item": {
          "id": "4c655fdd-8adf-40ce-9fba-7e72008cc8a3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9b4c5ca3-caec-422f-96ac-97c3125426d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780f53b7-6709-4061-b48b-052176f7cc8d",
        "cursor": {
          "ref": "fd365983-adf9-44d0-8a09-49a881f6cad1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ef3c03c9-dc21-4ec9-82ab-e2611f481c91"
        },
        "item": {
          "id": "780f53b7-6709-4061-b48b-052176f7cc8d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5fcf9c67-2ba5-4495-a9cb-38d73ced744d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c2c3d9-68f7-4718-950c-57784b914a5d",
        "cursor": {
          "ref": "442d093f-dd00-439b-bdd1-e59fc8f96fe5",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "30100aae-40cd-4302-aca9-a79b21591aa8"
        },
        "item": {
          "id": "04c2c3d9-68f7-4718-950c-57784b914a5d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "aa7da2f6-a28e-4c0b-aaea-df42486db4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5361be7-d7c2-4956-801f-66c7b171bbae",
        "cursor": {
          "ref": "2a6f4454-6c4d-4f06-86d5-e5ea3e411317",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f1188d58-4424-44ac-8bda-ab17c4031560"
        },
        "item": {
          "id": "f5361be7-d7c2-4956-801f-66c7b171bbae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f8737b13-a7bd-4f78-9881-40c92cdf7ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa06827-be75-4877-ac5c-35f571eda663",
        "cursor": {
          "ref": "53951f60-6aca-4aa5-9f94-2d4c7fe69194",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "445da7eb-b80e-458c-8749-0f3c62063770"
        },
        "item": {
          "id": "aaa06827-be75-4877-ac5c-35f571eda663",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f45eeab5-5213-4960-8efd-972bf68b6b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6fa546-f7e8-4af7-b3b2-7f897aaeffda",
        "cursor": {
          "ref": "78db06a8-dd43-49e9-b711-34bc5568bfe3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "466512e8-991d-4c83-90d5-b6faf9a60b34"
        },
        "item": {
          "id": "bd6fa546-f7e8-4af7-b3b2-7f897aaeffda",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f16c86bf-5c44-4dbf-b9af-7b37b40f39b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a158c3b-61a4-4efa-bd20-e7d42cc7f582",
        "cursor": {
          "ref": "5d67629a-8240-47ae-9b5c-75eb4f45f041",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4778996b-972d-4736-91d2-7ff03d460f3d"
        },
        "item": {
          "id": "9a158c3b-61a4-4efa-bd20-e7d42cc7f582",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "120c52e0-4ce8-41b2-adda-2236076c7344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc16aa3-6f04-40e6-8343-ec5f6a28f547",
        "cursor": {
          "ref": "c1d0937d-5006-4938-8114-1cb0ebcb0c75",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1c91c690-23db-4b69-91c3-5bc3e4096a5f"
        },
        "item": {
          "id": "afc16aa3-6f04-40e6-8343-ec5f6a28f547",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c0b83833-f0fb-4e86-b648-889c24e5ab6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a62105f-9766-4ad5-92c7-147a45a83b42",
        "cursor": {
          "ref": "e47fb218-7f1f-4ddf-bc1c-4f424efa8ada",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4a7af693-e686-48da-9eb4-82347498e7c8"
        },
        "item": {
          "id": "6a62105f-9766-4ad5-92c7-147a45a83b42",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "87012678-12e9-4c50-bf62-ba71373c369f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331f472f-5975-4c82-aac1-12464db191d3",
        "cursor": {
          "ref": "377d661c-8df6-431f-8498-22d498ab976e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4b5eb21a-18a7-4646-9ce1-31c1c3e7c28d"
        },
        "item": {
          "id": "331f472f-5975-4c82-aac1-12464db191d3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0628767c-9450-4994-90ea-01022bdcbde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91a01d3-2143-4019-87b8-70844a503c15",
        "cursor": {
          "ref": "34b904a3-1afb-4db6-aa57-394ce33f8324",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4efeb8ef-3f50-4cdc-94ea-62424aaa4d3c"
        },
        "item": {
          "id": "f91a01d3-2143-4019-87b8-70844a503c15",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5d76cd60-091b-4c23-825d-5d91bee653f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f72a45d-9d8f-4dab-9b2f-fe735247dd4c",
        "cursor": {
          "ref": "7615062a-4779-4841-95cc-266d0ce1ad51",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9901b433-9aed-4c9e-a6eb-9d6a432f1a31"
        },
        "item": {
          "id": "3f72a45d-9d8f-4dab-9b2f-fe735247dd4c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e3019339-d161-47ca-bb93-a16f20e7d15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4d7b5d-c5cb-4974-bfe0-b60ae1e857a8",
        "cursor": {
          "ref": "ffc388d9-1789-439f-a02a-ad3a582b3ab8",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f1e7dbe5-7d28-4e0b-bc7f-c92eecaca83f"
        },
        "item": {
          "id": "ce4d7b5d-c5cb-4974-bfe0-b60ae1e857a8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a64a8cd9-a45c-424f-8c6e-c5f2e98f5583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf86ecee-0dde-468c-b4af-9653f7f4d58b",
        "cursor": {
          "ref": "01eb3bcd-99dd-427f-a3e3-8ee632761f1a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "555ea2c5-fb48-4c78-86a9-30a12621647a"
        },
        "item": {
          "id": "bf86ecee-0dde-468c-b4af-9653f7f4d58b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d3ffd942-adc6-42f9-96e7-8155d3c8ba03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596ef149-b671-4ca4-ba30-58415c16d2a3",
        "cursor": {
          "ref": "dc89ea79-343d-40b4-9bcf-72912f6a56f7",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "75e96b6f-7fe3-4817-b436-6f4ee3de7cd8"
        },
        "item": {
          "id": "596ef149-b671-4ca4-ba30-58415c16d2a3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c5d41f8d-9199-4ba2-874e-e3fa0398d19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd1ca13-ae7d-4f4a-a8da-556959ed149f",
        "cursor": {
          "ref": "8b86cb40-cdb8-4921-9192-3d20b6493503",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "90b2a846-d51d-475e-9b90-e9d07cf0a579"
        },
        "item": {
          "id": "3cd1ca13-ae7d-4f4a-a8da-556959ed149f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1c0458d2-b590-44e2-9089-4c09fad3327a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef043b0a-2617-4ea1-ae43-527af15de25c",
        "cursor": {
          "ref": "31229bd4-4f1f-4afb-adb5-8de115bbd24a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "22c76d1d-3741-4a70-8a01-6b44c2d7726a"
        },
        "item": {
          "id": "ef043b0a-2617-4ea1-ae43-527af15de25c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "78e7557a-b030-4cc6-8c21-93f8fcbe22ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba47d7f-e6df-4c08-89f8-64ba9b21201b",
        "cursor": {
          "ref": "5782bb3a-65a9-4b2d-b86f-607eb9123439",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1dd324e0-b300-4f40-8b92-2812cdb2aeca"
        },
        "item": {
          "id": "4ba47d7f-e6df-4c08-89f8-64ba9b21201b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "07d4dc5a-8373-4f5a-92fe-d4533db30e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c55ce97-14ff-4323-b88f-af4d2f5149b0",
        "cursor": {
          "ref": "6e019631-17ff-4d64-a1b4-a1ce15425a82",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2704cd38-63c2-45a5-aca6-d4a1b934b0bc"
        },
        "item": {
          "id": "3c55ce97-14ff-4323-b88f-af4d2f5149b0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f36f23eb-731e-46df-8a4c-f2fbcb949be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a1ab47-4c5c-4307-96d3-70fd661a61ac",
        "cursor": {
          "ref": "01f46adb-040c-4b55-a328-429770766dd4",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "142fca39-efe3-41d0-8f2d-252e6c8ed5f6"
        },
        "item": {
          "id": "c6a1ab47-4c5c-4307-96d3-70fd661a61ac",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "43ddb531-b508-4b6a-bcbc-d70a30f1671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e93564-d8e9-4f6f-a187-ea577b22d90b",
        "cursor": {
          "ref": "d917a57c-d406-48cf-9f80-a126b5e81026",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "15b7c158-e53d-4ac5-9a2e-a03b5f255ab4"
        },
        "item": {
          "id": "16e93564-d8e9-4f6f-a187-ea577b22d90b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "23076fff-7766-468e-8fc9-0b4125a7a5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7ce12b-2108-4018-9d1b-886921822ee9",
        "cursor": {
          "ref": "0b51c7c0-da54-4e4d-898d-0f05e6dc2790",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5e97f409-8f61-4636-a5e6-2165657e0392"
        },
        "item": {
          "id": "4a7ce12b-2108-4018-9d1b-886921822ee9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "108efb2a-3b96-4fec-8d7c-c5dca35e0216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be59bd5-1f8f-41d6-be8b-dc8ae22859f3",
        "cursor": {
          "ref": "1d7117c9-615d-4dfe-851e-6b1e8a8642e2",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8751e750-1b7d-4c07-91d9-ff99d01fe44d"
        },
        "item": {
          "id": "1be59bd5-1f8f-41d6-be8b-dc8ae22859f3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e9c57f0f-cba7-4d52-845e-2e500ecaacae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbd7d6c-1e7b-4eba-9a2f-73b7ae166f1f",
        "cursor": {
          "ref": "36ab784f-cb85-44f8-aafb-b23cf0921d63",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4dbab9aa-8a65-491e-8221-12c354ba6ef4"
        },
        "item": {
          "id": "cbbd7d6c-1e7b-4eba-9a2f-73b7ae166f1f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9d16f82e-fc81-4662-a49a-18cd7e781de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355ff6da-65f1-4151-b742-4885abe5c6d4",
        "cursor": {
          "ref": "c82baea2-b583-4657-a223-b0525fb51a73",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0fa43779-c5aa-43dd-8374-f4f03ed7acce"
        },
        "item": {
          "id": "355ff6da-65f1-4151-b742-4885abe5c6d4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4d51830c-7d4b-42e1-b9ff-7118265c9f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfa51b5-cbfb-4f8d-b627-394444403f9b",
        "cursor": {
          "ref": "ec7eecdb-41d1-4d54-90de-78cf17a148fe",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e56dd479-6ba7-44db-9ad5-0c1fd1ca71ba"
        },
        "item": {
          "id": "adfa51b5-cbfb-4f8d-b627-394444403f9b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0679749f-4b02-40fe-aadb-bc3840369fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d647669b-2122-4f9f-9933-0dc1e6439a6f",
        "cursor": {
          "ref": "1f781461-b2a7-429d-827d-99f585aba41d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7d1917be-1aa7-44ff-859c-13ba7b1e6b67"
        },
        "item": {
          "id": "d647669b-2122-4f9f-9933-0dc1e6439a6f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2d3041e7-b450-4504-bd59-59f4c595bbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45368bfd-c72a-46a7-8091-64709bea1c4b",
        "cursor": {
          "ref": "8be5ef86-15c0-4cab-82cf-8658a2f1fa9e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "58c2b897-f716-458c-9304-0a345bc98869"
        },
        "item": {
          "id": "45368bfd-c72a-46a7-8091-64709bea1c4b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0d36c16c-95a6-40be-948b-cc08947b834d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabc3684-3217-4695-a7a3-cb2f134a683b",
        "cursor": {
          "ref": "9b59d4bd-fe43-479f-94c7-f2e8d4cbb46f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e0851fe2-82ac-46da-b51b-966531f038fb"
        },
        "item": {
          "id": "dabc3684-3217-4695-a7a3-cb2f134a683b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1f4ff0f4-140b-4ed6-8c01-f51849120961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea041589-6c74-44a9-a2ae-7fcaa6dfc3d6",
        "cursor": {
          "ref": "f67f8fc0-161c-4985-b03b-aec6c651aabb",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ab4e786d-d864-4402-894d-fad9be4a8167"
        },
        "item": {
          "id": "ea041589-6c74-44a9-a2ae-7fcaa6dfc3d6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "86c1b39b-3e83-4bb7-a785-e9721be546bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe1d320-cb7b-4bfd-a1d7-eb733ca7e600",
        "cursor": {
          "ref": "b041f9e9-f8d8-41fc-bfda-bedf1aa34b4b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4368d3f3-0371-463c-aeca-57a764042bd6"
        },
        "item": {
          "id": "1fe1d320-cb7b-4bfd-a1d7-eb733ca7e600",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a8e6de53-e73d-43f5-9082-d6d96c7a7830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d257a20a-0ca2-49ed-b07a-ae2272d0e87d",
        "cursor": {
          "ref": "4a18e418-ab29-49e3-a07b-593f22ac8c00",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "29beec4b-7e81-420f-90aa-38f7456e1b1d"
        },
        "item": {
          "id": "d257a20a-0ca2-49ed-b07a-ae2272d0e87d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "54cf758b-c047-4f28-9836-69dc534aca18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92476835-cb65-4308-90bd-c80e020515e0",
        "cursor": {
          "ref": "b2bd7587-ec19-45cc-9809-464fbfdabe8a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9581e30a-7b43-4b4b-804f-e583508bcc41"
        },
        "item": {
          "id": "92476835-cb65-4308-90bd-c80e020515e0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6d8a3fee-780f-4212-a4bb-ddfcab20a235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55fc9d0-24e8-43b6-bef1-8c63804169dc",
        "cursor": {
          "ref": "1b52e4e3-14c5-4d9a-ae67-3eaf38a222ab",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "30bac570-b1ea-4dbb-a77c-198fd53af5a0"
        },
        "item": {
          "id": "b55fc9d0-24e8-43b6-bef1-8c63804169dc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f7dda627-54db-4b15-8915-2d187f58e184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce6fda9-de45-405d-9b73-22e1597b1503",
        "cursor": {
          "ref": "5847ff44-fa60-4bf0-a37c-84b196cb7cc7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bb125181-493e-4e95-892d-db8bd6535110"
        },
        "item": {
          "id": "2ce6fda9-de45-405d-9b73-22e1597b1503",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b4f6436f-a703-4cd1-91eb-206f62641cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51656143-9d80-47bf-92d0-d31b3acccf14",
        "cursor": {
          "ref": "893819af-dfce-4789-9c39-fc1f11e26c5b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8892a5fa-d188-4c1e-83e1-f8664b9e9f6e"
        },
        "item": {
          "id": "51656143-9d80-47bf-92d0-d31b3acccf14",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8b825638-b371-4b15-9198-1079384d0487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efb1bb4-13dc-4cc9-8269-25d027c62eeb",
        "cursor": {
          "ref": "dd1d97b6-accf-40b5-85e7-a029c9af65ab",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2ab152dc-27f9-42b2-9d50-bb99da837ab1"
        },
        "item": {
          "id": "1efb1bb4-13dc-4cc9-8269-25d027c62eeb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3c6f6d7c-ed62-445d-a51e-ed5ff2de77ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d33952a-5108-49d4-99d4-595ab7e101cf",
        "cursor": {
          "ref": "59356130-97e1-4f61-8a89-783040ff6c3e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c8b3ed04-6f72-434e-bf0e-dfd0382a2a7a"
        },
        "item": {
          "id": "6d33952a-5108-49d4-99d4-595ab7e101cf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "85946336-c276-49ba-b653-081d4f405813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee72c18-7220-4ab8-9921-c5a9f2fff8e8",
        "cursor": {
          "ref": "e5df8d21-bf64-42fe-a6d3-72253d31a9f3",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6980892e-b91a-47be-91b1-7fcf2a66e4e8"
        },
        "item": {
          "id": "7ee72c18-7220-4ab8-9921-c5a9f2fff8e8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ea24ade9-3430-4b79-a1cd-ae25bdc1e1cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae959d95-9563-4bcf-bcfb-b1adb08ef069",
        "cursor": {
          "ref": "fe441bbb-55ba-4332-a7bf-b9bd5af491a6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8173eda6-83ed-4691-8d65-35bbf9240f5d"
        },
        "item": {
          "id": "ae959d95-9563-4bcf-bcfb-b1adb08ef069",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "11338dd4-191b-481c-86bb-fd1615aca388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "39d77a4f-2dff-46fa-bc27-2b128d048da0",
        "cursor": {
          "ref": "431fe689-8a74-4961-8c73-e99a2c3ceb28",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f38c1874-d7d2-4d85-be48-6fe46f321062"
        },
        "item": {
          "id": "39d77a4f-2dff-46fa-bc27-2b128d048da0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c2348594-93d2-4081-bb60-cf0aa72fbe72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3306ad9d-0940-4c6b-a58a-74d580e766ce",
        "cursor": {
          "ref": "7ba63752-34da-4a4a-8216-8d72c4f935cb",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "842ffebd-8dee-4454-8dbd-0bdc30884384"
        },
        "item": {
          "id": "3306ad9d-0940-4c6b-a58a-74d580e766ce",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4ec037da-a19a-43b7-a7b6-9375aefd227f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fdc36bf3-3de7-48e8-815e-2274a353d183",
        "cursor": {
          "ref": "f0976055-c4dc-4dda-90dd-5d89a10f82eb",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "675714dd-29cc-4d09-9ce9-912418a7a4c5"
        },
        "item": {
          "id": "fdc36bf3-3de7-48e8-815e-2274a353d183",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ab6b77c4-c96a-4903-9c7f-178900b30b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f416c722-1734-4a33-8111-fb3c93a71eb8",
        "cursor": {
          "ref": "6885cf55-6aba-48e5-b6f0-8122238dd340",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ad56d9d5-2d01-49db-ba62-26866e19c4e4"
        },
        "item": {
          "id": "f416c722-1734-4a33-8111-fb3c93a71eb8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "eae70a95-b7e1-4e7f-8900-c8eab6b7db6d",
          "status": "Created",
          "code": 201,
          "responseTime": 10948,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba74dec-5196-43e3-bedc-421b86bc00e5",
        "cursor": {
          "ref": "d675239d-a40f-4878-83ce-7f7658577e4e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e4d81f2e-3baf-4605-bd51-8d1e67e70035"
        },
        "item": {
          "id": "2ba74dec-5196-43e3-bedc-421b86bc00e5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0ae4967d-6093-40ce-8cad-7a52bcd17ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3ff7f666-7a61-4364-be38-9a98f2b14259",
        "cursor": {
          "ref": "fe5c0e2e-3a8e-48e1-a967-4a2a424a1340",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "63b718e6-cbb8-4a2b-bb44-f0907fe8e49c"
        },
        "item": {
          "id": "3ff7f666-7a61-4364-be38-9a98f2b14259",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "305885c3-4d2c-433d-897c-2b96aa5d0a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4c8e1e61-26e0-473d-95c5-72ed6308cf03",
        "cursor": {
          "ref": "b2a57aa9-e78c-4ce0-a375-d46963cf43a3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d2c7012f-3692-43c8-ab81-638ac3c3e548"
        },
        "item": {
          "id": "4c8e1e61-26e0-473d-95c5-72ed6308cf03",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8d42674a-7116-42f3-b6e1-a1f025604332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a41432-5458-4bf3-9211-f8a4722dccc5",
        "cursor": {
          "ref": "009ff7b8-71c9-428e-815f-b49e6e8db4bc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "208a4a04-f705-48bf-a4ed-e6905ff63fa7"
        },
        "item": {
          "id": "16a41432-5458-4bf3-9211-f8a4722dccc5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3a23b046-b8d9-48cf-8e89-28b532f014ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1908d021-67af-4769-8c81-9cdc0167e35f",
        "cursor": {
          "ref": "0dcb548f-5b1a-4460-a1d5-f974e1052e33",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9ebafd1f-db84-4af5-885e-1629ae17601b"
        },
        "item": {
          "id": "1908d021-67af-4769-8c81-9cdc0167e35f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2f78b735-25eb-4d5c-8b66-9ac6216530dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05dbfad-7225-49ce-874a-ebfcca7478ab",
        "cursor": {
          "ref": "5d2da53f-7af5-4d03-bab9-7135250384f5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4aeb36a4-946b-4216-b576-6af1997b46ab"
        },
        "item": {
          "id": "a05dbfad-7225-49ce-874a-ebfcca7478ab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0b664d7f-1d64-478e-a741-35e5f111f1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5198b0e-bcd4-4827-ae0e-fdb574540ff7",
        "cursor": {
          "ref": "39bcd1e4-d8ff-4374-ab88-2638362f6089",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8b7aed57-b702-4633-83c6-c325217f5116"
        },
        "item": {
          "id": "e5198b0e-bcd4-4827-ae0e-fdb574540ff7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5118a37e-cd59-43c0-9333-56aa906328fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cc8dbe-f535-4843-b574-2be8554b1ed1",
        "cursor": {
          "ref": "99b8a1c0-653a-4bb2-8be9-6ac101b0b80e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "69cd326e-a4c4-401e-9a06-fd92d5211d6f"
        },
        "item": {
          "id": "89cc8dbe-f535-4843-b574-2be8554b1ed1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cb69f31e-d930-4779-9deb-e36d9b3589b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f644cd6-efd9-431b-90ca-27c410ab5a86",
        "cursor": {
          "ref": "81b0dd1f-c543-4271-8723-82accccbe6b1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bba10f91-0e5b-44d1-be73-b66d095d5694"
        },
        "item": {
          "id": "6f644cd6-efd9-431b-90ca-27c410ab5a86",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6fe75133-6f2f-4529-b2b2-cc60455b084c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a799b2e-fb4d-4899-86f3-91137880644b",
        "cursor": {
          "ref": "5bb01b3b-3aa8-4061-8aac-e05828a26ee6",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f2218928-f5e4-406d-8318-84777629eee2"
        },
        "item": {
          "id": "6a799b2e-fb4d-4899-86f3-91137880644b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a685a4fa-0f09-494e-a2a6-c9c4d58e8b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54caaa8-e4bd-4ecd-b307-37c80c2ed114",
        "cursor": {
          "ref": "0a5958e4-4ea7-407e-85c6-739b9542e2af",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "386297c7-7f66-4c69-9f5d-a7743f0b0f30"
        },
        "item": {
          "id": "f54caaa8-e4bd-4ecd-b307-37c80c2ed114",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7e77273e-9948-4cd7-be96-6347c534e74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699b41cf-e13d-4f71-9955-51f58e7b025a",
        "cursor": {
          "ref": "4fa217e7-6bc1-4e43-9859-d4babcf897f0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e0b68708-c90e-4217-8864-adb867c5ccd4"
        },
        "item": {
          "id": "699b41cf-e13d-4f71-9955-51f58e7b025a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9e2f146e-6a92-44a7-af19-5ada4c0131f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7153d6-a450-4746-bd45-b876c2009bfc",
        "cursor": {
          "ref": "8e871739-2e79-42f8-ac02-0b4b64913cd4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "47ff36cd-a183-49d0-8ef0-6037bd00d616"
        },
        "item": {
          "id": "be7153d6-a450-4746-bd45-b876c2009bfc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b1ea8bdf-5495-486d-991d-67419b56aa59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13012527-6336-4b01-9586-5a6ec71915db",
        "cursor": {
          "ref": "3e21a68d-9b84-49b1-a949-e4dbbf55bfbd",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3f1e80bb-0f4d-4bbd-8907-0502d8fbf731"
        },
        "item": {
          "id": "13012527-6336-4b01-9586-5a6ec71915db",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c39320cb-4b44-4f1c-8c59-84428d8240e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caad36d-a42c-4ff2-80d7-de55c070e2a4",
        "cursor": {
          "ref": "029f8a9f-2cb3-49e4-9607-00c137b3f21f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "57d27552-cd07-479f-be76-c5f3b4782c38"
        },
        "item": {
          "id": "0caad36d-a42c-4ff2-80d7-de55c070e2a4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9a705a59-d866-4b13-89e6-eb5bd9247725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe02d9e-2876-47e7-99f4-214c16984f9e",
        "cursor": {
          "ref": "185f4f06-2047-4e73-ba19-e385732201e7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "82a81562-965a-409b-9185-0238a58b9a64"
        },
        "item": {
          "id": "afe02d9e-2876-47e7-99f4-214c16984f9e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1e532b0a-b712-4fb4-a40e-d2a5d5d6767c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce03077-7d97-4747-96c8-da917989ad7a",
        "cursor": {
          "ref": "b0d17ee8-5814-43ce-a6d5-12d7a6c37057",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "914fa420-2d04-4ff9-b381-c3144b7f7054"
        },
        "item": {
          "id": "cce03077-7d97-4747-96c8-da917989ad7a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ab5de55f-e471-4348-8ece-2bd788cc61d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f6ec77-659b-44ef-9b9b-4e259c548d61",
        "cursor": {
          "ref": "a36be1b6-d8a7-4d98-9877-986488f3b0f3",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fc21823d-9911-48f9-90f5-3f4543dd84ec"
        },
        "item": {
          "id": "c1f6ec77-659b-44ef-9b9b-4e259c548d61",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ccf835b1-3ca2-423a-bafd-49387cfc1813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad67aa0-f8fe-495b-a4f1-36489a5d4a61",
        "cursor": {
          "ref": "2ee72cbb-69ca-4390-bcbf-d29b4915378a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a5f87519-6a16-4913-bbf1-d1ed89f9f4f1"
        },
        "item": {
          "id": "fad67aa0-f8fe-495b-a4f1-36489a5d4a61",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9b09609d-1b8c-4798-9c95-bd6424d054a4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "6d7505f3-f5c6-42e5-a638-6e9a848281e7",
        "cursor": {
          "ref": "0d2d13a2-6167-4540-b8b6-cd8970e9c90e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a05c6fff-4d24-4228-81c1-c8bf2dffa1e0"
        },
        "item": {
          "id": "6d7505f3-f5c6-42e5-a638-6e9a848281e7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b6c775ab-823e-4944-8b92-18331b3d3c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab7de76-6451-4d6c-95c8-caa8307332f1",
        "cursor": {
          "ref": "75f951e0-0e96-4ade-8078-464e6171acc2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "24fccec6-4240-46d7-a8e9-d3feff9e7b1b"
        },
        "item": {
          "id": "1ab7de76-6451-4d6c-95c8-caa8307332f1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6db10e26-66d4-45d3-8045-3bd4d4fd00e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c743e07-1c7b-4a4d-b4a1-d34fa1283c20",
        "cursor": {
          "ref": "de792450-15df-402d-ac44-6dad2570ef89",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0caf1c68-2534-4968-9feb-9fd09f5c4524"
        },
        "item": {
          "id": "1c743e07-1c7b-4a4d-b4a1-d34fa1283c20",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c2b4f21b-78c6-4641-bcec-a3ed153582ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3932ee-bdc5-45a4-8c7b-80e2af22e806",
        "cursor": {
          "ref": "f2d5e9f8-989b-466a-a1ca-2e8b2820a5e9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "780a3389-289b-4f41-9711-105fd1ac1f2e"
        },
        "item": {
          "id": "6a3932ee-bdc5-45a4-8c7b-80e2af22e806",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "880094e2-949e-4522-b680-73533ffdfbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0ce14c-a505-4ac0-be08-7522450e0706",
        "cursor": {
          "ref": "b996734c-8865-4156-9c39-726abcbc6cb8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "89b00412-79a1-4e11-829e-d5744831e4ef"
        },
        "item": {
          "id": "6d0ce14c-a505-4ac0-be08-7522450e0706",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a80076f8-621b-4fc8-a604-db005524be2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0276c4a-2121-41dc-836b-b2462a8eb600",
        "cursor": {
          "ref": "45b7e353-d61c-4b3c-b057-0fe9357c5fd6",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "462cb9ee-1542-48d3-a17d-2ea31cd2ca08"
        },
        "item": {
          "id": "d0276c4a-2121-41dc-836b-b2462a8eb600",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "24b511f9-95e6-4aad-98b8-8aba86ce22bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8135d79-1ea4-4464-9440-31850b2a033f",
        "cursor": {
          "ref": "986d400e-740f-4263-8474-7e878e459393",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7041ba3a-4e60-4b99-bcbb-b77e54544c20"
        },
        "item": {
          "id": "c8135d79-1ea4-4464-9440-31850b2a033f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "402d6a42-f9da-4416-a578-83ae27790692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5554174-91d5-420b-9b84-be694087a4c7",
        "cursor": {
          "ref": "fe4156ff-91e0-499d-afa0-c0bec46312ea",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e05bf9dc-109b-4840-827a-f5f9d768604a"
        },
        "item": {
          "id": "d5554174-91d5-420b-9b84-be694087a4c7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e4df6b02-d923-4378-ad1f-ff647b686d65",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a8035161-12ac-4352-a840-4648eae577a4",
        "cursor": {
          "ref": "c9b22c9c-17e0-4b4c-82fb-139ab414c97c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b507bffd-a083-4bbf-9aa7-132467186f18"
        },
        "item": {
          "id": "a8035161-12ac-4352-a840-4648eae577a4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0de2fa0c-2ffe-4e49-ad3b-7b3b020e893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3c7e1f-8483-4aa2-a1c1-ed53dc60b8a2",
        "cursor": {
          "ref": "69e48dab-b990-41e0-8ce0-eb079d516483",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "85705e8b-de9f-4ebe-9183-2c3278403651"
        },
        "item": {
          "id": "ec3c7e1f-8483-4aa2-a1c1-ed53dc60b8a2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1ec4a2c3-c8bd-4a54-a0e0-5fb001b97c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a8decf-569d-4b8b-8736-3e3c68973afe",
        "cursor": {
          "ref": "7a69c58b-3e86-4263-834d-cf09e16073a2",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "132cd008-73fb-49cc-ad52-821def567d65"
        },
        "item": {
          "id": "c7a8decf-569d-4b8b-8736-3e3c68973afe",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ea694245-478a-4e8a-a28e-8e0785fbe82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc638ea-6f99-465c-afb5-555aac6846da",
        "cursor": {
          "ref": "89b8d743-263f-470e-8021-aa0a90dded36",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "46a4f132-0ca2-4692-a87d-566aa1014f6a"
        },
        "item": {
          "id": "bbc638ea-6f99-465c-afb5-555aac6846da",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6420909f-d3ee-488c-8e4b-4d32e9fe0cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0868960-78d8-453b-8b86-812715e3d8ca",
        "cursor": {
          "ref": "6f20f58d-f662-4009-9ac0-1f35ede01509",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f5dfe87e-38b8-40e9-8558-d1888df4598c"
        },
        "item": {
          "id": "e0868960-78d8-453b-8b86-812715e3d8ca",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c04a9116-b994-4823-b7e8-0bbdab857903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83878b75-f4d2-4f7d-aed7-31a0765dd41a",
        "cursor": {
          "ref": "3a468005-1498-468d-b20a-c1edd3acc488",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6acb2b4c-e44f-4d7c-931d-165d51f8199e"
        },
        "item": {
          "id": "83878b75-f4d2-4f7d-aed7-31a0765dd41a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6b5e0fd6-dc67-4081-8b23-ad93bd3b70c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8d7ad6-f5bd-483c-a149-16274610ce39",
        "cursor": {
          "ref": "2ff20b7c-6c9c-49a9-8ec7-5737031d75a9",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "80048197-cefa-43e8-9130-e5ce440a6e41"
        },
        "item": {
          "id": "ee8d7ad6-f5bd-483c-a149-16274610ce39",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5e3ae5c0-be23-4125-bbb5-d3ea7e105955",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "45f6f989-4c05-4294-b491-f4b58e0abc2d",
        "cursor": {
          "ref": "48d7633b-921c-4c05-995f-c765f8ae0db6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7e0b845f-36e2-4f15-a9d9-8ccf14093886"
        },
        "item": {
          "id": "45f6f989-4c05-4294-b491-f4b58e0abc2d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5ee8d586-44c5-4834-a22a-6b3ebeb4c94d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "a906f9ed-1c0f-4ce4-987d-84bf58d10c80",
        "cursor": {
          "ref": "5a335f53-554d-4b93-8e70-b9ac815d3203",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f42435e5-c173-406e-8524-d590ac478b02"
        },
        "item": {
          "id": "a906f9ed-1c0f-4ce4-987d-84bf58d10c80",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "354f0922-18b2-4ae4-b38d-141ae429b919",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "8289e439-cb5b-4b39-927c-df7bcf3608ca",
        "cursor": {
          "ref": "b450195f-d4ad-477e-8961-59742b5274de",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "01468de6-d265-4436-ba37-2ce3cf20f3e7"
        },
        "item": {
          "id": "8289e439-cb5b-4b39-927c-df7bcf3608ca",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "77864716-22f4-4c18-a0bd-741e9db57764",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "824ff52e-d707-46b7-93df-c0dedda767ce",
        "cursor": {
          "ref": "6b48fb8c-09d4-4835-a266-3a1fc7d02583",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "977d17e2-92ac-412c-a00a-dc6ac59cef36"
        },
        "item": {
          "id": "824ff52e-d707-46b7-93df-c0dedda767ce",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eadfd34b-359e-472d-8ec7-8f3578a86a24",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "83cdac41-2087-4daa-9f85-2bf1f6fd40eb",
        "cursor": {
          "ref": "50d68c8c-2f2d-4e77-a0cf-53ce467ae79d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a1b6f40c-c1c3-4682-bc05-a177ac634691"
        },
        "item": {
          "id": "83cdac41-2087-4daa-9f85-2bf1f6fd40eb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a6d16e5d-7a8b-4198-afa4-65befc5e4220",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "b2116ce2-cf93-440e-a0e5-abf48fdc57a1",
        "cursor": {
          "ref": "2a5212de-6b98-4c17-869a-f249fe85b2e1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "deb1b9cb-385e-48b0-b909-777efbf17f0e"
        },
        "item": {
          "id": "b2116ce2-cf93-440e-a0e5-abf48fdc57a1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "56b26bd8-5bbd-483b-80f8-fe040f4cc17e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e21c04-9840-4f3b-9c1c-d6ef3632e2d3",
        "cursor": {
          "ref": "a8718b25-d04e-4e0d-982d-629f095c8d56",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "05a05e9f-08e5-44b6-a42b-03b6a66c6956"
        },
        "item": {
          "id": "d9e21c04-9840-4f3b-9c1c-d6ef3632e2d3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7593033b-bdb5-429c-ac14-f529cbc4008d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4921a1-b718-4c0a-8724-c6fc0dc79b41",
        "cursor": {
          "ref": "d89906fb-ee26-4025-8e24-84549e5281c1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4e4e8ff7-e2d5-4b75-863d-e7abc5984756"
        },
        "item": {
          "id": "5a4921a1-b718-4c0a-8724-c6fc0dc79b41",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dd5b1fba-2639-4342-858e-94886bbaf0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6551a0bf-9648-4673-b46a-bde54dc4e288",
        "cursor": {
          "ref": "e6708c1b-c67f-4e61-9feb-aae95dbad7af",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0a72970c-b041-4df2-85b0-604a7e31f61b"
        },
        "item": {
          "id": "6551a0bf-9648-4673-b46a-bde54dc4e288",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "63ec2400-e38e-4503-a04d-7e035be6a15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4b0b9b-77df-4197-ae6e-ce19128936e5",
        "cursor": {
          "ref": "119e4a5d-d64d-4ac8-ba56-107c1916e3a3",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fde6af71-0531-4c6d-baae-c81ad095bb0f"
        },
        "item": {
          "id": "4a4b0b9b-77df-4197-ae6e-ce19128936e5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7da18982-bc3b-42cd-9537-267c64af5dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e997ff9-6cef-479f-9e85-47517fec53e8",
        "cursor": {
          "ref": "f511a8e6-8ad1-4bbd-bf03-4b92064490df",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6440a49a-e760-43f9-9b05-8e96ccd8c64c"
        },
        "item": {
          "id": "9e997ff9-6cef-479f-9e85-47517fec53e8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7805904f-ca91-4b1d-965e-05ae7ae06166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f92406-1c7e-40ba-b24d-49b802d73a29",
        "cursor": {
          "ref": "16a58165-7b04-4df6-a863-be185a21e916",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b74ebea4-9da8-4a85-a6f3-621d69ee3bd2"
        },
        "item": {
          "id": "25f92406-1c7e-40ba-b24d-49b802d73a29",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "998fadb7-36fb-4746-9e2e-cffe6a16ab17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fb8574-bf71-4ad0-9546-1ac6db4315b3",
        "cursor": {
          "ref": "456a8f5f-bfa5-4674-962c-585a7da3810d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "317c2a22-6649-47bf-bfb9-c2e7d49cea33"
        },
        "item": {
          "id": "b4fb8574-bf71-4ad0-9546-1ac6db4315b3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fed8af3b-1da8-48cc-9382-fc72d1c721e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18c06e7-6c0a-48b9-ac54-934c4cae8599",
        "cursor": {
          "ref": "45e2c762-3498-4646-9512-99598d550d3f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a15a2b57-2925-4d0d-9523-4c1c8f967c93"
        },
        "item": {
          "id": "f18c06e7-6c0a-48b9-ac54-934c4cae8599",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "281bc50f-b980-4bba-8c95-7b44d8fbcc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbc8dcb-bd24-4753-837a-d65b6fa50d0a",
        "cursor": {
          "ref": "f37c2914-8559-47a9-b271-2862900067f3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fb1eb265-edd0-4629-a650-00fed68f0df0"
        },
        "item": {
          "id": "0fbc8dcb-bd24-4753-837a-d65b6fa50d0a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c5835229-01be-4386-90b8-332cc52d3d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c4532f-3667-49d5-9129-ab8201ed4ace",
        "cursor": {
          "ref": "6d6e56d1-d01b-4c11-bd75-a1e8c884d08a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "737e7621-e246-4449-822c-9a6d5aeec0d8"
        },
        "item": {
          "id": "c8c4532f-3667-49d5-9129-ab8201ed4ace",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a5cc1a23-ad19-4ab5-ae29-8956d7c054c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d1635e-b3fb-4004-b11a-48d5ef36315f",
        "cursor": {
          "ref": "9e7617ba-f967-4a56-ad5f-37e2a33d8789",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "892c6732-81b7-4115-8ba0-d42e5f383d50"
        },
        "item": {
          "id": "49d1635e-b3fb-4004-b11a-48d5ef36315f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d83ed361-0e83-44d9-86bb-8e30aa79bad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d769a9-c542-493d-943a-6843c886643c",
        "cursor": {
          "ref": "ed6f8092-a765-4747-b639-bcce01936969",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b70400f7-8257-4583-a458-aa319ee85b1c"
        },
        "item": {
          "id": "49d769a9-c542-493d-943a-6843c886643c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9ff9f5d7-58d5-4725-a461-9a96df7082ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cc5a72-ef76-480b-b51a-e0bf2c32a512",
        "cursor": {
          "ref": "0c26f92a-4926-4315-84c7-b2b3bb02b0f5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "662cd7b6-c0b1-47cc-aee6-1bafdb33663b"
        },
        "item": {
          "id": "04cc5a72-ef76-480b-b51a-e0bf2c32a512",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1168a913-df9d-43d3-bbe9-9b9a3e69b05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0636aede-ceef-45a0-a23e-f100741246e6",
        "cursor": {
          "ref": "91e60bee-ec35-47ce-9c3e-8a2e693a4afc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "568dc546-3cf9-4f0a-b7fb-9a47e5f0522f"
        },
        "item": {
          "id": "0636aede-ceef-45a0-a23e-f100741246e6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "28f17370-f527-4145-b5aa-6744502d55d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edac03ff-ef22-4c07-a97b-6374ad8018f0",
        "cursor": {
          "ref": "86ed1e9d-e93c-43d1-8f1a-5f2d6462f0d5",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "98e81ee4-dbef-4d1a-9e93-f72d2c68fa2d"
        },
        "item": {
          "id": "edac03ff-ef22-4c07-a97b-6374ad8018f0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1a7b9302-c373-4e45-9446-9a377feea21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95733473-0f47-4489-8ca0-8ca1b5a05ee5",
        "cursor": {
          "ref": "38ba49a8-e38d-42cf-ac65-eca7f7ab7cee",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "be0b4260-1ad0-4afe-a4f8-ef8d996071d7"
        },
        "item": {
          "id": "95733473-0f47-4489-8ca0-8ca1b5a05ee5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9656978b-9eee-4e5e-a96c-107a1a7aa951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa694ee8-9668-46ac-9720-8929351cab80",
        "cursor": {
          "ref": "df015566-d2f5-494e-8e81-b59c5d21c9d7",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "99d317b3-21e3-47f6-9f29-81da38044774"
        },
        "item": {
          "id": "fa694ee8-9668-46ac-9720-8929351cab80",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e38326ff-9674-455e-91bc-8c712b527c97",
          "status": "OK",
          "code": 200,
          "responseTime": 157,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "678cc78e-bd98-41e4-9716-98efe776258a",
        "cursor": {
          "ref": "45ba7f2b-d2e8-4cf3-ace8-f685a87f3a50",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8b5a374b-db64-4141-acb8-3e34dc46b47f"
        },
        "item": {
          "id": "678cc78e-bd98-41e4-9716-98efe776258a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b35f671a-c6d0-49dc-bafe-cabc7ba4ed54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c1dd21-08d2-43bd-a9b8-d93c96316450",
        "cursor": {
          "ref": "eb35fad2-80cb-423d-b37b-3369b041d351",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e5c7e29d-e280-4adf-9a3f-124417d65072"
        },
        "item": {
          "id": "95c1dd21-08d2-43bd-a9b8-d93c96316450",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e239c7a6-8bc0-4ca8-a06d-8f4af362396a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70030a96-6e4b-4283-a562-f98b810a5abf",
        "cursor": {
          "ref": "4de3c588-e286-4f7d-9f54-6c49de1fd802",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "61fc9a0e-a5f0-4c94-ba5e-bfa947a8e52a"
        },
        "item": {
          "id": "70030a96-6e4b-4283-a562-f98b810a5abf",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5e5788b9-7a31-426f-9983-eb59089b8138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea4ad37-f0de-4281-b3f3-8935caf8b91d",
        "cursor": {
          "ref": "de0957e7-ec5e-4fc2-86c7-11c231bf33ec",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bd2c53b7-1adf-42c7-925d-16174add0316"
        },
        "item": {
          "id": "5ea4ad37-f0de-4281-b3f3-8935caf8b91d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a165d1eb-fa54-4e27-a85e-fe90c07928e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7804f681-b522-4276-bc0e-a899c9eceda3",
        "cursor": {
          "ref": "cb04ef77-6fe0-4eeb-82ec-2e7d65167bbe",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8df18a72-959b-4a21-be5c-2511b6311d28"
        },
        "item": {
          "id": "7804f681-b522-4276-bc0e-a899c9eceda3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b1f32f27-5865-42d8-ad76-8c7287fc484a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138048c4-35b8-4f2e-ade2-32c90462d88d",
        "cursor": {
          "ref": "3d9ea724-c6ae-4e00-a297-4ef7487e9b9b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "811ea3fa-b27e-4a83-a969-86dcbb2a1c56"
        },
        "item": {
          "id": "138048c4-35b8-4f2e-ade2-32c90462d88d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f9ed4f87-898e-45c3-a60c-f0a4cd9067be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7477a05-db8d-420a-8b2a-1abca1ee7946",
        "cursor": {
          "ref": "721395c1-6d9d-40bf-b2c5-51c09205ecb9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4986fa58-b1af-4d1e-9af5-f8f88b178d96"
        },
        "item": {
          "id": "f7477a05-db8d-420a-8b2a-1abca1ee7946",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1d9cab22-8b49-46fc-9d7d-ef23a9378b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9ba6e4-0bed-49b9-b922-1a5e84b4a750",
        "cursor": {
          "ref": "4a0c5532-ebf0-4a9a-b537-b39844d311f0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "15f74ff3-6ca7-458e-8ae2-5881cee9f951"
        },
        "item": {
          "id": "cf9ba6e4-0bed-49b9-b922-1a5e84b4a750",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bc094ac6-8468-4015-9b3f-cff530370269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4904bc-a119-4694-81af-6204edbc8187",
        "cursor": {
          "ref": "a703c690-720c-4879-b5b3-b826c3ac39e2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e26b3d27-bda1-4e2a-a5e5-489d976bf3fd"
        },
        "item": {
          "id": "5a4904bc-a119-4694-81af-6204edbc8187",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e8bfd660-35f6-4a1d-b580-8ae5ca3ec830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fe8350-1cda-407e-9f41-ba9c3f96606b",
        "cursor": {
          "ref": "fad574c1-e50e-4c90-bd06-2a793b4e7184",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "03a16416-9f4a-4f09-be7d-a01da2f32f2c"
        },
        "item": {
          "id": "c6fe8350-1cda-407e-9f41-ba9c3f96606b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4255777c-46f5-4807-8056-83582c59ab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d12987-6ee6-4806-98ca-eabdcb1ccc55",
        "cursor": {
          "ref": "13c69bd1-594d-42b0-90c7-83930499b062",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "62f48c5d-e5bf-4584-aa38-8287a0f4b6ba"
        },
        "item": {
          "id": "e3d12987-6ee6-4806-98ca-eabdcb1ccc55",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e7c4d607-9c2e-41fb-b597-cb1d26860b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ed128c-e6b4-414c-b30f-6d5da43d4b46",
        "cursor": {
          "ref": "51b63945-f0ce-4741-a2a7-6aad32a25992",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e5230fae-937e-45eb-ba1a-e48ba3b09979"
        },
        "item": {
          "id": "68ed128c-e6b4-414c-b30f-6d5da43d4b46",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c8ba7e59-7729-4bc8-aef4-87a2987e9ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40988417-23d3-4b72-8af2-13f9ffd51de8",
        "cursor": {
          "ref": "b5e5061f-9a85-4841-8c0a-32843f4ba494",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e6747249-673d-4fba-923c-8a76a5cd8643"
        },
        "item": {
          "id": "40988417-23d3-4b72-8af2-13f9ffd51de8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1545e762-886b-49d8-8b2e-5ac2a4e1b6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6517db85-70a8-4a80-8030-a6a13bcb3e0b",
        "cursor": {
          "ref": "15e1f4e1-29bd-442b-b22a-2959db166815",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5ccbd965-7bea-470b-b6b4-79ea3b2792ab"
        },
        "item": {
          "id": "6517db85-70a8-4a80-8030-a6a13bcb3e0b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "402fccbe-0a62-4655-90fa-bb23e8667aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc243c1a-202c-446b-840d-f226cb01030c",
        "cursor": {
          "ref": "1f88d315-78b6-4566-a729-777dcbf2a0c4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4e7e4a3f-3f6e-4574-bad6-89c60057ece6"
        },
        "item": {
          "id": "dc243c1a-202c-446b-840d-f226cb01030c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "58c06342-32d3-4224-8d71-2c694bd55a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e975de-1d11-4f02-ad30-a8edc44c7cd4",
        "cursor": {
          "ref": "93d5f6c9-3b44-4d76-9b33-f57b888ade56",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a130769f-2a7b-4831-9b93-94c6340e822e"
        },
        "item": {
          "id": "10e975de-1d11-4f02-ad30-a8edc44c7cd4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9cbe3ca1-d1ff-4e16-8cee-f6e91a035e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8193efd4-e300-4ed9-a250-6bc3a3f2521b",
        "cursor": {
          "ref": "77e137a3-79c9-4e3b-864c-4ee9c185d1b1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "44ab2c5c-cf2b-45e0-9b9e-52a8521d7f72"
        },
        "item": {
          "id": "8193efd4-e300-4ed9-a250-6bc3a3f2521b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c9493b44-76da-4896-ad32-3b1f02a03432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e5ed31-26ea-43d4-9b92-cd402bbd421e",
        "cursor": {
          "ref": "fed82e6e-2bfb-4e8d-90e7-adc2f692019a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "290a55d9-df12-44d6-95ff-0d0fa00a5e7a"
        },
        "item": {
          "id": "b6e5ed31-26ea-43d4-9b92-cd402bbd421e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cdda1218-83c5-4195-bedd-e68df9c99b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35af225-35a9-479f-bc0a-bab1a2f12ab3",
        "cursor": {
          "ref": "025f3061-bf12-4804-a5d1-d6e2be2bee5d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "880c9171-2fa6-4bd2-84bd-57f209cbca41"
        },
        "item": {
          "id": "c35af225-35a9-479f-bc0a-bab1a2f12ab3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "29afc403-7401-41c6-8c05-fbac31be9e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7c859b-d0a2-4c7c-a29c-b708705199cd",
        "cursor": {
          "ref": "296b4d28-a880-49ed-b807-6dcc253c8908",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bb390c18-2c04-473e-9634-b6b5acd3c833"
        },
        "item": {
          "id": "6a7c859b-d0a2-4c7c-a29c-b708705199cd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f67e3bce-c659-498c-9945-7c0bbe2d8933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb08618e-78a1-4469-bfb5-b5845b223c34",
        "cursor": {
          "ref": "61f9565c-1c60-4272-a9f3-f9242172b1ac",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "eab6bcac-f314-46b2-b44d-8a39da64cecb"
        },
        "item": {
          "id": "fb08618e-78a1-4469-bfb5-b5845b223c34",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6a0dbc7e-6792-4bb7-9e62-8bb4be0295f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d1e853-50f4-4dc9-a991-8e29b97fd03b",
        "cursor": {
          "ref": "27af1ce6-1831-45f5-97d1-74c16b2e7f71",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ee214125-30c7-4e33-b36a-d2309c76e440"
        },
        "item": {
          "id": "b6d1e853-50f4-4dc9-a991-8e29b97fd03b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3f10eccb-b5f1-4878-8cef-d96b4b9896de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0cbd18-6622-4499-8228-a9393fac2f9c",
        "cursor": {
          "ref": "77f5d3dc-3bb2-4c7f-b0d4-55f07ec9ade0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a5d99fbd-4908-48ef-bba4-278b6aec70e1"
        },
        "item": {
          "id": "da0cbd18-6622-4499-8228-a9393fac2f9c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4ac53120-ceda-4830-af6c-c68326d53afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b661ba-ffdf-4d73-8c3e-50e5d3836171",
        "cursor": {
          "ref": "2faa33a7-ca70-4c7e-9b2d-ed444b648386",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2a451f11-5156-4370-8e2c-4e2ea3da17b4"
        },
        "item": {
          "id": "f3b661ba-ffdf-4d73-8c3e-50e5d3836171",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a6b86a01-3a52-4833-8018-4bf332247227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bbd8ed-9ca2-40ec-8655-e54fc8d180ce",
        "cursor": {
          "ref": "e0624a25-2573-4b1d-a051-2dc3f3d33db5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b4bdc83f-540a-4262-884d-ed45416df1db"
        },
        "item": {
          "id": "37bbd8ed-9ca2-40ec-8655-e54fc8d180ce",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d9b0c72f-52e1-4c17-9501-65730c3c724b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff50572-f599-4c91-af87-140c49f62097",
        "cursor": {
          "ref": "2d97986e-4ebd-4a56-b16e-7eaae8092b51",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0118e312-bf19-4854-b9e6-196d9f229a85"
        },
        "item": {
          "id": "3ff50572-f599-4c91-af87-140c49f62097",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4b7584a1-4e08-4889-9637-2232757aa5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c46ab1-4046-487f-9d0b-788f0ddb921f",
        "cursor": {
          "ref": "e1d12b19-f449-4df0-8993-4203276033ba",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "45512b31-30b7-4d11-a777-0c15cdbabe77"
        },
        "item": {
          "id": "c4c46ab1-4046-487f-9d0b-788f0ddb921f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "832a04f2-5f4b-4a22-b8ec-fb3f4aaf9c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6f005e-ad90-4e9f-aaa7-f2126970d637",
        "cursor": {
          "ref": "aff37276-40e4-451c-b104-008f4dc17a7f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8f9d7426-2f08-4430-b7e5-428ed97eb9dc"
        },
        "item": {
          "id": "fb6f005e-ad90-4e9f-aaa7-f2126970d637",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "84f1067e-6ba5-462f-9f9e-b6ecfec27ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9c88e6-3bf3-4481-b600-2bb170a1bada",
        "cursor": {
          "ref": "9c8e3c46-b5d0-4a59-861a-012d553b6cc7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d7d12a74-d6b8-4fe4-8823-803cd5ef9ee6"
        },
        "item": {
          "id": "1a9c88e6-3bf3-4481-b600-2bb170a1bada",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3b557281-a447-4553-8f91-0e810874bcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89880b27-e400-4a23-9826-ff339618052e",
        "cursor": {
          "ref": "bd2fcf8f-6a01-4cd5-a351-358fb5e3ff77",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eb08bdc6-f011-4fbf-8669-13cfc089a73d"
        },
        "item": {
          "id": "89880b27-e400-4a23-9826-ff339618052e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cb880612-eea8-46d5-9f0e-a0911d6c5e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48bf8e4-e10e-4133-a522-f9c59ceda3b4",
        "cursor": {
          "ref": "4363ff33-4319-475c-9644-907305d4d43b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d48f993b-a903-4ea2-b357-1b230d8a9207"
        },
        "item": {
          "id": "f48bf8e4-e10e-4133-a522-f9c59ceda3b4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2d9a9983-4251-4fe4-ac55-b36dfd96b52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fb690d-581d-49dc-b8b0-8e806b532f16",
        "cursor": {
          "ref": "4a10b28b-1349-4aef-9945-18cf043463d5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "539022af-d1e2-4270-9681-bbd8f42c525e"
        },
        "item": {
          "id": "d3fb690d-581d-49dc-b8b0-8e806b532f16",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "363b2ebf-2afd-4f14-8a48-c468c8732a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fde0a1-36ce-4d52-80be-da9f90377640",
        "cursor": {
          "ref": "ab798350-fdc6-4533-9d99-04daf8982be6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b32a31ab-b74d-46cb-bfd8-672390fbe1bd"
        },
        "item": {
          "id": "50fde0a1-36ce-4d52-80be-da9f90377640",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "abf980fc-2106-440b-9e6f-237a6e87d62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e97ad5-b8bc-4f34-b443-0c06004d71c8",
        "cursor": {
          "ref": "2537da06-776f-465e-990f-740b5f41a903",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "657b9221-9226-432e-905c-2867da91326b"
        },
        "item": {
          "id": "23e97ad5-b8bc-4f34-b443-0c06004d71c8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0b1b958a-614c-4db1-b39e-3a861408cc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48341a83-f9e8-495d-8f53-19d7281b2076",
        "cursor": {
          "ref": "360daf6d-67f4-470f-9f2d-6165effa242e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9cdb53d7-5c25-4916-84e4-01e8fc9e5a5e"
        },
        "item": {
          "id": "48341a83-f9e8-495d-8f53-19d7281b2076",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c70e5060-2029-41d0-bfb5-bba453c47076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d866540-56aa-4c5c-a2d9-5ffeca16b946",
        "cursor": {
          "ref": "beb4beba-aa2d-4cab-b828-1c4c540df94c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ccc7466e-ccdd-43a8-a9ec-e77d4951f03f"
        },
        "item": {
          "id": "5d866540-56aa-4c5c-a2d9-5ffeca16b946",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2d18ebcf-e441-4566-a59a-64cd56292ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de3b8cb-0c49-47ce-af05-827030ab87bf",
        "cursor": {
          "ref": "6289b30e-01ed-45e4-8502-81c0d1abc1ec",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "47629a63-d1e5-4b56-942d-14a9bc772ddb"
        },
        "item": {
          "id": "4de3b8cb-0c49-47ce-af05-827030ab87bf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f51e3c4e-f747-48d0-9fd3-fd1e569643f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c9c043-3f70-4190-bad6-86001bc24765",
        "cursor": {
          "ref": "8094128d-5325-4554-a988-b44c4eed9c3d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "21300f98-469c-49e8-ba52-7b39aa229c02"
        },
        "item": {
          "id": "b9c9c043-3f70-4190-bad6-86001bc24765",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "21fb8ca9-0c19-4688-9f1a-25da2dd65de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c216dc79-5e97-4575-a624-2349405454d6",
        "cursor": {
          "ref": "b2b26b2f-c4b0-4d93-91d2-cc2739cb9e93",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "feb25ab0-2b56-450e-9b2c-76f9369c8bf3"
        },
        "item": {
          "id": "c216dc79-5e97-4575-a624-2349405454d6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "da905f15-b8e0-412a-8ed2-aea86a2ad7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b873954b-50e6-4a2c-9432-408fbd2bc3df",
        "cursor": {
          "ref": "75382a70-e471-4224-bd7c-ed3ac5ab3509",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0c4ae3b8-8458-488b-bb92-097cb4e8154f"
        },
        "item": {
          "id": "b873954b-50e6-4a2c-9432-408fbd2bc3df",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1d5ac0ce-c88c-44e7-bed9-ee6ec22bc0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305ceb35-8998-4c92-b482-8d8365e1fd91",
        "cursor": {
          "ref": "25c75b7d-298c-4186-8222-791e9df093f0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "27cfa4ad-4da3-49a3-b65e-9abe3eed384e"
        },
        "item": {
          "id": "305ceb35-8998-4c92-b482-8d8365e1fd91",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ba4c5fd4-4bd9-4ca0-baad-ff483b993518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56ea33f-57b3-4470-a586-1606e3d16059",
        "cursor": {
          "ref": "860e607f-942a-4201-971d-8ea0ffbe3264",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8cf07394-4bcf-4169-823e-c32b3a2271e2"
        },
        "item": {
          "id": "d56ea33f-57b3-4470-a586-1606e3d16059",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3d0cf78b-c5bc-4e34-b4c8-4ce6e86d99d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98be146f-5c67-4b66-8fa9-d04a715314dc",
        "cursor": {
          "ref": "5eaa86b0-7e05-4ac8-82d3-e2910ff14933",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "33712b86-31cb-4b31-9f51-d1d649a89e7b"
        },
        "item": {
          "id": "98be146f-5c67-4b66-8fa9-d04a715314dc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e5b0bdb3-7218-441b-a373-8d574cf14709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b65373c-b95f-40d9-8012-9d7c0b437820",
        "cursor": {
          "ref": "1d8b65e7-2c06-40ae-b7cd-e98a8f7903a6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "94fa95a3-66b3-4a67-b608-e1c063336a94"
        },
        "item": {
          "id": "1b65373c-b95f-40d9-8012-9d7c0b437820",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b67b1d3b-0cca-425a-983e-ce08d9ef5c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2386f5-9f3c-49fd-84e0-0f60bd68490a",
        "cursor": {
          "ref": "786a8ddb-8daf-4595-a62d-2cff047d7f9c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "85232365-8e4c-4d00-9fb7-c425964e77d7"
        },
        "item": {
          "id": "bd2386f5-9f3c-49fd-84e0-0f60bd68490a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "509853ee-d83c-4f77-8b31-5915952b2a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef0ac5c-581e-4b7f-9ce8-879f56c7c805",
        "cursor": {
          "ref": "a9835417-9479-44fb-8248-f65b537ca5b9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "91f02fbc-4a7f-49c4-b433-fde984bd4355"
        },
        "item": {
          "id": "6ef0ac5c-581e-4b7f-9ce8-879f56c7c805",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "31a395f0-1f67-400d-9e6f-fb7a65db8b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d779762a-3ba1-4cf8-b909-1259e7bc6fb5",
        "cursor": {
          "ref": "ce36ffd3-121b-445d-a723-7ceb0bb25b31",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a4d389d0-481e-4e5e-b2d0-73a37c48d5c6"
        },
        "item": {
          "id": "d779762a-3ba1-4cf8-b909-1259e7bc6fb5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "36ddcbea-c80e-40a2-9c65-9ff03979d9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945f1edf-ce5a-4093-a5bc-6ee0a30a0c48",
        "cursor": {
          "ref": "1f00ec22-9de3-4991-a6b7-7e1fe8b119bf",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d416aa7d-ceb9-4bd1-bd39-dc0b864e92aa"
        },
        "item": {
          "id": "945f1edf-ce5a-4093-a5bc-6ee0a30a0c48",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6d1ab0ea-1d48-4586-9726-2f756e1b1f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6763d038-d0de-4c19-ab9f-563762620834",
        "cursor": {
          "ref": "8e3bbf68-3545-431c-b0c9-0d22ac64b048",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ce4eb065-aec9-46db-88df-cdf27dc65153"
        },
        "item": {
          "id": "6763d038-d0de-4c19-ab9f-563762620834",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "56f07fa7-1532-4890-ab38-f8c89f311ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4679a7-39f5-4e9c-9e35-6846ec07e742",
        "cursor": {
          "ref": "a666e549-eb5c-4667-836c-752372fc287d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2771e4da-cc9e-4686-8648-94c37cfd1204"
        },
        "item": {
          "id": "ba4679a7-39f5-4e9c-9e35-6846ec07e742",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "30dbdb2b-d95e-4fa2-9a8e-a5fe929da9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b441f5-65aa-47c2-9384-867d9aef4d34",
        "cursor": {
          "ref": "5d132025-9e56-4cc7-ac0f-b91d21c4ccfe",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f9734270-388b-42d5-8bf7-40c2ca34a40b"
        },
        "item": {
          "id": "85b441f5-65aa-47c2-9384-867d9aef4d34",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9ce0951a-635e-4ed8-b8c8-cbe8f55f98ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adab04b4-dd9c-48e0-91a3-df0e9f3144eb",
        "cursor": {
          "ref": "b75c0e14-659a-4953-8453-dd2da3480a99",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cc3bbc1f-1f8a-4762-8578-7e4369ffff70"
        },
        "item": {
          "id": "adab04b4-dd9c-48e0-91a3-df0e9f3144eb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "acf52704-2f51-413a-8a2e-d25d61a00814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00223d98-ffc3-420c-86fd-511609b286b3",
        "cursor": {
          "ref": "6e0cba13-6a35-4601-a3d8-d7be52df9cc2",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cb06b516-dba9-4f77-8d76-33068d66e867"
        },
        "item": {
          "id": "00223d98-ffc3-420c-86fd-511609b286b3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f9f0e17a-1db0-4ed2-a677-7596f5cd7a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ecb6e2-ceb7-46a7-8910-1e04a6aa5e7d",
        "cursor": {
          "ref": "a912eab9-373f-47fe-9a9f-12d1d2f15fa6",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e64ccb4d-279f-48eb-b9ca-8ef8729eb0be"
        },
        "item": {
          "id": "63ecb6e2-ceb7-46a7-8910-1e04a6aa5e7d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "14c61f4a-7a6c-4cbc-8f36-373c7918739a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31a40a5-84ff-42dc-8010-dea06732f65b",
        "cursor": {
          "ref": "32445af8-74ff-4117-b19d-60a44524e418",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "adb116f4-4f20-4758-b926-be368780cd7d"
        },
        "item": {
          "id": "f31a40a5-84ff-42dc-8010-dea06732f65b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "07d0e15c-232f-4df1-a03a-bb5336a45232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84cf240-d984-454c-b821-ac0e18027093",
        "cursor": {
          "ref": "e180a2cd-f68b-4c82-a1fc-824e5d1dfe02",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "829fa2df-783e-4ec4-91bd-bcbed8a292b9"
        },
        "item": {
          "id": "e84cf240-d984-454c-b821-ac0e18027093",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d00464a5-0e6f-4255-8e1e-dff4b2f0f8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb4319c-ed17-4e7b-84ce-e684f3a2697b",
        "cursor": {
          "ref": "757430fd-c6ab-4d4d-b4f1-80e87c8014df",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9a3bdec3-f453-45ae-9768-d5c90bc52a0d"
        },
        "item": {
          "id": "1fb4319c-ed17-4e7b-84ce-e684f3a2697b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0295b20c-ee34-4c03-8205-41947f28dc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63876419-f5a8-4988-b4f7-5376f363ac37",
        "cursor": {
          "ref": "812c21af-cf35-4da8-80d7-7bc8bdca5317",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c997025a-7b4b-48c1-bbd8-a1b2702f38d3"
        },
        "item": {
          "id": "63876419-f5a8-4988-b4f7-5376f363ac37",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9e1610ae-4ac3-4eaf-bb5d-55818aff34f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5397abb-5635-4df8-94de-dc5b593aeef8",
        "cursor": {
          "ref": "f7949796-adc6-4188-873c-b35827918653",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "48459811-f022-4e74-8644-90db840ee421"
        },
        "item": {
          "id": "b5397abb-5635-4df8-94de-dc5b593aeef8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ded41401-19bb-4278-83d5-286e4144f4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d63c23-14e5-4704-ac43-3cb877e19138",
        "cursor": {
          "ref": "2f8de495-a589-4c92-a913-fbc28bda8411",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e7c468bb-00b7-4579-9d81-5661cc6ac9a9"
        },
        "item": {
          "id": "24d63c23-14e5-4704-ac43-3cb877e19138",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "60abc3db-75b5-4125-a10e-197d2a438977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2af7c30-b773-417d-90a0-6bb6f79c5f49",
        "cursor": {
          "ref": "c87a4d91-fb64-482b-9196-2c43d2b2397f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7e0e0754-257e-45de-a965-a626caba712c"
        },
        "item": {
          "id": "d2af7c30-b773-417d-90a0-6bb6f79c5f49",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "63a3f41b-53ab-40b8-b109-2c55b92768f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71488d63-0ff7-4c36-a691-335956bf6ccc",
        "cursor": {
          "ref": "3d817a59-d22c-45e5-afa6-7b21a0f3e361",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3f16a62a-bde5-4bf7-a705-7be952488135"
        },
        "item": {
          "id": "71488d63-0ff7-4c36-a691-335956bf6ccc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "20a5f02a-9fd7-407a-ae31-1c5f72881316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0cbf15-7466-4cd9-9630-7a41e512d36d",
        "cursor": {
          "ref": "22b20c86-5a1d-47ea-b0ae-ec892fbc7201",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c7bcbf42-ee9b-4f98-8da2-876c9ccd3d0f"
        },
        "item": {
          "id": "0c0cbf15-7466-4cd9-9630-7a41e512d36d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "135e6122-ec24-46dd-941f-d485c5c4d0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96932aa6-477c-4664-a27b-b87d83e4780d",
        "cursor": {
          "ref": "4f9293c1-8138-4b6a-984d-3efa24ab378e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ef66570a-4ede-4938-a1a3-c2c77eea40c4"
        },
        "item": {
          "id": "96932aa6-477c-4664-a27b-b87d83e4780d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0b3df8de-0b28-43d6-8f8f-2a7d412f5879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a70fa7-86f8-43d3-b583-04a5e87ace98",
        "cursor": {
          "ref": "be951d51-d4db-42c8-ae18-2163f9a25572",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "640b92aa-e818-40d7-aefa-fc4db0cd4ff0"
        },
        "item": {
          "id": "d1a70fa7-86f8-43d3-b583-04a5e87ace98",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dc24ae21-d8f7-4ee7-b91e-cb9903cf9cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc229d5-c9ac-49c8-b060-9ebb55782f8a",
        "cursor": {
          "ref": "a4e2b087-2b87-443d-a9e7-1b018cb404a0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a64fdb53-4ed1-4ed5-bc07-b90b73bf4725"
        },
        "item": {
          "id": "afc229d5-c9ac-49c8-b060-9ebb55782f8a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c51809a6-bbfc-4a55-940e-a554beb173bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86186ead-5f1f-4412-8af3-62a81c24824b",
        "cursor": {
          "ref": "3d8b2f48-e83e-4478-b63a-bd5a2047522a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "be01c58c-86bb-4031-b8a6-0263a856fcab"
        },
        "item": {
          "id": "86186ead-5f1f-4412-8af3-62a81c24824b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a95ab254-907c-4416-8bd3-b1a2e4139a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d07190-854a-44e0-a0c2-a085217c7a8c",
        "cursor": {
          "ref": "ccd5b458-ca37-4a9b-a9ce-3a15cefa88c2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "830e778a-6531-4e32-a019-1f28bc17b29c"
        },
        "item": {
          "id": "b4d07190-854a-44e0-a0c2-a085217c7a8c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5e6ba0c5-2c70-4ecf-9cfc-8bae7f6a3c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639c19e8-65b1-4988-8452-b9a252d5d015",
        "cursor": {
          "ref": "ae2bf8fd-ee80-42c6-a488-1cf52a7b6f8e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "07c3ede1-38fb-47e2-8b56-69dc4f4219ce"
        },
        "item": {
          "id": "639c19e8-65b1-4988-8452-b9a252d5d015",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4ecc882a-5934-4a79-8a84-872e7721b1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa974d15-0f72-4ef4-9f1c-dfb4064cb4ef",
        "cursor": {
          "ref": "289410c8-8d11-4feb-86aa-ed06bddab206",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "16c98a81-b3ec-42e6-97cd-1c16483c5d2f"
        },
        "item": {
          "id": "aa974d15-0f72-4ef4-9f1c-dfb4064cb4ef",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e1a6d6ac-e85c-4bec-bc5e-77de8f0ae33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70eea96b-9bd1-4dba-af7c-46ef7595c6e6",
        "cursor": {
          "ref": "8d3828ce-81fa-4d45-b784-e36c171d321d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "30559f3d-da92-4b5f-abf1-5f97feb8c1bb"
        },
        "item": {
          "id": "70eea96b-9bd1-4dba-af7c-46ef7595c6e6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c6f8759d-906c-46f5-928b-5d5d7bc07b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f0cc17-c4aa-427e-9384-e3aac08a85e9",
        "cursor": {
          "ref": "9d8da428-b952-47d0-adb9-01b429d05baf",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b7003784-0419-4b3a-ab94-5e91ae1056a2"
        },
        "item": {
          "id": "11f0cc17-c4aa-427e-9384-e3aac08a85e9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "449848f4-b675-40c7-9f53-6b6b1dbfc17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba124426-b8c2-4790-976f-e4838fef31ce",
        "cursor": {
          "ref": "7b220c7a-330d-407a-bc97-7f855696865b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3acf662e-1f9a-4073-bf0e-5246a3f537a5"
        },
        "item": {
          "id": "ba124426-b8c2-4790-976f-e4838fef31ce",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f3a4e9f0-68c0-4280-8473-f82929078a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac6ccd4-0484-4340-aac8-3ec465522b63",
        "cursor": {
          "ref": "ee225c48-e6b3-47e5-8c6c-6ee3350c0193",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b5c3d49e-4bda-4924-badd-eb60f3f7e181"
        },
        "item": {
          "id": "6ac6ccd4-0484-4340-aac8-3ec465522b63",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "efd2020e-897c-4259-8ea2-0afcb06946ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10856df-a141-465e-970b-ca06e3128fa3",
        "cursor": {
          "ref": "b1377cc9-9045-4285-afb7-3bdc2798896c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e42d4223-11bf-4972-b354-6fd2df26ebd4"
        },
        "item": {
          "id": "b10856df-a141-465e-970b-ca06e3128fa3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a315eb96-c7be-471e-9723-25c72a8c3906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ca71da-9b0d-4912-899a-f946fcdf7ff6",
        "cursor": {
          "ref": "c0ff23d0-50f7-47f0-a0f1-b6cc09d7fbce",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "42652369-c738-49b6-ac9a-d4b8f6aee5ae"
        },
        "item": {
          "id": "32ca71da-9b0d-4912-899a-f946fcdf7ff6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c37f0ba2-7b61-4d12-96d6-3b74eb868910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63919a4-1d4c-443f-b4f3-21e8899761e0",
        "cursor": {
          "ref": "a44f73d6-5ffe-44e4-bf3a-1bebf4ed2a6e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "98f37f06-ed80-4d69-ad3a-6ba2087b0fa8"
        },
        "item": {
          "id": "d63919a4-1d4c-443f-b4f3-21e8899761e0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7bb5a133-949d-4ac8-ae2c-f3ccf97eda2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3887e6-b839-42c6-a5b9-b825977a0ef3",
        "cursor": {
          "ref": "d40dd666-fbc2-4785-9ad2-2b3d26327b1b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cfac4d16-4b6a-4eda-a93e-34c79fbd54d7"
        },
        "item": {
          "id": "ec3887e6-b839-42c6-a5b9-b825977a0ef3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5146bab4-cb1c-44c4-825c-0876c0634908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7fe367-103c-4adf-9365-56d529bb4cde",
        "cursor": {
          "ref": "0fcad4f6-867d-462f-a78a-1362db36f4c3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "43b75918-42c7-4cbe-9db9-48ae41e28453"
        },
        "item": {
          "id": "9b7fe367-103c-4adf-9365-56d529bb4cde",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9245ca16-8df1-477e-8a93-7769ac79223d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec234f9d-8755-4ee7-811e-7056001ecefc",
        "cursor": {
          "ref": "77b13ce6-a863-4d25-adac-2ea0d917b07f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "97e2044f-694d-443a-b830-96332ac42312"
        },
        "item": {
          "id": "ec234f9d-8755-4ee7-811e-7056001ecefc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "53fa5d06-f451-4b89-9def-4180ab16a49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38df1775-23a7-44b5-86d8-dfff11ff7040",
        "cursor": {
          "ref": "13680222-6062-4b13-ac48-06cc731028c5",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9795ff10-df7c-4a21-9547-1f79c1048b26"
        },
        "item": {
          "id": "38df1775-23a7-44b5-86d8-dfff11ff7040",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "39c7b7de-bb63-450c-a283-7f14770d927f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3212274-45ca-4431-b4dc-d91eb5acd842",
        "cursor": {
          "ref": "70fa07e4-628b-4e15-aae2-3345ca47b797",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e2419962-e15c-4ce0-bf75-52aa81660eed"
        },
        "item": {
          "id": "f3212274-45ca-4431-b4dc-d91eb5acd842",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "efb119c5-eb5a-48f2-96f1-daab6ace3bed",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03f0dee-2e4d-49b7-a3c0-1b7a00f9bd9f",
        "cursor": {
          "ref": "38f03458-81ad-4fb7-b7a7-559570b1880f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bd5b539d-d2cb-471d-b785-5b7f14c6e11a"
        },
        "item": {
          "id": "e03f0dee-2e4d-49b7-a3c0-1b7a00f9bd9f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1a7bb336-a5b5-4729-a8d3-8f24e7511ba5",
          "status": "OK",
          "code": 200,
          "responseTime": 5677,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dca96a-99f4-47de-bf37-a15f49e6bcea",
        "cursor": {
          "ref": "4f63fb03-03a8-4042-9ac7-c742e1bdd194",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e22224cb-c7ec-426d-91bc-d8da97b285a3"
        },
        "item": {
          "id": "99dca96a-99f4-47de-bf37-a15f49e6bcea",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ef37e4a7-9af5-484e-870a-bedf309706a0",
          "status": "OK",
          "code": 200,
          "responseTime": 1825,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c62982-79a2-43da-87c2-8b14fc025518",
        "cursor": {
          "ref": "4e1906d2-fffa-426f-9012-c8db85e156ae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "faa30831-bd6e-4113-b967-6b251d294ee3"
        },
        "item": {
          "id": "77c62982-79a2-43da-87c2-8b14fc025518",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f2ee888c-75be-461c-aff3-f4b9b171b5b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c62982-79a2-43da-87c2-8b14fc025518",
        "cursor": {
          "ref": "4e1906d2-fffa-426f-9012-c8db85e156ae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "faa30831-bd6e-4113-b967-6b251d294ee3"
        },
        "item": {
          "id": "77c62982-79a2-43da-87c2-8b14fc025518",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f2ee888c-75be-461c-aff3-f4b9b171b5b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99467a2-4b7c-4382-ad24-eee4987949ba",
        "cursor": {
          "ref": "893463b9-a813-4794-b2b4-ab4e82c7be4d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1ca09842-6641-4dda-81cf-52308beba7aa"
        },
        "item": {
          "id": "e99467a2-4b7c-4382-ad24-eee4987949ba",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4d84534e-f64a-4594-aa6d-5814b9de5152",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b26945-659a-4839-86a0-0e8e20957b76",
        "cursor": {
          "ref": "646c37bf-ebd0-4eae-ba4a-4df771fb80c2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7e08ecdc-a742-4942-8f67-84d472139d41"
        },
        "item": {
          "id": "88b26945-659a-4839-86a0-0e8e20957b76",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ddeab6f9-60d8-471f-a38f-f901bfc0679b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}