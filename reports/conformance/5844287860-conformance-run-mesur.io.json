{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6543e620-54d2-4cfd-ba46-7637786842e7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7f62164c-e20c-4b5f-bbf1-133556699faa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ccedf006-931c-4068-bf7d-3647f17de356",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "af80d847-186e-438d-9e2b-3f1eabac7a60"
                }
              }
            ]
          },
          {
            "id": "776b03ee-d599-4782-87fd-32cf352fff7c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f79675d4-0553-4208-87f0-bc06e49a8bde",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e87fbfd-e9f5-4636-a368-992d43f8f042"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e64dde6d-45cb-441f-865c-5116758a0568",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "de933203-46fe-4408-beae-eade87107de5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8155a19-5cf3-4e20-9b3e-a906c23a4dee",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f523fcbd-27f4-462b-b55a-cc686b5300f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31f9ffa3-b47e-4916-8e64-23be0ef17423"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "016524cb-61fa-4f32-a74b-bbd0a429c49d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20afaecd-8685-47be-a542-c2c8645e655c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07641f39-24b5-48b6-88e2-829d5db218e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf0dd2da-a199-4d0e-94a4-6613690978d9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffe38123-afee-42ae-85ad-d9b35b803681",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "625759ee-723e-4a0e-bccd-540c8348f441"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce560773-6d1f-470d-be7a-3d206814f2f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8afbcfe5-0afc-46ee-872b-c7c2aaa6c3e7"
            }
          }
        ]
      },
      {
        "id": "4f1a6496-0bb6-4c4c-b03e-e3db4d48c17b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "adcaee18-5fa6-4767-9fa7-462a17e2c50b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db2347e4-647a-42ce-91ff-05c296350561",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3fb7ffa5-c7a3-4bcc-8f20-05dc1dbbef55",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2404120-e487-4bd8-915d-f84b718407c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ab369de-63a9-444c-a79d-cce1424ccad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bb11c4-08fa-43a8-9d7a-97fcd97cf219",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a87066-9ddf-41c2-a19f-85c0dfc8310d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e34ddb8d-3acc-4021-9f93-d1ecaa08ba57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b07525-29a8-4b10-8a95-141a6ad6e502",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c351ae4e-6d90-4be4-9636-1dce365f9cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "389d9c2b-26ba-47ee-ae26-12dc3561ea9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8b7598a-9d88-4754-8cee-22965ae62e53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c5eed95-a24a-4d56-9d81-d8f6277beae0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c1ce95-c844-4852-a20a-fe34c3d45181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9c5c38e-f748-4f66-a801-1e448c59c290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c51d998-28bb-4b1e-a273-0ba0fe52d87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed880fd8-18f8-48e3-870f-9f843402943e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9cf9d08d-ff12-4194-87b7-64e5034b256a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8f159f3-ead3-46d6-9ccc-93562f164ca6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fc8aa38-abd7-4892-9994-eae2068d9493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d45913b0-f610-400a-9e37-22221e10650d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdab31f0-6165-4e18-8347-46c4114bef65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3a4eeec9-7678-412a-a145-a4efe56aa3c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e4a4b69-7d32-45ac-97bf-860f3645e1b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21e0acc8-bcf8-4d19-b817-ff539e5850c6"
            }
          }
        ]
      },
      {
        "id": "6b82886e-799e-4d67-88cd-ad5da75b8473",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "48a749e6-cb7f-4f91-9c7f-f1786614dbcf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0222ab2-aee9-44dd-88f4-0d8e6082d93d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "455e41d2-0c4a-425d-878c-eac3527022ce",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9275f9f4-62b7-4aef-9a33-75b61957cfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee960c3-1e71-4c99-ba42-eb0ba1a89d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f5d60a-ce9b-483b-aa9e-758af1de2091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c56f915d-118c-457c-8c00-31995355bdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69565cad-cf1a-494f-ae35-44c847acd977",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba964227-0afe-4ac9-9ae3-cacf3d06bbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2127d853-8a33-45d0-b6e0-4039c8086bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0be12d-73c1-44a2-aef9-d8d122fd05d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5daadd50-6fda-4768-9db7-eab961a5ed41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71495589-1968-40d7-92da-3f16c604a2d3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3c06eb-5775-4797-9637-fbf6385c8295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9720f0e7-658c-4431-90e8-6cf51fac1ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d24228-2ca0-4743-8268-f321fcea7b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22ae0b23-e9bb-4636-9830-0f0c10aff2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2c5c26-3a09-4545-be87-7f8ae81cc74d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3b55bd-ea2c-4457-897e-31931ecb56c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dc87fc-15dc-4d3d-a7a8-c0676a8c54d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca013088-640d-47e2-9b27-a358ae339010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16358044-b4d6-48fb-b5c2-b247502698b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766c9d5e-138b-4747-8916-1e7a4b8735d7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d16da4-f393-4289-9165-b26f65e04dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b15eea1-1cec-40fd-99fb-51b096a6b2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c30443-1fd4-4aba-b3ae-77760222cae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ced8c452-b270-4b38-9066-4ac24b4b8f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b798d70-508c-489e-be43-884067137822",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77ff76c-7ed0-4d64-b054-269b11889aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4874652c-ddb7-4da7-91f7-19e8069fa20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b6df80-3973-47c2-9e3c-cc99aea66c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc23a612-3154-4733-931c-82d0d946801b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aa2133-a0b4-4343-84c1-4992da07511a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b538eb-27e2-4511-af5f-617a4de3163a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117ba9cd-215d-4a35-ac4c-c6e7013caa1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945b7fbd-c8bb-4e92-949f-b376fd98d710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84653afe-ca5c-4fb7-9346-4e05b951d0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd3cc83-a70d-48fb-ab8d-40dacf9f0aca",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c04b25-2a7d-4b34-bbd8-913d0cbc6fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfa15fb-8b4d-4834-abd9-15017889023a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f8ccc6-a3bc-4897-911f-7d8939bb5252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bd92655-2389-4cb9-b43a-cbb3b9482bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c158d202-eca2-4812-bc15-ad67fd1f3ca8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba062b4-2e5c-4251-9ae8-1ff93625aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b33767f-304a-40ca-b32c-83245c4484f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d640ca-d5f7-4340-8816-9605b4523341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e0f90b0-82cc-4f13-ad73-447fab0a4e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e296f04a-849f-44f5-9dd1-dc33df01f2f8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e45108-a174-471c-ba1c-22c8dda219a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6287faac-aaca-4cba-9b96-3ad6ed9b330a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d090cfd4-20a0-47e9-893f-f7d1a197ecb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b9194a4-5ac4-4b8b-9d59-6abb872287a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e444ee2c-3c01-4d42-a0ca-717a3d7cc821",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94952e7-6851-42c9-9d13-f4515552f841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c39ba3-e925-41e7-a067-db785fe0a741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48195ce-bcd4-4cbe-a967-4a3d3ad83711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6427638b-2400-4bda-b8b8-c3cdab5d559f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2f3146-5da3-44ea-8407-8ebee02d1370",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039f4793-d858-41b8-bbd3-639944e704d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8234b40d-857f-4d28-ab0a-60c25e32fe51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec0b2d8-a4a3-45b1-9248-6fe2536b2dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc86378f-ccb0-43bd-b3e0-cfff3f72ac8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a9bd0f-6511-4597-b619-dc4fc93c04a2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a450a783-5ff2-412d-ad70-9429d227660a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b35fc56-7eed-4d14-8e10-43a51b38a65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4952ed8b-1e22-4141-b307-b266303bd36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d90a4f12-c4e4-4fed-9c24-e5b5a0d6f653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2681fdc3-9e25-4187-bf1d-35a281b10eca",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e93b0d-d82c-4188-b770-c28168dbdac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b0d09f-b1c8-49c1-a252-3bcaf1e097d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766fe196-7224-42f1-ba2b-d0ff3340b05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ad52f63-1cdb-4535-9874-f6172c046d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fd86f0-54b3-4c55-aabe-4fa7a27d95f6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23709954-9d8b-45a6-9b2d-d0f461c551a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a73418-48f0-4793-be41-b559e34ba380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8379cb-0356-49f2-90d0-8b241a310d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4f9b901-fad5-43e2-8ad8-4de53f08f632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c0be39-6c15-4e66-b8b1-3ff3a3bc3d79",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eda286b-265c-4ee1-875f-a7c5db185ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebd8d1e-1d19-45b2-bb4f-d236e0184112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c05d135-bcdc-4493-b317-4678e16372d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "706e6c4c-6f4e-44e4-94b2-7fb08c412cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3a44eb-7cbb-47f9-a0d3-79d825cd6ffc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5947a1a6-a5cf-4a58-8493-527091fb5f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a215a943-2a24-490a-a112-5806caf76489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ff641f-76f8-493f-afe5-bb1d082b7991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8509f4b9-fa81-4be0-91b6-0fe345a1dec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e11b01-8ff6-4cac-942b-fd83feaaf8c9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d9468d-dc4f-475c-96ac-7bab02d84260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bf93d3-3220-47fa-8b6c-4064b37f5e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2394ca-bcd4-4f52-94c1-25bc72221e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff032558-1541-4385-a575-9cbf8e55e0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc008b4-9991-48b0-8f3c-b775027a38bf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a1c116-7391-4c44-98bb-3a850820410c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2041c2-aef1-4d52-b621-33db5eb17493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1c64b5-07ec-4a30-b9b2-c2f933336eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdfc89c-f3dc-46fd-95a2-30b9c0a7135c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33625a91-32fa-434c-b086-6d39acc35c41",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2574984c-1cf7-4b66-a396-d223a54f812d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0537206-d1be-43fd-a15a-5f3becbe3c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7087bc-4db1-4206-b5f2-9c27a6fd0d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad55b64-239f-4efb-b6a3-4ddf7c7bf079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c54a0d9-a5a1-411d-abdb-62b026ac2c21",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fcbf0d-d617-4848-b235-82822aa104e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51a595d-155b-4613-8d9e-db886a9b8aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f20e17-9c8a-4a4e-b89f-b912ce0b3354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e1be2d-9f97-4633-b55a-e37beb23a29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a41f82-7f37-415d-9f56-bfb1bd966454",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0e5ab7-01c5-4830-8450-b98db1cf8d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc1eced-cf9e-4025-8327-ad0926b31a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c433b1a9-1bb8-48d5-9954-b9974269ae7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea4fbd1-8127-46ce-90bd-1415620243d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129e39fd-257e-4c87-87bf-9c9958413702",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1c0fb9-68a8-498e-bc4c-c9c86e876d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418834c1-352e-448a-b30c-840e01f4c5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d837c201-04fa-4160-a115-39064498383e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a32105-96ce-4887-bc8b-b8ef8ba64eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdeca8bb-cb41-4137-bcba-bc3322996233",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5a97f9-c693-4e49-86a7-2d2202ed8fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27f9f98-0eea-4463-94c4-844ab188b80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1409723a-504a-4f13-81bc-74dc2e37a18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f43fe913-c333-47d2-8397-4f62750ca6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c2624b-b778-4d5e-8fb4-7a33d51f0d1b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5246e702-06e4-41d8-87fc-25d306efd0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0b3ce2-f668-4cd5-991e-497b7455872b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd8ca83-7dff-4fb2-a6c3-7cd22f8bb8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed770d3-521f-4585-8ba9-0fcee8754fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318c4f22-ca34-4230-8c30-224bed74865d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5624c-87dd-4479-8dde-663e322f35b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea2a121-0cea-45d7-a76e-27032d859f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577bc0d4-d4e5-4a3c-83cb-a082ba686efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2836344-5573-4f98-9182-40eb4753d844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e2db14-fa7d-4658-a9f5-28d69c482bfa",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b636ebe-a6b2-47e1-9f09-f2f9116ebcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d949ce05-3603-4175-9c34-5dc35d4b188d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150f85b1-686c-4cb5-9340-9f9f6b19d33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19ba59a1-cad8-49c7-8e1c-b3eb165cffff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed35af49-fbb6-4a5b-ab20-da8cbdbe11f7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d7e70d-6fb8-4d0c-8b24-11b1300934b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8d1bde-c47c-4cbf-8bfe-9974b8cba096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adf32c1-e240-460a-bff1-e6b1c769a418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1bd2d4-3222-41b7-94ef-6ba775a78621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e6b3d2-016a-47f9-93e7-49338b26f47a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a02590e-186f-45da-afbc-48178b7f1f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5343c743-9663-4c3c-8a27-efaf98755acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8181a5-0b2f-4f38-a65e-3a637c158e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b7cc4f-35df-43f5-9b54-020297a6bf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9874db6-ad23-4095-8de2-3e0689d87406",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555a8b52-b599-4092-b3d2-c3039ecd3785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa98bb7-4c06-4a38-8627-3866f151bebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15301447-fd66-4e05-b3c1-7d5b259ca424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb99fe8d-4282-4f47-ac9f-872a70d040f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f61d72c-0254-4dc2-85a5-3f4cf163f1a1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f7be58-feeb-4156-8c9c-1bce98f5f4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d2b408-cb2d-4f50-ad0d-d96ef01dd9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d394df-c264-4faf-ba9d-7eba86a8069e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef4da8b-6fba-4e2c-a165-f5121691735a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749dc123-15a9-4bdd-8886-9641c7becd7f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a344052c-aba8-40ca-bc85-9e6dbe4e9e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f226d1fb-8ac5-4328-a5f5-b030018dc88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba91d02-2c85-4bfe-bb82-7785d43522ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4722cd-7aac-45b5-9776-412edb5920d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e177bcf-b9e8-43e2-bb86-6b3b33be5200",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997a7e47-57ba-47ed-84ea-90c8e3ab4f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac745f90-b831-4567-b7fa-6669750587c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b90a7a-b8e8-4ce9-81ee-0aeaeb00f58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9976b8e2-11d3-43d4-969a-5fdcd9c6757d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3d9a44-4aae-4f8a-8f90-d8519e59c707",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3429579d-3adf-4922-b61a-784934bad0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319bd2d1-b1cc-4302-bc11-b1277b2966c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c4ea9a-3eb4-42e9-a23f-30277ad5b43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d5bef5-678c-428b-94a6-8c9fb9a07b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da50966f-037d-4b4d-b472-ec6648eefbef",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20324f22-fac1-42eb-b3e5-7e4376fb2ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f475dc9-44b6-4bb2-a52b-1ec6ac33c0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae2f504-45c9-4ea4-9026-960ff3ca2899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "39026a0d-3b41-4581-9401-140f7aac02ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8113bed1-0efe-4c18-816d-c712295e37ad",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effa5e08-17d9-465e-bb2e-ca32a0ddec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea701622-ad74-4b5b-ba5d-c2062d73d6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0052f4d3-4211-403c-8451-ca6f991124c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7048ca4-b62a-49ab-81bc-f184721c1f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440a340d-cac2-4bde-9f17-f1ea81d5851c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad1e108-ac81-437e-ae8d-35d00cc0d6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc33730a-cc61-49e7-9969-f0d97d6a0d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c2dec1-943f-4f55-9dda-3e9bb6a0e53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49c15b97-595c-442c-851d-bf71b9083381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db443c20-3d97-424a-a48d-0b00d100761f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10d3d63-2b53-4194-a38a-c9174db37d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5aa458-a55f-4855-9222-033464f3dbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae279d48-4479-4d1b-a6d7-14e13885a090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbbfd12-e3c6-49f7-96a6-11842fa1d2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9377dc23-9e2d-4222-8864-0bd802902dbc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89213ea0-b0e4-4318-93ea-8cca7b53507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33d26ea-71f0-4676-a8f8-4d2bd3c1d4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a449ad76-97bc-4dec-8406-e93f314018c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cff8c7c9-2434-4b83-a9de-95586f4f9180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bdcff4-9be7-4b23-90be-142406e428cf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dfe330-94b8-46c1-9216-974916ddd29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5582a9c9-6df9-4ac4-9086-1cf334a5122d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067b0f38-afdf-4f13-bb2c-61b64f88de1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "845fa347-389b-4a07-af74-562c2e865691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71feb401-3855-4cab-b136-1a3eaa41aa70",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80282280-a292-42e3-a8e6-0a244600cfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf19707-9984-482e-ae89-55dc5c50807c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246113aa-4d12-4599-bf13-3bdc0b9d115e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d583fa3-db57-4a20-8c9c-f08b0cacb95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd6419b-7dbd-4acf-89eb-7bbedccff1ad",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7049410b-85fc-4e1e-b8fd-eeaf1cb1621f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0adae08-d00e-4fac-b318-6e46ffadb1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca4089e-84c9-4eef-83be-f519abeced9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "51809588-dbd1-4bc4-b13d-53b401e50314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee7fa18-1cc3-46c8-b1ec-a0fd0409a158",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8e1b7e-8b1b-480a-858a-16765424110f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d71c776-489f-4c68-86bd-9987a0b55aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34143349-f636-4381-9c42-68b1482467d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c82ac5-6102-42ac-aa24-91f1fe39dac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50c2e9f-3c54-4058-b7ee-cab59305c8be",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8f1580-9593-4a00-a7e2-9f79e21cb30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add352b9-e70a-4dac-a222-fd8451a22ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30f0f9c-44d4-441d-894b-5efa33cb9987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "546cc44b-a73f-4e5f-9ed1-f892a595f1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4f826d-a6b1-4972-b783-3a1ab8a6d89a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5c2de0-2121-4793-b299-ed89d8f48d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e0e0f4-dc4e-412a-80f2-f427ae0d3cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05b3417-dbae-4ad3-a854-c2f52c74b1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b6f5ae-3790-49ce-a8dc-faf18f956a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf1592d-7040-4821-a651-75a987845d88",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce0cd89-37e5-44f3-8d44-05a7f252406c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1b429f-5f52-4209-b479-ecf25a19b89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda55b30-7b69-44ff-b49b-22bcc278efa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5516c045-8410-4f5a-a754-db8e6105dc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7def03b1-4c22-4cb2-89a6-f4e61861bfab",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779b8fa8-6795-43fe-a544-8aa325d59168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28808d94-a3ea-4319-a481-4975f49cfe2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68464e14-31c0-4b01-8ca9-5b98b0436701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3bcda1-b8da-417e-9054-5c6f5baf8561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039e7cae-3738-4387-8cb9-dc1859c2a174",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cc6ec9-18d0-4431-a3ed-dc8795b14ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3ca198-dd07-4c23-80e3-54a1247c1265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5777b529-8851-4681-9c5f-b2fc0affc419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4980cbc0-e5ed-4dec-9b09-f645cf506c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65091f54-317b-4667-9dcd-00b344aefd2d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0794e094-82cb-45c6-9ddc-779fd507aa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6447dc-83cd-40b9-a3da-d52ec92ad853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d361e091-2035-41e9-9936-cdac023d78dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f358895-4e0d-41f9-b325-d9acbf81f997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faadde00-cc69-4f52-a21d-3de02800ec32",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a0ea1e-2ddb-44f1-9394-25b951621fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6123c6c-78d0-4319-9c8f-158e3b6c22c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5042a496-ddbc-4a45-8d63-b44011e7e04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd27925-d8be-4efe-a762-a3ba4ff337ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8a386c-f08f-4fe6-a547-517d2f355bf8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e5df2d-c8e9-4bff-898d-d4e1d2cca883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9d052e-812f-4700-b783-0c21fd26868f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1001df-d0d5-4df8-91ec-495dfc4d122f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eab723b-0336-4309-9c02-1e4bd1b9e86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a6b704-48d7-4141-b7a6-520334fad10e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39606479-3ffb-4238-ad04-787e64f02759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb71feb9-80d8-4f86-b42a-0b7bf1488d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e3bb96-24f2-4aae-a053-61d9a6042de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31175707-237f-4d4a-a4d8-cf7e99eca2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d72fc4-43f1-4928-8820-23731b1bbbb7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2971890a-64ff-4269-aaf1-256e830a629c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5cd75b-36a0-4595-9950-c4ea1720b09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedbe146-5829-4114-941d-0265468daff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "239b0298-926f-4cca-8838-6f789f357c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3367220f-0f4d-46a4-be67-97356bfda9d5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff40122-eb27-4497-af51-144e9d52bf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1da5d3-11f8-49f2-8362-820e28b5e2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3054d04b-431e-4370-9789-619a8ff57a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1509fbc-5994-417a-93ee-d3ed08363949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e793c07d-894d-4b5b-84fb-df8147f8b9e0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c447a76-3ec4-4dee-9bd6-2bcdb5f1ef34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72df98b0-720f-4be8-a373-aaba308113c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2785c8-c6de-4dab-878e-296503bf291e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "861a98d9-28c2-405a-86b5-b3b9eceb39e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27257d87-94a3-41c5-a071-55a885e66c61",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0c87a0-cd19-4612-baa0-98849102f808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a617ce00-ee7e-4907-a4cd-7f0ca2dcabba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dce24f-f154-4c65-92f3-bff212844eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "448bd287-3b9e-4b0d-9195-bae37ef540e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e7426d-81fb-48bf-a7d6-7493fb62e80e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8947a1f1-94fe-4676-a585-25c8c9e7540d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87afecb6-5689-4cd4-bb4a-04188f107155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276c38bc-d07f-4264-9f35-e911f10ae5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7184b776-13bd-4880-a9b5-1ab1abfb8920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f6fbac-6c6b-4cc2-a28b-aa2dda6bee24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a63f04-9832-44e8-9c0f-ceadd014a732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d9a652-fc4c-4cb0-a5e6-ca5726d3ffe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cca48f2-2540-4c04-bea8-5789baaae02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e67ad9c-125b-4791-8257-0f59525f7a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd87d8dc-f494-443c-8218-0a0b3f599593",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d2ea9a-3beb-43c2-be42-deab732561a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad65528-8f7f-4141-be23-a986c212031f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf5ec7f-1edd-445d-897e-d3c5e1606e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "44354795-2f24-4860-844b-16ebe156fd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d78e87-34aa-43ce-a779-845a851adcdb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e024ce-f296-418b-9ce9-97db322a750d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2899bf-cd2c-471e-8c91-91a0741f36c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8f5525-800b-4980-8523-378f7b3a55cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e01a934-c08b-49ce-b075-76ea090d4634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0888ddbe-5c14-438e-a3ec-c466600536e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c123a4-c12c-4eb2-8117-33bd385f77bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c64c4b5-6611-4c26-b530-3cf8b3f61078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa77caf-5e49-4f0a-bc18-03607746ea0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8976a0-b4c9-442f-8ae8-984504587a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28598d2-cd63-437f-8308-6af2022267c1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628a735a-2581-4033-b7b1-82a235f32e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4433b399-2a3a-49fd-8927-7a0dbf2e8037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af08b3d4-6405-446f-b359-5f04c2dd6efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "746df2f9-65a9-45bb-a801-8f1511d0fa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b693df14-a927-41a1-b61c-7191f8fb410d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac2c8bc-6e3a-49b7-a9fc-6a69141d1ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c45abf-f397-4097-a6ec-a78f841162d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097aa113-5f0c-4383-9b74-1ac2ff144201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa47e756-5173-42e5-9ae9-38d1deca331b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade47577-086e-49c6-9d49-259c98695459",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae15433-1183-4960-a6e3-872fb89ecc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810c0d1b-e408-4506-b482-179b5ce3fce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a40f763-86bd-4577-98e8-0aa46dac125b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01fb4810-04c1-4b33-b87b-e1c728d16dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e15b0e0-ebe4-462b-90b9-60ae892ff4c1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3b5b6c-9038-41e3-9a0a-4693d4464442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af256e7-9e85-4a43-a258-a3915027472e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97650c06-71b7-4b3b-88f5-4acb00bfd811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c84421b-d0ea-447a-9c78-cbb4255ebb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c23b594-1a80-4839-bb5c-75e39f060218",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bac9baa-09a3-4fd5-937e-d1191bda6af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66983538-4016-4d4f-b242-dc8f50ea7f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab10f32-f79d-4d8f-aade-6300bdaf7ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67e63236-c534-48a9-a200-5603adc26b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f7957e-1a08-44ca-bbe4-9e596d93d824",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fb19f2-a87e-44f6-a6e2-eee33b31d9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51423a43-5cad-47a0-8a14-5ba056b9cef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1a17e5-ecb2-4d34-9af3-ae56675345fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5dde6a57-2298-4da4-8644-2324a6b25823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e88edb-a216-47c7-a50e-dc25ba496db2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c553db-0a1c-4d9f-ac7b-6fdb7c32e26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5894ac98-28e8-4d31-a9c8-d9898af8e53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c810906-f672-4d68-9981-3dd1e1d54f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd271e35-b799-420e-b647-65900507fa56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11f1e33-4740-44a0-a8fe-3381f61b8918",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841156dd-4a5b-4cab-bf99-893a7d81b484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf76ce9-0491-48f0-9233-d00686c9f02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92916f6-ea67-4139-b10d-db7cb521476d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6c18a5-b299-4389-96b7-c774ead6851a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cb028f-5b4f-46aa-96a8-5b06be2ea60e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae3416d-d654-45f7-aebf-384da326eca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1bd906-bc26-4c52-938a-a3eb0ff96824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06337e55-d5f4-40a6-9a3d-9d94bca5c50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c31278-6a53-4c41-8377-c533f3d93f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7520fb-532a-49e6-abbd-50ecade0876a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666722d5-d209-4751-91de-550691d0abef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429f9f10-3b50-4827-a905-8467507752c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a24ad37-88ee-4599-89a5-479daffab0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fb0399-3000-434f-af17-93acd982c9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1d3ba6-b207-492d-9974-c779a7f21ba3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19973cd0-93e8-4847-8837-794a6030a366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9e086f-0541-4bfd-9c6d-77df546f512e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f542eef9-1d51-49ad-a06a-5d2fb2fe619e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e332ef-4fc8-4517-8671-a500b9ed7cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150253c1-9821-4eb7-8741-1db6e5c5bbd6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f4976a-e79a-472e-993e-693de9d52622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c1d634-3a85-4bd4-83d9-9ad947f9d430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f9871b-6600-4a69-bc9c-ff564ff4737c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18f2c081-9d6b-41a2-a92a-6c11ced8b257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca57565-5365-4939-b3b1-9a4e9a02e0a3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e65dac-0ed2-470e-9243-c4ca1a9bbc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6dde5c-e44f-4669-9a1a-fa5f087ea3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc8d76a-f594-4ca5-9d0e-2c7d0d08f93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edde7487-b803-4b94-8931-b6c92a351f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0915966f-91d4-41ca-a231-02790ec97716",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25b7fe5-4b99-47e7-b922-2a9552e3aca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb57d7e-b3da-4943-abaa-6f3055f518c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d679b05-f10f-4f5e-b52f-06d98505cc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f77144-0169-4b43-bd6e-45f8d2233c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e09e8ec-35d7-4e40-b9ac-1b3d9f23451a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5dab6f-29be-4837-a876-89c78bc44a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c21d42-d0d4-423d-81c8-0c2d3e1b7844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a991b312-c0e8-4d8e-b862-5b67f64df265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb52f354-2067-4e64-b0c2-bf7a685f9af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432002dc-f05e-4cf6-80ea-fad91ead13bd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3ecea4-6a1a-441a-a83d-b9acd50c79c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9587b0-7f17-446e-8904-6b08e6dbafd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a445326c-a533-4d86-b140-af1a90b67059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd4d605-2b6f-4ff7-a6d7-1ea50d9a4dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4edd37-fee3-42c4-b23a-c4b0ba7ac970",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bd179d-52f4-47b1-a290-17ada84e86c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06649c61-160f-408e-8c12-267ac683387a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7271e7-5e24-4f34-9c03-5379d47e48b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d51462-d6cd-4c6c-b953-abe62ac426ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12e35a1-2771-4aa2-aca5-6d4ca03e11f0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c0338b-54fa-492c-b241-a706a647130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2cd951-fac3-4cbd-89c0-7dadf919644a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936c9be7-9809-4a9d-ae8d-1fdc4ab252c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36e2a77a-3a72-4049-b500-3d62f33c6eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a432a8a-f77a-4c3f-adec-f726eccd02d7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58a0d06-3142-4fbb-b57a-d061aebaeac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f885f5e4-a620-45a5-940f-8a39aaea973e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4787409d-1954-4313-9e7c-24f313f3b54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f494a27-2167-4366-a377-35093800d7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7a700e-a5e5-4848-b765-8f325981de1f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce95a8b-8adc-44e6-b093-0ee9e79126c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd7c06b-d9f1-4b98-9b4c-538a35e88ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461d0d56-60fd-4790-8574-bfe85d7c1629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c97408-f053-4977-8e81-f0a18bf1734d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b706f83e-dc97-4576-b374-d5a5fab8dd95",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293f1b87-3c55-4ca1-9709-74f290c7c7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6174aa-90ff-42df-9dd6-b8c3355b4b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2f391f-ae31-46e0-a6e5-6a3ce1294709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a917531f-9515-42f4-8eb3-697b8148dca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287e7ff6-30f6-4f8f-b91b-707c5ffee90d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae9121c-53e7-4439-99be-90f2d41ede1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248aea3b-b164-4e9c-bf4a-403af6db007a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25235de-f80e-4fbd-a5cb-7fd584d584bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e06b3d41-329d-44b3-9501-c5511ed3ef55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1731d36-1c7f-4377-86ce-f0a8cb243c2a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844b333a-52cc-4479-a637-f97023d1d636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d003c24-039c-4986-bb12-569a422fca5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604f30e8-2529-4e51-aaa2-99a774a08576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26f5a7d7-1bac-424b-8e63-4581f8b3e45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0c2f01-fa9c-4ee7-ba61-cfcbeac5127f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0b8b15-e499-4703-b265-3bbd247604e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214b6862-92e8-43d3-a46e-818a29e5668b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe66d06-f1d8-4974-93ab-d053eebd0228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17496ac2-26bf-4721-87c2-f9dfc835c5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10325a9a-f688-4df0-a385-246406167505",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4428c69-f5c8-4ae9-a2ee-8b71f8a42e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bd8cef-3859-45ab-b544-c7eb89fd9eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95206261-c0db-48b5-adfa-dd33e57b37b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9931ca21-3f66-41c3-8da4-3464f294ea12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544c6389-6754-4f06-8121-26e973ea6afd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dae5415-20bf-4363-94f9-da72adbb46ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d6d7b5-5b60-43b8-82b2-fac01d3d35a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cb7a11-b4e8-43ac-a193-0853ecc5cf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "464024bc-f7a3-46e8-85eb-536247017fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e712ebe-c54e-4db3-9867-1beabfb05da5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f916e5c6-7a6f-45e0-ab47-fb0a70f7315b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f3891e-c1c1-4077-ad13-bc6e6e838b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16ea32b-b3ed-4d4a-b5e0-91ad1bbea2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d423a063-ce76-48f4-b75a-609f0cf1bee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cc5a6e-852e-4a45-a3ab-aebc5b43a793",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e555dd-8444-43c9-a1f3-0aae5cce25a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71419a77-eea5-4c22-834a-e2d3d5389f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde8bba2-5c02-4e83-9941-a804e930a277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8467d3c-0699-4f48-95d5-6d63c2b0c3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aaea3f-281b-4e9b-96f5-ad995f75bc18",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ab5355-ff49-40c0-8281-fb68f84ba4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c4c05f-e59f-4ae6-9022-76694f4c7b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cad7efc-6274-4fe2-a662-3de3133301f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83cb86e2-1ad1-40c7-a812-8fed6ed8bd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f66f5e-27a0-4995-9e78-16b6a8c7da6b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a82c4df-4665-41a6-9cfe-5f9777e8c3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85969c73-a9e3-43f9-9bf1-0827b5644c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6472a2-2d6c-4e96-88e0-58f5abb88052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "91f75793-4267-4d70-b72a-51d09dc47308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f67c89-def3-4efd-9b98-19b1f945001b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadca443-22fd-4c62-ac8c-229d6c8571cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5b23f14c-1917-4881-9f0f-bf5bf4a29d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ac1d73-d9fe-4735-9005-e7eb25b40f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "25eb6a58-a7a5-4f31-863e-cec307aebbed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4dd69443-1429-47b9-a770-dc73ed3d340f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e66cad69-6737-481d-8123-42c93a9cd600",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac9bc01-36a3-4b20-86bd-388b9fec6b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e39279f5-eaff-4f16-8d7f-bcc683798547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9fb2c1-3776-4c51-b932-dceafeba401b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1eb68a0-1d5b-4bdb-bb7c-9bbb2f7d7d1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10c1d2fd-2494-4beb-9ad6-1f0df0781b56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bc3d524-c2d0-4704-a1d6-ab65b1b8e43b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a8aeccb-f020-4dd4-8c3c-c592fe172e9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e016bd9c-8dad-4d78-9747-cec768955fa1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbd5c5e1-9b7e-4b9b-a506-4c9e9e663238",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de7a28f2-713b-47a3-b84d-15de3276e3b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6924e701-1fc8-45fe-891a-ff1fcba91665",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f80db34e-c39c-4a63-8442-196b5e590319"
                }
              }
            ]
          },
          {
            "id": "550b7d4d-6a10-421d-9825-b0127795e3de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "146c84d1-7c69-4f51-b221-0efee8ff26a2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdd45485-382b-47b0-bdaa-d56888b18990",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db081217-9359-4220-a274-9d2bb0a85241"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "852e207f-7d3b-4454-9891-cde987156631",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "487781df-8c23-4b40-8ab3-c7b638b4c3c8"
                    }
                  }
                ]
              },
              {
                "id": "9f790d5b-4672-4651-8ede-eb4c32acfbb6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c060c8a-3615-45d1-a0b8-147d355ffdc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f6fae40-d52d-439f-89d1-01a807164c7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e97a616-0e7c-49ee-aca6-b24a32e8adad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ba7f706-a779-476c-83c6-bdbbf1dbc345"
                    }
                  }
                ]
              },
              {
                "id": "cf358df5-d4de-4ba0-a9dc-e63ea7c74e06",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae462477-2430-4275-9134-ab9aed15edec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b37aa669-8759-44d0-a84f-1d18511fdc03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdc1726d-827b-4214-aecd-37d927f6b5bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8fe6a0d-5b9f-47da-bda2-3a044ebb19ac"
                    }
                  }
                ]
              },
              {
                "id": "12b5c295-08b8-4853-9075-c17be4732564",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae823568-89d2-4112-b208-264db1a5cf92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cfb6c86-52cc-4d9b-8ca5-365df3cd7fbd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "548148d7-536e-447c-a84a-8d97a4e32867",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "61f5718a-6289-4778-8262-3572a4c58763"
                    }
                  }
                ]
              },
              {
                "id": "68246328-4aa3-4ad0-9a86-a9aebe1f9783",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba80d26e-397d-427d-9b26-d32571b124ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2dce6009-1224-4b74-9b2f-0f97b26bed24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17a4b6ba-4ee3-49f6-9106-0a1c5db3e1be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8decdef6-edeb-4c9d-a1d0-6cc8784353a9"
                    }
                  }
                ]
              },
              {
                "id": "2a6ad6fd-fe56-4d45-baf3-ecb132521401",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76f5cc4f-de59-402e-9162-b4afe17d2ca4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64695e1a-dc35-45c4-83e6-c1223313024c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79866208-7188-41d4-bb00-97dfaf881c00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8619fcd6-974d-40e1-b625-ddeb05eb1b5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c077946a-54e8-4e77-9acc-eef256716893",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e77de2d-f78f-4e0e-a6b1-1e7eff9ae4ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ab5517f-3ba2-4efa-a763-1cfff8a545ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97939fb2-3487-4170-90ac-a1ddafc2065a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb6492ef-aa99-4bb3-abc4-798c80d209a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8413199e-8b62-4345-ba63-49b946f911bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0508910f-9eb6-402c-976c-73faae7e4a71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5dd9e6b3-8466-47fe-862c-beaf7f02f8b8"
            }
          }
        ]
      },
      {
        "id": "be158f9a-70da-4e62-bd2a-4f82fa1efa4a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d24d61a0-1845-4bcd-b257-44012779c8f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab0d0e29-d510-4a3c-a6cf-06b3905e3a07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7892a3e-87c8-4688-b8e1-794f5629c6e5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f737a69-b9a9-4d62-b919-509881e4712d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051d6d78-1cfd-4b87-b2d9-661483a01ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02083f3-ff32-4c06-a4c4-efeac5a31e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce250395-c4c1-4845-afe0-bf6cddfb1ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304e40f1-6c38-4d3e-8673-96a7891e9624",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6310d8f4-9041-46b9-8feb-920313a27a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c7ab26-4d3c-4138-a2b0-86e1a42063da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a8a069-635f-425a-a6fc-f97854233999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4479f39e-242f-4c22-bd59-618ea87eefbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6490d4-be9b-4727-af0e-ffa62677ccd9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cdec37-dfd7-447d-b1b4-a0c1dcf3eb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8afb966-fc58-44ae-909d-c6ab8b1e0df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f243cc2a-d2e6-4103-adac-1b24e0b59fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a13e56cb-7c58-4c6e-9f64-79f58861bce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f992602d-7071-4f88-8919-7f62b3e0b039",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaf37e4-1597-4a59-89d6-c440041cc279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52a8475-ef0b-409f-8203-f5a4c9859532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd131dae-19ca-4161-9037-79ec33b0816d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df34c2b-4124-4c37-9bd7-1f9bc476522a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5d6eef-17e7-4b1e-9a05-81de0a9d40b7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc8b927-2563-43bd-b891-b90349f3d8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1dbd8d4-a3e7-493b-9841-82db5f88e478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b360265a-17bf-4626-8992-45e479cc38f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a85d110-13af-4776-b12a-ff3e2f081582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4ef656-ba4b-4128-b4a6-58a99acdf8df",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d93d768-1d2f-4dc3-a607-782619a77fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2585c4-02c2-42e8-8ddb-4badc8a2427e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f3768f-f8aa-46b6-bf90-ef89a3d40726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a0f6f9-ac85-4cb7-9808-85b2e4db2185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d9df3a-6b39-47d9-936e-808868080348",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb29e1ff-f353-4fa9-9849-ea77907d8ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3015841e-a2fe-4fa0-860f-dde8e52549d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cbb9e3-3258-44bc-b887-3f2f64cef7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2227a5a4-ffdc-4949-b831-e991776f23f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ff2f03-c5f3-48c3-8224-01de8e215ebb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878c2e26-e012-4ff2-a8a4-a83a7d0b539a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411711d8-9d57-4188-a3e5-f05aee5b1fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e0c25d-86f4-4132-8d28-df2349f39827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3c0600-ec95-4189-8d38-361d802cb8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5247d311-b3bb-4a3b-aecb-b0f1db83abb9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a446ea-673a-4777-bf76-12638aa5d9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b176d7d4-0905-476b-96ed-1207cfee5598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc276b6a-d0a1-4382-a60f-138c76981c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "236dd0d9-48ae-4874-a805-4e8c157475ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6a702b-a005-4aee-b18d-93938e3eeff4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b859e3b-c73c-4edf-aff6-10b2d29e7902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6443a7cd-42f8-42fb-8627-bc6f1049d0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cbd81d-0ed5-45c4-88b3-c1159ce125c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "230df16a-9439-4675-b04d-0a5c35fb3920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1966ac02-6036-4f8e-ab04-4e66d1ad7c97",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195b47a7-426f-4956-b92e-1d0f5e9223a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e55fd9-4194-48bc-8f82-d99fab7a5089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23d83c4-db57-494d-8ddc-0eec2395b2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9560689c-351b-44d4-9cfb-3494378f7e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b864aed-503d-4e0c-87e5-94425dc79c88",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a0145d-0f6c-47e2-a2d5-66302c40f892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fceee8bf-03df-489a-8126-1b03a082be66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c1d161-1b99-4b4e-ae12-08d05fc998f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e468163c-66fc-4169-9958-71c3c58da030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e07f12-4579-4653-8854-962a2280399e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795a951f-af53-421b-a4f2-480e492dd026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1250a7e-1089-4069-83b0-dcc603edbcd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a79d86-d06c-48cf-bf25-6994d34b0dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc13fa93-7e2f-481c-a968-9cc4a2e00941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b803d11-ccbb-40ee-9abb-bf53366bfb7d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8d5a98-8ad8-418a-ab2b-a23b03f7be67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59b4563-8d63-4cd8-ac2c-b280f56394f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972533ec-b89c-4e8d-a6a4-36652013baf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c671b3ac-2305-4aa6-aaa1-7e3d48a7616b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca3c77d-d2a7-4d9b-9cba-e23c96ce44d6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b76a863-8999-4e95-9e48-92051bbc7e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b65e6d1-2077-45c7-8a67-258b6e11e397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c7c284-28da-4b05-9975-79f63786938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "56087cae-5942-4376-a34b-176fc2ec34fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050f7c0c-2a27-45e8-b879-140ccc0eb52b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e971eb-3e0a-47a2-9f6b-4d06df2b2c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225b962a-cda0-40ad-8e24-400eafe75f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacb6aa6-8a94-41d5-a8a7-4007feb43649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbb7710-17ad-4be5-b388-a85b1f5ffbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e059b59-d9d5-44a3-bef4-4c2e1a172bc9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c53062f-b4e3-43a6-b733-5e2db57a703a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6952f77-4640-478a-86bd-54f965f256f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d9ef3e-896c-4b88-913a-fe440afbdee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eaf7f82-82bd-4b6b-b9e7-7948bfb40e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220a123f-3dd6-4891-83c2-2952730d9d33",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87790829-6aaf-42ad-b6c3-8d2fa86003ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19c9e9b-5b30-4ddd-aa60-df334faa56d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5ccfde-fc88-494a-baad-82f04de38c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4735650a-dd9d-4532-a1f6-08376facd76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15d68de-4173-4619-805e-cf91834046ff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109956b6-f51c-46a5-befa-19cee742be92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe0c282-0424-4bc3-9205-080104645ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b8bb7d-5d27-40a0-ad56-44d9d574f951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2af5e9ef-629d-410e-a719-7338676796cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03b543c-82a3-49a0-8eee-af5d997998fb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c2228d-cb69-49c5-999a-9d03f7650c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2644a852-71c7-45f7-bd50-0076cad920dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cce8ab7-35af-443e-891d-8330330646fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95f826f0-f066-440e-97b6-dca83b8c9e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83835468-e69d-4a9a-8a3f-8d0fc7482260",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a747bad9-f73b-4480-bd0e-feaf93ffcdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc46e9d4-d36c-4215-956b-7dfcd9f0a8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7235ab05-3d7d-4316-9b1c-0337637216ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5182e93c-a55a-492a-966a-852872079867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802ec207-7289-4aba-a16c-8271071d2470",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd33594-eb68-4a39-be56-e79d86ce03e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57303230-8e15-4700-9bbc-db57122886be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f1f769-226f-4ab6-987e-2ba7660bee53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d85d15-019d-4c39-90f7-b48db17a62c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fbebef-d6e0-4aab-8ee5-cb5dd52a5c47",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b36ab3-5862-4253-b792-d3eb70a4a61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a55307f-2754-4a1a-83b8-835e492b39e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ba06b2-1dbe-496b-9f6d-c3cef1cf9cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b902c5-e573-4380-bc28-482f0aa84397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1127f3c5-fbdf-4644-8ee5-ce7b95501365",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d811a6a3-dddb-48d8-9f16-aa848d97953e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f33161-ea15-4e3c-90c7-42bc098866bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0548f1-0813-4090-9b2a-fb9d663c480c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf09d00a-31ce-4f2c-9726-cbf2f1bff91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206fba90-105f-4eeb-8f2d-7ced993cbf44",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a7493a-58b1-427f-b7f4-baf4c4664988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7899836-7c83-488b-ac35-b9e251893056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a588b8-cc9f-49b1-87d2-07f9b33eec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "276b76d4-dd14-4364-8438-048fd3458ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353cb04d-cb89-4a45-ab83-b9cdb5e35313",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9e7798-ea5c-4046-acbd-52a8e328266d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a32990-9290-406d-bd5b-44b939085c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c9354e-7a6c-4e88-8144-f8653b051715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be7aaa7-688b-458d-802b-128923637c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d8b846-551f-4a3d-a736-31082942abfe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6e9da5-e033-4d21-a353-c3260e7fdbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cf4da9-d2c8-4853-a1dc-9321d6c4cfb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c0d796-d76a-4d1e-ba5e-2b5d3ac7e4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d358d85c-d51c-44c5-aecd-120268e2a819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacf921e-7cf1-4dda-bfe9-24abd5f8bac6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb03dff-1c5c-4b10-aab3-48a3f2b8b7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302ea633-cf9d-4057-8cbd-34321b44fac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e22044c-1010-44a5-a0a9-040a2e979eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98c05ef-6b3c-4f4f-99a5-06189dffc1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7fff90-ac71-4984-b783-773b33659263",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51235f76-283c-488b-9e77-491767f97917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3c5cba-5807-4a43-a5b1-7062f2d599f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248c93b9-a536-4f3b-bd47-b880a0f0080b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd75b54d-849e-4fb5-955b-2207fd810290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce89ad0-f28d-4fdf-aca5-32e379af7101",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfb34b5-b089-41b9-94cc-9d0317c70194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c8b53f-a8eb-4ff7-b981-388362b3a687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cf328d-70ae-41d6-9169-da11e7b33010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48419231-5047-42e4-b032-80b4e6bd7de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fcf30d-d6e8-4a59-a99c-2b79b61e7c49",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01826b0a-6eae-417a-8910-dee1342a18a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ff12f6-152c-4420-875b-2ea04ecc913e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4281c827-86dd-468f-83c5-6b1e66611f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "048cc516-d431-417f-99b4-6033fe5fb3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2b7b78-b122-420f-b801-532033d9772a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e87a173-be4f-482d-bcaf-04a490473153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad718d4-6f62-4f22-bbcc-2ecbf0bc7609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532e43f8-5aab-4d07-a7c8-10554be606fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a36adb-c9ea-43f9-a48a-24a040a48b8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d93f6ebb-c91f-4df3-a607-b32088d28290",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4af59189-83e2-48f6-b978-87b167a82058",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a690e6c8-d9c4-42c7-bb38-e5798ac67f07",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7ae057-c657-4d8b-881a-9bfb36f5239e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b888e8-dcfe-427b-8609-04463a0a2d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccb314ac-0b41-44a6-a83f-edd40d0ece19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8362efa9-e488-4124-9a02-56cc92b803c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84d7285b-e9d0-44b6-955d-391643a8b7d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bee6a44-70bd-4379-89c8-f03e7b62e9be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ed0cf54-9af9-48ca-b4a7-f9b1f75df74f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "383adafc-b951-4bae-a87a-483e70dd853e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4098ea39-b4f9-4861-bbdd-e08da669ecd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9892eb18-8b2a-4c7e-bd72-4c81ec20c568",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fcded23-92b4-44ec-bb52-62edb3263c16"
            }
          }
        ]
      },
      {
        "id": "0cb211b3-cf68-4e6f-b043-2c4f85ee3681",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9385cb19-7aa1-4b61-a123-5a070c9fa277",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c8c9e27-b052-481b-936c-81789aad9833",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "637b3af7-de30-4951-a8eb-995791f2e3e1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e4edfd-5304-4b7a-ba01-f45e0b21e9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28c2410-c18c-4e63-9462-70f8950c7547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d5b34f-001e-46a5-8e6d-efa0761b85c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e64d581-8342-4ae1-bccc-3e5b672b2fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46593500-6cb1-449d-add5-f660d5282633",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b177fd-8960-4699-adea-555e67af6dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c36fe83-2cc8-482b-9295-1786b922abce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6d1c05-1850-4361-ba8c-17c3d3612a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48326daa-82b7-41ec-90af-4b922c452363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f6b09a-f1c3-420a-88ec-12c5a282bb09",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98372506-83c4-4c21-9a5d-4702bd08df72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394d040b-4c0a-46d9-a6e4-f2100af6f2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe38c1c4-d812-459a-8a7c-77d342227e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa18eec5-eee6-4a8e-99d2-fc921b9f92a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887c97bc-9525-4605-bf83-c79d8496a694",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc23943-b0a4-4b55-9867-6e18bb1ca787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9b6806-ee92-41d6-9078-1202d99615e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9f31ed-9a6a-4ae5-9174-90f90aaaeb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b6ecbf-b377-4604-bf48-26f6e85c25f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6b8bc0-5064-4d18-9ed7-b06b761f0e2d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4e50da-cab2-4b60-8a96-9832b1a4a410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba9bf8a-4549-4d88-9db2-e9da764afaf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88f6e64-c2ed-46d5-ba9c-78979de858d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b172dc4-8bd1-4cf0-af71-9648a49af42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7664bf-9d32-42ae-bbd8-52267897c24d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d6b3f5-b80c-4206-b10e-5402e3c0958f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f62248c-39ee-4454-b193-aaa3efdb320e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a6e8e6-7bb3-4a5d-9ef4-2b4e14a7798f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e9c858-c295-4922-9a72-6d66b66a0a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b147e057-580f-42c2-b1a0-b3c5cae05469",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff916156-8ce8-4626-923e-b891c8019864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b76cda-617a-433e-aa7e-4fa777c645cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ab1bba-8597-41a7-bb0d-0afae23ec424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e0b7d2-e847-47d8-bcc3-e657bd4cfc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60a5dd4-882f-49f5-86c9-b1b62d72c1e4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2966415d-6646-478b-b177-eca68a3d6cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fdb54d-d3d4-479e-9e78-bb57341ef0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102df68e-9043-4784-8a4d-d47d821eae13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1af8b2-c070-4ce6-8bd4-ee3d53ee86e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee368cd3-2a1f-48e0-a158-926329eab30c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e13f85-c4d0-4c80-a456-c9e7769188b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a83fbc-1a0c-4556-818e-14d4bee91d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad31e23f-aba5-4409-b735-9642e58056f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "badee9e6-d743-4636-8cc7-24ac3795f070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e614499b-150b-41f3-9d8a-0b1bacc7f948",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf823046-3308-4fbf-9b7e-94f49af6f65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28ddf53-983a-4d0e-8567-943d57a21dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32ba35b-2b66-410a-8288-b41c9589a8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eedf0290-5933-4ac3-b0c7-90047c90b14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ce1736-0ccb-4552-a487-0deb34b3904c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f8a291-fe8e-4026-8aaf-e3f4bdc39a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec61217-69de-475d-abb5-55bd994dab83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7f2ebd-31e1-4c4b-b523-d6102aabed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2e257a-30af-49b8-999d-9ef20bc315e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b34ab4-b17b-454f-8b61-f13186095dbe",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3be3998-31a7-4b6c-b38f-cb7eefe6645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c51f83-1ef6-4c6c-a8d8-1fcb6cd0d9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805c0886-8bd9-4a2e-9af0-a9720f0fcb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b1fc54-4a7e-4774-925d-e8cf3426ec96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf5c04e-8241-43a7-af23-72093cbd3a3e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ae30fb-e778-44cf-bca4-febb09be2478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46386582-b43b-4a5c-8d4b-a9e45abfc860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16eab0e7-0d23-45fe-a5d4-e10358af7caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e14072ef-eb6e-4caa-99b6-2c4c5fb9f2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b3e5b0-15f4-442f-9e07-e4c522a7e7ef",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb59c2d-2296-45f3-bfdc-93b31eb0e2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902f6fb1-0454-42a8-8210-d17ce4116272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ec2dca-a867-4a12-8dd1-4a8f29175def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2cce9d-3a02-448d-83d2-a3ab8e946f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706e8271-ccef-433c-8376-afff46c1cea2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2b1638-39bf-425e-9e60-056d118605b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc045e99-22bc-4bd4-9ab5-87d61a64b56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8ab611-f93f-43d8-aa76-aedbd509160d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d31a650a-a41a-417d-b50b-b9695d87b8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3be8de-4e04-4026-bcb3-d8b9577fc4c5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ead6f7-2780-4e51-bb8d-3e6ffc8d43a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd28c92-a723-4e39-8839-749abbd12121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8adfcc-957c-42b7-af66-b23494914958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a5803c-3a6e-4ceb-a0a5-f7f2468e60c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c0bd5e-a637-4358-9873-65a1b19ec939",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4440be-7fba-4a7b-8d8b-73cfaa555624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ea0e3d-b2ed-483d-a60b-70392914589f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82ae5ba-0ae8-4746-81a0-1342697b8d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea129d7-f547-474f-82a4-2f0230f9c18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1c5005-1569-4612-9b5e-90ba051cb8d6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09648fc-71c0-4f8e-81d4-8c5a81bbef62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f11523-3c10-4f47-b1bb-b69a1e3605e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3595fcc0-cfc3-4fb5-9774-34794569c211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2e87be-d4e8-43d0-871c-0ca420add3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7328e711-851c-4d61-b2ed-2816ae06608f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb30a7ba-39ec-42ec-bd9e-c73aab6ab615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaecfb9b-de59-4bdb-b5d7-d2505d1e10f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb33a63-0892-4f7c-a40d-6fa9d33d4b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f17432b-e557-41e2-b726-8b9f9c11000c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e483a767-b797-4381-8607-81d4c40ddfb2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92405d2-416a-4484-869c-53fa99c79713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01937c3a-88cc-4558-a6d9-8e23dc58cbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cf2805-64ab-4842-a944-91ff899731ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c386273-ff37-4b56-95d7-42b2d468a0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fbe516-5677-41e4-8003-917f7443f40c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfbfb54-a252-4b3c-91b7-325d9763bd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4d4eb6-c1f6-4fcc-aff1-cbb199fb7b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb35609c-f813-4552-924c-7d5558e677c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df925514-99be-4507-b83c-aef147413aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3f25ac-9b88-449c-8464-3251fddd1a5f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eb9516-e809-4f94-a9e7-11b07f8a98aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7e4169-e7ac-4875-a081-38e5975c4afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4461eac-5c77-4926-be59-0846b31ac1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76229c4c-9fe3-45df-91af-1dbcb58f771c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3318ea57-482e-4053-a8fe-8b4afcd8c2c0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d034b1b0-46d8-441f-addd-1f0b59a379fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbc4f47-5e7b-4e6a-9628-d20320856804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecd7063-82d9-4517-a4f4-44d7b592e115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1947d0-08f7-4ed4-8f75-2d1cd9bc42b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00806b1-71a0-4dfc-b8f1-c18b1b968900",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d12d77-e439-4e5b-ad05-db621722958f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a3bd76-69e5-4348-acc2-ea202427d39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc236f3-394c-47ed-bfce-9e9fceeb2877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "527bfff8-8e3e-4b79-8e5c-e81e40c5894e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2d1733-ef92-4207-909e-4604cae7d4f5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da08c9d5-d4f4-4dab-8b17-d155dccd1fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503adb35-dfb2-4770-8289-11154651baef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c792dea-8d8b-49d6-8036-18d22f87750d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72b79176-9729-42b3-b28a-359641c1691a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fa6bf1-6a84-4a33-bc5e-d957259ed5f1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b686f7a-447a-4ff1-9726-ed651f00db3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be24e82-a2ed-4296-9a82-dea655f862f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e4fb60-1466-462e-ac60-2de8096a9026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87cd8af1-e48a-46fd-aa92-66ba0afeb5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e971112-8102-4e35-af1c-ad9b10c5d621",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977759e9-7d1c-4e88-89ac-4a60fe153314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e476d7f0-5d2a-483c-95e6-f4ff17e23214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d6732c-9864-4c54-afad-ceb66a61d353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "306a7143-6335-471c-93f3-90f27561a0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acebde64-ae6c-484f-96ef-d9c11e99f1aa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b186a73-5d3b-4759-90f4-686bc23e81a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ada5da6-df84-46db-8ede-586164eeed6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40c26a9-c45e-4ae6-ae41-06987d020c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fddea38-6c80-4b05-b3e5-6132141ac184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e5ecc0-89fc-4c40-9cc2-c068bdecb8f4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edb0121-dd29-4faf-900a-ec3deb0814e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8176f028-0dcf-4bdc-a519-041ce6581e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c220e99-ce27-4c8d-96f9-2c48a25cbf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5762ee-105d-43d8-b594-ac768df09d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e38de2-eabf-4fc6-816d-4d32d8435e65",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6c6a8e-b406-462a-8cc7-e577992ec06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e92a2e-a2a3-4239-8aba-69314f67a600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549bab04-ab79-4e0f-8745-cd636c423dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6ae0f7-9d98-4cb5-9769-62e524bb85d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9551628c-e8ff-444a-8229-b31ff4b36ba5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce97b78a-1184-44a6-a814-a87eebf46cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea5a403-574a-4e7a-af47-807f77727341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ac9cee-429e-4127-8608-70298bc1a95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f19284-169f-480b-8d72-148735e874ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5def5458-8125-4062-880d-0e80adbe3eca",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917f0ac2-9634-4eaa-8ec9-9bda78c61079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53dc8b21-f548-410a-8e73-b9f3597ebcb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704df442-feb7-486e-9624-b22526fe57bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b18bd91-d56a-41ba-a00e-41951440cd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e196842-6547-4007-84b8-8e7dd8f328a7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eadd7a-3eec-4a57-9e9a-357c7877f163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f19e2e-3b67-464d-a7af-0d84ebf3a483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cb2b10-a1ad-4a06-accc-959f17abc7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27ba7dff-5a75-489d-94d7-1b9a8a2b244b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65bd3a7-e896-4cc1-955e-6f04110f7328",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6b326e-968d-4e7f-b029-b5ff26a97f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b565d3c8-cebe-4efe-9370-dfe55b741cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002b23e2-0e75-43ab-8db6-3a68122a5058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef33a71-6b0d-4ddb-9ba0-d7ec74705ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3406b06-5e31-470a-b934-0c1d5353c5ce",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aebf84b-7ec0-4a4a-a070-07cb1b6a57c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0feb041-d585-4370-a876-f80625451936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47c84ad-1228-4e27-abd7-97249af506a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70875fa0-a528-4d45-a8f1-caca18def7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e162442-f739-4451-a246-1eb485b0c0f0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc38b848-ed6c-43d8-9299-16c410d6c68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754ac305-cb79-46e6-b123-7450f4c182be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f12903-6f58-4dc6-8209-7be03e2e94b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7113a5e-0d8a-4d34-9dd7-2c318140b8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1056fadb-09ec-4a98-b8d1-b684b9e9752a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129047c7-a598-4319-b8ec-2a47f18404b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efe94b5-ec0e-4cd3-bb6b-917b808426b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b933b23-fe92-40e6-b8ca-7d4778d6f428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bcd75e-fa85-4c3d-b2ae-373c4f091a8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a03e0ee2-20e7-4cd0-b472-399993b66b2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a448c9d-5275-4d71-831b-2ab90d1d5168",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31610ac5-8c53-441f-84d5-a4f55b9b8ce3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "817eb150-79fb-4853-b1e3-c256b4a4b470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bfff1e-0764-453a-9b8a-0d8494356a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ff07c31-68fc-470a-8d27-18162013bdce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "111f0709-814b-4299-b7d3-f9238455fe93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c52d002b-d65c-43e5-9c73-23373fb57971"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9bc875e-6f04-432f-838f-0f1f00aa4977",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f1789c4-996b-473e-ad64-55fc12313f5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f106ff2b-7bef-432e-8b5a-b936811e57ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f7ff945-04c6-4c0e-9f70-3c2e61b912f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ac0b6d4-dd67-4f0a-be04-8e1faeef6945",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f153485-7a76-43b5-be0a-0b2ba217504b"
            }
          }
        ]
      },
      {
        "id": "bd9ce906-3d38-4330-9dec-3564bed224fa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "538fceda-f694-49bd-96ae-f2593089d3ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ceb99d3-7c28-4b32-8adf-cfc134431c9f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac04e390-ba88-4d42-bdc0-4fb482182cf4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcb9c22-7e85-4be8-a00c-594c78a360af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b14f51a-1c55-4c96-a6f4-ee7e626e75ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70cfe7b-d761-44d4-9fa1-7753ab874a6a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d975cb80-c37a-42e3-8ff3-56fa530d36d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a47c17e-f2d5-4f07-98fa-9d3a4a5af0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a494477e-d756-4640-aa35-4f5b0d5ac797",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78d141a-8039-4082-bebd-d7015733d238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0d4082-6899-422c-a369-8f828cea575d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a427644-1a73-4b79-8332-30bfedc0551d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6f352a-20ec-4ee7-8c81-a917e039d228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f7a671-f0db-4dfa-ac41-550f92c5fd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faab82dc-9953-4271-96ce-b47f8e530a6b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187366ca-1ead-45a5-b8b0-ca7b2e271e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793c51f8-7cd5-486a-89fc-6f2d9ed35f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702fd197-33bc-4bee-b480-e5cc50533784",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ff2693-a18a-4a7d-86cf-9d8862a118de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac02356-0b0a-40f2-86b2-5686ec8f598d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2c3c35-6f83-45a9-bbcd-d7ed68fa6f4c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f59d4b-b912-4db1-919a-ff7bc1173b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08da99cf-5616-4e61-9e46-c87ba3694d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fefe2d-c439-4001-9a1d-2c3ffcd7437a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24d724a-d121-4279-8f5b-64cbd592ed00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a49fd3-553b-4bee-87ab-404e73d521ca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9edc4c-67ca-43ed-bfc8-3c34c22cc8eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c93899cc-a8a9-4baa-ae7f-6470de995650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad6dd24-c44a-4964-ad7b-6f5c38fa7e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93613c79-eb2c-45c3-96b0-f10cb2e8e1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913662c8-e323-423c-a171-255b8a108d9d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454d6fc3-e40b-40a7-8fe0-3ab9c978d177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495411e2-bec8-4f6d-93ce-206330a2e44c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ab55fd-ef18-4023-af55-91a4e819a32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66a44ae-ad1f-492c-b923-b3e9deeac232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d7c12e-24a9-429e-882e-6e2d621584e3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5515b950-b40c-4f51-bdb9-1c002448341c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc971f59-c781-4cd8-8427-925a4cad5f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad34c0e-8ee6-4466-9f19-6d7674664784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b181f7a-c583-47c7-8916-7e6abc79deab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14c33d0-3d0a-488a-b56c-d85f547126fb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9772e00d-0c4c-4b88-98f3-5aee177a5d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5302e258-9f6f-435b-b8ac-91abbcdf2fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6152ac-fbdd-40ee-bf7e-ebb32ce604a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb16402-bc9e-4b27-a330-444cc4b2c2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2424027-7b4f-4a6d-8d0e-2d44492a1d70",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949706ef-a549-4303-a245-ada4228ba62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca00a701-55aa-4eff-8386-a29df0b917a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e244aadb-558f-408b-aacf-a36fdf48abba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb43b00-d16c-4ff9-a904-d61cec4048d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73bd34c-e232-45c0-9781-43b31cef3223",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aabafeb-7183-4525-85b5-d3e6ea1815c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8de1e9-9b3b-42ca-94a7-a710a1f1e9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268d44e3-3a75-410d-9f25-968510eb4fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b221387-1542-407c-81c8-eaa11aa8b507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e9cd72-7fd5-4d97-a4c4-63b451243843",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3678101-d285-4ef2-8460-ada228d95984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a4768e-8e99-4d05-8805-3df16d6bec39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a1787d-d208-4304-96e5-d47d7501e7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eae8cff-1e30-4c4c-970f-b268664f2eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ac88f5-729a-4eb4-8629-5eb160a10e9b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc752083-1c1e-4a5c-8058-07caabd140f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f72c7512-26a7-40e4-8081-42e231d2fd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20aba5fc-ff0f-41b8-9ae6-bc6d953bc180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0477b7-cc58-45fb-85e3-f56fdb0c7578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce63f279-f247-4814-90d5-79ffd3e437b1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0b0002-6d5b-4ce5-8b24-a0fc1ca5b5f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8904be7b-a434-4dfd-baaf-2394c7943874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd419d4-9de2-49dd-8140-c894a94d2208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac07a319-1bff-4239-a3a6-feb895d74834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42ea6e3-03d0-462a-9dd3-f1b49a8256be",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5530cd-17b0-481b-bcdb-28525f721425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e56ec0d-87a5-4d0c-a51c-e60654073e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55d8839-8f9f-4acb-a4a9-ee1ecb1cb811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244e9b18-1c83-49ea-a8b8-08949a6ec322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a527109d-5c11-426b-8d0d-39c38fe6f2be",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5705eb86-74a3-4809-874a-eb751c70a27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a75e82c-f1c2-4337-b8c5-1f848b541884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0eff70-fe7a-4e67-b99d-8466bea060aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d948eda-90cc-4c78-b738-967cc8c17828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7590db40-bde6-4176-9a5a-f5fe01f725db",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce17938-ea4e-4e68-acfa-2f2c7220b7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6258fd52-0b10-44be-88ae-8e75ed163848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621f1cdc-f4bb-4b8e-bd95-a8c80f314f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4081077-0885-4c37-b3ec-ed8739e510cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343b5139-d18d-48ee-aeff-2b1a38d2ca03",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad06fec9-ca51-49c6-9977-3860c1e9acef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de41b1b-85b8-4d4c-ab02-7af96d034763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e40da3-fc40-436f-b6ef-ef92c653b8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f6949d-1a82-4f54-9d46-83fd1439be90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62594b91-9c11-407a-8134-d44666c6249b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7927ce9e-b08b-4cd3-9035-69977a81a221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0756e14-356f-4570-a62f-bace6913b969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873559e2-a3ef-4a7f-9891-a5fffec12d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8359c1-2250-48f4-a5df-c098edf918a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896c5c4c-758a-4afe-b9e0-2a4e03185faf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8715b0f5-e6c3-48c9-88e8-ffad04f90e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f108d294-d04f-40ed-ad19-20fb7f154acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e2c03b-569d-4f04-9104-1c3cd73467ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a3b7f1-b9b9-450e-8d64-f3670ceedc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5f6395-40ce-4f5b-a5e0-c541c2753a61",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8450dcdf-c0e3-481b-9da0-45a4ce1b9e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2539ac-ab9c-4630-a216-26ae8e9c54db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa79fda5-d432-44de-83e5-2040f636927a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73742cf1-e794-41a4-91f2-36eada759372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4455b3-5635-47e8-b781-c699eca29c58",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3523eb-4308-44b1-9efe-c74ac1dce10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37577f0b-b952-49e9-a3f5-3b3161dc1b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3198b64-af63-45b4-a2f3-f0c13793b7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6ad398-e9df-4cc6-b417-408ef51f1bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94060b25-989c-4d73-9a59-4d2d81255ddc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3b2b29-0541-473c-af4b-ab399ebb902a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "468d4641-2082-4545-80cd-5ef7d887522b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07abde2d-d304-4dee-a69d-6ad316224192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da733269-a4b3-4d25-959c-500d5834fa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63a0f30-77b2-4093-bff2-00b7a8f54897",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6f779d-a1e7-473b-815a-ab3cfbc94780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d71a97-5e39-4de5-a8b6-41ba80b8457a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c22ccb7-caca-4553-bb1b-db6ee40a1396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090cbe16-3d3c-435f-87b1-8a9a27411e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fb4eb3-4b94-4a08-a00d-cf229a9ca214",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4eb98a-7412-43c2-ad0f-5789f0c2aa5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aabad420-5485-43cf-a19e-11f2c56fcc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bc0d84-31ca-43a5-ba8e-22cfe109e054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bb87d0-de12-4eb7-8252-eb135a2942af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85155924-347b-4651-99c7-7c6e6db8ffd0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcdcf25-ca48-49a0-ba96-67190ed87ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f897b5-13df-4377-981d-bab9f822c823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ff3089-9820-44a2-9b88-b469cee44c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c104a53-2f8f-4adf-b4e9-f7a2d4ed5603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14def8e8-908c-48f6-9008-80008557abc5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0799ec-3764-491d-a12e-27c720dbc6e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d824bd6b-9452-4fea-bf64-750bbd4fe85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c98756-e55c-4df3-9b25-ac835ddcd626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd28d81e-a9b3-4063-8cdd-1fe262811240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492460e1-26ec-4d3c-ab02-9bfa14219ea3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c717e63-5504-4887-974c-513e765d6f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a49a3195-d02b-45c6-9697-3b4490736af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16201a21-89ac-4c7f-83ae-8fc575755edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccee685-5406-47ab-bc06-6354370380ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9906b9-299c-4845-8337-84a0481c410f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393dc81b-2ec8-4d26-b0dd-673c75466e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f48ab87-e635-479a-896a-c6165b0a4b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9413ad-86db-4a85-89a3-bf3985d25fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181fb3b6-a1cb-4786-96e3-41eb54e0832f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d9fce8-7483-44a6-92f0-24b3121f954f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd61510-7b87-4db6-91f0-24a2aa68a575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518fa7f3-3471-412d-9856-a0214c2e5b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6177ce62-d922-4fa9-b8c5-5f1eef5ad362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdebec6-3b89-4a09-8bb8-9a94933b9d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae44399-fbbd-4dcd-a855-39659834dfc7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0828d97-dbe8-4423-bb19-ff8a6cd5f005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0451b7e6-5c6e-487b-a030-cce98763633e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e1c099-3a9b-4152-9009-02b531dee734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3d4c41-d649-47d1-9320-386e468c58d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b831d643-b8f7-43ab-8607-43db6edbdc51",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05aa9246-98d8-4478-8e34-d3b467099ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f99d3c-7f4b-4b09-b145-0f7a1776dfa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccb84c2-e1f2-40a2-b432-e4c90e6a3b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab933c2-5c19-4373-be34-5353c156b277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0294120-d930-4a5d-b329-b6e0fbe05165",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0876b9e-e45a-41e4-b785-903270e9028f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75206a70-45a2-46b7-b554-86d7e356531b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08822d35-2967-48ee-a71e-70f6e5261db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a7e617-b4d0-4d4f-974f-8d0c0c11a68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb085d0-e96e-472f-b1d6-f4107a628517",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81552450-d8fe-42f2-b21a-8f6aad9e68a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f6e9e5-2df8-4046-b561-7656e19ac35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c391e0ce-0845-4f52-aa2d-66fb4330b8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2886b1b5-4810-4d44-9e03-d9d4c2d954fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca5f065-597d-4806-8fad-fcf685f1c89a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be789005-8833-43d2-807f-94091208426d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944140aa-7997-4cb2-8ed8-accca1a8731f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd54b568-b1fd-43f5-b257-c2ba9a6aba02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e71ee9-027b-4072-b63e-c55e72ae41b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1121b721-7a17-438e-80fe-f89b3a2668f1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eaa819a-a2e6-4564-ab05-a5a96a018499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38bd4b1-eb97-49ec-99df-86ffd0e4e644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f06e7c-377b-448e-b0e3-6e17ca6b631d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22dd585-b437-486a-8fb8-441dab1e5e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b71bad9-f2a6-47e4-890a-23690c43cee3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c31c0c-82c1-4dac-bd0f-a37e4072697d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477b2b55-2537-42ba-9487-4fea93ab332e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebc1e9c-20fc-424a-8de0-7b2416014029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3980527-2698-4899-99db-a7955876ed6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f76774-e2ea-44e8-9cd2-8983ec949754",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cc6f19-cd1c-46c5-94f1-3edc10be8b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8261b1f-373a-41a5-9732-83b55dd3ebd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc7b699-33b1-4a42-8c5f-fcd081a615a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e7302d-6059-4dd7-932e-aeef6dc0d3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5371acdd-e432-4ff6-8585-b8d58ee105c8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fcd0c2-349e-48e0-853d-e9c8d6621b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67316778-1547-440f-a494-b41098554194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7330a5a8-be26-4ad8-ad98-374ccdee03f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e54a1f6-a1b3-4bd3-a5f5-ef7f2638a5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d68810e-9013-4b3a-b57c-4fdea315334b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf27545-07c1-45aa-8361-717f1b21c591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3803f225-9fc9-467c-9e62-8951ab224555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e62e55e-65a1-4ffa-99ae-849c1e043bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135cc88f-de7a-4153-a092-d17070764e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec13ee33-c0fb-48f1-953d-7248bfdfc577",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9b093d-9c30-4afe-8345-5c45394f69a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef54bb6e-bab6-437c-b666-f663177a9c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedfd7b0-b5d7-4b08-b003-a65e1da6fc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42360072-ef2a-4536-8c97-f8d8b8bb8942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9dd231-f3a9-4501-8192-2220254501e9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733358fc-196c-4524-b37d-5747fe1e0dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd0f680-4e6a-4558-8603-4d4b4e03eec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b30f904-53bd-4832-bdce-badec915ec01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bc17dd-f3c9-49fd-85b3-19565d1b4704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f51c52f-a4c2-4331-9191-a1536a567028",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d93bb65-91b4-4d46-b587-ab3cfef99d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbce8e7-d486-491c-a713-8b4ffc37a0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0679bf6d-b2ba-41fc-be61-db2214879496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bed3f18-cbd6-4d96-8439-627573ab6dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85676676-22fd-48cb-95af-d441e56f9e1a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50b6e27-3671-40d1-8629-4d2ea997041b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84363b54-6b07-4a5e-856b-edd478c92cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8987732c-b613-4c32-bbf1-7fa6ecf1f05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f864bf7-2c34-47fd-9e6a-50bcdcad47ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274c61d3-017e-402f-a162-7b0a47ed0c05",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85305bf7-5929-42a4-a785-0a45f12fb66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4d1979-ddce-4978-85c9-3a109ccb0da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a70a541-8495-440d-8426-6be840e16009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cd74b4-c9bc-450d-9397-dba83105c32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75865b1-3130-4b23-a34a-d74cf61b7504",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824bfda7-9e64-44ad-b0be-89fd905b1d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9b8e8c-ba60-4f17-b360-43a601ef17b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de3a6e2-88d3-42b0-b0c6-757e7c09d6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3b4c85-c463-4060-b1da-743588e6e18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa53ebd-89c3-4447-8389-1e58330a0c36",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da670eea-f088-4fc1-8831-64d11fcb8d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38117422-ca7b-4cae-a058-b4606561d63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eb31b5-e96a-4bd1-80fd-2442a539f544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6679fd-03cd-4014-bd4c-0ba997f4232c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14235839-45d8-44f8-8ff4-51b3dca87f5a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c459a85f-f597-4fa8-b80d-cff41ab9c15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89db4ea-3185-4640-9b61-f98c713e719a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28434f14-9bee-4916-aa56-03aed6ecb9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59960efc-2c86-4074-bbb3-813e97a4fa03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5a576d-04ab-45f9-92ec-769abc4df26f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d83fd6-2354-4ce8-bcba-c6ece22c85a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ced8ca0-962c-4977-982d-78d130c41396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6910aa89-0e74-41a6-b1dc-e8a7e98ffba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e631aac0-4c76-4167-a511-ad48be273387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d9b910-3890-49e7-b2a7-0a732300c703",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4506b3-0a33-448a-acc7-edbb75bfb86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f57dd83-0cd7-4461-83b6-d204c0caa6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7484a0d-6259-4530-993c-e531b31c56aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585f4fb7-9cf6-47d2-bde2-fdedbdf3718e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0976ff4f-6e13-4410-a55b-4a3686e0b7c3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dc910c-757e-43ad-8018-55c378500584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140afeb1-0fc5-4dfd-b511-6986065783a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650120b1-3eca-485b-be80-62789a9dfc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bc12cd-fa95-4b16-9b83-bdfadc4a0387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d55a93-aa58-421f-808c-706d4112d846",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffee1852-853d-44ad-8a43-9b325fcd9a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db75c1ae-2ceb-4ae9-b988-f410f83d9c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57b0042-2883-47ad-8015-f39ad766cb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da67bf2f-bdbd-4f82-a9ee-545f7644d280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9010f3-7ce7-4c11-b684-6091c8a121cd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc823adc-d345-4f2f-8f51-b690d903a8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4ceffa-5a55-44e9-b4ac-08824038bf16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04963549-714e-4d01-9ac8-505fe37e983e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf7e8d6-e59e-4d4a-9f6e-0ef70e56fdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ade0ce7-e7a3-42c1-a339-17c195fddbfc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d36871-1b23-4177-89ae-2f9cc5d9c75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d00bf13-2571-4cab-9a02-dda823651240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75d6c0d-2a0d-4b38-8b73-a3f19d05de18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4952b4-5706-4c80-9cc3-99645c29bfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d227689-8205-46c5-999a-ead57aa656ed",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cfc86f-bd35-4ec4-b2f2-678dcec990db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6df380-e704-4c81-b840-d20fdffb34b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c8dbe7-4294-4672-bd4b-7428acaaa71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8d2a2d-7a28-4f09-8241-cdbbb4f6c533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf0ddaf-2c06-4a0a-a3de-58b8f084dc83",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632234f7-8777-4b88-97f4-b8cc6b637530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8915474e-7d7e-403d-8d5a-312dc509a7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2b780c-ea4e-4610-bb54-f2d365ceaa8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53c1b8e-d244-473c-82e4-279f2066fc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528b13ed-8f67-43c4-9b97-cbd526bdf2bd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2f21e9-f27d-4930-8294-13129252f8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807c9fe4-730e-4f34-aace-db63650e30fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47aa61bb-0cac-45b3-a0ef-1b07e54af871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a51360-e331-4d07-b0e0-761edc9c8740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33fec7c-bb9a-4429-bd97-eeddc499e85d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d7df00-61ff-4d62-a124-e43f14f394a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af2c197-889e-46b4-9e14-abc330af7d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f875c7e8-cdc7-4e2e-b4d2-10e667ec771c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c03fd96-4c20-4831-9736-193c2838dcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7f8744-45ee-44ee-adfe-60e80628ac6a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c2f116-a2e7-4021-9603-ba5b918cdd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5f5f3c-6f5b-40e4-b6fe-5cd618d15069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8395b0b4-6224-4cfe-b71e-c385e96611c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f71734b-81b2-4519-8c90-e789bd54858b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731fec39-b18f-4b6a-aa06-216252315b17",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8cc67a-af54-4772-813d-50bec242e7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d543d1b0-8348-43da-8eaa-ca71c401a8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9796422e-74a3-4ad0-884f-e04a1c1acc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6286bbf4-a799-4d8c-ac49-c44255a16d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d11698-fe9a-403b-a5e1-8f1c2fa1b079",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1112a4c9-9c55-41db-9b1c-6fa54d8ae01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40158ccf-3eef-4e5d-b89b-613074e4d181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83aacb8d-9a96-4139-a935-4ed220319692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbd27d5-1636-4ceb-91fa-bedf4ca8a404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c272cb6a-498c-4e96-b6d0-17914f7840c0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db05291d-ecef-4ac6-8d15-1ac771753aea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77520fd5-b387-4299-85cd-2a3c24fb2787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2416f048-3293-4ac1-8336-20efdbe1aee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff57b0fd-6983-459f-9158-847604bf4488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba32700-1a89-4d24-ba53-a2dd602ef89f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5371c76a-b5da-4f74-aae6-e0d74c73eaa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b43727e5-bdd4-461d-946b-f22dd8994989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7f9428-ead8-48fa-b581-b7340d1708e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb43754f-aef9-4c41-b19a-f5ece040a6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618324c7-5823-4e70-aa18-9d38ee012358",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d76a38a-78cc-4ff3-bbb2-7379db1b7003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23bb0363-3f84-409e-8493-f29ac6e30b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f028927-8861-4df4-8c28-8a8f47b598e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c02f9ce-27cf-4606-b047-c399fcd78639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6cf3f0-635e-4c4d-9ffc-289989ee75eb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582460a3-aa74-41c2-b3f5-618b0b1851ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830070cb-0531-4390-9197-8fe4b73f909c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85f5d08-7085-4160-9a6d-05cfb9c0b37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7a9f22-9b88-4dff-9212-381c91b83ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29f91fd-c6ae-49d2-b32a-43ac6986527d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8984c7-f69f-48e2-b520-698a811c653d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d27a29a9-4998-463b-aa12-2bfe9f71bfba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9c74f7-fe9e-4555-96aa-d4f67cfeeb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d499d401-b31c-4b2c-ad92-5f78ce6aa84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9d8ea4-48bf-4000-b12d-cdd8ba4e9e97",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b230232-58ad-4237-9162-017e68076683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708f5d0f-71ef-4296-b2bd-5164d8647814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd4ce5c-8356-4c64-b330-375477f1af90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8371e451-bc0b-4be6-af55-8959fe59fe22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f347ba07-cacb-4af9-8570-f044f3510de6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a53332-e205-45d7-b92d-cb7293c112f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab0a99f-c8f8-4dff-bb09-e040778f74bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e962581-3971-46ea-9216-3fb40b623e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53819b6-239d-4e1a-8197-c237530a68d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f50b455-e6df-4e8e-b2d5-7f4bffddb46c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dd9267-73d1-4f5b-96cd-039e3ce118d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef176505-0e7c-4503-ac08-860e38ba06f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d36834-add2-41bf-9524-5c5caf331163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e5021d-f705-42e0-a3a4-c93919896521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ee13f1-5805-44ba-b34a-9b1a6bdc64e7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b43f201-f90a-4a02-b735-85e3f3baa02a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20fadb00-1e63-4991-8019-9f7ab4ed528b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4254a5-8e61-4b01-8739-18263586e275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bccbd7a-3e61-47e5-ba8d-d9493167a1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dadad97-ef1c-4140-8fd0-aa801a1f75b4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5d1af8-57d1-461f-99bc-e524ef194909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4bc5a97-74de-47ce-9a21-42cbd2cf358c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d82f75-8a5c-4081-b06a-9bfcb6432a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b44909-bbd5-4428-a758-563919a4e240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9580fcc9-772a-4136-ae26-1d5b84f67d13",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184422f9-7033-4e6f-a684-702d9892d22c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91031f05-6455-4ee9-945c-cc92365a8bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bcaced-4e8e-4101-9115-8f99d479b34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56eee314-b2ea-4a59-bf6c-a32515985aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6282ec-70c3-4006-937a-db84f8e9e3a0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbf92ca-5646-46ef-98c0-fc7e47c2e69f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce2d2199-b745-476d-8685-003e1ee7efad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545c29b8-ac83-403d-a91a-14a5cde3f806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b88a1d-39df-428f-b6f2-5e7d781e8a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b660387-bdc9-45a4-878b-359e0f7ecf4e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c95a9e-f918-44bc-8ead-6298a68f9d68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64d1d13b-73a3-48fb-863d-b55467367a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84370b6f-2479-46de-b693-a1e45c5c4579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51bd74e-9625-446a-b6e4-1521b4de5042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0868dc-0fa9-4866-b1da-d5445dece8aa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48f9888-951b-4375-9f94-ad59ee1d7aa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94b16793-87f7-4375-bb3a-82eaf3cb27a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338741f6-3ecf-41fb-9463-98ab45df6d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54ef324-1179-44f9-96b6-440580cac28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d88f3f1-ee12-4520-85d3-82d070b018d6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155fa585-4a34-4608-b342-167edffa6c45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86900f96-184c-45e9-828a-6f41f6ab6580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682a4b87-acfb-4138-9a84-6b9d25a3f3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74e5f3e-3f9c-4842-8b18-bf08b7ff2a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30e9c8c-7f48-42f1-acad-83d68f86c74e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca99965-50c4-4d5a-a0a3-02d846ebca26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af313c61-b226-4af6-8ce7-6c113a0821c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0217fa11-cf7b-42e2-aec7-76302209e3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a229c23a-0388-4a8e-8b76-5fe990adc122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1e046d-868c-4e11-8331-33a6ba7c10a2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d1a55d-4906-419b-b738-f66bd3e51d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9129406c-3486-4801-9bf6-8fbeb7f9fff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35443004-f48e-480f-992b-c7d9587547dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f7d193-717b-4fa4-a135-a98f1ee6bdd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bf5aa0-66a2-4a46-b092-51f53c65b7b3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e983469-5824-4fab-b025-24aa8df93c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8505d1b-f01d-43aa-8300-5c5b01ca91e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b43f86-246b-4c30-86d0-8705758460b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf8fb1b-471b-4d7c-80e1-044256da56eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297fe90c-5234-4337-92b3-97731e9dc802",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7775708d-3825-4eb2-b5b2-341662ba7303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8bccf51-ca44-4fe3-aa09-f9480d96518c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f147764-a6b1-4ae4-a704-5bcbd5feff35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607abad7-b3d7-4b88-8108-430f10e10518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548c9531-0702-4eab-acd9-7deb1c0a5c8c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63224915-e5d6-4b4e-823d-c3fe92982bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99472b4c-1335-47ff-b67b-7e392e566361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06c3763-69ff-4942-95fa-1cbaec090644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfa6936-0291-4212-93b9-c9139a078dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a410c307-dfb6-4240-b8b7-6519f915ec4a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873fab4b-d341-4adf-93b6-4354751378c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe30261-bef7-4ad2-9283-ebba223575d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d36d04-820e-4a68-b2b9-cb3d76bb55e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720be573-febb-4c51-a07e-34860999c695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764e04d6-8328-474e-8f4b-3e84f1535234",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de617946-46f4-4fbc-a36b-84c01cc25724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35f1448a-5af1-4628-9a9c-2fb8bc2a4f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc109d0-7429-4516-a4cd-b3419e1e75fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb8f27d-a8b5-4335-8be6-25a63b71ed2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c77f83-4ff1-46de-8a00-b269984a87f8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3975ed48-b747-4440-9cc2-9308ac4d5d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "255e9ba4-6fab-4a3f-a250-3ac7afd7de55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feed5ef8-0fc7-4ccb-a36b-746f1d2579e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96ef67c-80bc-43bd-b525-c3db3b34ed22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e30741-5bce-4b3e-966b-5fa062e5ce0d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43504ae-85c9-4233-9ba1-7520ccb5ea58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd541c3-0a79-4aac-b4d9-289ea9ef3df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc727ea-b899-49a9-8a5a-34a85c4c4cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583d2b09-488e-4071-8403-2d1602b323ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f70174-b82a-42fd-a2b4-a7424735dbfd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a8fd26-990e-46a3-8e95-09ba9f5a5a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc15dd4f-e336-449f-acd5-03979a4c629f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cba9c15-526a-4c71-ad18-384213d06a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52fb959-5859-4a1a-ad79-70469da60f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d915c4df-5d76-4203-ac6c-0bec480de903",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e87e65-8f6f-4b99-87e2-ff765c7f0c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede46812-86a1-4ab7-87fe-455a17233d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945c46b2-11da-4eb3-862a-22a0f19749f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52eb398a-d8bd-4cc3-969a-e82ac63f1eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76686cc4-34c1-4a45-baf9-ef0f4c778015",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fb7bd4-aed1-4b73-ba3e-7d995259a75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d00e43-c20f-4839-9d35-6bfcfb8f557f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc3e106-c507-4600-b190-f8f2dd7f2666",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796e947a-9683-45f4-a53c-d7441f9b09f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02926d4-81f8-43a9-bbd2-be1aad91dd4f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ff2e41-31e3-4868-8976-1160cc7d815d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73cbf104-ab72-4a96-bd25-ef3ecf2450f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59808865-86fb-4d08-9849-11f21b030bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c1b66b-bf0d-4f47-bfd5-2dcef4aec6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7405e0-2e72-4a4a-8bab-3e4555eb44ca",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86917c88-94e6-4b91-bd74-82be20557227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad46f2a2-ea81-49ce-8d1f-8a84b024c68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee0de45-6db4-4acd-ad16-39cbb0415f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09317050-5116-499d-bbb3-e01b9ed21062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65bbfde-1762-411e-af41-3eeeeb7dc4f7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0887011a-ab4f-487a-8171-636ab6dd64c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f116d6d-ee9f-443f-b72e-9f839cc4d8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea2f7d4-1ec6-4219-9fd1-4ad117953fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc266ed0-3a21-460b-a7f7-cb63635ea0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a453fb50-dacb-4c62-9dd8-5b92ef0b171b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abcea3a-274c-447d-a58d-d1b1bdc2d5b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69bef66d-5624-4126-b2f7-6f4825dd7d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1037894a-4388-421d-9773-63de4161c9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a85224-bf9a-4ef3-be4e-bd142b0ab787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73223c14-8b01-48d4-afd8-b36404f37aac",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434322a1-946e-4264-bba2-2f7b92bdf969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eba3db4-1c7a-4712-a11d-e535987b94e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e26c15f-0974-41c6-84cc-5924e11aa056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3f85d8-8826-4ea3-b20e-a8edc46e4ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ab7511-3a8c-4302-823b-9719fb6b97da",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b976f12-8512-4c8b-a334-099b2ec1185b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec1a901-7b36-46e4-9661-644693e3ca28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a8876f-e176-4c93-bd2a-ea10f56f758b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aedd204-9cc3-4b27-a6eb-fde01f72ca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a82ef3-a898-49c7-9604-e9dead6da9c4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae53d44-eeca-4334-8115-51a7159f8855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804b1f37-f26e-4068-a1a3-1d7987b6a075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4e1d81-20c8-4f53-a805-f967f9501acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41659367-1c08-4c19-81c8-dd0147ba3852"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0bf6293-5927-45dd-b220-b9019cc7afd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a856ee0d-77fe-4287-b1ee-18282eaf7b51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b87de244-5b27-4087-8e4d-ea684a530039",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38ae58df-ea8c-4d3a-b1fa-de82748b229c"
                    }
                  }
                ]
              },
              {
                "id": "22b7d325-55cd-46e4-94f9-364b78757b18",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7e772da-209b-41bb-8069-739ca56ec57a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d6db2f-9dc9-46f1-afe8-b5ba50eb7ee9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b33e600b-c180-4e66-9ad3-3ff88212dbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e5aa65-b976-48eb-b79a-a0d181aceec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdd5f10d-3609-46ee-a3d0-b18ff0a57787"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ac11383-c043-4ac7-9901-b01b25e8a56e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bf50e5d-2434-4873-9de1-01be15cd303c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90d80328-49ef-4124-8675-94a09e499f1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f5ff982-d55b-4e4d-a8ce-45a88e65aab4"
                    }
                  }
                ]
              },
              {
                "id": "bd5a6a24-739c-4143-b4cd-09709a4bbe95",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6f60a11f-3a88-4061-b518-c9041d2c2d7d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a765b5-56e9-4ac9-89c1-39b71f35b459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3a1f68a2-c806-481d-aa4d-a1863b404a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e337612e-7daf-4c26-88d0-099299db7e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03be9005-1eb3-47b5-ae3b-e4a82bbd1f27"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cfd0ecd7-8752-4e74-8ee5-b66b40017ddd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "311fcb43-f02b-469f-a392-8883947e33e2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6821e3e-71b5-4b69-9309-f3a997834b58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "97c23be9-9c68-45cb-a42f-4e3b112a604d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe571fab-d2b4-4023-830a-2267bacc9c8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9db4f2dc-bd42-4f53-a33e-6f6a2eacd9e1"
                    }
                  }
                ]
              },
              {
                "id": "442779ae-8690-4361-961c-6823855f253c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d10230f9-8b22-4762-86f9-1e8a1087e8e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "68aeddf9-7a9e-46d2-a74b-45b5bcbd9360"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd93a6a1-5949-42a1-ab1d-aa9343e36c04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bf5dc01-bfc1-4024-af99-173ab0c0f05f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c69c947e-0618-4ab9-b577-13ffab547a1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "29615e03-68f2-4874-bfa4-c9f026ca9e94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8865cc1e-d1c7-44dd-982d-84e2ec548aac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4ee9eae-16dd-4104-9871-eea5076fbc08"
            }
          }
        ]
      },
      {
        "id": "4ff1a2d4-b996-4644-83b6-84e51ae8d707",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d651494d-13a4-45d2-b9d1-691657935ef7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9622592-ecf1-475a-858c-5862637deb23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d007271d-b71d-4d81-8534-cabd7cfdf55e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bd6a18-a444-4b45-8f18-9713fc035c3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2347ae68-5557-438b-893d-9eb390c3249c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d6a379-c4b0-4788-8f46-eeb666342884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3e3b370-bb99-411d-8339-f975eff78158"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cb4cb56-9bcc-4b10-8bf6-89f245237f56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09a36ca7-d98a-4118-b64d-cb69c7ea29af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5366e33c-0e5c-44c5-9959-77b50348edd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ecaa55f-6f82-4631-9418-67f77a420f0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d60e723-75aa-41d4-8bb1-98bf6de71c63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ce4dbde2-d983-4bcf-97fb-49924010f028"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46865346-318f-4e7a-b5e3-dc12ac3f0a11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e5f7775-c348-41a6-b7c6-b3c376b086d6"
            }
          }
        ]
      },
      {
        "id": "77ecbe6a-d153-4840-b66c-76b501a64311",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0eb6f751-5270-4b63-acf7-286112244f11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f24274b-0818-4732-a950-e91ee813aa81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da9fe96c-a70c-4a82-8ea7-5141e01eeaf2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efccee4e-3605-49b8-84c1-57877a60bee7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22847b34-de91-4807-918b-52704572e4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab2f68e-78db-4fb4-89c5-b08f25d84d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49485728-43eb-4450-a9d3-6d412be5aeb0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f87eb464-73de-4944-802a-7d193799ab08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbb19e06-6e60-4fd8-bee4-b276a0856c15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f2a39cf-1e62-4ec5-9d43-2f3ef4a34d2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32e2d391-5ad4-4185-ba51-1087c630e967"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b91cd2bd-4db4-4fe1-b0e0-88178622f8e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "39ababa9-8dc0-4fb3-b095-988bd52663dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98b43803-b6d2-42ce-948d-3e862600202b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0099f8b3-a4ff-44b5-9cde-134a6d8da8c8"
            }
          }
        ]
      },
      {
        "id": "6d0918f8-cec4-4e6c-a69c-491d2d315f2f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c001d64e-595e-4478-b807-d32e945ba481",
            "name": "Negative Testing",
            "item": [
              {
                "id": "327fbd24-3f6d-4763-8974-aab47be0a9a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d66a4c4a-2061-4ffc-92f6-e4907008fa81",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c08ee69-51ad-462c-b6d6-d2b96cd2d32d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80b44bfa-9174-4710-98ce-46dc24803f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc29272-d201-4327-acb6-4ce8fc9d3a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "440f4e94-bb0f-4355-99a0-fc1fdc314126"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5da593b5-551b-4219-8096-029e99325774",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dde52aeb-be59-4a9c-afe6-7e70b39f0696"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65b8a671-595e-4947-93de-12fb6928afc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeaf5731-36a3-47a5-a232-d796cd19f3d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91d3a6df-6150-41e5-97a0-749850dd3761",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e48b9ca3-c43d-4feb-ab87-a0e0f11f9224"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0c07126-5add-48c9-a3e6-8437faf498df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "432fd669-0c37-4239-848e-4ee7e4e62d85"
            }
          }
        ]
      },
      {
        "id": "9315e13a-b83c-45bc-ba0d-2385e45898d2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6629ffed-6c4d-4ea7-a6de-6db7048b4822",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "379399d0-5e9d-45e0-bd63-a8d2603af1a8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c4f6b786-7187-4aa3-a306-07d640c1fcb9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65a346d0-e8a5-489d-beb0-c69dc875c024",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f191487-6082-4927-a360-0fa1d0831aa9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.869718309859161,
      "responseMin": 3,
      "responseMax": 281,
      "responseSd": 20.77530525338572,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691886803673,
      "completed": 1691886816932
    },
    "executions": [
      {
        "id": "7f62164c-e20c-4b5f-bbf1-133556699faa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "916fce23-89a4-4291-bdc1-aac2d8431dc3",
          "httpRequestId": "198dd2bc-d879-4a28-900c-f5350f638f9b"
        },
        "item": {
          "id": "7f62164c-e20c-4b5f-bbf1-133556699faa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "54ce85c6-2bfc-4f88-9fb1-6130b119a635",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "776b03ee-d599-4782-87fd-32cf352fff7c",
        "cursor": {
          "ref": "92e587ec-f9ab-4994-92ae-aeac15862b59",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "54817648-639e-4673-8a8c-48af5c8bae2d"
        },
        "item": {
          "id": "776b03ee-d599-4782-87fd-32cf352fff7c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0fca499a-6515-4dfc-90cf-cec8db5295e0",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "c8155a19-5cf3-4e20-9b3e-a906c23a4dee",
        "cursor": {
          "ref": "169e204d-9087-469a-9271-c83036ef05f9",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "39bff451-5986-4c8d-bcf9-4bf3eb08063a"
        },
        "item": {
          "id": "c8155a19-5cf3-4e20-9b3e-a906c23a4dee",
          "name": "did_json"
        },
        "response": {
          "id": "ee789aad-fe57-47aa-9d27-fce3546a585a",
          "status": "OK",
          "code": 200,
          "responseTime": 157,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb7ffa5-c7a3-4bcc-8f20-05dc1dbbef55",
        "cursor": {
          "ref": "e4e88528-8b51-4359-8559-0bc27690c4b3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b240d4a6-630d-4949-938f-ce25d2286919"
        },
        "item": {
          "id": "3fb7ffa5-c7a3-4bcc-8f20-05dc1dbbef55",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a1b63b3-a4e6-49fd-9299-062c7806de70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb7ffa5-c7a3-4bcc-8f20-05dc1dbbef55",
        "cursor": {
          "ref": "e4e88528-8b51-4359-8559-0bc27690c4b3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b240d4a6-630d-4949-938f-ce25d2286919"
        },
        "item": {
          "id": "3fb7ffa5-c7a3-4bcc-8f20-05dc1dbbef55",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a1b63b3-a4e6-49fd-9299-062c7806de70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bb11c4-08fa-43a8-9d7a-97fcd97cf219",
        "cursor": {
          "ref": "85b3457e-60ca-45e3-b921-59d02795af63",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "199ace8c-f1b3-4aad-b509-973b7bbce90b"
        },
        "item": {
          "id": "57bb11c4-08fa-43a8-9d7a-97fcd97cf219",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f715951c-4ab6-4426-95cc-ab8381f6d3bc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b07525-29a8-4b10-8a95-141a6ad6e502",
        "cursor": {
          "ref": "ed83194f-e90e-4276-87e5-56b9b4d0bbdc",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9f9f2c61-653a-4329-aa79-d93f63945da9"
        },
        "item": {
          "id": "13b07525-29a8-4b10-8a95-141a6ad6e502",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "43b96417-3fd0-40e9-a040-476a2f97f58e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5eed95-a24a-4d56-9d81-d8f6277beae0",
        "cursor": {
          "ref": "9e4e4595-6d69-4629-a870-cbb5c2b965dc",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e68a2362-04f3-411a-9c2b-94ef3d7ec2d5"
        },
        "item": {
          "id": "3c5eed95-a24a-4d56-9d81-d8f6277beae0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e9b31a59-06da-4f87-9fd0-0435f830669e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f159f3-ead3-46d6-9ccc-93562f164ca6",
        "cursor": {
          "ref": "b397c744-8922-4073-b7c4-424841508106",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "65e72c2b-292c-4068-9839-a30c856fe5b9"
        },
        "item": {
          "id": "a8f159f3-ead3-46d6-9ccc-93562f164ca6",
          "name": "identifiers"
        },
        "response": {
          "id": "a92840c6-6b98-4cb5-881a-0be8e4c1a7ab",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455e41d2-0c4a-425d-878c-eac3527022ce",
        "cursor": {
          "ref": "5a62bd9f-b2c3-4cb7-9cd7-992e392d79d4",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "89f38b2d-9900-4a5e-b1e6-d9f269f53449"
        },
        "item": {
          "id": "455e41d2-0c4a-425d-878c-eac3527022ce",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "482096e3-0a4e-478c-ae0d-b968ba2d90e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69565cad-cf1a-494f-ae35-44c847acd977",
        "cursor": {
          "ref": "8f5f08d3-d644-4d42-ab94-bad279ddbcbf",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bd588159-00cb-4f7b-97e6-be7514d27dcb"
        },
        "item": {
          "id": "69565cad-cf1a-494f-ae35-44c847acd977",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "adc2f026-56f4-4f0f-9b16-7b6ac9da863a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71495589-1968-40d7-92da-3f16c604a2d3",
        "cursor": {
          "ref": "7d151d96-019a-4267-9932-b7ef68bbc56b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fd2b5b8e-60cc-493e-b635-1ab12b0c150b"
        },
        "item": {
          "id": "71495589-1968-40d7-92da-3f16c604a2d3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7b44ea3d-6ba8-499e-bfdf-95f268973484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2c5c26-3a09-4545-be87-7f8ae81cc74d",
        "cursor": {
          "ref": "e21dcd03-dd70-439e-8683-391e19c17506",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7108e70a-4264-45fa-b449-57257dc502c5"
        },
        "item": {
          "id": "0d2c5c26-3a09-4545-be87-7f8ae81cc74d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "73803527-9473-44b6-9fe0-1597faf1448d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766c9d5e-138b-4747-8916-1e7a4b8735d7",
        "cursor": {
          "ref": "d853eb2e-da5a-46c5-9697-86186d0e5cd7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2059125c-ec87-4e8b-926b-3ebd0c9e1a57"
        },
        "item": {
          "id": "766c9d5e-138b-4747-8916-1e7a4b8735d7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8c310495-29c5-4448-b025-bbac7b429049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b798d70-508c-489e-be43-884067137822",
        "cursor": {
          "ref": "105bdfcb-5c40-4fa5-ae3a-1968926909a2",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a513b52e-2959-4dad-aadd-6f6b12df9980"
        },
        "item": {
          "id": "3b798d70-508c-489e-be43-884067137822",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9c716da9-e835-41df-aa75-7cb6ea729126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aa2133-a0b4-4343-84c1-4992da07511a",
        "cursor": {
          "ref": "9cd9a89c-7390-4b1d-80b5-5c1c55922cf5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3dc103ef-e9eb-42a4-b87e-8d36cb652e9a"
        },
        "item": {
          "id": "05aa2133-a0b4-4343-84c1-4992da07511a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1462137e-717a-44fb-a56f-ad03d12c49cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd3cc83-a70d-48fb-ab8d-40dacf9f0aca",
        "cursor": {
          "ref": "922d20e5-9cc7-497d-aaf1-31f2646ece36",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1be8b5b5-93f0-40fc-802b-e3cd6f5457a9"
        },
        "item": {
          "id": "fcd3cc83-a70d-48fb-ab8d-40dacf9f0aca",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "da14a662-f549-4dca-ae30-65e1c413e9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c158d202-eca2-4812-bc15-ad67fd1f3ca8",
        "cursor": {
          "ref": "811f3180-3580-4c4d-a385-7e121aeeb8da",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e6cde80d-141d-4cea-8e14-69131da55303"
        },
        "item": {
          "id": "c158d202-eca2-4812-bc15-ad67fd1f3ca8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e5e346a4-d903-437b-8b40-ed0df2975021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e296f04a-849f-44f5-9dd1-dc33df01f2f8",
        "cursor": {
          "ref": "f44303ca-48ef-4797-b464-d61c823d35ea",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b27b6a63-7495-4555-9ee8-092ba2329980"
        },
        "item": {
          "id": "e296f04a-849f-44f5-9dd1-dc33df01f2f8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6687a9b1-0ddb-449a-aaea-f552a78bb941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e444ee2c-3c01-4d42-a0ca-717a3d7cc821",
        "cursor": {
          "ref": "6c675032-cd56-4659-838c-b5824f8f11a7",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f938c817-d4c1-4825-83e5-0e8b270ca1b5"
        },
        "item": {
          "id": "e444ee2c-3c01-4d42-a0ca-717a3d7cc821",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8777e5f2-da70-412c-bbbc-009d10e8b0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2f3146-5da3-44ea-8407-8ebee02d1370",
        "cursor": {
          "ref": "80b80816-3d92-46de-89b2-a16f465eedfc",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "de97e077-b75d-457d-a09d-625ac1a60d7f"
        },
        "item": {
          "id": "7e2f3146-5da3-44ea-8407-8ebee02d1370",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "539899ba-7452-4550-bac5-5f1d4eb0a9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a9bd0f-6511-4597-b619-dc4fc93c04a2",
        "cursor": {
          "ref": "e0f49169-f255-4ed8-9d14-5098ca5af2da",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0fb9f5ac-e8d9-4f74-a9b8-48fd63694de4"
        },
        "item": {
          "id": "13a9bd0f-6511-4597-b619-dc4fc93c04a2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "81342447-0768-4d16-839d-6265e76767a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2681fdc3-9e25-4187-bf1d-35a281b10eca",
        "cursor": {
          "ref": "6c33e245-b0cc-444e-96d2-17712644d4b3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "188a5d54-a402-4630-8dc6-fba1f40e489a"
        },
        "item": {
          "id": "2681fdc3-9e25-4187-bf1d-35a281b10eca",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3d005206-f29e-4f66-8222-035bdc98d991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fd86f0-54b3-4c55-aabe-4fa7a27d95f6",
        "cursor": {
          "ref": "d34f8232-6d94-4b57-8ca5-a15193ada135",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "09900369-ffbe-485a-96dd-3d43fa3e8bd8"
        },
        "item": {
          "id": "e1fd86f0-54b3-4c55-aabe-4fa7a27d95f6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "56670e0c-0ebe-4fbb-b3c9-52478efd33cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c0be39-6c15-4e66-b8b1-3ff3a3bc3d79",
        "cursor": {
          "ref": "aaf8938f-f33a-40b2-ab2f-b8fc0d243caa",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b5e117d1-b892-4350-b02e-6d7ee7c080d7"
        },
        "item": {
          "id": "07c0be39-6c15-4e66-b8b1-3ff3a3bc3d79",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "21453ace-9b67-45db-96fd-aa97bb73e4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3a44eb-7cbb-47f9-a0d3-79d825cd6ffc",
        "cursor": {
          "ref": "d36b11c3-f977-420d-b7e2-2ab5797d8016",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dcc85cff-427c-4675-ba95-705a91a205ec"
        },
        "item": {
          "id": "ac3a44eb-7cbb-47f9-a0d3-79d825cd6ffc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7905ee1e-a8ff-4547-b64f-55a65dae543c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e11b01-8ff6-4cac-942b-fd83feaaf8c9",
        "cursor": {
          "ref": "41b81565-4a38-429f-a888-fb6150ee8dc5",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f9a1aea4-650a-49a7-8257-41c23346cd3d"
        },
        "item": {
          "id": "11e11b01-8ff6-4cac-942b-fd83feaaf8c9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "085860ce-2b16-4ac9-9744-06d2b9071753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc008b4-9991-48b0-8f3c-b775027a38bf",
        "cursor": {
          "ref": "2f9b3632-6be8-4924-aa00-793a8fbdce17",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b6f2734c-0172-40ac-a468-c516e8703a55"
        },
        "item": {
          "id": "6cc008b4-9991-48b0-8f3c-b775027a38bf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0bc5ffed-9135-498d-966f-763f4dfbe683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33625a91-32fa-434c-b086-6d39acc35c41",
        "cursor": {
          "ref": "5c3f7c66-1e95-485c-abd4-ee0c55ece602",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "540ccd91-e056-4605-8d5d-635f3cf9201d"
        },
        "item": {
          "id": "33625a91-32fa-434c-b086-6d39acc35c41",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "26069c1e-b576-4c4e-8348-e130a657a63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c54a0d9-a5a1-411d-abdb-62b026ac2c21",
        "cursor": {
          "ref": "1e621718-c25a-40dc-a818-dd190d78f50c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4c1b9175-01c1-487c-83dd-ab1e5cb389c7"
        },
        "item": {
          "id": "6c54a0d9-a5a1-411d-abdb-62b026ac2c21",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f722292c-3052-459b-9d12-05adad8f0bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a41f82-7f37-415d-9f56-bfb1bd966454",
        "cursor": {
          "ref": "0b3276aa-9e8f-46a6-a390-15fb81076580",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a4b44326-881d-4377-8bf9-c5118d625e32"
        },
        "item": {
          "id": "a0a41f82-7f37-415d-9f56-bfb1bd966454",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1fa16287-a251-4813-93e2-1590fc0f05c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129e39fd-257e-4c87-87bf-9c9958413702",
        "cursor": {
          "ref": "43b879e5-faff-483c-b781-623c9c778ba7",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b1dec6bc-9088-4e4a-bb06-7e30bf2bc365"
        },
        "item": {
          "id": "129e39fd-257e-4c87-87bf-9c9958413702",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7e7ea9e0-c103-42ad-b248-f1b3fb7f209a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdeca8bb-cb41-4137-bcba-bc3322996233",
        "cursor": {
          "ref": "634d52ad-a867-4021-b859-9a349cc01607",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c6a909d5-3a94-4269-9d0c-c23c5475dcf2"
        },
        "item": {
          "id": "fdeca8bb-cb41-4137-bcba-bc3322996233",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a11f1afa-8c05-49d5-83a7-ff7e8bd373df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c2624b-b778-4d5e-8fb4-7a33d51f0d1b",
        "cursor": {
          "ref": "93d1e2fd-e592-47fa-b0b3-913d05e4eb98",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dce1e8f9-a07f-411c-a54f-18cc28f53ac9"
        },
        "item": {
          "id": "a0c2624b-b778-4d5e-8fb4-7a33d51f0d1b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "77db8170-9921-4ab0-a717-1594494a7ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318c4f22-ca34-4230-8c30-224bed74865d",
        "cursor": {
          "ref": "243f78c1-e50e-4145-89e4-f18734391af4",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8e00eb4b-0901-4e6c-9044-5953eb9f07df"
        },
        "item": {
          "id": "318c4f22-ca34-4230-8c30-224bed74865d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1f4a3adc-6500-4d73-ba4d-a4c6b094fe79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e2db14-fa7d-4658-a9f5-28d69c482bfa",
        "cursor": {
          "ref": "1d4c9926-71cb-4098-97d8-5f02ccea7495",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c1185f71-8115-421f-a5e5-3aa19a3c6a49"
        },
        "item": {
          "id": "b3e2db14-fa7d-4658-a9f5-28d69c482bfa",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "efa80b5d-7aac-46dc-8ec1-c21e49a3ff75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed35af49-fbb6-4a5b-ab20-da8cbdbe11f7",
        "cursor": {
          "ref": "c8f87587-2e93-47f9-9ed4-cc2709ac3d97",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "18cb9fb8-a67d-4a1d-b212-b76ac9ff77b1"
        },
        "item": {
          "id": "ed35af49-fbb6-4a5b-ab20-da8cbdbe11f7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "673e1983-f781-48d4-af56-2e011243b35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e6b3d2-016a-47f9-93e7-49338b26f47a",
        "cursor": {
          "ref": "db79c6de-8ef2-4b8a-9fc6-66f732b70bb3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "990a26b6-0b54-46af-87b7-7370127b9763"
        },
        "item": {
          "id": "b8e6b3d2-016a-47f9-93e7-49338b26f47a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "129eb74d-d051-465a-a615-1309afc12d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9874db6-ad23-4095-8de2-3e0689d87406",
        "cursor": {
          "ref": "9bee1749-32af-4d8b-a21b-c7fe61702b7b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "91ccdc36-5f3c-49b6-9004-938823f75926"
        },
        "item": {
          "id": "b9874db6-ad23-4095-8de2-3e0689d87406",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9a7ce498-f711-480e-b284-319eb36a0871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f61d72c-0254-4dc2-85a5-3f4cf163f1a1",
        "cursor": {
          "ref": "883dcf90-97e6-4bbd-b8d6-63f65bef5a31",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "40d970de-e1ff-437e-ba18-d2f43ca0e5e8"
        },
        "item": {
          "id": "8f61d72c-0254-4dc2-85a5-3f4cf163f1a1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "57a4a5ce-1441-4dd6-8a30-3ebdac76c856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749dc123-15a9-4bdd-8886-9641c7becd7f",
        "cursor": {
          "ref": "25561683-aee4-4a56-b6b0-6a23ecd1c750",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ffaf36a2-5be7-4ac9-a569-dc7f3ddf155a"
        },
        "item": {
          "id": "749dc123-15a9-4bdd-8886-9641c7becd7f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f9a71234-2012-498f-b15d-620c04c02d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e177bcf-b9e8-43e2-bb86-6b3b33be5200",
        "cursor": {
          "ref": "d884dde4-0094-4428-a981-d85f83750a02",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "35562f44-aca2-46e7-9d48-53e7d62a436f"
        },
        "item": {
          "id": "0e177bcf-b9e8-43e2-bb86-6b3b33be5200",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f5ec8656-35d1-484a-84d9-80af9d17e128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3d9a44-4aae-4f8a-8f90-d8519e59c707",
        "cursor": {
          "ref": "1abdc779-8b2f-48d0-98a3-c37c37f03628",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b045a0ce-1ac8-4cb5-a941-c9c5511deb9c"
        },
        "item": {
          "id": "3e3d9a44-4aae-4f8a-8f90-d8519e59c707",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6af6d768-f6ec-4cc6-b6c9-042d98db4e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da50966f-037d-4b4d-b472-ec6648eefbef",
        "cursor": {
          "ref": "1dc6e736-c30e-4c90-8e65-beddc5bbc243",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7211209d-4ebd-421b-8bf3-29d592cb9891"
        },
        "item": {
          "id": "da50966f-037d-4b4d-b472-ec6648eefbef",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "56f62eaa-4dd5-4a91-88ca-68714174cd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113bed1-0efe-4c18-816d-c712295e37ad",
        "cursor": {
          "ref": "33f76189-d070-436a-a4a2-29d03263726b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "68f75899-9aeb-4866-a729-eb8997b88812"
        },
        "item": {
          "id": "8113bed1-0efe-4c18-816d-c712295e37ad",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f8f669c9-9bf7-473e-b94a-cc04139c5490",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 31,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440a340d-cac2-4bde-9f17-f1ea81d5851c",
        "cursor": {
          "ref": "4be7d42c-7985-4db9-8208-058559c99b08",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4af3129b-5143-4902-9473-4c2ec0624944"
        },
        "item": {
          "id": "440a340d-cac2-4bde-9f17-f1ea81d5851c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "81c5c792-c847-440e-a08f-5d3b691eb7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db443c20-3d97-424a-a48d-0b00d100761f",
        "cursor": {
          "ref": "e09fd52d-140e-4446-88fd-cecae3aad2f2",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "838979b2-18d1-4cda-b04b-27737460fd3f"
        },
        "item": {
          "id": "db443c20-3d97-424a-a48d-0b00d100761f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5a7ccc9d-5721-4e57-8f53-9bb56de9eb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9377dc23-9e2d-4222-8864-0bd802902dbc",
        "cursor": {
          "ref": "ba1e02fa-dedd-4397-8fb6-3f200c1dc89c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "61ccc634-bd3d-49ab-ad10-404b5d313af1"
        },
        "item": {
          "id": "9377dc23-9e2d-4222-8864-0bd802902dbc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "61f99fcf-ad9a-4669-ad6c-e7ef2fedd973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bdcff4-9be7-4b23-90be-142406e428cf",
        "cursor": {
          "ref": "1a754c1c-0a2f-4a34-bec8-44c3a8d1e392",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "022697d0-0d5b-4f8b-aaf0-f7943dbcd89f"
        },
        "item": {
          "id": "50bdcff4-9be7-4b23-90be-142406e428cf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ba670072-e7a4-4a29-a00c-c88603b8241d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71feb401-3855-4cab-b136-1a3eaa41aa70",
        "cursor": {
          "ref": "49fafebb-7a93-47ee-9be5-07f31f855865",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f0f480e1-4bf5-4d38-903d-f9956c2f667b"
        },
        "item": {
          "id": "71feb401-3855-4cab-b136-1a3eaa41aa70",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8e77a755-c71f-4792-9908-6408181dd3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd6419b-7dbd-4acf-89eb-7bbedccff1ad",
        "cursor": {
          "ref": "ce6fdcbf-e888-4bf9-b585-8a6ea940fb55",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b3c1c1aa-ef97-463b-a486-ec0360edb721"
        },
        "item": {
          "id": "8dd6419b-7dbd-4acf-89eb-7bbedccff1ad",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0dc904eb-0b2e-48a1-94e4-a540ab7716f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee7fa18-1cc3-46c8-b1ec-a0fd0409a158",
        "cursor": {
          "ref": "87e08f36-7595-440e-b31d-ae121431eb1e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d7e9e39b-3df0-4697-a6d8-c00b9683a190"
        },
        "item": {
          "id": "3ee7fa18-1cc3-46c8-b1ec-a0fd0409a158",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a9526ef0-aa90-49f5-b7f1-31e824adf357",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50c2e9f-3c54-4058-b7ee-cab59305c8be",
        "cursor": {
          "ref": "5aa74edc-044a-4663-9691-93034701e901",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6e553567-9426-4565-bb16-e1713f9c40ef"
        },
        "item": {
          "id": "c50c2e9f-3c54-4058-b7ee-cab59305c8be",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "38bf6584-5f3b-4993-873a-80b2be1a312c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4f826d-a6b1-4972-b783-3a1ab8a6d89a",
        "cursor": {
          "ref": "2ad4ad52-704c-48d2-81fc-7ec746952df3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d4e10343-79d4-4997-97ac-15958bb07ebc"
        },
        "item": {
          "id": "7e4f826d-a6b1-4972-b783-3a1ab8a6d89a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d102c745-ed77-41bf-8a96-378a23103ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf1592d-7040-4821-a651-75a987845d88",
        "cursor": {
          "ref": "07238548-9727-4aae-b8c1-a86401aeb5dd",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "779509f8-1a32-4116-a764-326130366259"
        },
        "item": {
          "id": "1cf1592d-7040-4821-a651-75a987845d88",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bd120c12-1b0b-456d-a244-edf7b4bed23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7def03b1-4c22-4cb2-89a6-f4e61861bfab",
        "cursor": {
          "ref": "221677bd-6a9c-4b6f-b075-a50742048393",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "07792303-dc1c-4333-a9c0-914baea3ae27"
        },
        "item": {
          "id": "7def03b1-4c22-4cb2-89a6-f4e61861bfab",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9606195b-ec0f-4b70-9bbd-7fdf69becc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039e7cae-3738-4387-8cb9-dc1859c2a174",
        "cursor": {
          "ref": "4bfb3a57-91ff-4b73-b534-0de069d996d7",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "082ddd78-eae3-4968-9506-40b98c855a87"
        },
        "item": {
          "id": "039e7cae-3738-4387-8cb9-dc1859c2a174",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "00e5028b-6b90-4483-baad-7623cb42b740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65091f54-317b-4667-9dcd-00b344aefd2d",
        "cursor": {
          "ref": "8b4d63db-3f6a-4f36-851f-f6ef18f98073",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "15b1fb3a-e7c2-4961-bebe-b8fa7a92e760"
        },
        "item": {
          "id": "65091f54-317b-4667-9dcd-00b344aefd2d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e3f3a102-454e-4cde-8b5f-4881ac0ae577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faadde00-cc69-4f52-a21d-3de02800ec32",
        "cursor": {
          "ref": "968700f4-aea2-4f8f-8590-dd06fa144c4a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9daa60d0-3b58-412c-92a5-fe7709d300aa"
        },
        "item": {
          "id": "faadde00-cc69-4f52-a21d-3de02800ec32",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "23e02a55-0386-4623-8662-34f29ab3b041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8a386c-f08f-4fe6-a547-517d2f355bf8",
        "cursor": {
          "ref": "5e79deb6-ff36-42bb-a852-ca54a8ee5234",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3468798f-71e3-4578-a279-f5c7b0d4ec07"
        },
        "item": {
          "id": "4b8a386c-f08f-4fe6-a547-517d2f355bf8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "95908de5-3895-4ac0-9f38-84fa85ac71b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a6b704-48d7-4141-b7a6-520334fad10e",
        "cursor": {
          "ref": "558b71da-0cd2-4872-85ea-85fe957b1d95",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cc99932d-3679-4afd-83c5-b37129681075"
        },
        "item": {
          "id": "10a6b704-48d7-4141-b7a6-520334fad10e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "52cc02d2-5f76-45e5-adc5-5b85ff0d4f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d72fc4-43f1-4928-8820-23731b1bbbb7",
        "cursor": {
          "ref": "9e47dcd0-2c39-4a53-a63b-10c6463897c6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "36e8c8b8-bf01-41e6-ae3a-d6402ca9112d"
        },
        "item": {
          "id": "c5d72fc4-43f1-4928-8820-23731b1bbbb7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6be6f66e-28f3-457d-bced-70ba13601903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3367220f-0f4d-46a4-be67-97356bfda9d5",
        "cursor": {
          "ref": "dc62c6e5-7340-43ab-ae51-4d08a57211e6",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "67b11ebe-b54e-4807-8c7e-eb5459c8a62b"
        },
        "item": {
          "id": "3367220f-0f4d-46a4-be67-97356bfda9d5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7d5b7aee-02b4-406c-929b-08d83ee031d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e793c07d-894d-4b5b-84fb-df8147f8b9e0",
        "cursor": {
          "ref": "e68263fd-0764-4412-8095-1a0d81c6c15c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d21b4356-5931-4493-9d6f-fa6783fb53bb"
        },
        "item": {
          "id": "e793c07d-894d-4b5b-84fb-df8147f8b9e0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5838351c-cdb4-4c27-8dc6-49573e88bb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27257d87-94a3-41c5-a071-55a885e66c61",
        "cursor": {
          "ref": "40a7e8ef-d7ad-4687-b48b-eacc26445249",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9cdee60f-3e1a-4e1f-9a13-7479381600bc"
        },
        "item": {
          "id": "27257d87-94a3-41c5-a071-55a885e66c61",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b4e77f95-a61f-4c83-9233-166f9b0c7ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e7426d-81fb-48bf-a7d6-7493fb62e80e",
        "cursor": {
          "ref": "33de064f-8acc-44ae-a171-9ed3daf36c83",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7ba0f4f6-7250-4a17-9008-a9adce5a959f"
        },
        "item": {
          "id": "53e7426d-81fb-48bf-a7d6-7493fb62e80e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fadadc93-d002-4386-b3d6-c945f1e00535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f6fbac-6c6b-4cc2-a28b-aa2dda6bee24",
        "cursor": {
          "ref": "12c117ab-b90e-4860-a9e0-2cc7e8b0aa9b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d8d88607-d1e2-4510-b7c1-9152dadc02ce"
        },
        "item": {
          "id": "78f6fbac-6c6b-4cc2-a28b-aa2dda6bee24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "212f00b8-ee4a-471b-9ce3-a7b6bc57c9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd87d8dc-f494-443c-8218-0a0b3f599593",
        "cursor": {
          "ref": "68ebb05c-52fe-40b8-8d38-ea60c2dad12e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c9a8b7b7-f4d6-47af-98a1-0a089a8a80be"
        },
        "item": {
          "id": "fd87d8dc-f494-443c-8218-0a0b3f599593",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e56963df-7c35-42f9-b7eb-8e1721fb6cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d78e87-34aa-43ce-a779-845a851adcdb",
        "cursor": {
          "ref": "f1c59cf1-d57c-49c5-a0c7-faa0ad478509",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "463185a2-4194-4bfe-804b-8297436fb32b"
        },
        "item": {
          "id": "a8d78e87-34aa-43ce-a779-845a851adcdb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3c1373b1-91f6-499e-968e-376c39fda23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0888ddbe-5c14-438e-a3ec-c466600536e4",
        "cursor": {
          "ref": "b08170cc-c09f-47fc-bbe1-9bb96e8b7ece",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6f56046d-1104-4dd9-b57b-b2d8f517d13d"
        },
        "item": {
          "id": "0888ddbe-5c14-438e-a3ec-c466600536e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8c72db50-f74d-47a2-9f5e-51643daf2fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28598d2-cd63-437f-8308-6af2022267c1",
        "cursor": {
          "ref": "67647537-525e-4e3f-bad9-0ed4c7b0379d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fe065e7c-6ed9-45a8-8d45-ec3e38119db9"
        },
        "item": {
          "id": "c28598d2-cd63-437f-8308-6af2022267c1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1e82fe43-4796-45e5-b4bf-65f857478365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b693df14-a927-41a1-b61c-7191f8fb410d",
        "cursor": {
          "ref": "8e0433d4-45bd-467c-b3ea-26dd1aae715a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "354883d4-8ef3-4ef1-b1d4-1c6d38233872"
        },
        "item": {
          "id": "b693df14-a927-41a1-b61c-7191f8fb410d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dc828c76-233c-4de9-ad43-9de0a52c6179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade47577-086e-49c6-9d49-259c98695459",
        "cursor": {
          "ref": "b4d08400-f3b0-4600-81b7-84dec4c7a021",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "08fce718-739c-4c36-a92d-dee5b835409e"
        },
        "item": {
          "id": "ade47577-086e-49c6-9d49-259c98695459",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "350e63ef-8139-4bd7-bdc4-165a26e29c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e15b0e0-ebe4-462b-90b9-60ae892ff4c1",
        "cursor": {
          "ref": "d404c243-ac4d-420b-a148-1ee7e9e45491",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "75031f9e-8401-4754-a2b5-d76f8f60bf6a"
        },
        "item": {
          "id": "7e15b0e0-ebe4-462b-90b9-60ae892ff4c1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0ce2d076-a011-4469-842d-d9256a1ee98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c23b594-1a80-4839-bb5c-75e39f060218",
        "cursor": {
          "ref": "5ede02e3-b411-4065-88bd-e042f2e28fc8",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c7f366a5-0fc9-4fd4-aa23-85dff1917aa7"
        },
        "item": {
          "id": "1c23b594-1a80-4839-bb5c-75e39f060218",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "12a1e6c3-fd1b-4d8a-b792-6700ecf88df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f7957e-1a08-44ca-bbe4-9e596d93d824",
        "cursor": {
          "ref": "b61ae477-cdde-4267-a043-9b51138c0508",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "32212f3c-6cc8-402c-861c-d46885f09ad6"
        },
        "item": {
          "id": "72f7957e-1a08-44ca-bbe4-9e596d93d824",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5dfa556e-c73d-4738-a21f-8380d2ed1b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e88edb-a216-47c7-a50e-dc25ba496db2",
        "cursor": {
          "ref": "3c1f33e7-4ba6-48c6-9dd1-f74b2d299747",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ed075932-b235-4ec1-8cea-b4d51ca1badb"
        },
        "item": {
          "id": "a7e88edb-a216-47c7-a50e-dc25ba496db2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d38a6e60-3711-4a66-8574-571ed6dc76a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11f1e33-4740-44a0-a8fe-3381f61b8918",
        "cursor": {
          "ref": "ef1f76c0-0ab1-4b40-822b-8cc4cdc33e82",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e4b35c7a-d23e-496e-a9f1-2c7246a1131d"
        },
        "item": {
          "id": "d11f1e33-4740-44a0-a8fe-3381f61b8918",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "81c38a7e-c302-40bd-b708-7d45f855afba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cb028f-5b4f-46aa-96a8-5b06be2ea60e",
        "cursor": {
          "ref": "a7efa1d6-9675-457c-a2db-e719321a1211",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "47fe270c-393b-4a25-8dcb-6e7b9de9c536"
        },
        "item": {
          "id": "82cb028f-5b4f-46aa-96a8-5b06be2ea60e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f1db615e-88c0-40ff-9b64-4b02ebc9aa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7520fb-532a-49e6-abbd-50ecade0876a",
        "cursor": {
          "ref": "728e36ef-672e-4384-a53f-e633cde7fe32",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dc363002-9e86-4fc9-925f-7d2a2f5e101d"
        },
        "item": {
          "id": "0c7520fb-532a-49e6-abbd-50ecade0876a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c2994da8-d6df-4b92-8025-584e73126cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1d3ba6-b207-492d-9974-c779a7f21ba3",
        "cursor": {
          "ref": "d8695675-7379-4cbf-871d-c75c8a47960b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bc661582-b2d6-4a83-8609-6c12426c4c7c"
        },
        "item": {
          "id": "8a1d3ba6-b207-492d-9974-c779a7f21ba3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0dd7578e-e303-4626-84c3-b6d0307f4da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150253c1-9821-4eb7-8741-1db6e5c5bbd6",
        "cursor": {
          "ref": "07d367ab-7a05-43af-b8d1-02f5c94229df",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0cac7b5b-7e1f-4644-8726-4d16b8375aa2"
        },
        "item": {
          "id": "150253c1-9821-4eb7-8741-1db6e5c5bbd6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "83ede61d-9b1b-447d-a311-d18453dd5399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca57565-5365-4939-b3b1-9a4e9a02e0a3",
        "cursor": {
          "ref": "3dcbef39-0339-4c62-bedf-1fffd68c7103",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "796dbaf2-a0b0-44f2-9522-fb2c96446a3e"
        },
        "item": {
          "id": "8ca57565-5365-4939-b3b1-9a4e9a02e0a3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fa53394d-ffdf-4cca-a7f1-fe7469031e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0915966f-91d4-41ca-a231-02790ec97716",
        "cursor": {
          "ref": "e39d929f-a696-44ac-9d1d-2061ecafe58e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "949b5f06-a4ed-4abc-aa63-91f61f3c7501"
        },
        "item": {
          "id": "0915966f-91d4-41ca-a231-02790ec97716",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3cbfe748-0d1d-414a-a82a-0dc9f3297923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e09e8ec-35d7-4e40-b9ac-1b3d9f23451a",
        "cursor": {
          "ref": "1d9d7c2e-05a1-467b-a862-8f501682f1bb",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0bf9c7a3-3a3d-4097-8394-644dd2b29253"
        },
        "item": {
          "id": "3e09e8ec-35d7-4e40-b9ac-1b3d9f23451a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5f5a8df9-a63d-4b8e-8bbf-0647b317d421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432002dc-f05e-4cf6-80ea-fad91ead13bd",
        "cursor": {
          "ref": "ad5a7f23-5581-4b9c-b721-53c014ecb78f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7123587f-7b9e-44c5-ba1c-93bc86a35268"
        },
        "item": {
          "id": "432002dc-f05e-4cf6-80ea-fad91ead13bd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2cf4021f-a784-4229-a99c-c63376b945a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4edd37-fee3-42c4-b23a-c4b0ba7ac970",
        "cursor": {
          "ref": "551be20c-f86c-4ecf-a680-6ff869f33253",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "466fb11c-a984-4158-b6b9-5e42b612f491"
        },
        "item": {
          "id": "4b4edd37-fee3-42c4-b23a-c4b0ba7ac970",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "402f88d3-e199-4a19-a1fa-a79c315182ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12e35a1-2771-4aa2-aca5-6d4ca03e11f0",
        "cursor": {
          "ref": "38289fc8-c887-4eac-808a-bc369f04d5e9",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "56620cbb-81da-47d3-bbfd-591a043f0beb"
        },
        "item": {
          "id": "e12e35a1-2771-4aa2-aca5-6d4ca03e11f0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "98d352d2-d089-45d3-9b2f-9278dcd50c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a432a8a-f77a-4c3f-adec-f726eccd02d7",
        "cursor": {
          "ref": "4a051f5c-5d3a-4168-bda0-638082397c94",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a5cb53bb-9bec-453b-a162-6d310f6b6f72"
        },
        "item": {
          "id": "7a432a8a-f77a-4c3f-adec-f726eccd02d7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d7ab10a0-5423-4066-af8f-64ec3c5e0c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7a700e-a5e5-4848-b765-8f325981de1f",
        "cursor": {
          "ref": "8d830ac1-854c-4c7d-a4e2-53ccd16ba8a0",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0f552caf-8d56-49c4-90d9-91c278bbab33"
        },
        "item": {
          "id": "bb7a700e-a5e5-4848-b765-8f325981de1f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f7014c03-359f-4a57-a663-2c67269eab92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b706f83e-dc97-4576-b374-d5a5fab8dd95",
        "cursor": {
          "ref": "1455d2e1-b643-4009-94b9-21b8700a74ed",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "008959b7-7515-4dc4-b01f-ef77c03b2b8c"
        },
        "item": {
          "id": "b706f83e-dc97-4576-b374-d5a5fab8dd95",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c239a7d8-c7d0-49e5-bdd4-b404d24303e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287e7ff6-30f6-4f8f-b91b-707c5ffee90d",
        "cursor": {
          "ref": "d8efd9a7-32f1-4747-86cf-79315583d78f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "58451122-6911-4b3d-896a-b4d5d09d3121"
        },
        "item": {
          "id": "287e7ff6-30f6-4f8f-b91b-707c5ffee90d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bc3a141b-02da-4e3a-a0b9-004aacee3980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1731d36-1c7f-4377-86ce-f0a8cb243c2a",
        "cursor": {
          "ref": "326a4e2e-4dd8-4cd1-9568-6c28c83b9f96",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e9c95282-9793-4ffe-b54a-0ee3cb39a204"
        },
        "item": {
          "id": "e1731d36-1c7f-4377-86ce-f0a8cb243c2a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b766cbac-d11e-40cc-8b6f-98060b84c3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0c2f01-fa9c-4ee7-ba61-cfcbeac5127f",
        "cursor": {
          "ref": "77e76b5e-d522-4db8-b3b7-65581218e860",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "429039d2-baa7-4164-b79a-e650e082fef1"
        },
        "item": {
          "id": "da0c2f01-fa9c-4ee7-ba61-cfcbeac5127f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7e70c2f6-caef-4141-a6b7-e624ca5d8acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10325a9a-f688-4df0-a385-246406167505",
        "cursor": {
          "ref": "b9ba1b2a-6869-4357-afe9-ff9a581722f5",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2894c46e-77c7-4888-9dd3-0977652aa617"
        },
        "item": {
          "id": "10325a9a-f688-4df0-a385-246406167505",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a5f32283-9865-4d51-befc-9b54b589f5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544c6389-6754-4f06-8121-26e973ea6afd",
        "cursor": {
          "ref": "bcd0b458-7a4d-41ee-9c71-0deb33188afd",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fe993bf8-844b-4fe3-829f-66aca29dc2a1"
        },
        "item": {
          "id": "544c6389-6754-4f06-8121-26e973ea6afd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4b714256-0527-48c1-a491-e42967eafb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e712ebe-c54e-4db3-9867-1beabfb05da5",
        "cursor": {
          "ref": "53a3b077-432a-47c6-81a1-2a9702d84da6",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3a6f7540-09ee-4088-a759-4950c0ccfd32"
        },
        "item": {
          "id": "8e712ebe-c54e-4db3-9867-1beabfb05da5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f040ce7e-2101-4ae9-963f-731e7bff99e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cc5a6e-852e-4a45-a3ab-aebc5b43a793",
        "cursor": {
          "ref": "6dc996bc-3a34-405f-b6f2-5e797c77ca30",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "236daab4-2c96-43ac-99fd-82dc247460c1"
        },
        "item": {
          "id": "50cc5a6e-852e-4a45-a3ab-aebc5b43a793",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "69a14a5a-fa82-4805-bc5a-ee648fce775e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aaea3f-281b-4e9b-96f5-ad995f75bc18",
        "cursor": {
          "ref": "99715787-56ab-4308-8def-96129c1682ed",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a727a3ce-a863-4004-a263-b14ce9116299"
        },
        "item": {
          "id": "89aaea3f-281b-4e9b-96f5-ad995f75bc18",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ca928cc6-b36a-41f3-93f5-785b230442b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f66f5e-27a0-4995-9e78-16b6a8c7da6b",
        "cursor": {
          "ref": "722fb0e6-f501-4c58-8669-d1cb2f2a9785",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6cefacf0-22f3-4b9b-8ba8-639910293d93"
        },
        "item": {
          "id": "44f66f5e-27a0-4995-9e78-16b6a8c7da6b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bee478d7-0024-4388-ab53-ada4123dea74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f67c89-def3-4efd-9b98-19b1f945001b",
        "cursor": {
          "ref": "5b48d196-5f3e-49f1-a234-4d0dbba85ef1",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f9616807-529c-4682-9098-78f0cfd37fa5"
        },
        "item": {
          "id": "43f67c89-def3-4efd-9b98-19b1f945001b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9c2317d8-cfab-4d75-8c5f-301471eae2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66cad69-6737-481d-8123-42c93a9cd600",
        "cursor": {
          "ref": "75ca8947-c343-4db5-a71c-042e2672cab2",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "84033d16-4320-47dd-a911-b818eae8363b"
        },
        "item": {
          "id": "e66cad69-6737-481d-8123-42c93a9cd600",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "823ce8a9-5a21-4906-96de-6cc2eb3f024e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146c84d1-7c69-4f51-b221-0efee8ff26a2",
        "cursor": {
          "ref": "da0fb0ba-efe7-4cad-a627-970e754630bb",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "12541c37-d379-4b4b-89e0-7bf53e4a46d1"
        },
        "item": {
          "id": "146c84d1-7c69-4f51-b221-0efee8ff26a2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c12ac040-6e4d-4471-95ad-9d3cae8f720b",
          "status": "Created",
          "code": 201,
          "responseTime": 45,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f790d5b-4672-4651-8ede-eb4c32acfbb6",
        "cursor": {
          "ref": "b321f46f-739a-45f6-bfa1-ec446e3d4308",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3c0246d2-7aa3-46e0-afb1-7f0b8ceca1a9"
        },
        "item": {
          "id": "9f790d5b-4672-4651-8ede-eb4c32acfbb6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cb3dfc18-df38-4ebf-ac3c-e147eb5ee561",
          "status": "Created",
          "code": 201,
          "responseTime": 112,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf358df5-d4de-4ba0-a9dc-e63ea7c74e06",
        "cursor": {
          "ref": "5b15acd8-e43c-4ee9-9c23-6b87bda89878",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8c9a9475-4e19-4ed5-be90-6a2cfc5e1546"
        },
        "item": {
          "id": "cf358df5-d4de-4ba0-a9dc-e63ea7c74e06",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5cbfc0b1-ea34-4d57-8b3f-0b7d697ae793",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b5c295-08b8-4853-9075-c17be4732564",
        "cursor": {
          "ref": "491186f2-7fa7-4d2c-a7a5-ba7a2b4a8d78",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8ac5e8c6-e8e8-4142-8bf1-f7654c7e13dd"
        },
        "item": {
          "id": "12b5c295-08b8-4853-9075-c17be4732564",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0eff9f8d-a2c9-4b7a-92e1-7c800398cfca",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "68246328-4aa3-4ad0-9a86-a9aebe1f9783",
        "cursor": {
          "ref": "826ad8ee-bbe6-4e72-be00-0782ae431d42",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fb4b6938-0fd9-4ef2-a5c4-8cf2080d46db"
        },
        "item": {
          "id": "68246328-4aa3-4ad0-9a86-a9aebe1f9783",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0446e4e0-2ba2-4414-b599-f2e638ff2253",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6ad6fd-fe56-4d45-baf3-ecb132521401",
        "cursor": {
          "ref": "a0c63fe2-4634-47c3-8040-217aa7c86be5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bea9ffc6-0246-4730-8d06-8e9997780c65"
        },
        "item": {
          "id": "2a6ad6fd-fe56-4d45-baf3-ecb132521401",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b6839ccf-637d-4df0-ba46-5c65377f5938",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7892a3e-87c8-4688-b8e1-794f5629c6e5",
        "cursor": {
          "ref": "a4bc30c8-1d2b-47b1-b2ea-30b2992a7f79",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "be392f15-abc0-4199-9361-8d3e4270a797"
        },
        "item": {
          "id": "a7892a3e-87c8-4688-b8e1-794f5629c6e5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "289e5710-bb49-4e8d-bcf9-262b23f1462a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304e40f1-6c38-4d3e-8673-96a7891e9624",
        "cursor": {
          "ref": "41dc41f9-7ce0-4aea-9a19-f2bebd22832b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bf05c6d4-f0b6-4088-a80a-d258288a5082"
        },
        "item": {
          "id": "304e40f1-6c38-4d3e-8673-96a7891e9624",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "85a52449-7e82-4409-8c4e-d309060f93a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6490d4-be9b-4727-af0e-ffa62677ccd9",
        "cursor": {
          "ref": "2261ee07-fd5f-431e-aeef-ee9b13b6c18c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b569cf97-70f5-40b9-9214-a36e9ac2a5f9"
        },
        "item": {
          "id": "ca6490d4-be9b-4727-af0e-ffa62677ccd9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f0c0e93a-29f0-4da6-ad80-b78d82fbe3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f992602d-7071-4f88-8919-7f62b3e0b039",
        "cursor": {
          "ref": "47862216-6ab7-42a0-80e8-3d7fa89b58cb",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ad42393b-7270-41e4-ada8-2d058ed94151"
        },
        "item": {
          "id": "f992602d-7071-4f88-8919-7f62b3e0b039",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6da6cf83-bdd0-4e3c-841d-f94602c71744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5d6eef-17e7-4b1e-9a05-81de0a9d40b7",
        "cursor": {
          "ref": "05c64b25-4cbc-4a3f-bf56-ea5c3c5c2ab5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "869f8561-eb6e-4a42-bd47-c04fcaeacc63"
        },
        "item": {
          "id": "5c5d6eef-17e7-4b1e-9a05-81de0a9d40b7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ad245d0f-af61-4b13-91c2-ee539ce5b549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4ef656-ba4b-4128-b4a6-58a99acdf8df",
        "cursor": {
          "ref": "8b606120-f97d-45d0-8ccb-f3d509f99f22",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dd6b418e-56cf-4746-8203-885f0991948b"
        },
        "item": {
          "id": "dd4ef656-ba4b-4128-b4a6-58a99acdf8df",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "046a986b-e33d-4473-812f-f523a83b9105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d9df3a-6b39-47d9-936e-808868080348",
        "cursor": {
          "ref": "46560958-0f4e-4560-8d9a-6334d73c339f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f6f2dec8-ee43-4320-98d5-8df3aa2da0dd"
        },
        "item": {
          "id": "47d9df3a-6b39-47d9-936e-808868080348",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "283b6634-860c-492b-a4b7-d8ceed26007d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ff2f03-c5f3-48c3-8224-01de8e215ebb",
        "cursor": {
          "ref": "9d7458f9-4eb4-4866-a634-ed17a6c92f1b",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "67873d3c-a733-4d11-b3c3-909bdccfcb8e"
        },
        "item": {
          "id": "79ff2f03-c5f3-48c3-8224-01de8e215ebb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6b34ce69-fba0-4d3c-a44f-ce88bfe1e713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5247d311-b3bb-4a3b-aecb-b0f1db83abb9",
        "cursor": {
          "ref": "2ac64969-32a1-472c-b4a6-9d928c05e343",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "40a27625-ceca-4365-8f11-3985d219edba"
        },
        "item": {
          "id": "5247d311-b3bb-4a3b-aecb-b0f1db83abb9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "801fcf8a-3a5c-48f2-8010-8bfebc2976ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6a702b-a005-4aee-b18d-93938e3eeff4",
        "cursor": {
          "ref": "8b5bd6d6-d5ac-4042-b0c9-695903e42298",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d76d541d-55d7-4436-88e0-d5da92a2d14a"
        },
        "item": {
          "id": "6f6a702b-a005-4aee-b18d-93938e3eeff4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "574444d1-5235-44fd-bb35-b3cb8f6cc966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1966ac02-6036-4f8e-ab04-4e66d1ad7c97",
        "cursor": {
          "ref": "ca98b6d6-ac51-462b-815b-5a8f9203edb6",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d22a87c2-4ab7-4f34-96ef-bfd83a74e9d6"
        },
        "item": {
          "id": "1966ac02-6036-4f8e-ab04-4e66d1ad7c97",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e41e6f0b-2271-4595-831c-9e823588f696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b864aed-503d-4e0c-87e5-94425dc79c88",
        "cursor": {
          "ref": "3695e3e1-414d-407f-99f9-895ed36499f4",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5853b4d3-25db-4ef9-be72-34a644151a69"
        },
        "item": {
          "id": "0b864aed-503d-4e0c-87e5-94425dc79c88",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8ba97d4e-3e58-46c9-be0d-f2a842d7be8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e07f12-4579-4653-8854-962a2280399e",
        "cursor": {
          "ref": "aef006fe-2250-413c-880f-36d6555c0f1d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6efd2c85-d7c5-4182-b2c6-edd0813eaaf5"
        },
        "item": {
          "id": "a8e07f12-4579-4653-8854-962a2280399e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "21c73d80-bc9b-4215-b950-83a59f3ab270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b803d11-ccbb-40ee-9abb-bf53366bfb7d",
        "cursor": {
          "ref": "34b2788b-b4e3-43cb-a09a-be22c4813e05",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "387471fc-11a7-4062-b77e-55b741b21796"
        },
        "item": {
          "id": "2b803d11-ccbb-40ee-9abb-bf53366bfb7d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a5b3793a-7845-4426-a7af-3cbbd7265cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca3c77d-d2a7-4d9b-9cba-e23c96ce44d6",
        "cursor": {
          "ref": "b977921f-1305-4571-adc3-232c3fc19f24",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9ecfe5d0-4c78-42d4-911c-c30f139951b2"
        },
        "item": {
          "id": "4ca3c77d-d2a7-4d9b-9cba-e23c96ce44d6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a891996f-c762-4f0e-81af-88835250ee99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050f7c0c-2a27-45e8-b879-140ccc0eb52b",
        "cursor": {
          "ref": "e2893d4b-3e66-497e-8870-af9b0391e50a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "de05131a-fc8f-4f58-83f4-bff85a07a276"
        },
        "item": {
          "id": "050f7c0c-2a27-45e8-b879-140ccc0eb52b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cc87d852-e335-40ec-9c9d-8572a13c8cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e059b59-d9d5-44a3-bef4-4c2e1a172bc9",
        "cursor": {
          "ref": "15ad0dd4-fa95-460c-9d4c-d2c30d526295",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d45d0c5a-d066-4505-bd9d-7a5c31df4a7b"
        },
        "item": {
          "id": "5e059b59-d9d5-44a3-bef4-4c2e1a172bc9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4cdd7111-ef3c-4a5d-bf80-761e0e9c6bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220a123f-3dd6-4891-83c2-2952730d9d33",
        "cursor": {
          "ref": "a8a40cf5-dcfa-4f79-8d9e-977a4cc40d83",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a81aedf0-c04b-4629-a66f-98b1a840e258"
        },
        "item": {
          "id": "220a123f-3dd6-4891-83c2-2952730d9d33",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f2ffa8fb-2ab6-4315-a332-a8ca626c92a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15d68de-4173-4619-805e-cf91834046ff",
        "cursor": {
          "ref": "faf52fcd-a07e-4c93-9d68-78066296ce50",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bc25bff6-d21c-4a63-a16c-c0060584e3da"
        },
        "item": {
          "id": "c15d68de-4173-4619-805e-cf91834046ff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "913109f1-9eb6-46b7-a1aa-6a32ca63a6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03b543c-82a3-49a0-8eee-af5d997998fb",
        "cursor": {
          "ref": "660206a2-cf47-476b-898c-1c1e1d2d034b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5477b8cd-d53e-4ac4-b246-f6aea3b1a7be"
        },
        "item": {
          "id": "f03b543c-82a3-49a0-8eee-af5d997998fb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e4ac8f64-5089-428b-82da-20ffd71bc89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83835468-e69d-4a9a-8a3f-8d0fc7482260",
        "cursor": {
          "ref": "3f5f4450-345c-40dc-8504-f31a31e7088e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2aaebd67-58fd-4bf6-b350-846027119e30"
        },
        "item": {
          "id": "83835468-e69d-4a9a-8a3f-8d0fc7482260",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ae1d6627-42e7-4044-9dfa-bdb1a2e91ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802ec207-7289-4aba-a16c-8271071d2470",
        "cursor": {
          "ref": "9e81d0e5-3de2-4fc6-9e23-8f8d6b96af87",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9f4e53ae-8b51-45bb-b10d-cb77468927b5"
        },
        "item": {
          "id": "802ec207-7289-4aba-a16c-8271071d2470",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7eee8db8-73bb-4189-be70-ada83d4fad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fbebef-d6e0-4aab-8ee5-cb5dd52a5c47",
        "cursor": {
          "ref": "d513aec4-4084-4343-9954-9bfdf61fae55",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4d1f06b5-34b9-415e-aff2-d86b518a0644"
        },
        "item": {
          "id": "e0fbebef-d6e0-4aab-8ee5-cb5dd52a5c47",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9cbb03f0-fc11-48fc-888a-ae56509a88c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1127f3c5-fbdf-4644-8ee5-ce7b95501365",
        "cursor": {
          "ref": "3a6f6a4e-ddc8-48d4-aa25-549697758980",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7f98c613-1acd-418b-aafe-80aee66af176"
        },
        "item": {
          "id": "1127f3c5-fbdf-4644-8ee5-ce7b95501365",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ab234ac0-c14b-46e6-8dc6-b48d647c9aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206fba90-105f-4eeb-8f2d-7ced993cbf44",
        "cursor": {
          "ref": "adfb592f-cf5d-483d-a3c8-0922347d680b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0487454c-c927-4480-97ce-39119303417b"
        },
        "item": {
          "id": "206fba90-105f-4eeb-8f2d-7ced993cbf44",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cc814840-207a-4b8d-a2e5-5ff1d155d1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353cb04d-cb89-4a45-ab83-b9cdb5e35313",
        "cursor": {
          "ref": "b07c68f0-c489-4cf3-89d8-fd1782e72204",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dfa0955f-2d8d-4d63-be21-76bfc0ff420f"
        },
        "item": {
          "id": "353cb04d-cb89-4a45-ab83-b9cdb5e35313",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "768b11d9-f9e5-407d-9bb7-e3f750a258cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d8b846-551f-4a3d-a736-31082942abfe",
        "cursor": {
          "ref": "ff519692-6723-4e58-b529-e294df6b6f25",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5095fd4f-70ff-440d-863a-ccd63baf83f0"
        },
        "item": {
          "id": "58d8b846-551f-4a3d-a736-31082942abfe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fede5785-a22d-4427-9a15-c83ef216c396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacf921e-7cf1-4dda-bfe9-24abd5f8bac6",
        "cursor": {
          "ref": "00611404-e5e5-4ab1-8f64-305538bccd85",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "32bee772-8956-4dac-b762-28742d64f9a4"
        },
        "item": {
          "id": "cacf921e-7cf1-4dda-bfe9-24abd5f8bac6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c50605ab-6a2c-45fd-808c-7d1ea3c5c218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7fff90-ac71-4984-b783-773b33659263",
        "cursor": {
          "ref": "3564eeae-b0d3-4862-b14e-dfdf0952c28e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f0f6fd63-d1e0-4f09-b144-8a9646b6f5b2"
        },
        "item": {
          "id": "ad7fff90-ac71-4984-b783-773b33659263",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fd2a1a1b-46e4-497c-b640-5d5fffded192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce89ad0-f28d-4fdf-aca5-32e379af7101",
        "cursor": {
          "ref": "d1cd552e-39be-452d-88e6-10af930e4747",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f871c773-b2bb-4224-9857-f2cbc2b4b1dc"
        },
        "item": {
          "id": "6ce89ad0-f28d-4fdf-aca5-32e379af7101",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "16d200c8-9045-45d5-b33f-8107cc6d09e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fcf30d-d6e8-4a59-a99c-2b79b61e7c49",
        "cursor": {
          "ref": "4bf6da19-0d5e-4d97-9c9d-a4730c2ac1b3",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8193c1c7-15fe-4320-a2ae-6e0f44ba3059"
        },
        "item": {
          "id": "60fcf30d-d6e8-4a59-a99c-2b79b61e7c49",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8e630c5f-28a7-4fdf-9ba9-aba1a31e2131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2b7b78-b122-420f-b801-532033d9772a",
        "cursor": {
          "ref": "27ebf178-7903-4bb8-ab7b-b3e140949c8e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d7148e0f-0a6e-4b8e-856a-06c092ac2727"
        },
        "item": {
          "id": "eb2b7b78-b122-420f-b801-532033d9772a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7772cab3-29ca-4fe4-b9f4-2c45da102780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af59189-83e2-48f6-b978-87b167a82058",
        "cursor": {
          "ref": "786cd753-6c75-4c94-8120-30a932cc3991",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fe1d5519-ab78-41c3-bb36-ea0826911257"
        },
        "item": {
          "id": "4af59189-83e2-48f6-b978-87b167a82058",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "08eac369-45e6-430c-bf17-96fbcbc39bd3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637b3af7-de30-4951-a8eb-995791f2e3e1",
        "cursor": {
          "ref": "5a7874e2-7481-40f1-b900-b0ad75bb0a05",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "442b1d02-c3ec-4df6-98b1-8868180b704c"
        },
        "item": {
          "id": "637b3af7-de30-4951-a8eb-995791f2e3e1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9d81d334-7698-4af0-9fd0-ba2eaa991167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46593500-6cb1-449d-add5-f660d5282633",
        "cursor": {
          "ref": "ac43d320-fb90-4350-94f9-830df4828948",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "227c8c88-ee50-4131-997f-0c20c79504b5"
        },
        "item": {
          "id": "46593500-6cb1-449d-add5-f660d5282633",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc5ebf48-133f-45aa-86ee-280e0f1921dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f6b09a-f1c3-420a-88ec-12c5a282bb09",
        "cursor": {
          "ref": "ec65bf3d-a326-4e76-999a-719a059cbfc8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4f92fba2-9587-4295-8746-a382c8cdd20d"
        },
        "item": {
          "id": "d5f6b09a-f1c3-420a-88ec-12c5a282bb09",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f832c3f-6884-4c4b-9265-b7e2744c10fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887c97bc-9525-4605-bf83-c79d8496a694",
        "cursor": {
          "ref": "6c1279bc-df8b-48bb-9134-200d4f33facf",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "092c3355-7593-4684-b12e-7ab76aa195f4"
        },
        "item": {
          "id": "887c97bc-9525-4605-bf83-c79d8496a694",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7f9bc8c4-032d-4cb0-91b2-a81d7e6e2ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6b8bc0-5064-4d18-9ed7-b06b761f0e2d",
        "cursor": {
          "ref": "d80aec8d-862b-4ebb-9446-960233bb4f0a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1ad80b7b-8c87-4d2d-90d8-7b367dff2b95"
        },
        "item": {
          "id": "0c6b8bc0-5064-4d18-9ed7-b06b761f0e2d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "42c216fb-733c-4700-b4fd-24a70883d292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7664bf-9d32-42ae-bbd8-52267897c24d",
        "cursor": {
          "ref": "248854f6-4ca6-4c31-8a0d-f283e21ed1c7",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a409e583-077c-4bf4-b420-c1070b0e6972"
        },
        "item": {
          "id": "6c7664bf-9d32-42ae-bbd8-52267897c24d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9d2cf658-d61e-40a7-9674-4539e26406a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b147e057-580f-42c2-b1a0-b3c5cae05469",
        "cursor": {
          "ref": "00e09592-b58c-483a-a79d-7c3ee47e2800",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "efbb66b2-8526-4190-b011-009e77039a08"
        },
        "item": {
          "id": "b147e057-580f-42c2-b1a0-b3c5cae05469",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6e038573-c260-45dc-9a05-ec1b34e18f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60a5dd4-882f-49f5-86c9-b1b62d72c1e4",
        "cursor": {
          "ref": "d9d113c2-355b-4ee1-af6c-e9ae6fb026c7",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b0f7bbe8-da78-415b-9704-a94d71349781"
        },
        "item": {
          "id": "a60a5dd4-882f-49f5-86c9-b1b62d72c1e4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1cbe2d63-14c6-403c-9ffd-a66a1b7bcb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee368cd3-2a1f-48e0-a158-926329eab30c",
        "cursor": {
          "ref": "35c348f6-4e50-4d13-b882-1a1967388d50",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d4ac21a5-2ffc-4460-88fd-3b2b145f05c9"
        },
        "item": {
          "id": "ee368cd3-2a1f-48e0-a158-926329eab30c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c451c3aa-8ada-43ad-b02d-4aa5de348fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e614499b-150b-41f3-9d8a-0b1bacc7f948",
        "cursor": {
          "ref": "353e5818-2c7a-455b-b63e-b6a4ef7f3f0d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f23fd221-1287-4d29-8736-adc5e6faacb7"
        },
        "item": {
          "id": "e614499b-150b-41f3-9d8a-0b1bacc7f948",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "71d03530-3bfe-449b-90cb-5f886a3f9962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ce1736-0ccb-4552-a487-0deb34b3904c",
        "cursor": {
          "ref": "04edf811-fa58-435b-86d1-62caf0274f35",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "86ce47c0-5b28-4bee-b875-a153993f7172"
        },
        "item": {
          "id": "d3ce1736-0ccb-4552-a487-0deb34b3904c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0feab986-0196-4639-a889-c1c06498a01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b34ab4-b17b-454f-8b61-f13186095dbe",
        "cursor": {
          "ref": "b528c61a-f714-47a3-833a-d287cf581d39",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7a9875c1-2bf7-4eb7-af8e-6405b2df798d"
        },
        "item": {
          "id": "b3b34ab4-b17b-454f-8b61-f13186095dbe",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "376a95cd-1b5e-4b34-8561-4cee21e9e96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf5c04e-8241-43a7-af23-72093cbd3a3e",
        "cursor": {
          "ref": "10f63822-63fa-4247-98cc-8f87a8cc8205",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "544cb4a9-a5af-4ce1-b84d-ae4b7ab48bda"
        },
        "item": {
          "id": "fcf5c04e-8241-43a7-af23-72093cbd3a3e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d93808e9-3122-4151-a81b-a723e6189551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b3e5b0-15f4-442f-9e07-e4c522a7e7ef",
        "cursor": {
          "ref": "edae89df-abe5-4b70-89f0-c5499fd6b226",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b8b710ce-b5dc-4bd3-952f-1cf0b5dc7fa8"
        },
        "item": {
          "id": "17b3e5b0-15f4-442f-9e07-e4c522a7e7ef",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ef70334e-9124-4caa-a052-fe3f5411b8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706e8271-ccef-433c-8376-afff46c1cea2",
        "cursor": {
          "ref": "dd2e7862-c5cf-46bd-b4df-82498f22c081",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "15acbb18-c33b-4f3b-8eef-e893db5f0b07"
        },
        "item": {
          "id": "706e8271-ccef-433c-8376-afff46c1cea2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ece072d5-fe4a-413a-8ca6-83e78a05c1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3be8de-4e04-4026-bcb3-d8b9577fc4c5",
        "cursor": {
          "ref": "05039765-9ff5-4f8e-a040-43c7e62e9d3a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "848c8759-1b53-437a-a5a3-da27f788d7fc"
        },
        "item": {
          "id": "be3be8de-4e04-4026-bcb3-d8b9577fc4c5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "46b5388a-7c00-429a-9129-9310a6e8f266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c0bd5e-a637-4358-9873-65a1b19ec939",
        "cursor": {
          "ref": "b62e0497-527a-4b44-a6a0-16043af41199",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "be4aeacc-779c-46a7-a88c-0ee15fe0a37a"
        },
        "item": {
          "id": "40c0bd5e-a637-4358-9873-65a1b19ec939",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2921ad4a-7f7a-4c02-8465-592ce0f864df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1c5005-1569-4612-9b5e-90ba051cb8d6",
        "cursor": {
          "ref": "685996e7-ae62-4007-a974-162125eac6f5",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1c46deb2-3536-44c6-9cd4-7989aa43dfa9"
        },
        "item": {
          "id": "de1c5005-1569-4612-9b5e-90ba051cb8d6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0bea84cf-b437-45d4-b203-fa93a2b2b75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7328e711-851c-4d61-b2ed-2816ae06608f",
        "cursor": {
          "ref": "443f931e-84bb-4707-b77e-e288860a80c3",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cf84df01-8ff7-48e2-964c-f99a623d0c89"
        },
        "item": {
          "id": "7328e711-851c-4d61-b2ed-2816ae06608f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07d94957-1f82-41af-836c-4c08fbb45cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e483a767-b797-4381-8607-81d4c40ddfb2",
        "cursor": {
          "ref": "892ac50b-98b0-4bfd-b5cc-61e8eea2cfc2",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d0f9b8c3-15f2-44fe-9adf-dec87b7887f4"
        },
        "item": {
          "id": "e483a767-b797-4381-8607-81d4c40ddfb2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f7882a1e-524d-4e92-9a44-a15cc82682a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fbe516-5677-41e4-8003-917f7443f40c",
        "cursor": {
          "ref": "c10ba5f6-bf37-4fbb-9e40-4d6c05b62974",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fdc648f1-9fb5-4f39-a7d5-e9bb5de76da1"
        },
        "item": {
          "id": "75fbe516-5677-41e4-8003-917f7443f40c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dc24f963-7f22-4c3b-af0d-5fd2a3845759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3f25ac-9b88-449c-8464-3251fddd1a5f",
        "cursor": {
          "ref": "29d7ecbb-a08f-491a-9fd5-192309056d03",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8f7356bb-9580-43fa-88f4-43a16699c120"
        },
        "item": {
          "id": "ea3f25ac-9b88-449c-8464-3251fddd1a5f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1ef31650-04f8-4d88-9f1f-85ff0bfabc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3318ea57-482e-4053-a8fe-8b4afcd8c2c0",
        "cursor": {
          "ref": "a202285c-141c-4e87-902b-c61791ca3f07",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5bebd385-0166-4ed2-8c5e-06c3ae7ce3f3"
        },
        "item": {
          "id": "3318ea57-482e-4053-a8fe-8b4afcd8c2c0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2f7622b2-60a8-4ab9-8c68-7606e9520bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00806b1-71a0-4dfc-b8f1-c18b1b968900",
        "cursor": {
          "ref": "51c02ca7-ea17-4fb3-9b2b-82b70786c0a6",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "16b5d1c6-4f9a-499a-8fcb-4b5af9381c59"
        },
        "item": {
          "id": "a00806b1-71a0-4dfc-b8f1-c18b1b968900",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7a025b64-0de8-4255-820a-1df439f5a2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2d1733-ef92-4207-909e-4604cae7d4f5",
        "cursor": {
          "ref": "8696c93e-f4e4-4e75-a223-e7d6eaa93e79",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "87f1865b-88e8-486a-81e9-adccfb9f9035"
        },
        "item": {
          "id": "1e2d1733-ef92-4207-909e-4604cae7d4f5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cb8bb07d-8b56-48fa-aa43-43472136a4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fa6bf1-6a84-4a33-bc5e-d957259ed5f1",
        "cursor": {
          "ref": "8789d8af-b6e2-4676-9d52-727a7f3e5f9c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "042294a1-f5f0-4eac-b523-532f44cb8dbd"
        },
        "item": {
          "id": "f9fa6bf1-6a84-4a33-bc5e-d957259ed5f1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "97eebf26-48fd-4651-9ea4-a2b1ad0042f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e971112-8102-4e35-af1c-ad9b10c5d621",
        "cursor": {
          "ref": "3b7e492e-2b2e-4ab6-a341-10077745d57c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4e55a686-ea23-4bff-948b-b8a25a2dcdda"
        },
        "item": {
          "id": "6e971112-8102-4e35-af1c-ad9b10c5d621",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cc5b9da4-61b0-47da-8b62-c486ad8946f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acebde64-ae6c-484f-96ef-d9c11e99f1aa",
        "cursor": {
          "ref": "72a318d1-ca12-4d06-a3b2-950f417a5840",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dac47acb-cdb3-4280-86de-d8ba68fa92e9"
        },
        "item": {
          "id": "acebde64-ae6c-484f-96ef-d9c11e99f1aa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "07d75854-5527-4223-84d9-bc7a14efe9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e5ecc0-89fc-4c40-9cc2-c068bdecb8f4",
        "cursor": {
          "ref": "20449d06-ad94-497f-8208-3445ca318ca5",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e64adb65-f093-4969-b6e2-24adb6cc83cd"
        },
        "item": {
          "id": "a6e5ecc0-89fc-4c40-9cc2-c068bdecb8f4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2b58994d-495c-4c27-9436-a947c4ed927d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e38de2-eabf-4fc6-816d-4d32d8435e65",
        "cursor": {
          "ref": "f814ac52-3221-4f43-a5fe-2e44a63771c1",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cf05c9c2-7ce3-4ca9-9790-2ff00e3f6df6"
        },
        "item": {
          "id": "d7e38de2-eabf-4fc6-816d-4d32d8435e65",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0f7cef60-73a3-4164-8d42-d27b913f9e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9551628c-e8ff-444a-8229-b31ff4b36ba5",
        "cursor": {
          "ref": "a1798b05-9dfe-4fc8-85fb-79018351e5b3",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e6cc5ecb-2d09-44db-b877-c28245028490"
        },
        "item": {
          "id": "9551628c-e8ff-444a-8229-b31ff4b36ba5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5193286a-a2a5-489a-844b-39806abed2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5def5458-8125-4062-880d-0e80adbe3eca",
        "cursor": {
          "ref": "05612754-1248-45f5-b1b6-0d787dc9cc94",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bba096a8-c9ac-4b7c-8992-c8b02995f4df"
        },
        "item": {
          "id": "5def5458-8125-4062-880d-0e80adbe3eca",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a034f136-a46a-4b5f-935f-35bbb0b2f462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e196842-6547-4007-84b8-8e7dd8f328a7",
        "cursor": {
          "ref": "b9bc4d28-7704-431c-aec9-7726872bcb8f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d840bfa3-45a1-4cff-a3c2-51b85446e90a"
        },
        "item": {
          "id": "9e196842-6547-4007-84b8-8e7dd8f328a7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c05f4d2d-26f6-440e-add8-ba7412802b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65bd3a7-e896-4cc1-955e-6f04110f7328",
        "cursor": {
          "ref": "a86c7f28-3ac2-4c9b-9583-e74d04d960b9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6ad4476d-4b4f-453f-bef4-d71c0fdc6a46"
        },
        "item": {
          "id": "c65bd3a7-e896-4cc1-955e-6f04110f7328",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9d3ddcf6-ac5d-45be-9efc-f522e22a7c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3406b06-5e31-470a-b934-0c1d5353c5ce",
        "cursor": {
          "ref": "25babc8e-8b53-40ae-b33d-2a8b5cb645db",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "47efa02b-6511-46dc-adf9-57611f400f86"
        },
        "item": {
          "id": "f3406b06-5e31-470a-b934-0c1d5353c5ce",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "04e9883f-61ac-4146-a9dd-ccc942f6c6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e162442-f739-4451-a246-1eb485b0c0f0",
        "cursor": {
          "ref": "d8f21e87-17e6-4efb-93ab-189217a00634",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0e46ef83-891a-44b9-bb93-170b3da257de"
        },
        "item": {
          "id": "4e162442-f739-4451-a246-1eb485b0c0f0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2993ec24-752c-4c45-ace8-78222c0e59da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1056fadb-09ec-4a98-b8d1-b684b9e9752a",
        "cursor": {
          "ref": "e5281a9c-006a-4d91-ab48-32c2b2cd7137",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "88cc2951-c606-4c3c-8f5c-dd6a42ae2047"
        },
        "item": {
          "id": "1056fadb-09ec-4a98-b8d1-b684b9e9752a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dfefb0e0-f835-4b49-b05e-2f2e81cb8395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a448c9d-5275-4d71-831b-2ab90d1d5168",
        "cursor": {
          "ref": "d55d3060-a910-49fd-8fdf-7a2ad79a394d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fbdc246b-71ee-4955-9f5d-1d861e605468"
        },
        "item": {
          "id": "1a448c9d-5275-4d71-831b-2ab90d1d5168",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a5edcf97-538c-4947-8201-28aaa676d485",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac04e390-ba88-4d42-bdc0-4fb482182cf4",
        "cursor": {
          "ref": "021803e5-aaf3-48bf-b3c7-95b85e10f375",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6164808e-02c8-4cb3-b743-1ab85b4bf54b"
        },
        "item": {
          "id": "ac04e390-ba88-4d42-bdc0-4fb482182cf4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "238395a5-7a9b-43d0-affb-9b7292686958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70cfe7b-d761-44d4-9fa1-7753ab874a6a",
        "cursor": {
          "ref": "002c921b-4694-4ecb-99d3-df9fc4ae1ff5",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "19f50201-6dee-4f9d-957c-0bfd9dd9c45d"
        },
        "item": {
          "id": "e70cfe7b-d761-44d4-9fa1-7753ab874a6a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e9c39abe-0345-46e2-9044-824bd6a38040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a494477e-d756-4640-aa35-4f5b0d5ac797",
        "cursor": {
          "ref": "bb06f23f-8a8e-424d-bc4b-09fe20adfe34",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "228c74cc-7811-4ef8-a44b-779f86a548a7"
        },
        "item": {
          "id": "a494477e-d756-4640-aa35-4f5b0d5ac797",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "08f50d50-afd2-45bf-8357-e5bc4fa22c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a427644-1a73-4b79-8332-30bfedc0551d",
        "cursor": {
          "ref": "eb00bfc2-2636-4489-b4f2-c86ef0121dd5",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1221f035-9b09-46b6-bcc9-1252907ae553"
        },
        "item": {
          "id": "6a427644-1a73-4b79-8332-30bfedc0551d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c5fa66d5-96dd-4265-9072-440c620e403a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faab82dc-9953-4271-96ce-b47f8e530a6b",
        "cursor": {
          "ref": "f7217b66-06d9-46ab-8f3c-64d9307c740f",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "753cc4a4-9ed3-4e3b-97dd-ecbc00ff3257"
        },
        "item": {
          "id": "faab82dc-9953-4271-96ce-b47f8e530a6b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e1bfe6f7-a407-49f6-ad26-c1c89dad6511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702fd197-33bc-4bee-b480-e5cc50533784",
        "cursor": {
          "ref": "aa5abd90-ce53-4190-9478-c947121a0b34",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2bcc365a-497f-4baa-8c59-6d204b257a19"
        },
        "item": {
          "id": "702fd197-33bc-4bee-b480-e5cc50533784",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2d34dcbf-f909-476e-b580-b24c535f0da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2c3c35-6f83-45a9-bbcd-d7ed68fa6f4c",
        "cursor": {
          "ref": "79473c1b-d93d-49f9-8933-a8d10f214f59",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4352bdfc-911f-487a-a237-4414e8aa8eb5"
        },
        "item": {
          "id": "9f2c3c35-6f83-45a9-bbcd-d7ed68fa6f4c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dd392be2-416b-4ec3-9a80-79b227054ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a49fd3-553b-4bee-87ab-404e73d521ca",
        "cursor": {
          "ref": "bc3362d5-79b6-4abf-877b-96a088a44a98",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0290c9ff-71cd-42a9-ae16-8f4757522e9d"
        },
        "item": {
          "id": "33a49fd3-553b-4bee-87ab-404e73d521ca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "967dc564-ee66-4c6d-b73e-c98f8747412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913662c8-e323-423c-a171-255b8a108d9d",
        "cursor": {
          "ref": "42760ad4-aeaf-47f7-b136-7bd8a71e6b3c",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c2a5d049-e800-4c6b-80d5-a464aab6c7f9"
        },
        "item": {
          "id": "913662c8-e323-423c-a171-255b8a108d9d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ae547774-e867-4743-b689-828cdee54f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d7c12e-24a9-429e-882e-6e2d621584e3",
        "cursor": {
          "ref": "a0f6e5a7-e3a4-4234-a123-b3afa9dee717",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3c056804-2fdb-4909-a6b8-bb30b28cb09a"
        },
        "item": {
          "id": "c3d7c12e-24a9-429e-882e-6e2d621584e3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "09c22142-3868-4fcc-a607-b2bb9e126dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14c33d0-3d0a-488a-b56c-d85f547126fb",
        "cursor": {
          "ref": "9ea4a88c-c8c7-409d-9dea-cdb43b90044f",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3583feaa-cbd6-4507-b852-a78241278030"
        },
        "item": {
          "id": "c14c33d0-3d0a-488a-b56c-d85f547126fb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9ff50190-5b55-4bd8-a04d-66653237bb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2424027-7b4f-4a6d-8d0e-2d44492a1d70",
        "cursor": {
          "ref": "98bb28da-5454-459c-b55c-976092e92739",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "54a5e7b5-671f-44ad-92cb-f8890b86a385"
        },
        "item": {
          "id": "a2424027-7b4f-4a6d-8d0e-2d44492a1d70",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c41a2145-5c77-453c-9a00-5924e3054f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73bd34c-e232-45c0-9781-43b31cef3223",
        "cursor": {
          "ref": "c0dbd82f-c961-4e9b-88d5-d57cbeafeeeb",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "35589982-5a62-40ba-9986-622abcec49bd"
        },
        "item": {
          "id": "c73bd34c-e232-45c0-9781-43b31cef3223",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2c725429-39b9-4c14-a832-2eb485d0b647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e9cd72-7fd5-4d97-a4c4-63b451243843",
        "cursor": {
          "ref": "a37670c8-56a9-4679-9e69-305ce6ab5e07",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ba509703-03cd-41c9-8b40-6b9f1097d9c8"
        },
        "item": {
          "id": "a8e9cd72-7fd5-4d97-a4c4-63b451243843",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "95dfc57e-1df3-4189-a431-33e8b5503a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ac88f5-729a-4eb4-8629-5eb160a10e9b",
        "cursor": {
          "ref": "cb8eb2ba-76fd-4f3e-be3c-4776dae0fbfe",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "14e46ce9-1d3e-433d-8fe3-ca0822054c60"
        },
        "item": {
          "id": "f3ac88f5-729a-4eb4-8629-5eb160a10e9b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ee05ab34-47d3-407a-bb52-0d52ebc16df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce63f279-f247-4814-90d5-79ffd3e437b1",
        "cursor": {
          "ref": "a2209161-11a4-41e4-b1d1-058ce313405f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b3333d21-d552-4ac5-9dd0-5725dff609b4"
        },
        "item": {
          "id": "ce63f279-f247-4814-90d5-79ffd3e437b1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eee89fce-dd1f-45b8-b7b3-f10b8b80152c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42ea6e3-03d0-462a-9dd3-f1b49a8256be",
        "cursor": {
          "ref": "5bab061d-9ef2-4314-bad6-7c2e62288331",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "53e9e71a-4d58-4098-b73a-6a0a252074ef"
        },
        "item": {
          "id": "c42ea6e3-03d0-462a-9dd3-f1b49a8256be",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1f543bfb-1d99-4114-8258-6c6985585ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a527109d-5c11-426b-8d0d-39c38fe6f2be",
        "cursor": {
          "ref": "b5a51683-bdf3-4c27-ba0a-46bbbbd6d609",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "53c15108-778b-4216-a6e4-4ffe8f613cf8"
        },
        "item": {
          "id": "a527109d-5c11-426b-8d0d-39c38fe6f2be",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6078e9a9-9038-47c4-bd6f-0f5e308b0138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7590db40-bde6-4176-9a5a-f5fe01f725db",
        "cursor": {
          "ref": "0394d2dd-4d5a-4150-91ea-3cd6790fed08",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6570bdb5-287e-4c95-93da-bd2187fd0bf5"
        },
        "item": {
          "id": "7590db40-bde6-4176-9a5a-f5fe01f725db",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4537061a-5037-44d2-88d2-5de4bff7e415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343b5139-d18d-48ee-aeff-2b1a38d2ca03",
        "cursor": {
          "ref": "383ef7f9-f850-4848-afc2-bd86acc51d16",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "33cc7677-f8b1-4012-9913-41de41db32bb"
        },
        "item": {
          "id": "343b5139-d18d-48ee-aeff-2b1a38d2ca03",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5f930de0-eaa3-45e0-98db-467e04ef44ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62594b91-9c11-407a-8134-d44666c6249b",
        "cursor": {
          "ref": "20f54ece-61e2-47e6-bf74-0d5abdec7ea3",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b7a1f0d0-9d81-471b-b133-c67013edc7df"
        },
        "item": {
          "id": "62594b91-9c11-407a-8134-d44666c6249b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1a73e2d0-5de1-47c2-9f98-c1c5344f3ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896c5c4c-758a-4afe-b9e0-2a4e03185faf",
        "cursor": {
          "ref": "86a7cdf9-bad3-4b1f-94db-7e8ca6fdf99b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2b6ea396-bf65-448e-b547-881c6193fc29"
        },
        "item": {
          "id": "896c5c4c-758a-4afe-b9e0-2a4e03185faf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3ae8dc2f-2849-489c-8027-56258a91752b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5f6395-40ce-4f5b-a5e0-c541c2753a61",
        "cursor": {
          "ref": "6f56f262-e709-433f-91fa-6a704d514d6d",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c600761d-ae72-462d-912f-eba6095318c4"
        },
        "item": {
          "id": "0a5f6395-40ce-4f5b-a5e0-c541c2753a61",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "98a94b58-af94-47e8-b902-ac035ef8344d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4455b3-5635-47e8-b781-c699eca29c58",
        "cursor": {
          "ref": "caaa3241-33dc-4010-8533-8e59bb3e0c25",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d486519f-3f92-49fe-bbd0-33d6aaf12c21"
        },
        "item": {
          "id": "3c4455b3-5635-47e8-b781-c699eca29c58",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1afcb303-649c-4364-a887-b4d3067efb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94060b25-989c-4d73-9a59-4d2d81255ddc",
        "cursor": {
          "ref": "293e0d6e-4a7a-4d17-96ef-31a53a7ee7f9",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5bff0219-e769-4e59-b9d1-fff7f7cc74dd"
        },
        "item": {
          "id": "94060b25-989c-4d73-9a59-4d2d81255ddc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "341293a2-93b0-4854-8713-7c27dbb43fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63a0f30-77b2-4093-bff2-00b7a8f54897",
        "cursor": {
          "ref": "3bdc5a7c-b01c-4b50-bc57-c6aa547f8838",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6648faa4-69f8-4db5-8b94-c4606019e5a3"
        },
        "item": {
          "id": "a63a0f30-77b2-4093-bff2-00b7a8f54897",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4c92676e-9f5e-4941-9d1c-2e13e4b4a933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fb4eb3-4b94-4a08-a00d-cf229a9ca214",
        "cursor": {
          "ref": "aa2898a5-ffd1-4432-81da-645ea46a3b63",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0a1dcec1-cfe3-4102-a8e6-63e6f87aca22"
        },
        "item": {
          "id": "f3fb4eb3-4b94-4a08-a00d-cf229a9ca214",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2dd1bc07-b1fe-4209-af23-bdfd300372c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85155924-347b-4651-99c7-7c6e6db8ffd0",
        "cursor": {
          "ref": "2f846556-da25-40e0-ac20-59ca18a8fe46",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a871462e-69f7-4787-86eb-37396d6a60fd"
        },
        "item": {
          "id": "85155924-347b-4651-99c7-7c6e6db8ffd0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aae58e85-41a0-41c8-b45a-48fed82189d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14def8e8-908c-48f6-9008-80008557abc5",
        "cursor": {
          "ref": "15d43f90-5cb4-4d74-9ad8-9f1d4626e5ba",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7be1d7a7-ec50-4193-b1e8-f837fb245ced"
        },
        "item": {
          "id": "14def8e8-908c-48f6-9008-80008557abc5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6cb0edbf-a537-4cce-bc8b-610dd57efd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492460e1-26ec-4d3c-ab02-9bfa14219ea3",
        "cursor": {
          "ref": "d70b8f92-6b85-4007-b604-817224178f40",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "506f62de-16e0-4903-baa0-b4be1a73f739"
        },
        "item": {
          "id": "492460e1-26ec-4d3c-ab02-9bfa14219ea3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ae54a6e4-ca09-41cc-9179-2b60f6b5a5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9906b9-299c-4845-8337-84a0481c410f",
        "cursor": {
          "ref": "3227aef7-6a3c-4d98-87fe-205b030e12bb",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d61eb4ec-361a-4c8b-8ab7-633bd144e0be"
        },
        "item": {
          "id": "ac9906b9-299c-4845-8337-84a0481c410f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b35943a7-eb08-40d5-aba7-3c62f4f2bd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d9fce8-7483-44a6-92f0-24b3121f954f",
        "cursor": {
          "ref": "a03b6082-8b17-4382-b234-f59a043652e9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "98627b70-2b0a-4ea4-a8a9-b4b267f1bc62"
        },
        "item": {
          "id": "c2d9fce8-7483-44a6-92f0-24b3121f954f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9394232a-e892-4ae9-90fa-8bcf797a4edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae44399-fbbd-4dcd-a855-39659834dfc7",
        "cursor": {
          "ref": "b876250d-c3e7-4469-8917-acfee0506df6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "253566a4-2aec-495c-8fd2-2b02b99bd547"
        },
        "item": {
          "id": "9ae44399-fbbd-4dcd-a855-39659834dfc7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4655a4fc-7679-4da8-943b-e789a875bfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b831d643-b8f7-43ab-8607-43db6edbdc51",
        "cursor": {
          "ref": "d10f8328-1584-4ee1-86d9-50b6ab337bc8",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "14546e46-d5af-4220-9543-d94027368d25"
        },
        "item": {
          "id": "b831d643-b8f7-43ab-8607-43db6edbdc51",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "aaac5000-4bd8-4e0b-bdcc-50b9c67d94ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0294120-d930-4a5d-b329-b6e0fbe05165",
        "cursor": {
          "ref": "b03395ac-7359-476a-8eaf-b06e7f6299b4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ef6ea986-c932-45c1-b1b0-3207d4246d68"
        },
        "item": {
          "id": "c0294120-d930-4a5d-b329-b6e0fbe05165",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5cfdfbd9-5502-4ae9-a753-f40f843ca641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb085d0-e96e-472f-b1d6-f4107a628517",
        "cursor": {
          "ref": "dea188c4-85be-4b55-ad0a-f4aee93fb4bf",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b46a33d9-6c8e-4849-b9e2-4284ce0bc6bb"
        },
        "item": {
          "id": "9cb085d0-e96e-472f-b1d6-f4107a628517",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "361acbc9-20cb-4532-8057-62b62a3c5fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca5f065-597d-4806-8fad-fcf685f1c89a",
        "cursor": {
          "ref": "613486bc-4888-47f7-b769-c98e3d7c529f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0903bc9e-dd20-4f94-8409-207f28fcbf26"
        },
        "item": {
          "id": "bca5f065-597d-4806-8fad-fcf685f1c89a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c844d595-85db-485e-ae48-e322a34e05ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1121b721-7a17-438e-80fe-f89b3a2668f1",
        "cursor": {
          "ref": "4b6ec66d-4f3c-4a08-bd21-fd13560312a6",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1c23f2e1-d486-40ed-bc6f-3120c7d102a7"
        },
        "item": {
          "id": "1121b721-7a17-438e-80fe-f89b3a2668f1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c0d37468-ecde-4f7c-b52a-eabda80cdeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b71bad9-f2a6-47e4-890a-23690c43cee3",
        "cursor": {
          "ref": "d5e22125-0cb5-4c8c-b3c2-4b0672f80a0b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7a88368a-0e06-4b01-9f66-33bc09ab02e4"
        },
        "item": {
          "id": "9b71bad9-f2a6-47e4-890a-23690c43cee3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "932df95e-0bc8-4279-a323-175bff8f1b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f76774-e2ea-44e8-9cd2-8983ec949754",
        "cursor": {
          "ref": "e5690450-4b32-4820-9789-e1b3ec164c2d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4c0b1f82-e602-4341-869d-d0ea2a143fca"
        },
        "item": {
          "id": "18f76774-e2ea-44e8-9cd2-8983ec949754",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "13e677d3-8f41-4220-a574-989536cb3cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5371acdd-e432-4ff6-8585-b8d58ee105c8",
        "cursor": {
          "ref": "93b60b30-3fe2-4f32-b22c-37a2bb2535b3",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5ad5939a-57bc-4c22-acf6-861728653478"
        },
        "item": {
          "id": "5371acdd-e432-4ff6-8585-b8d58ee105c8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6e698d43-eb46-47ec-9404-30e9714b1f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d68810e-9013-4b3a-b57c-4fdea315334b",
        "cursor": {
          "ref": "84b364bc-be71-4325-926c-72ec7a7ad25a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f021fca5-4b15-4897-ac14-5706735a09a7"
        },
        "item": {
          "id": "0d68810e-9013-4b3a-b57c-4fdea315334b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "967ca646-ddaf-49c9-8e20-df42851923a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec13ee33-c0fb-48f1-953d-7248bfdfc577",
        "cursor": {
          "ref": "655814eb-9f4c-4bf0-b144-0811f4c7d585",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4e564910-54f9-48ba-b8d9-37b79df4a50c"
        },
        "item": {
          "id": "ec13ee33-c0fb-48f1-953d-7248bfdfc577",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9923d8b5-7fe7-4f15-a3e6-8605aab705cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9dd231-f3a9-4501-8192-2220254501e9",
        "cursor": {
          "ref": "e38d9461-fbbf-4f89-83e9-00567a1f74d7",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bcf1f8b2-d7ce-4115-8b45-8f8f6cfb2c9e"
        },
        "item": {
          "id": "5d9dd231-f3a9-4501-8192-2220254501e9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d1683af4-097d-4f2c-accb-5790f42cfc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f51c52f-a4c2-4331-9191-a1536a567028",
        "cursor": {
          "ref": "6458f1cd-3703-4de8-8573-541cf850836f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e0444639-fb8c-4778-bb7a-83759b91c36a"
        },
        "item": {
          "id": "2f51c52f-a4c2-4331-9191-a1536a567028",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ea11b704-3865-4032-b925-7a66a8e68fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85676676-22fd-48cb-95af-d441e56f9e1a",
        "cursor": {
          "ref": "ea9c501c-1578-4367-9c51-830c113d4533",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "48b7e19e-0425-4f2d-8218-54feab700433"
        },
        "item": {
          "id": "85676676-22fd-48cb-95af-d441e56f9e1a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b6626466-3899-4caf-a0c6-087c91dbb93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274c61d3-017e-402f-a162-7b0a47ed0c05",
        "cursor": {
          "ref": "0e5ef417-6725-4f5e-b163-d571fa5a4e68",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ce3a427e-60c2-4b08-9d47-08b7c4dd1255"
        },
        "item": {
          "id": "274c61d3-017e-402f-a162-7b0a47ed0c05",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0c636e86-cc51-49ee-a516-080b758245b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75865b1-3130-4b23-a34a-d74cf61b7504",
        "cursor": {
          "ref": "d9d13538-6118-45c6-83d8-f8500d9e8cf6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "34d4d0fd-f39f-4af7-bb51-4bd4fddff664"
        },
        "item": {
          "id": "d75865b1-3130-4b23-a34a-d74cf61b7504",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "164890be-62e3-4ecf-b1c4-12bf49e77e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa53ebd-89c3-4447-8389-1e58330a0c36",
        "cursor": {
          "ref": "f972ebad-8928-40ca-a84b-3a4d616c2e18",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "82b0ad83-af3a-4b9e-a344-b0829214323b"
        },
        "item": {
          "id": "1aa53ebd-89c3-4447-8389-1e58330a0c36",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b24ee4bf-f1de-4503-b256-958aa9665db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14235839-45d8-44f8-8ff4-51b3dca87f5a",
        "cursor": {
          "ref": "92a4501b-59d9-4da7-bd6f-ed4fdc089ff6",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "42ba4c34-ff97-4638-acf6-7c81ccb76e02"
        },
        "item": {
          "id": "14235839-45d8-44f8-8ff4-51b3dca87f5a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0a78594c-0990-462e-8b38-803b27b37566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5a576d-04ab-45f9-92ec-769abc4df26f",
        "cursor": {
          "ref": "4e0a64b8-1af4-4b7b-b630-7c5ae9cd4862",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d334ee02-1c0a-4b89-85ae-ca7ca7fc7fcc"
        },
        "item": {
          "id": "3b5a576d-04ab-45f9-92ec-769abc4df26f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "94c40410-7bd8-4774-9ce6-78306fe18fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d9b910-3890-49e7-b2a7-0a732300c703",
        "cursor": {
          "ref": "766e8cd5-25dc-40f1-9153-3ffe77626adb",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bb8237fe-eb63-43aa-858a-15605da6b4db"
        },
        "item": {
          "id": "91d9b910-3890-49e7-b2a7-0a732300c703",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "acef37a4-a6a9-45c6-8427-4c2f6b2e6d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0976ff4f-6e13-4410-a55b-4a3686e0b7c3",
        "cursor": {
          "ref": "ef4f4abe-cd0b-4d25-a8f1-75e296d136e8",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "421b7d86-38b7-4d53-9c08-2c1fae0a7130"
        },
        "item": {
          "id": "0976ff4f-6e13-4410-a55b-4a3686e0b7c3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3499e2d8-f6d3-4852-8708-0f678a416210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d55a93-aa58-421f-808c-706d4112d846",
        "cursor": {
          "ref": "2fc74afe-470a-4697-8d5c-8547f9c43c21",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c794a052-4d41-4eab-9ee4-7591c8cc07b7"
        },
        "item": {
          "id": "a7d55a93-aa58-421f-808c-706d4112d846",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cae3e00c-b47b-4348-9c9f-d9269a900ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9010f3-7ce7-4c11-b684-6091c8a121cd",
        "cursor": {
          "ref": "23f5c49a-4096-46cb-8608-3bc19b0a8094",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "79740158-5383-44eb-b736-de32bb60c0f4"
        },
        "item": {
          "id": "0e9010f3-7ce7-4c11-b684-6091c8a121cd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "85a3e156-75e0-4e89-9444-fe0c9a2e38bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ade0ce7-e7a3-42c1-a339-17c195fddbfc",
        "cursor": {
          "ref": "de3efa40-c674-4603-973c-b763f3bba2ce",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "68638f94-c8c7-43b1-ac00-2f0c8c73d4d7"
        },
        "item": {
          "id": "5ade0ce7-e7a3-42c1-a339-17c195fddbfc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0f5ae72e-3734-4ddd-af98-b5a684ce0f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d227689-8205-46c5-999a-ead57aa656ed",
        "cursor": {
          "ref": "22fa387f-9f3a-4c8c-b242-d7ae528b5039",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cc9a7d8d-08ec-4e55-ad0c-1c0bf5dd5431"
        },
        "item": {
          "id": "6d227689-8205-46c5-999a-ead57aa656ed",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8ab2025b-045e-431c-9b2a-de309ae24086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf0ddaf-2c06-4a0a-a3de-58b8f084dc83",
        "cursor": {
          "ref": "d4527fcf-99d3-4ee2-a207-eb128becf967",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b795c833-7870-477c-aeec-b1ca5dddc3b1"
        },
        "item": {
          "id": "8cf0ddaf-2c06-4a0a-a3de-58b8f084dc83",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3802f845-50eb-4b48-ac9d-079ed725f9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528b13ed-8f67-43c4-9b97-cbd526bdf2bd",
        "cursor": {
          "ref": "c5b0d3b5-cadb-4069-9a8a-f37b89ff5b76",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "582fcd5e-beb7-49a0-81a7-daabcb912234"
        },
        "item": {
          "id": "528b13ed-8f67-43c4-9b97-cbd526bdf2bd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eb145877-6aec-4580-bba4-d460969c1037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33fec7c-bb9a-4429-bd97-eeddc499e85d",
        "cursor": {
          "ref": "73b71a3b-6a0c-4458-81ac-ce488f183f1b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2fd007b8-c69c-467a-94ee-0478c38df3f0"
        },
        "item": {
          "id": "e33fec7c-bb9a-4429-bd97-eeddc499e85d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d2312c04-cb2a-441c-9efb-bc81b0dcd57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7f8744-45ee-44ee-adfe-60e80628ac6a",
        "cursor": {
          "ref": "f62ac5c0-32f0-43e1-ab82-9ad3f9b3adbf",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c9fb8662-6a98-4fc0-ad0b-2ab5180aad43"
        },
        "item": {
          "id": "2f7f8744-45ee-44ee-adfe-60e80628ac6a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ec1faf36-16ea-44a1-8796-5f3190011c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731fec39-b18f-4b6a-aa06-216252315b17",
        "cursor": {
          "ref": "799f2eca-b44e-4f6c-818a-362166a4248f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c9ec619c-3516-4c6c-858c-d6fbd253fcac"
        },
        "item": {
          "id": "731fec39-b18f-4b6a-aa06-216252315b17",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8e39843d-4b10-4f68-adf7-d89228078e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d11698-fe9a-403b-a5e1-8f1c2fa1b079",
        "cursor": {
          "ref": "d3e0d94a-ec2d-437d-9d68-b7fbebcb8796",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5b90a14c-88c9-41ac-8567-6c58d99429d2"
        },
        "item": {
          "id": "71d11698-fe9a-403b-a5e1-8f1c2fa1b079",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4b593480-e2e7-4e9e-9aec-124d3c8800b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c272cb6a-498c-4e96-b6d0-17914f7840c0",
        "cursor": {
          "ref": "dfb64d08-d95f-4b05-8bc5-c51bad654411",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1ec38aa8-dc11-4e9e-ae5c-1fab1ceb8b58"
        },
        "item": {
          "id": "c272cb6a-498c-4e96-b6d0-17914f7840c0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "161abb80-2672-4f33-b584-1cae18d98c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba32700-1a89-4d24-ba53-a2dd602ef89f",
        "cursor": {
          "ref": "b5b7ec36-6687-4663-a332-2f9e6397042c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "951e0e7d-ade6-4e32-b73b-5cb9f4bdfc53"
        },
        "item": {
          "id": "0ba32700-1a89-4d24-ba53-a2dd602ef89f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ecc5675f-180f-4ebf-b481-5c8376b47bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618324c7-5823-4e70-aa18-9d38ee012358",
        "cursor": {
          "ref": "f8ab055c-e914-41e5-84fb-a5552a808af4",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2278314c-9ae2-4ea5-a95f-69d3e61704f9"
        },
        "item": {
          "id": "618324c7-5823-4e70-aa18-9d38ee012358",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "be090a3d-aade-45fa-bcc8-c7c596e6eaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6cf3f0-635e-4c4d-9ffc-289989ee75eb",
        "cursor": {
          "ref": "10d0aa64-d963-4e2a-a0b8-12027161e1eb",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f4e3d198-330e-422b-ab34-7aae38a474e6"
        },
        "item": {
          "id": "ce6cf3f0-635e-4c4d-9ffc-289989ee75eb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "494c42d7-5079-47ff-a295-1a3dfceb2cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29f91fd-c6ae-49d2-b32a-43ac6986527d",
        "cursor": {
          "ref": "694737de-a6de-4e58-b82f-bf40d484e6ac",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "27969d0d-ef49-4c23-afe6-ec8f783e835d"
        },
        "item": {
          "id": "f29f91fd-c6ae-49d2-b32a-43ac6986527d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8820fcc0-2308-4553-8a5a-3d0ef88ed4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9d8ea4-48bf-4000-b12d-cdd8ba4e9e97",
        "cursor": {
          "ref": "944ed42e-8e31-44a5-9abc-bbcae1f9cb3d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3deace8f-f1ea-4b36-aa56-c0e6fc4194f7"
        },
        "item": {
          "id": "4b9d8ea4-48bf-4000-b12d-cdd8ba4e9e97",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "07fce267-c8b5-4246-a9d0-00644ef31bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f347ba07-cacb-4af9-8570-f044f3510de6",
        "cursor": {
          "ref": "cbe91bf2-8a91-46e8-8e0a-87a427b1c81a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "23c20a58-38e4-4e63-baa7-9a1d036a6562"
        },
        "item": {
          "id": "f347ba07-cacb-4af9-8570-f044f3510de6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b4fe2251-8306-4e73-affa-48548ae109de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f50b455-e6df-4e8e-b2d5-7f4bffddb46c",
        "cursor": {
          "ref": "e3ce2c8a-c4cc-4815-9765-937df4dd7db2",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "65d1b0b6-339b-4dbd-b557-235bc1cda7e7"
        },
        "item": {
          "id": "5f50b455-e6df-4e8e-b2d5-7f4bffddb46c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6e8aee9c-9766-41b5-b328-e9c50161f0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ee13f1-5805-44ba-b34a-9b1a6bdc64e7",
        "cursor": {
          "ref": "2629360a-fbaa-4666-9f55-70e3bdd27238",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d1a73ab5-6e0c-4fae-ab58-b3c24d017181"
        },
        "item": {
          "id": "54ee13f1-5805-44ba-b34a-9b1a6bdc64e7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "214fbf9d-6696-4449-87cc-88b630d6c505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dadad97-ef1c-4140-8fd0-aa801a1f75b4",
        "cursor": {
          "ref": "07aa5a04-b56e-459a-b208-c69ea85df3fc",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "863b5745-9faf-4b12-ad22-e016d2c0dfdd"
        },
        "item": {
          "id": "8dadad97-ef1c-4140-8fd0-aa801a1f75b4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "684810bb-8678-476b-a2db-494bd9d2e4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9580fcc9-772a-4136-ae26-1d5b84f67d13",
        "cursor": {
          "ref": "12f46f46-ae61-453f-838a-5b3eece25aeb",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e79da151-2092-45f9-a3a9-8bd7621059f8"
        },
        "item": {
          "id": "9580fcc9-772a-4136-ae26-1d5b84f67d13",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e6e56fe8-3f64-4524-aa0c-7f32fd20f0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6282ec-70c3-4006-937a-db84f8e9e3a0",
        "cursor": {
          "ref": "b3c3cccf-0209-4ffd-bc0b-88dedc5322f1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "99734839-f0d1-4d4f-a123-62855829aa68"
        },
        "item": {
          "id": "8c6282ec-70c3-4006-937a-db84f8e9e3a0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "08002fcd-2329-41c4-9dc9-d51365f2c8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b660387-bdc9-45a4-878b-359e0f7ecf4e",
        "cursor": {
          "ref": "e73ef52b-29fd-49a0-9a85-dac79c98cbda",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5c9b1dd7-3cdb-4303-ba08-b0bc52c1727a"
        },
        "item": {
          "id": "8b660387-bdc9-45a4-878b-359e0f7ecf4e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1694fd69-75c0-4114-a192-1a74745ec2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0868dc-0fa9-4866-b1da-d5445dece8aa",
        "cursor": {
          "ref": "19a4e0f3-6f05-4470-8bb1-b6f2d9b26c8f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "51d1c706-2753-4652-a2bc-5d08ca01efeb"
        },
        "item": {
          "id": "1e0868dc-0fa9-4866-b1da-d5445dece8aa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b9a4d5a8-9993-442a-a22a-6d8528166230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d88f3f1-ee12-4520-85d3-82d070b018d6",
        "cursor": {
          "ref": "d7122976-19c5-4b06-96da-34d2e0e49dd0",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "51d7e071-a9e5-46c2-a9fc-b1c77cb82205"
        },
        "item": {
          "id": "3d88f3f1-ee12-4520-85d3-82d070b018d6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a2f7eb8e-64a4-40d9-b975-174a0b09d071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30e9c8c-7f48-42f1-acad-83d68f86c74e",
        "cursor": {
          "ref": "ce4d05ef-01ca-4341-91eb-7866f6fbcfdb",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "644d43ee-be0a-49df-a04d-f00b3fd28762"
        },
        "item": {
          "id": "a30e9c8c-7f48-42f1-acad-83d68f86c74e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "411b2679-9f76-4250-b686-8791bba7b599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1e046d-868c-4e11-8331-33a6ba7c10a2",
        "cursor": {
          "ref": "d927ac03-1e9e-47a0-97f9-874216f7ec94",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3108d2ee-0fcb-4c3c-878a-b958d5b6e721"
        },
        "item": {
          "id": "df1e046d-868c-4e11-8331-33a6ba7c10a2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9762dc2b-4c6d-4319-9238-813bd9b03f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bf5aa0-66a2-4a46-b092-51f53c65b7b3",
        "cursor": {
          "ref": "5f97082e-c350-4ad8-9f1c-7493453dff53",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fb726534-df7a-43cb-a8f3-117a2a9df14c"
        },
        "item": {
          "id": "03bf5aa0-66a2-4a46-b092-51f53c65b7b3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c9ef87e6-8836-4b34-aa44-588fbb5f4e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297fe90c-5234-4337-92b3-97731e9dc802",
        "cursor": {
          "ref": "6bad597c-a338-4078-86d9-9fd824690f04",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ab8acf16-d30c-48f8-bec7-f5f5816fba0d"
        },
        "item": {
          "id": "297fe90c-5234-4337-92b3-97731e9dc802",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f975d528-ba44-4a4d-b511-72d92d0386cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548c9531-0702-4eab-acd9-7deb1c0a5c8c",
        "cursor": {
          "ref": "500e7540-13db-45e8-8888-c4084346aa40",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "653da5e1-5f22-4242-b38d-58a02484ca7e"
        },
        "item": {
          "id": "548c9531-0702-4eab-acd9-7deb1c0a5c8c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0b9f242b-0f33-497f-aa96-0d1c8b71a1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a410c307-dfb6-4240-b8b7-6519f915ec4a",
        "cursor": {
          "ref": "6bd69531-010b-4ab8-8fc9-49c6d52bdb5c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "43d98e1a-2dc4-49fe-9830-4d80f165e856"
        },
        "item": {
          "id": "a410c307-dfb6-4240-b8b7-6519f915ec4a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f245f422-ed51-46fa-b066-0b2eadbca1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764e04d6-8328-474e-8f4b-3e84f1535234",
        "cursor": {
          "ref": "6d9daca7-7fd1-4bbf-ac0b-4926585e1bda",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5622672f-6f57-4611-8ebc-c2aaa9f8c235"
        },
        "item": {
          "id": "764e04d6-8328-474e-8f4b-3e84f1535234",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6971c567-0431-4e61-8673-b24329e46451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c77f83-4ff1-46de-8a00-b269984a87f8",
        "cursor": {
          "ref": "a78a74db-a58d-4741-9284-123c2eeddb1e",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "50d55f1b-f0a9-4154-ac2d-860949b15e78"
        },
        "item": {
          "id": "d1c77f83-4ff1-46de-8a00-b269984a87f8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4cb4ef71-eaf6-4c1f-9641-f980c49b7d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e30741-5bce-4b3e-966b-5fa062e5ce0d",
        "cursor": {
          "ref": "abee5fc0-7063-4fa3-8ea6-ce45c7800153",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a6156a78-b1f6-4e59-b037-77accd2cd976"
        },
        "item": {
          "id": "17e30741-5bce-4b3e-966b-5fa062e5ce0d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "07e77dc6-3bcb-4ba6-9904-f4aff1b1d529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f70174-b82a-42fd-a2b4-a7424735dbfd",
        "cursor": {
          "ref": "5619b079-2c80-4e23-976a-86387a7d6177",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f3d682dd-4307-4335-a8b5-ec8022c88abf"
        },
        "item": {
          "id": "d1f70174-b82a-42fd-a2b4-a7424735dbfd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "30892191-be5c-4a57-a33d-f18e82bdab86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d915c4df-5d76-4203-ac6c-0bec480de903",
        "cursor": {
          "ref": "c1dae237-6d56-4ad4-a4cb-0c8d0ca520c9",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "28de5d62-2e65-4fa7-b2a3-61dd3e8bed07"
        },
        "item": {
          "id": "d915c4df-5d76-4203-ac6c-0bec480de903",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a8eaa7da-28d0-4425-a7bf-98f6e3437ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76686cc4-34c1-4a45-baf9-ef0f4c778015",
        "cursor": {
          "ref": "5ec5fae9-9dde-420b-9f62-2e02771bf617",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4a988d9c-602a-4df5-8583-29370782a8c2"
        },
        "item": {
          "id": "76686cc4-34c1-4a45-baf9-ef0f4c778015",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "38fe8c94-c234-4000-8570-7837d4a3d5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02926d4-81f8-43a9-bbd2-be1aad91dd4f",
        "cursor": {
          "ref": "f9c0271b-12be-4367-8812-bd2691507294",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4cca0e26-9481-4d64-9ef9-6e69b7739c1c"
        },
        "item": {
          "id": "b02926d4-81f8-43a9-bbd2-be1aad91dd4f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cc775ede-4226-4fbf-8a1a-12ed78ac9d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7405e0-2e72-4a4a-8bab-3e4555eb44ca",
        "cursor": {
          "ref": "7010e1ca-043b-409a-a808-b0931a617e62",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a56800a7-ee6d-4aeb-9a79-6836dc51bedc"
        },
        "item": {
          "id": "eb7405e0-2e72-4a4a-8bab-3e4555eb44ca",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2eeb9c27-463f-410d-8e92-008d9b73c2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65bbfde-1762-411e-af41-3eeeeb7dc4f7",
        "cursor": {
          "ref": "7e8798f7-347c-4dc1-9d86-1c83bf86f8e0",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9c991c59-1a41-4969-9f2d-86b7cbdfb83b"
        },
        "item": {
          "id": "f65bbfde-1762-411e-af41-3eeeeb7dc4f7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "49c0de28-02f4-48e7-8794-5da1699f9d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a453fb50-dacb-4c62-9dd8-5b92ef0b171b",
        "cursor": {
          "ref": "5250143d-9532-4c91-93df-e0d555b07275",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ad14e91a-f3ab-445b-8956-3797530d0d33"
        },
        "item": {
          "id": "a453fb50-dacb-4c62-9dd8-5b92ef0b171b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4239e2bb-66b1-474d-8087-932401bbed33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73223c14-8b01-48d4-afd8-b36404f37aac",
        "cursor": {
          "ref": "82185425-1fc9-44a7-8e57-4c43d5d4a376",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "496bc978-9f75-43da-aa0e-2449585aca78"
        },
        "item": {
          "id": "73223c14-8b01-48d4-afd8-b36404f37aac",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "69cac807-c6b8-4c24-bfbb-a9dfbe0ac7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ab7511-3a8c-4302-823b-9719fb6b97da",
        "cursor": {
          "ref": "093e554f-ac05-4f37-ab07-fb9e59455fff",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f977b647-5042-45fb-a910-262c63a9916c"
        },
        "item": {
          "id": "66ab7511-3a8c-4302-823b-9719fb6b97da",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "754b1968-e5fe-4d1d-b0a2-1c78056b222e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a82ef3-a898-49c7-9604-e9dead6da9c4",
        "cursor": {
          "ref": "f5c40396-083c-4c47-a023-e874b19511b5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1299ab93-0047-48b6-bd27-3565fd7388b3"
        },
        "item": {
          "id": "56a82ef3-a898-49c7-9604-e9dead6da9c4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c0371cee-92b6-4470-a571-441341992a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e772da-209b-41bb-8069-739ca56ec57a",
        "cursor": {
          "ref": "b7f51bb4-dd8f-4b12-9ef4-0f7b362688f7",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "16471341-4669-42c2-8e91-0234dcc987d0"
        },
        "item": {
          "id": "f7e772da-209b-41bb-8069-739ca56ec57a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "320e0282-ee07-45c3-8937-83565b156646",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f60a11f-3a88-4061-b518-c9041d2c2d7d",
        "cursor": {
          "ref": "90839159-75a9-4634-ba52-464ce5bb48ed",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e13a2286-587e-4eb4-ae45-c7d8c816fcca"
        },
        "item": {
          "id": "6f60a11f-3a88-4061-b518-c9041d2c2d7d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "020d76fc-37ce-4052-9f35-c4fb95ba5478",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "311fcb43-f02b-469f-a392-8883947e33e2",
        "cursor": {
          "ref": "b91d64db-c75a-4792-af7d-549368cf5139",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5cacaed8-96f4-4b05-8b22-8716b5846755"
        },
        "item": {
          "id": "311fcb43-f02b-469f-a392-8883947e33e2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9361e8ef-a6d9-4d94-b2c4-52db089d053a",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "442779ae-8690-4361-961c-6823855f253c",
        "cursor": {
          "ref": "4d0a54ec-50d3-423d-b062-3ee7cdfde325",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d098a457-2b38-4db0-b457-5d711928ce70"
        },
        "item": {
          "id": "442779ae-8690-4361-961c-6823855f253c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f4f7eb66-35a7-400e-9f43-45b00bcd70e8",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d007271d-b71d-4d81-8534-cabd7cfdf55e",
        "cursor": {
          "ref": "48752dc9-c06c-4066-93bf-cd13cf87429a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d4d4d15f-19da-45f4-abb6-1c2cb0ab5ae7"
        },
        "item": {
          "id": "d007271d-b71d-4d81-8534-cabd7cfdf55e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7003a982-6471-4a64-8917-aa1831a0a38a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d007271d-b71d-4d81-8534-cabd7cfdf55e",
        "cursor": {
          "ref": "48752dc9-c06c-4066-93bf-cd13cf87429a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d4d4d15f-19da-45f4-abb6-1c2cb0ab5ae7"
        },
        "item": {
          "id": "d007271d-b71d-4d81-8534-cabd7cfdf55e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7003a982-6471-4a64-8917-aa1831a0a38a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9fe96c-a70c-4a82-8ea7-5141e01eeaf2",
        "cursor": {
          "ref": "a1bf66b5-c685-4144-a429-61321b59a784",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "13c4cdd0-7076-4942-a654-399e641a902f"
        },
        "item": {
          "id": "da9fe96c-a70c-4a82-8ea7-5141e01eeaf2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "caf48737-2d10-4680-9dff-76f43647a95d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66a4c4a-2061-4ffc-92f6-e4907008fa81",
        "cursor": {
          "ref": "42709834-854a-4577-bc81-50d16e989c64",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1eeec770-8867-4ac0-a83a-f5df3c142764"
        },
        "item": {
          "id": "d66a4c4a-2061-4ffc-92f6-e4907008fa81",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0ec52f84-abe6-438f-a7e2-edfb9ba9ea1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}