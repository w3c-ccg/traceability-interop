{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cdaa2a94-1b76-470f-96b8-918c8bdba980",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fc2ccbe8-4c4b-4009-b886-9d891222208e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb17ec3c-a108-495b-b0a8-e6eb8d0c8b28",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "52e0242f-a1fa-40e2-9868-4149aca3d590"
                }
              }
            ]
          },
          {
            "id": "9f2db1ef-897c-4d6e-8f01-49b153b43d00",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a3e1822-beda-451b-9d22-af32e496e9b9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "64bb3ab9-f604-4951-975a-5af3c6867973"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7d09e2e4-38e0-443b-b24e-a031d74d8699",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8c99a399-38c4-4c5b-85f6-1fbf4555dbc0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e60119a2-7557-428f-8954-91d4f4c0cecf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d1dd9e5-789b-4a84-8c30-626a6f9e9761",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa56fa7c-5b2e-4ea9-a0a1-2f2e04c11dae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d16700d3-7cd2-4a15-a333-73d3c2b18989",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "706a6173-9247-4848-bbf8-873c99c89add"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ece0a076-7376-43ee-98a4-adf5d20bbdfa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4472583e-fa03-46c9-ac2e-b378d83d3fa4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03531f90-5acf-463b-83bb-f014b1af8fc9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e29a0c0b-1262-4da3-bed3-dd96d08e9366"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d12d780-59fd-4f1c-b7b5-1c5485a0777f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edb6a790-f899-4823-9d6a-2ad4a8da1e9a"
            }
          }
        ]
      },
      {
        "id": "2d5eb02c-1189-4c37-8283-fbb92fcfb85e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d310d517-9c50-4765-b2d4-e1d8b8417811",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bc477d6-5b47-4dd6-ae6f-3ec345d64778",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "588ff3a7-b49e-4d36-a281-255002dd4f8d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd86df44-2df5-44e0-96c7-4497aace60c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3f82482-a8db-4a84-8c5d-4fd6b775eba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7af19e-4bd1-4b06-8934-10965b619131",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afe4eeb-809c-498b-8185-59f816ef2802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95ff81d8-6245-492e-a26e-833c3d5f38d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3ec75f-96e9-48f6-8b88-b93c7edcb545",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82179bdd-38c0-47df-8e08-550ac530ebd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf590822-be00-4984-8c48-26c486bea975"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a8c9235-fcb1-4eaf-8977-af2fd188993e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2ca9759-1cd3-4e03-87ce-854851e4bb71",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed6aa5e-bcec-44fc-b3be-6eec1d3901f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b00cc13-837f-4379-9adf-8611f65837f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470c2a7a-0f5e-4638-a2f1-4ba598e4e312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09c9c93-eb5f-4c7a-aeca-12e38e51caa4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e2ddb50-c3c8-411d-8c3f-ba455621473b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "948a7095-6be6-4c5b-a501-4c40b7009c18",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82f0d143-d764-4f4f-9848-462167778083",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "14f1c249-0055-49e3-8b25-a28f087ee5c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2c21ec8-02f4-466b-bf61-09c0ae22069c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "02281578-04e9-4549-9896-7a9848f05311"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e612b73-900e-4822-ad65-63986ec5ff38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a61b745d-1782-461d-825b-df39ff768a26"
            }
          }
        ]
      },
      {
        "id": "b0344820-bd79-4bb3-802f-c3014c4b4756",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "df030e54-22b0-427c-9739-26873a0056dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5abb84e5-3ff5-4fc1-9ad2-2cc915ee79ce",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5ece1d6e-96af-4bd8-a949-838f5468ad5b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95abecc7-129b-4d43-9cb7-6083b5eee3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdef5e2-0016-4f04-a8f8-c0b4cb0d467f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caec1785-1233-4c59-b365-d77ec8d53368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a2ede59-6ea5-4684-8c12-3eea8d2bd64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01580f8-446e-4cd3-8e12-6d18d367c2ec",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7fd765-c9fb-469e-8e34-ea2d0e6886a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eede976-df71-4378-9ff4-b7868462ec2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d56fcd2-ea46-463d-8e1c-ab37e311a4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af018fb8-248a-416d-b6bd-c40f5f9e75cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b57d43-113f-4c4a-80f1-78a68bff6437",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa75890d-7005-41e8-ba31-962164a20970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa7eb42-20cc-4dd1-b32b-6a666f0c6ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b286d8-d403-4df5-a5e3-76bb7e4eb549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8afa5590-a446-4fa5-a307-87e565834277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab80e91f-72cf-4a54-b905-1e9135ff1943",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf76a9ea-3ad3-4b46-ae4e-b9da694bac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc311a8-7b8d-44a8-9d01-091a55f172e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95910cc-244a-4ca7-8c0b-97fe7bc3f1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41e187f3-b592-4d5e-a7bb-ba94c8ef1290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fcf79b-f4f8-4e16-a5ef-803b7e4c6de8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1914286c-f75e-44cf-ab65-0fae4134aeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5258cf5c-0dbd-446d-9f37-b0d9cdceea9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db1ccbd-d109-4aec-a80d-24bacf84a7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "987d4eb9-cf81-46ac-9159-e05b59127228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7393e9eb-2319-4a4b-8c30-0f2c5bf28fb0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce83b46-2262-4c5a-8223-9219ce38b755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5b86eb-d744-4a87-916e-982e08dd3067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb3de3b-f681-4b6c-995f-3b680ac4f0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af728e49-cf37-4bc3-96e5-4655ed542365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe31a222-e366-4913-8879-03e584dd2bfb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548683e1-167d-4e38-9fe8-e7cd59a3492d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369450ee-fa91-40d1-9238-f7367c050555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22383167-2470-4aec-87ef-ffbeb56afbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef10ae0b-7cc3-46e1-972a-3bd7b6c39678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c1df8d-f2ec-4afe-982b-a3212e149411",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631894b0-59de-46a3-be0e-bfbfa7eb3465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4ec868-2286-4413-a605-6f04cd28e394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de87978b-7f0e-4179-958e-f0cdfe754e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bdcf910-3fd7-4dee-877b-8f4073e099b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84068c41-007c-4948-84a0-8f5ce982f904",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6652ba-80c5-4c14-b0f1-b6bfd538757f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499008ac-dbc7-428c-a5d4-4bfc4ba1e385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4142d5-b18d-4fb8-877c-fcc1be0fad02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f01e653-5473-430c-8122-e14aeda0ee1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec9bab4-24e3-47aa-99d6-aba636f8dc4b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581bcac4-a8fe-4b25-9619-aaba45164ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7219fe42-cdea-4d3b-9b6a-10963eb76adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304b4889-d533-4ca0-86a3-23d6eb17f3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcd19533-d417-400c-bf55-03e16e03c688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92220ebb-f4b5-468f-be49-10e329339ee9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e50a2e-5b33-499b-ba45-224552a42a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b9788c-dc41-448f-943c-7c42236725d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eadfdd-bbb3-4eb6-97e6-43c26dd5f412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a7eb404-b391-4170-987f-4cefda5c0267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1f5d9a-252b-4b6d-b3ce-d830fc1b6bd6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea12b45-5b89-420a-ac23-b37c905b9fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dda817-e556-4ec2-9348-eccf4d3f7355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2fef01-e7af-4ed0-8d12-f85557e5ad1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e1691e0-0b4b-47d8-9e11-2492b8a3016c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2416d801-13ba-4799-a7a2-5c204ef37d74",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd352b04-4e6e-43c5-bc67-1fd2b2192632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd995002-9490-4ab0-b566-a76f7f7d499b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982980c3-d7ef-4986-afae-962b92809e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "808d6864-146f-4b3e-b6f0-aa150ad69296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be69fc6-c83d-4dfa-94ef-dc56141c95f6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172d18da-b188-4108-8566-2c1c75966b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc38eded-eaa2-4fd1-b007-e7f1d60121c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176c5b69-4cd0-49fd-bb01-c0c74966f4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29d29d65-33c5-471a-bac1-1422e1363eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76027057-fe66-4ef3-9321-d113fb678259",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23afb18-9d5b-405b-a0dc-d974b85ed8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895423bb-9dbe-4d1f-a0e0-92fbdc09e31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a26667c-a09a-4bb1-95d6-7435d8be0fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3eea13a-d25c-4a2b-aa25-f40130c73fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1e12f8-bd67-40af-b2b7-98b67a1ee51d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966e9ed5-15d7-4348-b92b-72ab8748b526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429d6c33-6821-47c6-87f1-089b8d45bec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d895f0-4876-4586-b0c9-140ec6ffdbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d415dcf-af5d-42bb-ba02-e7291a2274a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0268cf1e-474a-4a5c-ac25-4220b665d9aa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2a2e5c-be9a-41fe-b070-a69eae75c233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6418aea9-e061-4125-8c57-5274cf571be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03358c65-4648-4a04-81d4-465b4ebb249f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0e165c9-64c7-4e79-82d5-6631e5b5bac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aad4306-4c53-4c7f-a4c8-552f8759aef1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5f7282-c4e7-41ac-bf2e-c9d377c5bca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e339e8e2-417e-4a77-95fd-b8601418e75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db1b12d-2f8b-480d-b178-d0399b1d190e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1c9e2d-dfbc-4a80-a603-fca02263b521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fd3a97-8571-4ff3-b1b3-21d07e911d92",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3378ab11-d50d-477d-b1ca-7fbf65b47f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e40cd77-3c15-4650-958f-e18cf24aab54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51b4b23-1f70-44b6-abfd-616c61520e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc4c348-fd92-4539-960e-9fe3d94bff59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65661fbf-b9b8-40d3-9007-e2da183869e8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf08dc07-5c88-46ac-84f4-305c30870a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ec0300-0495-4e0f-9d63-9aa0f5ee7c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bec98ec-02c1-45d5-ac49-a29069849c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47580dce-d232-42b8-91b8-b03f306b6e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61a0602-0f78-4833-8cbf-e59a53da5c18",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f889b9e-953d-4d7d-aa35-165290fd64da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671817e6-f4be-4394-bab2-3c05353b088c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bede954a-ed4f-413c-8b38-7c97e3601999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a99c6d-d756-45d3-ac76-6537eb629433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12f358b-2d3c-4a0c-8ec4-c4fbdce06bd2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99fdbd1-58fd-4126-9584-244e9b0a2d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c954e1f-f1aa-45a2-8269-7bc162c71cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0b8bf9-fa64-463e-a648-1d6307a5bd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87f42e27-837f-432f-b100-7cc3a96160f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48e1f19-bc90-4b31-b8cf-8bcc2fb7a233",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6bf5cb-a0b0-406f-a0b5-984b76fb1c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5669a9-7afc-445c-8e5a-65651b8ac9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edaa3f5-5f6e-4232-81e8-1a6d200ba735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6376e63-49ae-47d0-89b4-b0243064f044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7ed401-7402-4563-be5c-27da4066ea74",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0fd9f9-b775-4f0f-8abb-381a60388a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e180cdc8-3c3d-49a0-8354-47a1df70800d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c4ea4f-781f-4b39-b9bd-2c53d4eeba0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "475f3db3-cf33-4a56-b509-38e4be3c6253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d83c32-18ea-4c62-af59-91cf8186874d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946df6a4-4b3d-4e2d-b85d-2d94c10c4b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1260ef7a-e18f-4f2d-9531-deeacc6edfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c73f884-0e4e-4fdd-a438-4e3aa52bc483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f33c7e0-b0ff-4887-8387-06b533ae8baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6be8f4-e094-435f-ac30-67ed8b1f91ba",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af0c12a-fef0-4a14-9b2d-bdc127f18ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f9f486-e379-4bd3-a0ba-a11c3b58f67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce99946-a5bd-4433-90c7-befb0976e376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58345460-0f0c-4f1f-b5c6-16217e7e2221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6462cc-c1bf-40c4-8cbb-ac6279258975",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f809ea-7cbe-41c6-aa72-38ac7a4b9a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db410a00-e704-4ff7-9b56-d35ac8a702ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6074417b-db5e-4133-9591-363b0af83e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce248b7e-e28e-4094-b9ac-e1c620079ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a7f67e-b691-4db7-8fe2-835d29a865f4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abe8fe9-9174-4e38-81d3-8f3822f4ebc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87aa6770-d5e0-4bf0-b702-f88a391b0252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca21da49-af0c-4aa4-b431-f54d7b0b0bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7ba9c1-c8f8-4e13-b4d9-b2f9759ed734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17baf95b-e813-499f-90fd-a5c511deae41",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd50d5a-0ac7-4105-8fbd-87e33f4f86e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6654bfe2-4eac-4859-8b4d-ecdccf3806f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdccce2-3c02-444e-acf9-8581de4fc6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7abe3a44-e3c2-4100-bd80-2bdf03aabd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78165275-c4eb-487a-999d-4a610ef1b84b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f72820-203d-406a-bcfc-e6abbc1113d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8102ac-1b43-4964-a8e8-8e9053894754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e9e332-0858-4aee-854f-1605c9d66384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca5b204-ba89-4b65-b7dd-59c6003e18e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96462e64-f2fe-4ce1-8728-83b3874067c0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51b29f3-2407-494a-9751-b517bce294ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a1cfd8-34af-41b6-a631-b6a1360d1638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911d5cf6-c451-49e6-8386-f9d7462fcb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0df0d81-262d-436f-b887-e60ac5a5aeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe30775-277a-4fcc-806d-4d06eae673c1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7681202b-0249-4cc4-a632-9bf15dedf500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb8a8ba-aa07-41e2-a83a-64ad1ab9007e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755defcb-faaa-4c24-ba21-3040557d33fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd4b149-76df-4874-9ce8-50de1461d1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67690943-ac62-4a13-8e21-434318315af4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1be5bb-2d38-4d47-ab22-2331d2e54fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57124327-56f7-418e-883d-5b184a2ef7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3842bd53-10e1-44cb-8db7-ca4e14a4952f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "babc6c94-091e-421d-8573-c746212b4c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c623d7-7323-4541-949e-7b310f90341c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13010bf3-4e5f-42ca-817b-08b1554a8c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb91eada-08b8-4a87-8067-ee77768c54ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fece73-e932-4862-85b3-d6f38d7526d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d652925-f41f-42bb-8e1f-9026f6219393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a726dd32-ecaf-4c61-9323-bfc11be41def",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ece5fe0-74ed-437c-9c42-3f59fad86ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a51e95-3283-429a-811d-960d1e02dbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6db158-1287-42c5-a27e-2d885f69b02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "69881821-323f-4a7e-9a78-a1fa29b1e1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9c31d5-df10-45bd-be03-827c2e3e4491",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e99509-0d5e-4313-993b-00203423e9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcaecf1e-4d94-4da0-baa2-f52cefd8189d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686f74d7-017d-4376-ac8e-436c0ef354e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1de9839-6a95-4879-9cc6-a6b1acf5b911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38b65a2-5548-4198-b1dc-04ba32d82f07",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0363c9-6f25-4253-9f88-37ce52b86b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0c160e-b241-423b-94f6-011f1fe18f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f711a67-e942-429e-b76a-e9c90fff662d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba17ce52-dcec-49ce-8c2d-6e162ff52fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6730fa39-f9bb-4ed1-9e9a-a01e79d741d0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acdd6b1-f7ff-4687-ad22-32cad6ae6302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69d96ca-dfe2-464e-af52-fa15839435b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8f6b6d-a31d-4c35-8577-6f22591ef9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fb70cd-2043-4a61-aa97-142fedf8d977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f988734-1379-4ed2-b697-7f7d817b93a8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87fe1f5-d012-44bb-b7bd-4901ed180e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67cffe9-b7db-46b4-823c-ff382c014ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a369f67-d89d-4287-aa05-bb4ba36b37bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8adf054d-b767-4b67-98ab-dde3a4adb1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e3bc62-aafc-4bf1-9524-960c1ab34de5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72043bac-09de-4ed7-bd07-93d0023f9efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14a5ebd-1bf5-44d9-bdec-21505033ed18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7252bff4-d7ae-46ff-a449-d08e29ef4518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe599f03-4210-4b70-9b8f-a150a35df2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c458fb4-63b1-427f-9989-71a2611e8570",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45474e44-f693-426d-9fdc-ecddc787618b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b53749-d35a-4014-b473-6cbe8bfd245e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4c36b3-f6a3-4468-8930-0f3121e230aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aaf499b-a4f1-42e2-b614-9870c11b24ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e22acfe-80a9-4d9b-88b8-e56b989f4340",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d24686e-a236-4bd4-9cac-eea2e77873b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c54433-c0be-47e7-bcad-38b7f287e23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9fc942-9a63-404e-a200-b29c5c5d0a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b022778e-24f9-4217-8b88-91de37f63010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f3f0c-3aa2-4669-a34a-7f2fd922093a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1052d80a-6863-471e-9334-6dd2bacdd0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf5946e-1f48-4636-aab5-a8cce5ad68c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d797281b-7bc8-426f-90c9-a51d45627682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5da6b4a0-e32b-4114-865d-c2f496856655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419fc4a5-5177-41bc-aa41-c69d52d7d107",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d19c0a6-fa6b-47d9-9b6b-ba47542d7c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bde339-7432-4c21-9629-a388d8162387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a26213c-b62f-46e1-9aab-13792f24f81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "132a37ba-6335-4ac6-94d6-8165477f90de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11c6b77-cd9d-4d29-9ec8-f4d5b63d51f9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf0ecab-22aa-4909-a8ad-5fa764640a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1506f8-993d-4d61-9389-977dcc7ad71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96ddb1f-624e-4e54-90d2-22b6f7c68ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2527a218-65f1-4995-baae-59200505bec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bcdf53-84f0-42e6-8598-03deac0a03f9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551d3df6-32b9-4272-baa0-c78b144d98fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a019e5-d5e8-407a-a13b-e9e38c884570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4a3db5-7e95-4a3f-914d-5f0cc7e3d3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "405a09cb-4b98-43ab-a8fb-e325bb93b512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c282ff9-c6cc-4930-8c33-ca508193fe0b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c813e1a6-2f3c-4ee9-8c21-c23079201869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2d9593-65e2-40bb-b8f0-fd3955aeb2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e18d659-92f5-41b7-93fc-300ef67c6164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22daf5f2-06c4-4478-83ef-d591de7f60c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41c7a92-e85d-40d7-9b7d-d60ebcf3002f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293f2711-00f2-425c-a6e9-0e4c72d1fab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ab4ce4-9777-4ffc-b45a-f19f12c3c0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21d32d8-94c3-4a7c-89cc-d3eb3f61b1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5946e60c-91a0-421e-9015-456e3417d7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8b22f4-8475-4903-b049-4493202e1866",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ade4a7e-4d27-4893-bced-44260fe04875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e03063e-d3dc-4725-a80a-70f104d9f891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d0257b-348a-4ddb-97cb-662c1a66012f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b570afa-3e2a-44f2-be95-ca6841b21344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85238da1-c319-4b3a-b640-3ac57e7ffd0b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ea9855-9357-445b-a932-7e3fa1c9d089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e720bee-e17a-4fed-b998-a34ef1de3024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a952d1e4-332f-44e5-a0ef-c692636d2677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "857e0671-687c-40bf-8c5f-99013b1da4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45920076-87da-4c26-a7d4-7187454b02ca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766a16e5-cb02-42cb-a68f-ccf131166f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d03d478-f7e4-4512-987b-6664381d9fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db94635-d899-4832-8d1b-5bd274a7306a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a259ab-2443-4309-ac34-45fc3dd4df71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdc8b0a-2372-40f3-b104-1a2cb0036f55",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958c8024-9640-44c8-b45c-a9fb98a6553e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd906bd2-62ed-46f5-8068-33c68f3b40b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb71fd9f-b4b9-446c-be7b-e8c53406b1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b13f0bda-7205-46da-8cf1-540aac5bbe97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37ebefe-3ca9-46b7-b7be-5f744446248f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ad3cde-2c92-4dd1-9f5b-9c027046b131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dc1f25-add4-4f9c-9898-dce2c7796b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51862e27-c0be-48a8-a508-56c78198354a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8191ad-2980-40d3-bce1-b847b8788b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec72548-e66f-4dc3-81e7-98049850a929",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3862f85d-b4f4-435e-b9e2-76952e168b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d16794-a927-4caa-ad55-7ed70c327691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31a5c6f-21ad-4411-b933-6e516d216fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b863a9-7bef-4ef6-ac3a-421e7863115f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8a66aa-c50e-42db-9dd3-786b16908446",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f0ae2a-904f-48ea-8f22-3ff6a6305149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2071d4-27ba-4d83-8bcf-d49b5d68b352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52aa4a3f-d4dd-450c-b967-40751d076248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "609cf98a-b95c-4794-b878-da14a2dc723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db99d0c8-6bc7-4ab7-81f7-ae7ad463338f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd223227-9b70-41f3-a007-7d73fcf889e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1fca20-4a25-47dd-83d4-e39414f3f4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c358e8-e464-43f6-ab98-c6d2a93d9675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6a073583-4333-4c21-af0c-d405448e691b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eaf7dd2-b159-4457-b3d0-d1679ead123e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c76825-42ed-4ed4-992c-04ad28561e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae429e3-3883-450e-ac62-b676cb928178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1081295a-3cae-4be8-b7f9-f0ee9c182151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6042c988-b1b4-49a8-9e40-7f5c0eeb68a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c3d00d-a96b-4bc2-9f35-e9521d1b641e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092c7f11-0201-45c8-8dc6-959dfb2da8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77bca826-051a-4bbf-9c35-bca27df04959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b742a651-588e-48ef-85ca-4694e732dee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e284d35d-e5a2-472b-928f-5aee926112f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df5e771-f4f3-4cb4-afb3-7c1e971f1e41",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86734d9a-989a-49c9-9f60-98a85e0fc9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78eac56e-3bba-4111-88d5-9d82130995f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5943650-9962-4ed1-8534-bc4c95dcf943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d57455dc-9086-43a1-93ca-95bf30c91d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20d86ad-7cd0-4a13-ae1e-ec91768ddefc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14d9c14-7c16-4a5c-9d9b-0beb8b8c5cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7106a1f-c4b9-4052-8512-d3177c3d2bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecd48ae-ee07-4b7b-b6dd-3acb8d3f9f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd4aff3-1527-4deb-bffc-e1365abc63e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44c2924-43df-480a-b7fb-1b8224d8d4f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ede304-23e0-44ad-b5ce-b9b4a8deb831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20eaad5c-229f-4573-a784-cf69817c2fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0b8f1c-721b-4ddd-b5f1-88116d2970b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdeb1f05-bdfa-4712-9b9d-d9a2ded08f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ebf64c-2380-4e19-a264-0e7b3aeb2e1c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7755aa-4259-41a8-9dea-d957c976c049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d3e61d-2e71-4de4-8e8a-30cd22fac40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811081d7-7e1a-42af-b664-e3121ee37a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8451d10-87ec-40ed-bc82-ab8946bc4762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935137a9-ac31-43a3-ba9c-15ec461fcdf9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9699e504-caaf-484d-bf75-1a1a98d62b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d19cb30-1ba6-4d77-85a3-530f0fb78422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667aa33e-d69e-4d51-a892-daa54e6f9b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d938ad9-8f79-49d2-bd7e-41a6141abd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7c6983-df34-4d54-8dd0-221bc0e56e98",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92439c56-939b-41a1-9440-93c5bb4b1bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9cc4a9-5ed3-4448-8ee1-771d4934db93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9722992f-29fd-4d2d-8c25-1b3e2c69dc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4474b49-6f85-4b35-8e7f-04184ec06902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3081b8c1-53a8-41a3-a69a-8187ac2bcabe",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a802d17-5282-4cef-a6d2-0257f714ab97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d7dc61-022e-469a-aa15-557e4fd1bfd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0ca34d-4f7f-4983-8e20-34c4081033d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba7fee4-8212-4903-bd9a-cca0bc528832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad1cf62-5612-4b6c-b914-6c3f39d7175f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2939370-ed42-4829-99b5-95866d7c906a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9cf4b3-8455-4252-860d-6ffb3124ad95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c88183-4e38-4d6c-9781-83541fbe21b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec7f89b-c5e3-489f-a182-71afa1554db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d407f5-a34e-4a45-b8d7-e694b0a0b67e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce1509c-c788-4fa8-8c93-af403129bc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02b8145-6bf3-47d7-97c6-3c6e7b9da451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9711c1-c889-46c3-a0bc-eeae27533580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "154fb6eb-5c1e-4183-a4b6-e831788ba792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f318ae42-ac97-4869-b379-dbc9eb20c5c4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f4c10b-d6a1-43f0-9944-6e20445779d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e8c23e-5563-4db7-b251-e8c685778417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6f7ead-ddb8-42fd-9e61-a82f2ab52bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7daafd30-1499-4c75-9190-d8b0e9064c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9719b040-5fbf-458d-ae83-979141ee454f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944be5c5-aa02-4de6-aa88-4efff99bfab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93197478-0a1d-4a51-ad35-7cdb65890b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055ecb6b-86d9-4997-899b-dba3a7a740c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed84f2b-096a-4f37-a489-f23463a32a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5276f5-9a9f-4833-81ea-448850b77732",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf87fd69-beeb-4a11-a4da-99c260a01212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fad95c-0a46-49b5-a448-8aa13976a9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fb8ba4-a36e-434f-8025-e642537634ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48a81918-f3ed-46e4-95f5-539efbe33aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97c17ee-979d-46ff-aaf9-8aff53f357e8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1030d2-ea02-47c9-bb41-0b69c19fdbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030ac9c3-c8d8-45f3-bb09-b4530e85a13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bece4a4-1279-4cf5-aff5-56ab93402d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0e75bf-6a13-446d-b11d-b866ca35a293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f797dfb1-ed02-45ba-94bf-76b328877580",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81a4b5b-2018-436c-b947-9ec53320dfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4282dffc-7b8c-4d93-b26d-1715e46f2b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefa75ee-c4c6-4e12-9284-24ff30454a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c150943d-9653-4b6c-98d7-dd076372c3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73ad494-a1ad-41b9-8e2c-473957836b74",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184c79a9-071d-42f0-af85-5aae4ebe3c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee90a0ed-b2a1-433f-81c7-6b5b15cbe650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1c930a-8a37-4231-8ba9-2877bc12c71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db7d6189-e7d6-4453-9caf-b29209d15de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283297ab-106d-463e-af48-b157bde57ea9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5cb8bc-db3b-4d90-b444-e61ae7102198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888ec499-9f57-493b-a618-7df7b1f5e6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e142aa6-1b3a-4c0d-b588-009139e30755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf47072-45a8-4ec7-951d-9ed939a5d6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441b95b8-1e7a-4020-af43-98c49aced506",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fda128-7aea-4f19-9f6d-69330eab6a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796fab3d-c859-4d5b-84b4-28e28a55148d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a525aa7-ade8-486b-87c3-1d14616352af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c34bd732-33d1-4fb2-aee6-d226fd2e1b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6f543e-6d61-4282-a26c-540e93de7deb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6815d97-c665-4d26-ba86-9cde3be5adea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23eb0d6-12fa-4bb6-b99c-12d9c99c44e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1519d284-0463-49c3-8b2b-31df69d3cc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "604a231c-3aef-42c6-90c8-100a05d5d2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721a9f4d-ecf5-4172-ace3-fc2414c3c0da",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed619abd-75dd-4f70-8ec7-ff44f59b496c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3245328b-254d-4f2e-87ec-22a20af427b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4179185-025f-4ad9-85fa-ca344b024db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d574f0-169d-4c12-a88c-27dad71c05fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cd36b7-3f15-48fb-b64f-9bc41f67e2b2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d569c9-4fb0-4fbb-924a-14ff30b7e1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e45633-de2a-4c53-ac88-4ccae614f088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b5337b-1e9f-451e-8273-d13cd973a299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33df0b58-885a-4b1e-bc9f-26406626a888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0049dd47-0d34-4d3f-89c4-9387b3c7f83d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e63e8f-492b-4642-a55a-fd3a034a99ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5de8d9-4601-443e-824e-8e105d9f5b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45082928-8974-47f4-9a3e-c9332be5e511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "651223a7-53ae-4715-a8de-12b5c5868bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191f785e-c17e-4d92-99b9-cf66876b7eb9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80c2ba3-7320-4f1e-b59e-de0356751703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118b6428-68df-4c09-8ab4-da21e970665e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cf0782-8214-44ef-9130-416c59ff60a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "962ae117-9e24-4570-9348-6ac83257c431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce99bffa-52cb-478b-b92a-356695dc0299",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4987b471-40b2-474e-b356-5ff685938f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1620e588-04de-4132-b06b-4a3bea67eed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4627d26-2a2f-429e-b608-80ddb96d6194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4216bf90-30ed-499b-8a54-91d2a2ebf604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026ee843-b6fd-4c34-8476-6e13d6544a75",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b29d78f-992d-4ce5-b6c2-546ed38ca697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8950dd-7af6-4e54-8388-eec46e679961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d67eeb0-3e06-4872-8031-b8efbcab7ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eaa175e-da5e-45ea-bdd1-933395bb4e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cbb8c6-fc95-4d3b-9505-f6fbf77b7620",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64c898f-ff3f-4319-aa85-55bd19e125b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ded26f2-f7b9-489a-987f-c6b53a4c485c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c752ec97-cda8-4c5d-867a-e4a222976fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7ed8cb-05f3-4e4d-bb5b-9c4d49fb12e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2b7add-f6ed-4055-8125-4f46cdc52781",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e59553a-c224-496e-8f2e-89ad63221108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51db27c5-9503-45db-8867-7403f4f8b5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef14066e-a27b-4f93-8553-876f89de00fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23f91e25-7743-42ef-86fa-9e6c75f29d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a089fbe5-89bd-4d79-8760-08b9a286ed6e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a991de-73d6-4893-bb2b-de5770fdf5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4f4fd0-5347-4d35-8801-fb14ac3f67b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee1ea07-a058-4ad6-8597-7747f54510cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e30fa4eb-18d9-4cab-92cd-d64a9e7fe227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fff989-61c0-4d40-b067-9d0a5ac59dde",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4c1f5b-2919-49f7-87dc-73e862924d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4e21b0-fb42-4ac3-a9fc-583c7045d604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d889f1b2-3eca-4d6a-abb0-da5f6b52d807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6a2ce9-0f0d-4fad-b721-bfb883fc2e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a1e4a5-f9d8-4cd5-b763-1131ce4c20b3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af197369-1604-40a9-92cf-59c1f10ba560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82df4568-ac4c-4bfe-81db-05e968428457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50da267f-bbf2-47f5-b764-c22da697192f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39b6f2fe-6ece-4afa-957e-bc4eac7ff733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948030e2-1198-425f-b877-9c3d3e1cd574",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a29527-edf8-4209-b4e6-516270d9f00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979a233e-da7b-4bbf-a05d-52b0af99ea29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2145f3-bd87-4e70-89a5-f32dc87e3c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61225d03-9380-4d12-a4d9-f89765022f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26e6807-856b-4237-99f2-77f9e9df1774",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de39d6a3-eb0f-4870-b6c4-43c688f0f292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ba7af1-6035-49d4-9cb2-a991ab5111f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904e5f7f-9b85-4f91-ae21-b03d9dd30899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa68926b-14c4-4230-a5f5-2af31ccf8355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4d337b-fff9-45e1-8b87-8c5af5741f7c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39086e7d-45a9-4f94-b727-358da5d39e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed66833-4732-4f41-ab26-cd524a0f0fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638f4970-b43e-4a58-8f5c-690fe9e3115b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba72b006-46d2-45f1-b25d-7b1bf5b0dd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2aa81ae-24ee-4d8f-b0fe-6a56f6187127",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9048064c-0855-4055-a14b-1aa85816c7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50848557-d1e8-46e4-9fce-6acc2bfa22cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8c4d4d-f391-4336-912c-a6364a8c916d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "81e8cc12-b44b-4fc8-a6c1-00e5514c3e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cbd7a1-d694-40c2-9eda-68b728099974",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7b29ff-48df-43b4-883a-e0e3a14d847b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1b6100ec-ffad-4448-a42b-f7c869a03e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cab484-047c-43c8-b565-3a99e3cab21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74bd5956-be58-47e2-9275-0cd9ab17b886"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4991abe0-d32b-412e-848d-13e6bae41751",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8895171b-c336-483c-a45e-7c8d4080c1f3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eb6abb-ef5e-4fc8-875b-1f6f09c3c005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52a1d18a-06bd-4474-af57-e881188e6d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac327b3-6ef7-46a7-b833-426893d98b97",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56f0cb64-ebc8-4654-9b64-5ff159a7e329"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "456020ad-2e68-4dda-b7ad-c9781aaf57d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25bb06f3-bb00-40ad-9212-a51383b0aef9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d059813-b815-4142-805b-1d25765662e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4367e8b-f60f-49f3-a6f4-72787f8fde73"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec892334-2497-4061-a01d-128f5a56eaca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "054b3e4b-0f44-4673-bc75-aa094e3f25b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b80bc5a3-2edb-43f2-b133-1d9ef4e075b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b25faedc-9628-4e0f-a5ef-440308c55f70"
                }
              }
            ]
          },
          {
            "id": "4ef6385b-7da8-4286-b269-7288bb5c8f44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "26a02965-6e74-42ee-a96f-bb440bd57333",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6189bca9-68e5-413e-8827-e225e2e49063",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e311ed4e-e139-4443-9214-130e8e3c7686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d400d209-4df5-4c50-8480-f959efd46298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8399e7d-dec3-420b-8fdf-05414921039c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e244d3d1-9698-4594-87b2-0eea636a0886"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b29537bf-1123-4c76-afaa-2fc33715711c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d589876-ac62-49e1-bce6-28cc1176a898",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8854b2a0-5855-4585-9aa8-257e3127fa13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2508e0bc-0d0d-4aa5-a530-151bfc28fa74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71313333-01f9-4c12-9b92-256ac03068a4"
                    }
                  }
                ]
              },
              {
                "id": "67d861cd-1368-4163-b34a-16d0304b7acd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "747da113-8319-447f-bb37-f936721971e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93b8c11f-7e05-431b-93f8-48a0dd4deb4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "686e7b98-fe49-4077-b046-85db44c7d9f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c36e07d6-abf2-44a1-84f5-59712ce9d5ed"
                    }
                  }
                ]
              },
              {
                "id": "6c79c110-5808-4c2c-b996-b881e75ebe44",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "865158c5-66b1-4856-b56d-6aee33fca766",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4315d3f0-e6c8-4339-993f-c54c2990b405"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b6e6f21-6d67-4c2c-bfb7-66beaccb0038",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2edd7318-67a7-4366-ae57-e443339b6743"
                    }
                  }
                ]
              },
              {
                "id": "7ea9661d-5a53-48b4-983c-f4889477de74",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8baa8666-285e-4248-8545-ff7bcc04568b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "732bc8e6-ced5-43c7-9d56-32a15019503a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f3acbb8-1b61-4fad-9a4d-b7588f02e42b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5f3bcc22-5f2c-41e6-b11c-780a4a110df8"
                    }
                  }
                ]
              },
              {
                "id": "400db5ad-33ff-43a1-9571-d5d114f3ae0c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "605c68bf-2893-4e0f-90b9-e18dd690a989",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5afb34f-aae4-45f0-9268-6794b4aad991"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1c1ea70-f150-4c64-b7a3-21132ef0dfbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cfe1fbf1-94f7-4d1d-949a-8f1732766d4f"
                    }
                  }
                ]
              },
              {
                "id": "d9570ff2-3ce7-4276-9697-7d51adb0456a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af6e8ee5-76e7-49ab-bdb8-d404b0c901cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4d7261d-5502-4c29-94bf-f96f242983b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d071cad-577c-4da2-840f-fc9353fc0a24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a4ffde15-e1d3-4f3b-9c01-14e2a6613451"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "198d3812-734b-48f3-8195-a89088e86f29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10b25899-da1e-4793-8e28-db1db69d776d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c8ae835-ae55-443a-a1d2-204dfee4d51b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9a09c99-9cee-4a19-9095-a3766d5910b1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaf128b7-cab5-4e24-8503-139505b076c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e6b2c43f-19c1-4559-ab69-a27b736f6d44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c6661d9-906a-4a9a-9540-770b885c4e21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92309717-9d59-4de7-b865-5eda491252d8"
            }
          }
        ]
      },
      {
        "id": "56957095-5336-4e40-96fc-04048ab93ef2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2e472d9d-173f-4794-aae0-268ce5c5c088",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03e9dadd-9d57-4dbd-bdb1-7d69522998fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f306c093-9d4f-40b9-95b6-88a88006ba21",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bb033d-d25e-4643-829d-91092b0f8d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fec605-ecf5-4a97-9d1a-ef3acce56c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae98992-c6a7-4b10-80dc-ca7913a24561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5215e45d-85c2-4872-a3c7-d8730b7ed7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f68b8fd-3811-446f-997c-137123ad04a7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90dcd0a-7ba6-4718-aad8-9f5d917f1e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b2e05e-2847-47bf-b183-b1b315c877a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d553b04a-c5b0-4225-b1ae-d4508df6d2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3feeb901-7924-4121-b240-d18d5016e118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3662e30b-b935-462e-a95d-9a21c9780122",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b8e3e0-48de-4ffc-b90c-b2f439b17b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f83191f-ca3a-4f8b-bd63-3f914fb11fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5eecebe-942b-49bc-937b-d071fc8fb575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe06783e-aac6-477a-9729-ad8fbffc0775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bf8c7d-248a-465b-abba-1ec2947a8c4d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c355cb04-b03c-4172-a838-dcce58b1288b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd161760-122d-4105-bbf5-f4c478d6009c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d338520-97e9-4195-bb32-79875cdd8742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8518f4e-6134-4f76-9b74-b2dcd9163f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37f62b9-1cbf-4697-84f8-7ae31b56f72d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3726678b-3deb-45a9-a2e4-e239faca499e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c300b8d1-b6b3-4cdb-8b95-8bfed856f9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f5869a-790e-4464-92de-43d6f05bc784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3d9963-40cc-471f-9afb-cee0c7e202fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a699a43f-2ad3-43b4-a3b0-35eb28590204",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fabcdaf-0695-4852-9a77-ac4db3128d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5eb32b5-d99c-4c9d-8b74-0916bfea4dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8576d1f3-7225-4fd3-92c4-95bed5c59287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60431e4f-6b19-449a-b1d1-0a0679e434fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98e19e1-cb1d-4ad9-ac72-c9de8407ba5e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e465169f-cf42-4a7a-bc36-7371b19821e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25acb3c-e457-44dc-a348-174e15fe5d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6ec6c1-9ae2-4b61-897a-f69febdeacf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d3cf96-b744-4967-8fdc-ece161513503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3b2c43-d08a-4e5a-852b-0127aced7a58",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79b6f11-4b6a-41b5-ba12-85e52028363b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531e4780-b7a1-4e6c-89f3-bc9f4c40f018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f404ebd-cba7-4e63-8b06-ead4d012137d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0d6711-fa9a-4ad7-9a62-b4c452c552e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506c943e-1c9c-4b4a-8158-0e0e30fc2a81",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3780ef2-9676-4c54-a796-10c45e3ca53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154409f1-bfb9-40e2-92d7-4fde00154d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726fb8a3-978e-4693-b7da-5b9d3ea73164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70cb1330-de55-4159-b2db-fad486c54cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c3e269-792c-4769-ae78-158931a68411",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22775f3a-d6bb-4cc8-8f52-12376af7d32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f67139-2385-4ca6-baa0-f4cd272e289b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8eb406-c11c-4a06-830d-3ef25d9172a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a88a9e-21e4-4a55-97ef-9c77a815e333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3aa9cb8-f979-49e9-8fbf-ab8d1f7585cd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb1131b-6206-4bb7-a5f3-97c1cdc2fbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2bca80-77de-4931-abca-5666e501eac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1d99f7-39fd-4971-86c2-c6e044a56f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "693b4947-2e5b-4a64-bf7b-af1ef44028d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bff563-f9c6-4b17-be57-16237246cb16",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6e5569-3a71-4683-a04d-6e8cee2e6579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5468cf4c-a8e4-4a08-bdab-2a22e8be76e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee89e593-fdf0-416e-8dc1-9f127f18635d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "533dc838-5aa3-4a9d-955c-3473cd002c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730ca490-f31b-45fe-a328-ea15243643ca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1048b84d-f2f2-4c14-b638-055750ab682c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d30055b-cf07-42ea-8938-1e8858b42014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6925e86-9870-4ef5-843f-7ed623921ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0029b0-362a-49af-b781-03ca9a8d9c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30d7823-d1cc-4c03-a202-e0ca63164859",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3d28f4-f3b7-4f20-8836-ffd0d278b93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e082c0-6aec-4449-9561-abdd028dd0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f12f53-84cc-438b-bdef-a80dac8364c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e5849a-de11-42e9-b11d-a59fe32d8bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286f3ee4-8559-46d3-bce3-f1aa1685f7f4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbac18d7-cc47-4e9c-a9e1-212352b68cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c2d073-8482-4512-8fa1-1060b81e40b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3057a23-420c-495a-b66d-639f11fdf511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "179f4ea2-e00b-4741-a5c7-2560a486e3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3055616-3580-4a29-a02c-456de2818e10",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c62005d-c212-41a6-be2b-0c9019e3edac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a3fd0e-e8ee-4272-bb57-c24f83e452f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e9c665-bfab-48fe-a662-bf00ced871d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b756652-ad47-4981-8af5-ec15d3c17514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d4101e-754a-4586-bf88-c9805910ac16",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6783dad-2cc4-4f22-9658-55a5f143b84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb5d000-5023-4256-a778-404e23ad29ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06778580-f00b-427b-8bf3-c7319701d131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6d2792-637e-46aa-992e-ff6236094bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dcffbd-f90a-4c92-8364-33bf61defb29",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4bb0e9-aaaf-440b-a45f-a3d88ae5eace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d763963b-cf5a-4d15-af9a-d3bdaa59cd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72038af4-ad22-4d6c-8965-d271b8a6295b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7d38c1-fb0c-41d1-af22-e960e9847729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa03bb51-7cb4-4cc4-a845-4a76ab021876",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8dd077-05eb-4053-ab38-c1b69c41a318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece7116f-97bd-4c04-b010-6eb94ab366db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b691214-d5bb-4af1-b5b8-27f68bd6c829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a624c6-e454-426c-9e90-cb6181e4047d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bf40b1-7461-4d79-bd7c-cd9f922ce587",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022958c5-9b5e-42f7-9fca-4767a3c5acfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45857425-4af0-4901-b228-cb391984e313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2df845-94ec-406b-b004-add3ed1876b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5caad8d-27d9-45ba-bf5e-6a82d0d2e28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b45a31-3f3e-42e9-8d23-5cb3dd9e8ab5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87e9bdc-271a-4ff1-a6cd-88b478849588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7565b88-9d94-449c-9edb-df452f113d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e673d2fc-de10-4295-b751-78f68559fbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a09c112-3704-4b69-a43c-feae17176b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3ea7f3-1789-4bd1-abd6-4b05e58d295a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d993f498-d732-40c4-9954-2cda90aac113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b213fb9-5a02-47b9-9ebd-6e3a500cea59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9373ab2-12e0-4089-bbb2-6a5c1bd7a582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5b2a43-3df3-424e-b0ac-3b434f3c2718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db0358b-d33f-420d-ae9a-10fdf1bfd84f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce61984d-7d29-4e19-b58e-490ab9cad4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4427c84-34d6-45bb-b333-a5230809c3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237ea262-62cd-4f08-b87d-9ca1721a516d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b7b12e-0b39-4ec8-a40d-ee931fd80727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23438565-4de7-4d44-9a6a-558ff92fc2a1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfea66d-34c8-4670-a207-7815d04ab1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aea6d08-8815-422c-bd9f-756e329b8e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ba7f0d-5942-4d73-8b9b-c4d0b6b53b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3936e6-e09f-4e19-9559-41504d42319e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f071596d-6c62-4247-893d-d9cbfe5d2df0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc5ffb3-f02c-4683-80af-a462f2014f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6f55d5-52eb-4965-b8b2-e18846dea60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d790259e-d766-4bd3-8427-0a5dffc40eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9a081e-8905-42b7-bbfb-1fd9ac2aa017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ce531c-2589-4629-ac7e-8af6c8065455",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa76a6f0-dd71-4393-9cf1-616df9e8ea8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa07a56-5250-4a12-8a91-02c99dd1a1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bff65a-8568-473c-8516-2327e72ddf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86431c3f-591b-4b02-b338-691d6a23e878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb42e21-d4d6-4a27-a955-197309eeecb5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9201a07-ef04-42c8-bb75-8556a539056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69aa2598-437d-4b09-a874-063ff2ab729c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7498a4-5e7f-4f62-a8cf-82418b5b0f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e385a48d-17a0-4345-9971-d744f0616347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6f8960-f41c-4231-9eda-985537c33abf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ba0f85-0e1e-41ae-baf7-7792b23def88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b069f6-b579-4ecd-bd23-d7518268380f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2983709e-77dc-4f26-b829-64e05e4ca331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7216ebb8-45a0-4b7c-a5bc-7ea5b3b6d36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf0019c-2580-4974-982b-b35ec340b702",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d89c5e7-63f3-4853-9b3f-6fe6f771dfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b171b1bf-9d06-49d1-9e69-738c62041ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb1af9d-89af-4705-85f7-6617fd23fb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9d0de3-12a5-4bf2-905c-e9974e8b576c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aaf7fae-e3e3-4900-957c-b224e3cda89f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dc7eec-37a8-47de-b18a-87476b9e6726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8302d87e-6c3e-461e-a014-6f89b7e13087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c67b46-e614-436b-af93-fa972e211328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a66cc4a-afab-4fe4-b0c4-8ddea33e3735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf4ba07-0978-4ab7-9731-ff08d72d7cc5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4473a9a1-745b-4d02-87e6-7d81279db06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083ecf9b-d801-42c4-929a-79bc983fad2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab98c807-c772-469b-addb-5e531db8802d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68618d0b-9b9c-40de-bb49-f1f97aa2ca13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f7a991-7c3f-4eba-8edc-05ac80e61cc6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7a7d83-7cce-4eb4-b285-d496cba98447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d78439-4d0c-4695-a747-d4cfd0ea0fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd158f8-959c-47d5-8842-0c76c429d52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddad80b7-94be-4599-b325-95dead555975"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f29cd1f1-341b-48a8-84e4-412cfcb2aa5f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9baecfa0-0b9f-4822-8ea3-cf4e82856635",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0d97f9-72c6-4588-9fea-b39acf9d68e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9e14706a-bb5d-49cb-b4d2-6701a1188c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6634de7-8d0a-456d-a94c-ac8dc1eb79ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d1da2e4-ed35-4d8f-8c1b-1fac99e21f89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fd8c3bf-5fd4-4474-83b6-5361badb4a05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "098b3522-a7d1-4943-97c9-339d8ede08f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ea8b7be-9f8c-4609-adc1-b24780c75482",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2b90803-7881-450c-9106-2bfcf1e3429c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1c715fe-4821-4706-9283-324c87b4b12d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "148d1455-0981-4edd-8127-b3a774911537"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cb3a145-7d44-45c6-a05c-09fa4303bea1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f3b527b-dbc6-4506-821d-56bef7984643"
            }
          }
        ]
      },
      {
        "id": "743cf1c6-5940-4a9a-a7e1-1acfec0bbcf0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ef111174-f16c-42dd-b0b1-89786bb42c9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8aa0dc3-fa6a-41e8-80b0-1c00a5df5ae3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c2c0833-2e37-4b81-ad16-633afe828cc7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91da9a2a-d834-44dc-bc40-d728c0513898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834742d0-7c3a-4f68-baf2-2939e044963f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5219607e-8752-4e46-a81f-d38cdafe86c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8172acd-edca-44e3-8dee-b81529cf8c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5faa6b-1141-4314-bbe1-8a783e85fd25",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7edab3-cedb-4fd4-8331-09822e1c70b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc6d69e-3c07-4b86-98f7-c0e7ed38724c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0409dc7-c2e7-4505-8e7d-b275aa9d1458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a439c9-20e9-4ecc-ace7-e8bbde631ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e2fb0d-0954-4e0f-9a03-9f92e9992bfa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dfbfe3-20d6-4c6e-8c2e-8e07c1483975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f80454-5320-4e7b-bcad-ea8a54e1f6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc462c98-55f1-4e3f-be9e-981168071567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "114509a7-653d-44f2-9833-0bd93ce72dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68418556-0d2e-44a8-b291-0a9d977e67ca",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75a9e9b-4489-44f7-b393-efd33fb1858f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9700429-0a79-40fc-a2c0-9c6ee77a9187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1767d4bd-2ac7-43e1-a140-864a0bb42441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc4bfac-f2c7-432a-a45c-6960528a3ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b4b134-32cc-48d8-95cc-26e3a0b8d188",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598c2470-e955-4638-ab9b-5d0c27848b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cc9096-49aa-409a-89bb-c0cfa6cbeda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57db3e22-b373-4980-b1b5-9e0b5526bba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b05c5f2b-82da-4596-bdbd-9f36e74b961e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a1e73e-3d53-4ef4-a02d-08e53273a36c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69982534-db0f-4d8f-8a3b-7a15b26f411c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b87e708-1321-4187-89cf-bb1a29674efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b8fea9-8b11-40cd-b88f-804ed41dba71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0ad4cc-a8be-42c3-a34d-9e4fd98fbfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fe0060-85a4-42e4-930e-b69986757451",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b85f714-1614-4041-bb98-3c1b1b56e96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fd198d-ef23-47b1-ba5d-67fbd23c4e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aac0624-dd7b-4a7c-8782-37577d38cc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3731a1-2d57-4ea9-8bf3-194c0efe68ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ce5119-5c25-4b16-b146-4ecf53c749ad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd2d397-9418-47ad-8ed8-326a714cd454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93069da4-1add-42c6-ba27-27bf869012c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f5d804-a3b2-4098-9d39-8aa798636725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddb2878-62c3-4f69-80ce-e61e55515fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b00305-ff88-4b82-ba3d-d29b40b2bcdd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8dbdcc-6d88-40dc-9960-69369911a3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a11108-7e4d-4cbb-980a-2f4878099bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d99688f-1e21-477e-9763-837ba5073d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f173d76f-d246-4c1b-86f3-a71df35aed34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9027202c-73c9-4a57-ad20-e4ff5fc7e216",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f5715d-3c07-4cef-9870-3a8e10f46bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b76b18-2775-446f-af15-1ff0a1f96b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3bce6b-a079-4b7a-a5d8-faf25c8aabb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c912c218-9560-412a-a70e-fe11034a1e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ccf03d-b0ff-403e-9ea5-4a558c3e0eb7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e9aeb7-983c-4c19-b0fa-54d7aae90e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3331affa-c189-46f3-8132-4a6f5c0c29c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8cde98-6ba6-4171-b802-55840d3cdccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ce999ebc-c1f2-4544-865e-3125209b8e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c0ca7d-5c22-437a-ae13-3ef5829c7908",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b26974-c062-4d35-a77e-393436748730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d217512f-ff05-4aaa-ae55-a26bdfcc9df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f171446d-e7b0-4147-a749-a0959645e0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13e9b7c4-5777-424a-9590-f064b9df3f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03425e9-f67d-4f2d-9ad7-6566f70d0ef8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b991a5ca-232a-48d3-b335-9aca92f34443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2156d4a3-e402-4264-8739-1587537246ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadded20-d44c-4db1-8125-987ca9a13443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1631f8-d40d-4fef-9999-c9466596a241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d039af9f-6357-4001-a714-94f22889caab",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebee7c33-3fd6-4524-853a-6aa613163d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240147e2-0f7f-47ee-80a5-bf9ea87faf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a36182-07c0-4a79-b875-78ac0f3eef59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91991a4-7eb9-4f10-a38a-b6f339301d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03263897-6f03-43b8-88e9-935b8c172e5f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7b3889-4fb8-4022-87fe-45fb0d8c1543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24caeecc-55e6-467e-a502-1490b35048c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24abcfe7-9964-4c1e-8855-a81e9b0b6361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b074f891-b04a-4bb5-9a3b-787d1d072557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01771a20-9a43-4b80-bcbb-08179aa08754",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfba28ca-e113-4670-9aac-6c8421e1bedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd77f9d3-75f0-442f-bbd7-c1ad0aa6ce7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10e8f74-c7a0-4b28-a588-2c3fe471e529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85877c8-3fa5-428a-8d05-c362b52ca469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd30937a-0e2b-4d91-b49c-2f3451925127",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c34b063-83c1-4301-8ea4-0e94f1ab140d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a59f1e2-a9fc-491e-aa94-f02fac951935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff89b78-d644-4329-bac2-6452d575867b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0f4b29-4310-49dc-85cb-5fdbc76bdf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851f6b6d-91a9-403d-be86-e97cd1ae4433",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b9eb52-ec2e-4f26-bd37-1ebdbc4fc191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac918da7-978f-46dd-9a06-3f11ac33bf21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa3410a-3200-4577-b27b-3245e432e9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c20c2cd7-3178-49f8-9d8e-0251b96135f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615b75af-d0fa-415c-8e0a-13640e6deadf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aaca04-47f8-4e2a-9534-f65324536a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3d316d-2c3c-4ee6-8908-8a547b563429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7069e35-5960-4a27-ba89-7aa39e5e31aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec26a28-7027-41c2-8f5f-024ecb5dd472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a757935-046f-4c74-98a9-c6e6c4b6a975",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8c0fe4-8520-4eb2-982d-bd4878682c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6986df-fc60-4d83-8477-78cd2602ed40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecb5e72-ae8b-492a-acd7-ad282024298f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "983d0fe5-e7ae-4841-a8c5-709657514b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c29e4b-f8ac-489b-a750-4202a97bea38",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01218655-50b8-4dde-825e-63ba0902fadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508c4fa6-3b01-43fb-9bf3-96fad5ab482b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8fb08b-f1ad-4563-aae3-caad778c9450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab84650d-2a3a-4611-9a4e-becd704d1cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a04923-9929-4aff-967b-ef75edb0dfaf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0941f9-c1e1-465c-9f77-e38ff9d47d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262b5552-ba61-41b1-ad99-77383c967c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b260928c-d7e5-4f53-9e82-f03c527bb5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d306dcea-2147-4e95-9ca7-084d9e3f2974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5322b48-abff-4921-9656-b843df42c405",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9470f249-4230-4e79-a016-30610a07307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1b1fdd-e35e-40d6-9fa1-c3f9f5d48226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0bcf94-5e64-4b1d-95df-9c47f5278bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffcd0c9f-1e03-4e9f-8957-4ae91f6653f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3779757-e78b-44de-8f36-db66bf9dfe4b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61c1d8e-2b5a-4cd5-8419-b05aa6b23dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026b9873-ef6f-4c62-8136-f604c5096d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ae2b13-3a82-42b5-b5f2-5139a2051440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4625e0e-358e-456c-8819-5817b105d3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5222f83a-d494-41e6-a6b8-c3aa067855fd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1ac46c-fcca-44b0-aa69-6617968b463d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfa9d33-dde6-4d2d-96ce-f70b2bd823e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d537550-17d6-4bed-bcc4-3033c8d2811d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a62c43-fccf-4570-914b-dff8a9c2c4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c737c8cf-9a2a-4c10-8e96-05a65f821d35",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e56e82-9d71-49f5-a39f-d869e93a8989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4ab726-6ef9-421c-8ecd-0951c206ae7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771780ac-91cc-475d-a9f1-25641c7a586c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b943d3e-91ac-462a-b607-0619b762e2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515a4576-f619-4c94-b4f3-62372affb4ed",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c65414-b18f-4bad-aa63-ee27310bf077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643fcc78-ee56-49ba-9cf8-e9b1dc1bb90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56bf78e-7274-493b-8cd4-51d4e2751ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d475eb7-5985-4da9-9b20-418b0daee2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cf4475-f7bd-41b8-9a7c-57ece852d4a0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068b5b32-17e7-48f4-80a8-ae807f2f3246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9801782a-eae8-4c39-86c9-11b8e0ada7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daaaccb-7074-493f-9837-dfd275ea7df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f864e6-41cb-4b64-a850-f2fe5b4a0b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42916ec8-f8e5-4109-a842-6eeb0cbfad28",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cca444-37fc-4578-9c2e-e94c8561e54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6f70eb-a793-41c3-9661-7ec07dcac833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eec2370-5964-4950-84dc-7f2a9e3e01f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4497b185-d91a-4195-9483-b4212148fa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb839168-1abc-4693-8e33-fd7174e6daed",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c742247-a811-4a6b-8fb0-ff4c8afd43f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2c93af-e531-4c51-bc2a-b7b4c5ba88ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44adec15-48e1-4098-a8f1-1d6d852a4392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d5a4f7-03c4-4ddd-a82d-7e3000104037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fd1c66-eef2-4314-9ea3-c6b176d569f1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24424151-44c8-44b2-a907-523f593f0cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3236808-43fe-4452-a52d-664d6f5d4086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28de0c57-f255-400e-8542-63e7375d4a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6ab928-26af-44b7-b1a3-b6b612befa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e982248f-fe0c-4b09-86dd-633e23d6b33c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cece62-cd29-46de-bd2a-9efbcbc6d6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048bf3ff-919f-45a1-aeaa-70c4e911af4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a8f07e-3eeb-4831-a3c2-be7f541b7969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4c44b6-68fb-45b1-8365-9521c05d6d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2f3d70-431f-41cc-9667-3d5a2c689e6b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be50994-4e8a-44d9-805d-c3984e836940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5d9332-1d96-49e9-9779-908a4b9a809b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd052396-d1a9-453f-bbd4-f199fa1d6d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "566121f1-2ee8-4786-b468-beaf7f4d69f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc8e900-5503-44c0-b42d-140d6adb1f12",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f95c9d-b697-4055-bd7c-068a8dccd2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401d2236-4146-4a19-8e86-5946f63d7346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3720ffe0-0aee-49ec-b826-0e8bd0aee05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5c8dc8-8572-48b5-97bc-e9891e6d26a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955cfd26-adea-49e4-84e9-406baf13c3dd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001c543b-ae29-4bcd-a4a0-8b64a870bab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2677176c-c76f-478b-9aff-47381ba7461a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56033475-e3e6-4be3-9022-a0f52a21b1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "113c31f2-47a3-4424-b08e-b1c6e9699e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dfc62b-5826-4daf-9cff-29e55be9d3c3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2214d4f-8db8-4044-a5f0-b02c5b365bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d05559-abc9-4728-9854-d31210d0c8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f414003-f0f6-4bd0-b3d1-fc93d994f2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "146aac6a-a20a-4c9a-9350-6a791e1b468c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2e0cee-14dd-4021-8e3d-001c37c07e07",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a872335-72d5-4bbc-88b7-6c617b8b4b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10485103-ad35-4dde-9222-58bf12fa3662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a149d68c-eef3-43c1-8af6-d278dd6d5b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1df72457-e60d-45fa-94ad-c71a1975b267"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b1be963-edcf-4945-953e-1fbddf109e87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1b92bb3-dbd6-4c5d-89d8-693e4ec3e66c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce80fe89-b25f-4f74-ad6f-148f6e5801e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d86b08c7-176d-4a39-939e-a87e2d6cccff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891560f6-3dab-45d8-8052-c3b57f067c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbe42816-e5ee-46d5-b56e-f4fefd547018"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22abd85e-e97e-4e97-bda8-1a52c6dceab0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "356b7d67-c102-4643-8247-4152a373a9b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2da39903-eab3-45a7-8ee6-40190e274978",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b87dd95-a559-464e-a39a-391feb40272b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86aa145e-7b6c-41c9-8479-8c3228359dd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2c2c77e-e30e-4427-9804-a9bb9c3cceec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c2b03e7-6920-45f1-add3-a4c9f6f6acd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16782089-b771-4f99-83d7-57090abb7af9"
            }
          }
        ]
      },
      {
        "id": "b4b121f0-a8d1-441d-aae4-a4c466de0338",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f5e1e979-75ce-441e-8d1b-1ff964b58c5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cc10314-a92c-4d63-bff4-228e07279675",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2551f80-28c2-4ffe-b563-ebd31da686d0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da70ae3-92db-4af2-a00d-4dae10acadf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a283963-e572-41c7-b5f8-89887ea121b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cb2cfd-ae82-4990-a2d6-7982d7f829ca",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f09130c-c59b-4b9d-a750-de68633998dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda8b5ef-4c9f-44dc-87d5-01df68797dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857121d6-7e3c-444c-9f17-fcb133cb5ffd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba9cb1f-ef6d-460a-b81f-42f655eb01e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53821a7e-0a73-4af7-9027-0f753cb6b256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cac8705-82cc-45ed-9b15-17d6f1da3cd7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b9cc67-cf26-4eda-8f7e-0928c2dd1156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0be24ee-97a4-41e0-8b7b-0d1c8115bda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0978be03-c1bc-4b2f-b4ac-1967b085cdd5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a082c06-6150-4dd3-bc3f-fbc5ec40c4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e0ecc6-6aa7-469b-9c0a-52ba570399ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba99ff1-bac8-4c80-b825-1cde938db77f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fddc017-83d2-481b-91e5-b93a3989c7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef01a4c-159f-4d25-b8a3-8d6e75e8741f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc252d16-172d-45b9-bc9a-f9d3e5c3de14",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b5f834-ad39-4459-ac3a-39282a09a481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41e8478-a201-4b89-b2f1-8b500da6f23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f091b0-b259-4eba-b348-3a2aea6acbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68db78ae-acd6-433e-a658-90dfd2641794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489aead5-6c64-4bad-9806-4ce3b8769c3d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832fc75d-002d-4848-856c-f497b81bd613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf105fde-0dc5-4594-a55a-5d3ea0dc71da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea43940-932a-4b80-bb74-743b21bc9bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c00517f-f32a-4093-9aab-62335f3a4474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c530bd-4f0a-41a7-9a86-1901d009322a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10533465-731f-4731-86cb-32b811fb070b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f23fc46-1ef1-48d5-8283-56ce59199dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336b8ee8-8eac-4484-9922-cb56cb2abd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630d1f6f-6ccd-449c-9c3e-79b3a67fdebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6942bae7-7abe-43ca-b342-7eeb83411008",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea7a221-e0e5-415e-a928-f700dad54e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a551fec-4292-4989-aeee-77ec32017572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeacaaa-575e-4da8-adfa-84260c8e985a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51100a2-50da-41f6-85fb-45f573eab494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7cecbc-7c68-4f51-ab93-46fa2f7254c7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b08b481-7653-4f11-920b-421447cfaf91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146cb975-b936-4a67-a08c-e3c25ac18f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1807f7-aaca-49ba-b9ad-857bcba13f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e7ba4f-dbd9-4910-8c0a-270b8e44d50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3ba5bc-bc64-4529-9380-fd036ca4323e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f51aa6c-9666-4f43-9378-7d022a47977d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92337432-e536-4865-a1e3-6835f52192b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d732a901-685b-443e-bac6-e457c25480c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d37e6c-dced-470b-aac3-6ba26eb8a559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9dd3cc-da6e-4252-b4fa-89325d7dcec9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491b1a84-a601-4189-9b5a-59b174217397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42bafb39-5d87-4c0f-9e86-9c8de63356da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909f9a8b-d689-40da-bfb4-2ea1574f14b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7523b7fc-1248-46a0-a4f0-058274c87468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcae49a9-88f1-414c-a2d2-ccc3451ae90d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d1b779-5967-4948-844f-9cbe149a3613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19e882e7-3e87-446b-98c3-e1e9ab6373c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9ad60c-3ae8-4da4-8acf-05aa0edfcb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc7f99b-e935-4349-9a21-f2e7db552acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425b63d9-aff1-4766-92e2-fca3f030f6f4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f5044b-8d49-42b2-bfaf-ed39588a5736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c719a657-923a-4dc4-a5c8-b66327761d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24749c73-a401-4c13-8974-ed859214d2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1122a9-fd40-4ca6-b6b4-b0ab94932d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d187660e-d85e-466c-84aa-44f3d3dbab8a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d216ade1-c837-4b2d-a4c4-588d22405721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "968f2346-b884-4e3e-b98d-2dd3f3f9db7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8115d4-1e08-45b5-86af-c8b6f2ded28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faec0bf2-811a-4f17-a747-12ea5f304e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d850f52-daeb-458a-988e-e4dbb19067ba",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dd625b-6d2c-4c15-8775-3219b716f2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8ae78b-f63c-4306-aa4a-2fea79b334a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ec369b-4853-4406-b6a0-6629ccacac1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb67200-4cd8-4642-9e7a-295cc374870a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5720399e-6b2c-400c-8a22-73d8fe702258",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e541ab8-15b0-4943-aba9-705adcc48964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074ea032-0076-493a-9f0c-adfca672e78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a50cb4-94f1-4b07-a36a-b84e98e09d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccbdaa2-a7e2-405b-a612-1de3e236c44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7b0a7d-389e-4ed2-bad2-7d8024484379",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806a7be0-8176-450a-a2be-55421173e0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd6c23d-9268-474a-abca-9c346b5bbde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21254f4-5b35-4732-aca2-183e804086cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f8c5a7-614c-4609-bd3c-4b4763fec051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e14df5f-a05a-4d0d-a605-69d2c6962a6a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459c28fb-bd84-439f-b4d3-17a310574f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2b7bdb-ee35-4f62-9168-fe45ffb68dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253f2d4b-7dff-416a-ae5e-2c1d4ace55a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1ab5a0-bdd3-416e-aef5-97778c2c61a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87a24e4-37be-4aae-9555-6dd9252b10ea",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27064bcd-ddee-457e-b13e-e00b54e1492c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f6baab-9b23-4a91-82ad-821472fe16dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2e13d9-d232-4d13-b1c3-620d32ee2468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc710b17-de53-4007-85e5-0803a11dd5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9177baeb-6c5d-47a3-99b5-15f693e9270a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97513460-6aa1-4f25-9228-2e172522fff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcef9cf-dc2e-40b6-9741-2f705f913aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2df6f6-38ec-4869-b115-6456ccf4de2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34330ee3-b2af-41a7-bf67-0daa3a5fcf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb3d02a-80ad-4f1b-af5f-20fb8697d424",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad95f9f1-333b-4cb9-a6b7-0e924d8d2425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4b8c06-ea29-48ab-a87f-5b424094fb1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c090780-a14c-4735-beab-743c70473bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e33e8c5-a0a7-4bf7-9b90-38f4ff5676ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e91afa-2921-444a-bc0a-09f1244bc51c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2eeb10-c1fd-412d-8849-d0753e49cfab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d257a527-f735-45f9-8667-a9481cabd370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aa7742-69df-4f9a-8459-99e35ab3adbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4884c473-02f1-41bf-ac54-9ab2dfa78f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816416c5-a08c-41ea-a063-5f8f40770a1f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524a4692-70ff-458c-8211-a3aa884cfe40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c88603b1-1000-4a0c-996a-fb0c70fa4afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5430b1-3275-4027-bdeb-d1c2f7c77324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff828dc-93c4-4c35-aa8f-a385d70a4edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fc0fe7-948a-42df-9fe4-e85858fcea0c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfa4150-bbf5-431f-83c5-10cca5aedaae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dcc0a86-affa-4171-b9bb-d47ab90874f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b568ead-4230-4556-ab94-5c576eabf9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ed155a-55f1-43c6-94cf-fd07eb32ed24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f52e0e3-fa6e-43e8-b616-733ecf5b1b3e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff314f6-002c-4c30-831c-a19917d1dadd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb0a011-0372-40d2-98fd-597ff72cd011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8037fd39-83c7-4a1d-b495-33eca0578e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f850d222-a6fb-4bdd-a2ca-0fa306877cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b30a198-abb1-4ffa-a848-975838c1d17f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c3c1d1-c407-4fb4-ad61-55d446766c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e485512-ba6c-4406-a427-e09eb5991ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b185400-546d-4adc-8bf2-3fb516287016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d068a7f6-6080-4d28-8e54-b9079a09233a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e88d081-5cd0-49f7-a104-3c4dbcebd25d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7848daa-d415-467c-8d44-11378d9cfe36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca955733-fa19-45af-b93f-2969af9c6764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97304ece-7b6c-490f-ac5a-bdc0c3e15fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849851ec-e19c-4112-827c-58356c33304c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a0f3e3-8bee-4008-a8f3-392010b8977a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d56f077-51e4-438a-aee6-27494761905b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6d7c44-d025-47ff-9274-9f3041fbc07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f416a105-0fa7-4408-a794-aec086d8d50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219bf582-f445-4273-a8a6-5b6fdbc3df31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f937a2-2b06-4cbd-aa8e-148607ed5c74",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086a52c6-2b37-43b7-a8a6-3d2f23eab036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2345294a-5521-4a7d-a42a-8d48361728b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc901959-6892-4794-8d57-44fdf7128fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb81a86-a277-4826-8579-f62466558f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ca86e8-b0e7-4603-b998-d271b3ebd0f3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d55c20-740b-4f88-84ec-d5aa7d448129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5fa37a3-0df9-40ee-9c83-aa25f2ba4a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75864479-3fcb-4b99-9975-423a646be62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76b7b6c-8fc5-4136-b92a-c1837e422a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242f55ed-f5ed-48c4-a0e2-b9e7f84c4aa5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71b8acb-f3c6-4ac4-a2ed-7a2fcd9a1af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66200e1c-ba83-472f-bdac-45143cd545cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14398dff-b4f1-4b2c-b4de-b0f42ff3c0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fee350-06cd-4bfb-a76a-cdf490cf149e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a4caa7-af03-49f1-b62d-51d252d1128e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e377986-fa37-4f6c-a9af-94daf5bfc0b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8977cddb-ade4-4f8f-ab46-d5005b0096c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35be9047-ca95-4014-8918-5214f0ea41f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b08c2e-3264-467b-a7bc-101369d062a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e4b7d1-f063-42f5-a9fe-0c66a32b8bf4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47a3be7-7fd1-4b4d-8979-5d457ae35cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77dd70aa-85ec-4031-a91f-0e8875f892d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bd84de-8d99-4ae9-b62e-c2e84e9b973d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a205993-2a85-4074-9363-15cf54cf3e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcb1a90-5428-4694-ad14-f1947355c3d4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189b62ef-935c-4052-98ab-bff0469639f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62f3279-7ff9-480c-bd75-6307a0229bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280ce67d-2ec3-43f9-ac4e-1626f54a1eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb7a5dd-c0bc-4c62-a0b8-793664dbd027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c4db69-5dc8-4e66-97f8-a41bc909ba3e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c2ca51-86df-423d-b946-94b4d909a626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131812c6-b4e5-4c79-b5c1-9b41c5b8c56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad1400e-9c8d-4c76-861a-fc7e3d9f69e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1c9f23-1c6a-468a-b84a-fd58d80f6694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f2c794-dc31-448c-bc74-3890d8205564",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83cb2b4-2739-4752-8e6e-3d95fea6222a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f2d40c-80bc-4594-a6ab-2ae1939cd571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485bbc84-b293-464d-9dc5-90f65e329845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39316672-d242-41dc-a30a-4bce13a1c6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463e0dca-517a-486e-92e2-1c46912c6493",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d068f518-3f79-49e2-9a3c-35909cc8638b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f53c23-7b04-4dd7-82fd-321f37e9ca6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac2c4fc-ee84-4cea-a317-f9c752d5e43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c2a20b-24f2-4ac9-a56b-0a34bb9eae9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae12f93-e901-495a-9021-7e91b243fd51",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de95dc5-df75-4b8a-b174-8f5071f2090c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f755b6-8be3-4f5e-af23-1538a1e9717f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3ef922-7fde-41f9-816c-8451ed0a01df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24c534f-210b-4aa2-a49a-b3e517c761cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1575ee0b-72dd-425d-a416-989bce6dbdf4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33ef962-390d-47ca-bbb7-31e3df9a0bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b6d1d7-e9a1-469d-b224-49e096128efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906bb4ec-ea23-4c7a-905d-08682d69e2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34459bf4-bd16-4019-9d24-554d3e3b87bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fd5333-8c45-4e69-8db7-7c9b37e5b235",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffa7a76-8872-4cda-9e5a-f2078f6ceea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6dc278-98eb-46d8-8a19-91c478b1659e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421aef17-145b-43d0-9422-db67b11ecfee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247a7f25-c01b-4a78-a41b-51b5f38b2200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf379733-1687-4e36-ab21-edfed780b956",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cb7d21-809e-41c0-84b1-f8b7dae1eda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434b2abe-75a5-4493-8296-fa1108b2edd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c3d307-51e1-4325-81c1-6b496e5b2fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ef9dc7-ac1e-463b-b2d6-f4ad5165cc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342a5b17-2fcd-4614-9d15-12fc711b03a3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d7dd44-a8cf-4eb8-99be-6fcfdce30667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363689d7-d53a-4271-aab7-a836060dd3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873a8da3-3f3d-46c7-a69b-98cd301aceff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b304b3-688f-42a5-b23a-3712332a3c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c92771d-7aa3-4f4f-9f05-7d2706f57435",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f687431-4a52-4b9c-b733-5be04dacb53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47a1552-47a2-404b-9dac-4a9c39cd273d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e94f55-bb0e-479f-aaaf-ae4231de13ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01720b9-799c-4ddd-99c7-f05cc3051389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88e5743-1415-464b-97aa-71d1edbbea05",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18efd731-fe01-4117-929a-35ab189237a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3b04c3-9bee-4083-a79d-043872dcfb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302dab57-706c-482d-b08a-bcebad0dde10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f834f893-e8be-4982-8f1d-f5035768c064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fec390-41d4-48a1-a1d6-3c6b50469087",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f589924a-4ce8-4552-af53-9893b36ae942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf600297-aa3d-4598-beb0-ce9d957e76db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d24b34-130b-446a-a019-2d4c9f2d1d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665b3645-23ce-47cd-936e-10dea9b8c9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f01a85-e472-4b0c-bffd-733695de8d19",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a72677-2f60-478f-a3af-4e4d7c2deb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006e2224-4fd7-42ce-ae0a-c5fc65e2cbdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85083fa9-d2be-41ec-8842-42dab9f08ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c926b5-16b1-4d7c-bbb9-3ca8d7312aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f68c3d4-d679-4ea2-9c57-40c82d2f1eb2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d39c99-9087-4b22-807f-b554ed4cedbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b974e730-409e-4381-951a-6ad4b9f68b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f3d52b-9b65-4586-a442-fbd3b0ed71f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9f1bff-6dac-4d2f-81d0-aafd35a334b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2df2707-88b9-4649-ab3a-23cabb407705",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afdf598-ee52-4918-9386-b544ec318daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c08785e-44b7-466f-94f3-a228b9ae0e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3386a3d-69ee-4755-8494-af67b0e77105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa76533-dd09-431f-ba92-952e52822dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4174657e-8e55-492a-9a6d-8069035ff7a5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f83deb-b2e9-4f12-a2ad-a0841a11f3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17bf39b-9e2c-4093-91ba-dcdbc7840cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77da3c8-862b-4cc1-b82a-8a5e087420d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7f61f2-a2cc-4274-b5c6-21db12887067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2df47c-1e6a-4216-84ff-331477aae754",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293e20a1-33d0-478e-9cfe-217a05b834d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c05f83c-19b9-4d2a-8688-8848b1b8c1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4680ae-793a-41cf-b03d-ee2ea82a27a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0047fc6f-fc5b-45ab-9830-68fd25332cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650c5282-3fc4-48fc-95bd-ce1783a0068f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db59982-4cb8-4385-b825-6d1623000ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7877ec-8eee-4e67-b279-c746e4cee26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbb3673-7f09-4ee2-a848-467b61587856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb6f4b1-796f-468f-ab16-cc56cd5f8f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e11390-91c6-4e59-85e1-e3cf559e2a8d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b95c7f4-601b-4910-bbda-a0e842015b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1a28c5-1756-457f-ae0a-d878471331cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bc0b25-faac-4e54-b27b-6143e91d0eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd968506-0e21-4cb0-b227-b6c21bbc372d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c410b89-73b4-4e43-afa1-9717c70e2fba",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baa7737-1937-4ee5-9601-75a725a79d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb527f93-bc99-4053-a024-5f4a02491ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a3360b-f9e0-45d1-aaa3-2e63fec3a020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711088ab-3a46-4b87-8fb6-13aeda4985ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02669a9-b4ce-4622-bc09-1d4c35e85992",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4770a4a7-2fbb-441d-97f0-e46bd552b440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42348109-bc0f-45c6-9ac2-25d1644c536b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c7ad50-3d1c-4639-98d5-d9548e52dbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5609c46-88b4-43fc-9f63-6387d08cc8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38901f0f-cdd1-438e-a419-de891eec4168",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88879b6c-e8b2-4fd6-a919-5787a423ab32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a37b3fd-0f6a-4149-b544-35fad3dded1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446c5c28-eef3-4235-a852-1624c7264a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c93f02-fa48-4f14-8b0b-d8909528f7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b98b12-ee93-4e58-bfa3-20c2bd066d26",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbb08d9-a7d3-4055-b389-219a7f343bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57a644f-01b7-44f4-8660-7198e384fb67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae9421c-4334-4d44-b650-1fc6ac00a44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91be9420-7e09-4280-8052-17e49d321976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5315ac-80ef-45ef-bcb6-adec8c60f65f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44eee5b-1df5-4bd4-b825-9720390920df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d89254-2552-4016-b9c5-b52a9c54c623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4448086-d8e5-450d-8177-94bb42055adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62469a8d-729f-4493-8a29-145f778b7659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88aa0b1-d53b-47f8-86a9-a9da03f3c4b9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd98e88-87a3-4cfa-bc02-2dd1b9479b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99235ae8-de64-4843-b8d8-b80c596e6aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fed9a47-d26d-4bd2-ad62-f47296156c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a934c4fc-7cbc-4493-bd47-a6c51dfea4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfef75f-1a62-4a7c-8441-684d1711d8cf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0abe23-3af3-47b4-814a-0e72488d54cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ace9db-0f6a-4121-82f4-98d3dce4b41e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cdd41d-b894-4c19-b5ff-620a8e2b9f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2d6892-0263-4a45-ab62-10a5e5ae7179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890a54ce-049b-46c2-a373-685ebb5b1b07",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857d27b9-a57e-4253-82e9-40960053a60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef276432-68dd-4d65-9598-44b90165afdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8278272a-7f06-4cac-a317-b9ee087789ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91eb7cd7-918c-4139-b603-a5fbe5c5571b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2c35eb-b48e-4a85-92bd-f44115c877f5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008f0ea2-70ca-4fe0-997f-66b0e4128e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b819b14-6cde-48ad-a5d6-5115dcc8448f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25e56b7-4444-4f7b-b66e-997710a2eff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba12a8f-b03f-4cce-9aea-d94ed297c15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afa02f5-a4b3-40ed-b5d2-a50589e15e03",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc317ee-37a6-4807-98ff-2f33e9bfd90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de932e10-cd45-4bee-a3d0-201bed565f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28153c5-babc-40f7-ac13-6c715ea2516f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966f1307-1546-4c0f-8a50-dfa917f0bd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b30f85-dd5a-4530-a78d-27d4e416d0b7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e649b3-774d-4777-baf7-e13dba6a8074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59734bcb-5f30-4ff8-bf91-d8c0062c4fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a88a7ac-3e51-492e-9f4d-30f5d751dfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9d50d2-fe98-42fa-93eb-748182c2bc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c44484f-6d24-48ad-9e30-20dd6f2c68c0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44734933-e815-49ba-ba44-98ef9336da86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10e8602-ff76-479a-bbe0-6ca4f6243c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7889d13-6601-426a-88ba-786f64a1197e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d6dffb-1fe3-432e-9dda-2c769987e3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71909951-55f3-4db7-b676-6fe0af535170",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ec2e3e-d922-4dd5-83c8-2d46ba97dd96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e898c25-f0e2-4a3e-9567-a9c4f5d68381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebdd77a-575d-41bf-b273-3cccc8e27ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f091a2a0-fb4f-410a-9b9a-3cff10a777ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cbbb81-b2d6-4c56-a216-0129c545f282",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73ff238-f9b8-458b-b502-7f90d2949d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f0b1fee-fa06-4826-af3d-a3d02371d98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4e3180-96d3-4661-be88-ea25fc9a762c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c80129-e3ae-4c80-aae4-97d5611e2d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0778b827-2dcd-42f9-97de-e9ba01d803b8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1d5433-7033-4e77-8c04-cd5f5c6a1e26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84dd3172-1886-4025-8c22-fe2ff1b82a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eddddb0-28a5-4197-8306-24a583794496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1b621a-8907-4237-85c7-eb9c86b6ec3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58936f22-af32-4cd7-919a-0671c4273382",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e82c27-b913-46bd-8eba-6633a36ec767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4873ced-722d-4308-9a92-580deb55dc0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d34872e-e17b-4eaf-9ec5-ad2283faea7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17f00f0-7098-4403-8334-1f38c1e24b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa7d07b-6024-43bf-94ff-6684a16bc090",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30253f85-9b0a-48a5-b4c4-f8fbb86aa671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6767336d-14f2-45fd-a270-6345267c1c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7607525-1e4f-40fa-85ac-767b8804c4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ce8bed-38d9-4183-84f2-6f699f036052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d66e16-4914-4b5c-97a8-6bc4c3215e93",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6429a1-c085-4e59-8593-cf15807bd851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0488ce6d-7e69-4f71-8add-108b9d641bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "becac9b2-4380-4abf-8645-c29e4f0c48c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2443a01a-8276-4a89-b380-b81c688f9bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87563635-7c7e-4f3c-b8eb-bc720c404bf4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ba687c-8d5d-4abc-979b-65247535e95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d1aca5-e784-4303-9531-d0e754e4db55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76325beb-ab01-4fc0-a576-f592d4d4b080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6140b07-3281-4847-adb3-3c82275a7fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d817f2-88ad-4d74-8fa2-7e8cc560239b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef30f95-3413-4a2f-9bde-8d69c72c1e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59ad29d-c7e6-4eec-a023-60c45d84896d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7ecbcf-bdb7-4427-b479-4afd8c2b00bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a1c097-0adb-48da-8bad-bee0a68108a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3ac028-8fdd-48e7-9c44-2fa3c7cb7ae8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1e9623-24e8-4bf1-b504-d98dd4c1c67e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568e7b3e-7821-4de3-8493-4c2394782451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d2b583-1395-4730-8466-5a12db8ab852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ea5c38-9139-4409-bebf-a2a3884d68f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f6510b-67e4-42f4-862f-7c2febab3735",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7243705e-169e-4c34-a2d7-7c6bce7f9a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e5febc-ac25-4c2d-8336-cd340a8b47fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6384bab4-d257-4c53-8d50-76067a126b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2a68ef-709d-4a72-b40d-075aa2f53131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5998d73d-da09-43e1-b40c-58d610bcba7e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867a11a4-8415-46f3-b405-ce76d4b4b31e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e63b3a9-5d5b-45d7-a53c-2733d742e07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bbb2dd-480b-40dd-90fe-859958261a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811d5964-bc41-4c9c-9d8f-2f51fb2d3a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1686b13e-db2d-4675-9830-c274c3522283",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c6f7c0-259e-4c75-8e4a-8772c72ca16d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "663cbb3f-161f-416e-bb43-ba5acb4e3b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02d8af0-7c18-47e0-ae5b-62eeedd06f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca67f03-5e21-4881-9736-6679fdd64479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24abd4b2-4e23-4f24-b8c0-03c4892d7b66",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e61439-23ec-4f5b-ac8e-ae764a1d4afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e75e01-b48f-4226-abc4-728aa74d857e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0b4437-df9b-4e87-8997-3252e2e02c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b049a3-4017-4235-b873-6264f57fd382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad4c226-05a4-45b1-8f17-784a8de206f9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba7d6b3-a435-4def-9895-2d221930d702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3080fcc8-d1a2-45cb-baa5-670b89744380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2da949-dcff-4d7c-a713-07551c1e5ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4da415b-59d0-4c6a-b8c6-0da71e9af617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8deeb5d-9923-4ffd-8c97-04d815aa06b7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5088ba-da84-4cc0-8f28-5f52d13cb276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a51df6-8c25-49fb-a384-df84b8f62d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab91e090-6f1e-4d63-b3b4-1ed06722fee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212f05bf-4e3b-4dd5-8123-33b5d5b4f470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626685f9-4f16-4580-a21d-a1f264b0c491",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190569e6-82e0-4fd5-9da5-58ac4c482132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cdf33d4-d698-40ac-94a4-449fe302a45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e936bd62-95a6-4e0e-9da8-b372d3b06b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb067e2-58a6-42fe-9fcc-3b34e3b24f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ace8650-7b78-4937-922f-79038ad3e66f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f017b38-bc60-43a3-ab4b-e39caa346869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5325cd2-18c8-46b3-a4ce-60ed4a688fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13cef84-7140-4012-a63e-107b8d415e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f5671b-08ef-4246-a7d8-1516ccc67793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454d6dd2-3190-426b-93bc-1074e21d407a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc99b121-09e9-4ba6-8983-4cf7f4faf88e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1319ca34-89a1-4a93-99b0-0dacad49218a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7635538b-e0c2-4fb2-886e-7c98db869a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecc78d7-4aa4-4df4-9d74-e635915f7518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229f9995-a6a3-4f8c-9039-ad0c56015997",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80d9e4f-7cf0-4efe-8729-9ff58cf650b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "044c7470-8474-409f-8466-7f65cca7fc55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fdd1bb-e707-4ec6-80e8-54da5e98e823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c601ea6-61d0-4565-a814-a3d5d3cd6ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194b99f7-5051-44fe-800f-0d0bdd25a660",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e173055-530c-40a9-8635-ac8ca736affb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0fa6bc4-e8e3-4be3-83c2-46bd6cbd821a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce0bd8d-7bc7-4db0-9d43-f0d1a15a7f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18260ae8-165a-4452-b57a-ffe74bd3a7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdc330f-e2f1-49b8-bc78-2949b85169db",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c940f3b2-3e0c-4a9a-8641-3e4b9eafcbec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0db25aee-ddc4-478e-820a-2ebbe41b16ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f458265-08fd-4152-b7dd-7539b483e3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6849aa34-d6a5-4215-9489-caf92a4d17ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038839c5-933c-4677-be37-82d86aafdf6e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d784588-6d79-4d5a-9ef6-68dfff7ca7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260eaaeb-4702-4077-ac24-0302df8c7719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d811a9b5-b67b-4db7-8f8e-d160ad0b01dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a164d935-6370-446e-b875-95a6420acca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dfffdd-fc60-40bb-bffd-e365445966f4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25eae8a6-319c-48fc-865a-bbaf711d0e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eabe9ef5-fe88-4a38-9be5-9504a2eaf3bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c08ced8-ec0c-48e7-87b6-813b359ebfe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a96cd0-43a4-4e21-974d-fc608bb5a968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ff4ac3-bf74-4f93-821e-bf4fcfbf7c7f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71711e39-fa8c-4976-825a-9a91f3b970ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce48a03-e75e-4747-a553-43fe1ee995c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7e79f4-736c-426c-9189-232bab279ce0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2e5c1b-3250-4b4b-b1bf-924068205855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b190da46-75c6-4551-8094-93581004f41f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167aac2c-00fc-4235-beba-b2d91f594d2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b11cdc69-5896-42dd-b692-2f3649afc18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d2c64f-b948-44af-9aa2-83e31d8f6ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf0bd32-38a5-4ca3-b8ec-ee046b3f5164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f8bdb2-972d-4a8d-98ff-b767e5a6cab6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cf607d-e759-4d84-ba7a-7b0be405e84a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa90098-1bf4-47a6-b228-86c0695162e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a63a2f0-e415-4421-928c-ff82e186442e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75ee062-d3cf-4377-9e3c-d0244a00554a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2f7bcc-5862-451e-99a8-21bed0f11af0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855f13e4-23bd-4d63-98ea-a0b8442c0b82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7108bb2c-2199-492f-b247-53685de6d04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c9a665-633e-490a-8041-9e27455c5485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa0430c-2eef-4177-af9a-a57eb8a4e2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2b3ab5-8c12-48bf-b1e5-c98142dbc1b6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e01d25-7abd-4b59-b261-d945cd96015a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3158f348-fa02-42ca-a1ca-d9a9e04678f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a694e5-37bd-452d-8374-7487bd3b6ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6fee55-ac93-4465-9096-cd6ed5e4944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d86cc23-1d0b-4cf5-b631-dfbf24c2182e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e758c30-4782-47e4-9498-40ff77d1b554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175a817a-d9ef-4e2a-893b-cddbb336471c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8128f308-119e-42f0-8494-fd2d1f1eeb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6425a22a-e3f8-4134-96e5-cd6b0761e00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15c2150-aa94-4738-842b-3d0daeea676b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a758e05-fd49-4362-9e39-4f18856a25cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11313bfc-acf7-4fd7-b13e-188426abb7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b07acde-c8df-4da2-9eae-cd18be143aed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76036ea4-a3a0-4125-b8d0-99673ac16777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073b769b-4413-49be-9a18-d3db52e75f50",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1705ad-9879-48fa-b84d-670e37020fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd4fe00-1093-436e-adb9-e2e1105b288c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9d886f-b9f8-49c9-84f9-c3d4e321ba80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c60d48-11ad-4471-a49d-6956399efc7c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce74d202-d477-486b-a98e-e8275ef04358",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ff7d2e6-0317-4298-befc-000b0d7d3558"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b213a2a3-b2be-41af-8170-52ed43fb073b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56aa7652-e711-4cf1-8dea-35fc18bfaacb"
                    }
                  }
                ]
              },
              {
                "id": "4b599f7d-48ea-45a6-afe0-b93961658321",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22b3afa6-7689-4ebd-b843-b8a6bc5b7bc6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c485850c-cfbd-4fcf-a93b-d0968c3a29e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9d0ba233-d242-4f38-b723-cd03a7d47a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf2c9b0-38a8-42bd-927a-b03681b946b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a2e7b3d-9bb7-49b8-a877-277cfa894fa0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94fc2c7a-4b38-43f4-8896-677c2479ce27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63613301-23c7-478c-983d-e658dca2d319"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "450650f7-d6cf-4f17-ae40-0c6c0cbdc804",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b625a0a-f452-4c5b-9eac-d5b9b9f5f328"
                    }
                  }
                ]
              },
              {
                "id": "41f591d6-93e1-4e02-9080-e1b2459fab0b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a4b0a0ae-0bfb-41a4-898b-7d99af8ba017",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e505620-dabc-4208-9702-303113a14729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "59dfb439-cbd1-46d7-9adc-8835fd3868cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4087e59-a68e-4cc5-8efc-2ae958ae7ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfecd352-7015-4b66-94c7-bd3b405d9073"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "158d7e6b-08a4-47eb-8f52-5c6d4c976e89",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e96ef6e-9f43-4d4e-b204-b8adb7a47ad9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdb1e91a-3119-4d81-93fa-88950073e2fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6d307f2c-f82a-447b-8e4b-b6ebcc4eecb0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7ee2e90-163d-4f7e-8616-cb238192257e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b8d5acb-ff08-4af5-94f6-fe075c1e1761"
                    }
                  }
                ]
              },
              {
                "id": "a71cfd93-c5d3-4b35-a7d7-b17181fb5e99",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05f84c65-49e7-4c9c-b230-8390440c378a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba39781f-e252-41d0-aa2c-2a642b54c7e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2f89eda-6037-4a9a-a07c-3a62f98dade1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8e58833-91ae-424f-a0dc-d0c4a85fcd0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4149a12-82ed-47d2-b69e-592e130bbbdd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "76fa8be5-7248-4e3c-8f24-12587255b769"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "552893f4-a8f9-4e59-ae9e-a3e4f1a73c46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fdcf68b-f374-494d-a55f-1635d6b18eef"
            }
          }
        ]
      },
      {
        "id": "e45efdd3-91b6-4e4e-98ea-94c853986681",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f157e23f-fa40-44ec-afb6-f9b11e557abf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b28eecf-6e77-4e42-8995-959ec3cb7df0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4834f966-c204-48f9-869f-de155f52b2c5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052a5819-7f1e-4d8a-bb87-cb4038d17278",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a0d2980f-0f58-4622-870b-00683f14bef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ef3e40-6587-4fe0-9a0d-34bb4c2f0951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3275887b-7d03-4004-bf16-e20ca76de60b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8ed7e01-8294-4b9e-9869-fe606bbe821f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e7b05c5-fec8-4010-bd17-558b9b311360"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "444884e0-5cb6-4d69-86f5-c8b211afd265",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "800f577a-fd17-4097-9110-debb0b097a32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa7ee38b-155c-4ae7-aabb-bce9852fc13a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e3946afa-9784-4ae8-9944-a01f7e62fc00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45e3b565-d828-47d6-9c39-b213c4f781f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "966112ee-2b9e-4ed6-af1c-a4580efe858e"
            }
          }
        ]
      },
      {
        "id": "bef98e56-b863-48c7-a966-a12e3894a827",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2554b5cc-2aa6-4024-ba38-c583b21d2dbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59ddef4e-1d36-409b-9712-6d6bc3d53473",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b51df16-5d90-43b2-8c65-a6f6af0db605",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d598eea9-3875-4847-a5e5-625ccbb9ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "660580d3-ee1a-482e-836a-3c999751207d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243e37ed-e7ae-4129-9950-a5e158e87b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d0a6fbd-e544-4657-93e2-a2c50dba2d4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51f93e5c-eac9-43dc-a14e-103c2ab9584d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88818a66-4250-4ada-aa21-c24b05b0eaee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d0c3790-d57e-470b-8382-748198f425a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "799858af-8acb-4ed2-924d-a4e587df560c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78318156-b14d-46e9-8de7-777f11b2a02a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f8e21e19-a0ae-49b9-9ef7-723be59b5bb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c3a21af-8bd2-4240-9cfe-fede14b2c722",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d35ab4d-5b3a-4a89-a72c-096db38a871d"
            }
          }
        ]
      },
      {
        "id": "fa656d54-dbe7-443d-b940-1a6bda0a8fd4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "749451fd-aa00-4391-a7f8-0cf8a8425cb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0e0d82f-b975-405b-bc4c-e408ed2f1694",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c11ee84e-6c5f-47ab-be24-a41d58c48d6b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f110defb-c7a2-4998-8ffc-17fd0ac3b681",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08e5cae6-35e8-42f7-8dae-660645bcfbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2aff0b-9685-478e-a1d0-861c6b6015d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c75b2483-d3dc-4eb3-8ae0-4690c9ec6fdf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7592ef7-3f9f-4793-87fb-2ba0ee551a29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d64223ad-96a6-42c3-a1e9-42a982fd7068"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11b6f787-b279-4077-b985-3b26e602989f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f701a033-d10c-415d-83e1-0022612fc0ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c778a75e-2606-45b7-b069-6961c9400fe5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d40f5df-0c58-4aa3-8f19-acb2e3f985fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d75f55c5-ec9e-4f59-b3cd-54a009b53e08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d5e0951-26b9-4cca-a064-3a2d57fb082d"
            }
          }
        ]
      },
      {
        "id": "5f0300e4-34a0-4605-923e-ba68781da8d5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "590c1477-e431-4fd5-9ba9-10e184cc1b27",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77c31f78-17bf-4929-b8e0-3002cb6d9a6e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a8730dfc-3313-4e4a-ba2e-7c839883135f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07872cd3-af6a-4c61-bc17-179b1a245eb1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "774851e1-3e44-4c50-b55c-c8f785e57ab6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 143.75438596491225,
      "responseMin": 19,
      "responseMax": 2789,
      "responseSd": 333.7300453697838,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703896465219,
      "completed": 1703896515452
    },
    "executions": [
      {
        "id": "fc2ccbe8-4c4b-4009-b886-9d891222208e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a2cd2532-1118-4a1a-b8df-6c7781730cbe",
          "httpRequestId": "bd177160-613e-44d0-b7db-5bc45c4a56dd"
        },
        "item": {
          "id": "fc2ccbe8-4c4b-4009-b886-9d891222208e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3b7916e5-b227-4b01-bd80-4e6bf0ca1b9a",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "9f2db1ef-897c-4d6e-8f01-49b153b43d00",
        "cursor": {
          "ref": "f177a610-9e1a-4752-9b4a-a30ab4f30bda",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f07588a8-de05-4c9f-94db-455f939ac0fa"
        },
        "item": {
          "id": "9f2db1ef-897c-4d6e-8f01-49b153b43d00",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "42471a94-7b64-4c2e-8a68-1f38521d781f",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "e60119a2-7557-428f-8954-91d4f4c0cecf",
        "cursor": {
          "ref": "1ffe5808-935a-44e7-b18a-c8044328b0af",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2ccd24c2-85be-4c28-9a3c-50768d851cc1"
        },
        "item": {
          "id": "e60119a2-7557-428f-8954-91d4f4c0cecf",
          "name": "did_json"
        },
        "response": {
          "id": "bb44bf77-c743-41ef-9249-8a76752a6767",
          "status": "OK",
          "code": 200,
          "responseTime": 608,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588ff3a7-b49e-4d36-a281-255002dd4f8d",
        "cursor": {
          "ref": "04fbc9a7-fca9-4d51-9df4-2a6eb4ee8a52",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e41e4f27-7d8e-4175-bd4b-a1e038f32ea6"
        },
        "item": {
          "id": "588ff3a7-b49e-4d36-a281-255002dd4f8d",
          "name": "did:invalid"
        },
        "response": {
          "id": "98aed205-f811-4c59-af9e-12c5254e4d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588ff3a7-b49e-4d36-a281-255002dd4f8d",
        "cursor": {
          "ref": "04fbc9a7-fca9-4d51-9df4-2a6eb4ee8a52",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e41e4f27-7d8e-4175-bd4b-a1e038f32ea6"
        },
        "item": {
          "id": "588ff3a7-b49e-4d36-a281-255002dd4f8d",
          "name": "did:invalid"
        },
        "response": {
          "id": "98aed205-f811-4c59-af9e-12c5254e4d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7af19e-4bd1-4b06-8934-10965b619131",
        "cursor": {
          "ref": "01bfa284-eccd-4190-b2db-64f206faea4f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "343f51f2-bb1e-47d2-83d6-79682b9976d0"
        },
        "item": {
          "id": "8b7af19e-4bd1-4b06-8934-10965b619131",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "aeca5b8a-3173-4085-b152-c0b8339cd1cd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 160,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3ec75f-96e9-48f6-8b88-b93c7edcb545",
        "cursor": {
          "ref": "63f65c41-0f7c-4309-845b-d62cd2986b0e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6e014d24-bf45-4565-b98c-6a9b0799c576"
        },
        "item": {
          "id": "fe3ec75f-96e9-48f6-8b88-b93c7edcb545",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5546c95b-f0a5-4edd-ab47-1e4a630b11d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 89,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ca9759-1cd3-4e03-87ce-854851e4bb71",
        "cursor": {
          "ref": "c2cba291-6d61-41cf-843d-f4fabf4d76d7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7fe53d8d-e2bc-48c5-bc58-a4dd19c13d70"
        },
        "item": {
          "id": "d2ca9759-1cd3-4e03-87ce-854851e4bb71",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d21ee7b5-9f03-4501-8879-a6b7244483af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948a7095-6be6-4c5b-a501-4c40b7009c18",
        "cursor": {
          "ref": "9c3f4b85-3245-431e-8c17-7250d6aa1a3f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "96086e39-c427-40bf-a995-920bc3b61dc4"
        },
        "item": {
          "id": "948a7095-6be6-4c5b-a501-4c40b7009c18",
          "name": "identifiers"
        },
        "response": {
          "id": "0189d906-537a-4d7c-b376-32679d96178d",
          "status": "OK",
          "code": 200,
          "responseTime": 330,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ece1d6e-96af-4bd8-a949-838f5468ad5b",
        "cursor": {
          "ref": "158ac537-d281-4923-bf64-7adaa23d9ff6",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0dedadbc-58e5-42c5-8988-d8d60e04824c"
        },
        "item": {
          "id": "5ece1d6e-96af-4bd8-a949-838f5468ad5b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c6c8cfe4-3db1-47d2-be4b-2bc434073d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01580f8-446e-4cd3-8e12-6d18d367c2ec",
        "cursor": {
          "ref": "bf2910b1-b837-44d6-a3cc-bf1e38011393",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ec639996-2bdb-4a74-83de-d603519ffea1"
        },
        "item": {
          "id": "f01580f8-446e-4cd3-8e12-6d18d367c2ec",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f6846dbc-7f68-43fb-8b79-2a9051fb52af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b57d43-113f-4c4a-80f1-78a68bff6437",
        "cursor": {
          "ref": "d3a069ce-9003-4c6d-932c-1e1de9b48ce4",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "354681c7-b08c-4a8a-ab02-0afd4dc57392"
        },
        "item": {
          "id": "a7b57d43-113f-4c4a-80f1-78a68bff6437",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b9fafeff-3a2f-4c66-8654-3b34864adc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab80e91f-72cf-4a54-b905-1e9135ff1943",
        "cursor": {
          "ref": "19e26f2c-818e-4eb9-a61b-03dc98108aea",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "18c55b56-5be0-4e4f-a5d3-ca6bc131d655"
        },
        "item": {
          "id": "ab80e91f-72cf-4a54-b905-1e9135ff1943",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "73a57288-9be7-409d-ba7a-5914adeade9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fcf79b-f4f8-4e16-a5ef-803b7e4c6de8",
        "cursor": {
          "ref": "7e264412-785b-4dfc-9b93-d41d9070dff3",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "62881ce1-0681-4047-b1ac-fa6740406b52"
        },
        "item": {
          "id": "84fcf79b-f4f8-4e16-a5ef-803b7e4c6de8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "99e376f5-01f1-4e42-934d-cc509d6f2378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7393e9eb-2319-4a4b-8c30-0f2c5bf28fb0",
        "cursor": {
          "ref": "a44d3e0f-f881-47b6-9c37-3f1a3416ef07",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9e0722dc-ae0b-4d93-a667-6c209bd6d04e"
        },
        "item": {
          "id": "7393e9eb-2319-4a4b-8c30-0f2c5bf28fb0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "92bb5e9c-d762-487c-8029-b694994c6d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe31a222-e366-4913-8879-03e584dd2bfb",
        "cursor": {
          "ref": "f536842d-3e35-4352-9bf0-0fddbad5c2de",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0dde96c2-4f7f-4095-a477-e8220c12834c"
        },
        "item": {
          "id": "fe31a222-e366-4913-8879-03e584dd2bfb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "111e9bd5-a70c-491b-8d51-83dbcbe5eb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c1df8d-f2ec-4afe-982b-a3212e149411",
        "cursor": {
          "ref": "aa46970c-ad9b-4ae3-bc9e-840f5c46c817",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d8eb92b7-61ee-4524-b81b-d7d25038dbd7"
        },
        "item": {
          "id": "33c1df8d-f2ec-4afe-982b-a3212e149411",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7f1ce56c-365a-4193-92aa-68eb4ee2a135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84068c41-007c-4948-84a0-8f5ce982f904",
        "cursor": {
          "ref": "ef99aa60-5c01-493a-a96e-d947c9835165",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ba1472e1-b394-49ed-aab8-cb11fd3d2f9a"
        },
        "item": {
          "id": "84068c41-007c-4948-84a0-8f5ce982f904",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8495ba15-7d55-41f5-8db4-222f93dd929d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec9bab4-24e3-47aa-99d6-aba636f8dc4b",
        "cursor": {
          "ref": "75c717ac-8cf0-4158-9484-0b315b449ad9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8ccffa0d-da30-4b75-abce-6be6a2e0c785"
        },
        "item": {
          "id": "7ec9bab4-24e3-47aa-99d6-aba636f8dc4b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "13cf151b-8d38-4cf1-89bc-3026703953ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92220ebb-f4b5-468f-be49-10e329339ee9",
        "cursor": {
          "ref": "7b8c1f23-1970-4a52-9b24-97fdcc87519f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "86fdf973-de4f-4f00-b3c6-a9592e1dcdcc"
        },
        "item": {
          "id": "92220ebb-f4b5-468f-be49-10e329339ee9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f15f8c4a-3df2-448f-9ef2-c71dcf94735e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1f5d9a-252b-4b6d-b3ce-d830fc1b6bd6",
        "cursor": {
          "ref": "0371b54f-10f4-47bf-9a0f-f2cf613b5f63",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "81594390-cefe-4458-b17f-c3a5c732b23d"
        },
        "item": {
          "id": "fc1f5d9a-252b-4b6d-b3ce-d830fc1b6bd6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "20b34c02-e542-410b-9cac-4c9e6b8bed64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2416d801-13ba-4799-a7a2-5c204ef37d74",
        "cursor": {
          "ref": "4b94a439-407d-41db-bfb3-1f0bafd2d64e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4e993f0f-181a-4d1f-ba91-b0626808a9c4"
        },
        "item": {
          "id": "2416d801-13ba-4799-a7a2-5c204ef37d74",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5f0f485a-5ba3-43ae-9097-603300de957f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be69fc6-c83d-4dfa-94ef-dc56141c95f6",
        "cursor": {
          "ref": "d4a9ef9e-cfa9-42c0-9fe0-5330eba46791",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1633b62e-28ce-4663-be5d-d0a3342964d6"
        },
        "item": {
          "id": "7be69fc6-c83d-4dfa-94ef-dc56141c95f6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "988206c1-00a1-406c-9117-a255eb6b3d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76027057-fe66-4ef3-9321-d113fb678259",
        "cursor": {
          "ref": "badc8fe7-532c-48e3-8530-f7100d6bd873",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "af0a5f9f-997b-4ea2-83be-1e535bdf1141"
        },
        "item": {
          "id": "76027057-fe66-4ef3-9321-d113fb678259",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c88117d4-dae1-4d9f-8c18-55c4b2981327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1e12f8-bd67-40af-b2b7-98b67a1ee51d",
        "cursor": {
          "ref": "5ff98787-dfda-4186-bc67-a0e12ea2b0c9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9b53e966-51c0-44ec-9942-9bb9d50da4fb"
        },
        "item": {
          "id": "0b1e12f8-bd67-40af-b2b7-98b67a1ee51d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5a6aa96a-147c-42bf-8cf0-96af37dee582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0268cf1e-474a-4a5c-ac25-4220b665d9aa",
        "cursor": {
          "ref": "ab173edf-9f35-4497-a1dd-a08e90497747",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "121a3239-625c-41ad-a16f-58bca808f55a"
        },
        "item": {
          "id": "0268cf1e-474a-4a5c-ac25-4220b665d9aa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6d372f0d-c2e4-483c-ae9c-cd459ced431e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aad4306-4c53-4c7f-a4c8-552f8759aef1",
        "cursor": {
          "ref": "007f299c-a7d8-4e8b-a874-6b807ec2c08e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c1d621bc-6eb3-4710-8ac4-4bc7a88c6e80"
        },
        "item": {
          "id": "2aad4306-4c53-4c7f-a4c8-552f8759aef1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bd87b933-798f-4d39-8070-32536b5777a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fd3a97-8571-4ff3-b1b3-21d07e911d92",
        "cursor": {
          "ref": "e25b5156-853f-4ee1-8fcc-f7e51d32ac3b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "018e396b-9ceb-43b2-afdc-c52fa0500268"
        },
        "item": {
          "id": "c9fd3a97-8571-4ff3-b1b3-21d07e911d92",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "869cc439-85f3-46ce-91e7-f30900907774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65661fbf-b9b8-40d3-9007-e2da183869e8",
        "cursor": {
          "ref": "d9206c0d-c8f9-4a04-81d4-ea9d773c2458",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "17e42107-3323-493f-acb1-403c0fb72288"
        },
        "item": {
          "id": "65661fbf-b9b8-40d3-9007-e2da183869e8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "552e30d7-1938-4f7b-864a-6b526a4943ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61a0602-0f78-4833-8cbf-e59a53da5c18",
        "cursor": {
          "ref": "6832e24e-b9c3-4420-895f-656c362c4e6c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "018636a7-c253-448f-b657-e617cc5f6689"
        },
        "item": {
          "id": "e61a0602-0f78-4833-8cbf-e59a53da5c18",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e6043e7c-ba58-4ff6-83ab-14cb0e7ac576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12f358b-2d3c-4a0c-8ec4-c4fbdce06bd2",
        "cursor": {
          "ref": "aae73f88-00d7-46ed-9f37-9281f45f6e18",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "25037c2d-c93e-4e64-9929-255b8068acd1"
        },
        "item": {
          "id": "d12f358b-2d3c-4a0c-8ec4-c4fbdce06bd2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4d261486-a75c-43d4-9c92-d97e338d0860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48e1f19-bc90-4b31-b8cf-8bcc2fb7a233",
        "cursor": {
          "ref": "48629e6b-8840-4283-a203-2e83c193183d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "93674ab1-5523-4fa4-b7d1-306966680102"
        },
        "item": {
          "id": "d48e1f19-bc90-4b31-b8cf-8bcc2fb7a233",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "85398353-45da-4052-ad35-009250fe48e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7ed401-7402-4563-be5c-27da4066ea74",
        "cursor": {
          "ref": "e93f1dae-6c1e-448b-b197-2826048a7f22",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c36e3b07-02e8-4c06-8877-543ca216aa20"
        },
        "item": {
          "id": "3d7ed401-7402-4563-be5c-27da4066ea74",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "eaf52b56-53ee-4632-93a2-3858be2cb22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d83c32-18ea-4c62-af59-91cf8186874d",
        "cursor": {
          "ref": "5e451cce-6422-4b01-9a12-c0f7afae0f92",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "85c5b659-c613-4457-802d-61d978a136ae"
        },
        "item": {
          "id": "e5d83c32-18ea-4c62-af59-91cf8186874d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7a3a1dfe-c7fc-4903-a22c-6e5cfca25bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6be8f4-e094-435f-ac30-67ed8b1f91ba",
        "cursor": {
          "ref": "af6c1b60-84e3-475c-922a-5bd56daccdd0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a85a86ad-4a55-4658-b00d-7b38a6b5ac89"
        },
        "item": {
          "id": "ce6be8f4-e094-435f-ac30-67ed8b1f91ba",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "41a39b3e-f531-428f-abc1-b042d6f71ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6462cc-c1bf-40c4-8cbb-ac6279258975",
        "cursor": {
          "ref": "54fb19fb-da19-4aa4-8a95-ba999296444b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a0fa34ab-53e6-4144-bf95-d87669bd0fe6"
        },
        "item": {
          "id": "ed6462cc-c1bf-40c4-8cbb-ac6279258975",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "834137ff-476f-4986-aed2-6dc046b9c823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a7f67e-b691-4db7-8fe2-835d29a865f4",
        "cursor": {
          "ref": "8198c29e-2044-49cd-bde1-e7f607bf443a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e49dabf8-587b-4c92-8f92-18e688446dce"
        },
        "item": {
          "id": "c6a7f67e-b691-4db7-8fe2-835d29a865f4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "79a6d02f-1845-488e-93a6-6c0093b7ca06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17baf95b-e813-499f-90fd-a5c511deae41",
        "cursor": {
          "ref": "797ee455-44d0-4541-80f5-f71f09ccf37b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d44cdc88-48db-47c6-be03-67c0aa45c1de"
        },
        "item": {
          "id": "17baf95b-e813-499f-90fd-a5c511deae41",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ebd1f168-b42e-4920-af2c-8fabcb2f2fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78165275-c4eb-487a-999d-4a610ef1b84b",
        "cursor": {
          "ref": "e4c77f68-af9c-4909-a12c-095602a05e09",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cd5ea36c-76c7-4af9-b08e-4da3830018bf"
        },
        "item": {
          "id": "78165275-c4eb-487a-999d-4a610ef1b84b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b6dcd3f4-f093-4ac0-b67e-cc06a3dce519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96462e64-f2fe-4ce1-8728-83b3874067c0",
        "cursor": {
          "ref": "7a25295d-224c-454a-b047-c4338c539817",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c0a5ef38-d971-4ff6-98c2-bfe6a4e3e832"
        },
        "item": {
          "id": "96462e64-f2fe-4ce1-8728-83b3874067c0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c7eedc9a-3035-4c07-b549-4db1ec041525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe30775-277a-4fcc-806d-4d06eae673c1",
        "cursor": {
          "ref": "c142b3a4-93b2-4b97-aee4-472bf3da2d2c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b76b7d84-3483-4bb1-9f25-7f4d59c696cb"
        },
        "item": {
          "id": "bfe30775-277a-4fcc-806d-4d06eae673c1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b919da42-b28f-4b35-93be-eed5d66b17ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67690943-ac62-4a13-8e21-434318315af4",
        "cursor": {
          "ref": "cd041f48-ce43-4b42-a4a2-29696de76667",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "71eab8fc-0d50-4701-a671-6d8a71b46a15"
        },
        "item": {
          "id": "67690943-ac62-4a13-8e21-434318315af4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1633f677-5340-463f-8f88-2d576fe44d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c623d7-7323-4541-949e-7b310f90341c",
        "cursor": {
          "ref": "067d803b-fc78-489b-a1f1-47af4f3c5bdd",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "302378e9-aae3-4d9f-9e66-6d6b54d754ee"
        },
        "item": {
          "id": "d6c623d7-7323-4541-949e-7b310f90341c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7ef0df2b-4138-40a7-a5d2-683552fee950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a726dd32-ecaf-4c61-9323-bfc11be41def",
        "cursor": {
          "ref": "2e895be2-84ee-40ef-b9f7-17495a37b952",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1c76a5d9-7e2d-4381-9eb0-c2b33e011183"
        },
        "item": {
          "id": "a726dd32-ecaf-4c61-9323-bfc11be41def",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5cf26728-1848-4645-b116-8979b0b47487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9c31d5-df10-45bd-be03-827c2e3e4491",
        "cursor": {
          "ref": "9efae299-ca2a-4dd5-8296-a582b502ed74",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "873c8e4a-2c17-4c53-a069-bf96838ef20b"
        },
        "item": {
          "id": "5f9c31d5-df10-45bd-be03-827c2e3e4491",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "11a5ec4f-b375-487e-8689-b7dfa3d4c331",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 363,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38b65a2-5548-4198-b1dc-04ba32d82f07",
        "cursor": {
          "ref": "f6f4c2e2-e649-4d80-b387-698cb5641ca5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9f1d7f84-84ac-4a19-94d5-abd71463be57"
        },
        "item": {
          "id": "d38b65a2-5548-4198-b1dc-04ba32d82f07",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2e0bcdaa-7d7c-429c-bb76-5c14493697f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6730fa39-f9bb-4ed1-9e9a-a01e79d741d0",
        "cursor": {
          "ref": "97aa6638-de61-448a-bfae-f92fa0a73ad7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b97d189c-cc9c-477e-b07f-c9a13b51aecb"
        },
        "item": {
          "id": "6730fa39-f9bb-4ed1-9e9a-a01e79d741d0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "52df5887-d4fe-4494-ab8f-eba778aa0ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f988734-1379-4ed2-b697-7f7d817b93a8",
        "cursor": {
          "ref": "4be07d78-7120-4938-83e3-5c387f956d0a",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e388d610-625d-48cf-8b38-118ba3167489"
        },
        "item": {
          "id": "5f988734-1379-4ed2-b697-7f7d817b93a8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6f62ca39-26ec-4e85-b695-da9e719f8a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e3bc62-aafc-4bf1-9524-960c1ab34de5",
        "cursor": {
          "ref": "a933f48c-ca49-4f8d-87f4-47e698ec2e9a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6262d59e-5a30-405f-b9ca-48e48d534d9b"
        },
        "item": {
          "id": "e1e3bc62-aafc-4bf1-9524-960c1ab34de5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b5274d72-e646-4925-a8ab-ef6f1bc59bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c458fb4-63b1-427f-9989-71a2611e8570",
        "cursor": {
          "ref": "f5e0fec8-1b92-491e-ae83-90bfde861748",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "900ab6d2-f1e0-4e64-847c-ae599a0e3a81"
        },
        "item": {
          "id": "6c458fb4-63b1-427f-9989-71a2611e8570",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c9fe2311-3260-49c8-b453-963355edf90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e22acfe-80a9-4d9b-88b8-e56b989f4340",
        "cursor": {
          "ref": "0b84b96d-9849-425e-824a-0bdb3cda5ff6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d097bd19-295c-4108-b94f-0bf25539a6c7"
        },
        "item": {
          "id": "1e22acfe-80a9-4d9b-88b8-e56b989f4340",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "240ad71c-1ed9-4660-8582-f7067ecd5e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891f3f0c-3aa2-4669-a34a-7f2fd922093a",
        "cursor": {
          "ref": "eaaf357b-5a49-4a7f-af7f-318488e403b0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e791f054-825a-4898-9a13-a39a63ab215d"
        },
        "item": {
          "id": "891f3f0c-3aa2-4669-a34a-7f2fd922093a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2805a6c3-8cbc-4260-a40e-e05f5e304c08",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 372,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419fc4a5-5177-41bc-aa41-c69d52d7d107",
        "cursor": {
          "ref": "1ee4578c-4e49-4894-a7f2-bc7f360e9cd1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "175c6ac4-e62e-458a-93ad-11b2d4704339"
        },
        "item": {
          "id": "419fc4a5-5177-41bc-aa41-c69d52d7d107",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f265a096-35c7-4465-93eb-cd834f4fa18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11c6b77-cd9d-4d29-9ec8-f4d5b63d51f9",
        "cursor": {
          "ref": "75131dfe-db20-4503-8c1f-a563e4375db7",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ca776a7e-2509-4b1e-9b09-23dc53315c72"
        },
        "item": {
          "id": "c11c6b77-cd9d-4d29-9ec8-f4d5b63d51f9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "020d66b4-ebda-4f27-8b10-6abdd46a4c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bcdf53-84f0-42e6-8598-03deac0a03f9",
        "cursor": {
          "ref": "85fab22e-1028-4719-8393-b7ce33e7accb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3020ecb9-6bb0-4170-a3cf-ae76d1ec0ff8"
        },
        "item": {
          "id": "62bcdf53-84f0-42e6-8598-03deac0a03f9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "39e4a8ab-c241-4fa8-83aa-cee5fcb6cb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c282ff9-c6cc-4930-8c33-ca508193fe0b",
        "cursor": {
          "ref": "5f2b4ae7-899f-45ae-9f8e-e215180b0d55",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0eb6b849-a992-40c3-950c-fb2b998c9c3d"
        },
        "item": {
          "id": "2c282ff9-c6cc-4930-8c33-ca508193fe0b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fb01c954-b637-4044-8bcd-cbf4f7cdffeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41c7a92-e85d-40d7-9b7d-d60ebcf3002f",
        "cursor": {
          "ref": "9d922110-05d5-4ea2-88f3-b05b7b0bc0ab",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f9aac4d8-6197-4145-aba0-624cc114272f"
        },
        "item": {
          "id": "b41c7a92-e85d-40d7-9b7d-d60ebcf3002f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e0ee9f3d-d423-4c35-818b-b3e321e2fd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8b22f4-8475-4903-b049-4493202e1866",
        "cursor": {
          "ref": "997511d0-b752-4141-b7e6-a5b0b9a6c203",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "564c4fd3-a3f8-4dd8-886e-eade1470c30e"
        },
        "item": {
          "id": "5d8b22f4-8475-4903-b049-4493202e1866",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2bb31df1-ae59-4ad7-81a4-bbe1ad6bf819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85238da1-c319-4b3a-b640-3ac57e7ffd0b",
        "cursor": {
          "ref": "7522853a-7128-4158-9e95-39d99ff9564f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a15071df-5137-4ea5-8ab1-ba66fb0505cd"
        },
        "item": {
          "id": "85238da1-c319-4b3a-b640-3ac57e7ffd0b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b50d50c9-c286-4d7f-80a1-4261ace92ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45920076-87da-4c26-a7d4-7187454b02ca",
        "cursor": {
          "ref": "a7a4bc0a-45e8-40f7-8900-61ab43155a79",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7f563d26-903f-430c-9a62-e05802b01ae2"
        },
        "item": {
          "id": "45920076-87da-4c26-a7d4-7187454b02ca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "47c12d00-ebd2-484b-b069-9cb4b4c39d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdc8b0a-2372-40f3-b104-1a2cb0036f55",
        "cursor": {
          "ref": "2ee35b50-c903-4265-bac0-84b5f0773c68",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f9a26e9b-7611-4848-b05b-34e8805e1009"
        },
        "item": {
          "id": "dfdc8b0a-2372-40f3-b104-1a2cb0036f55",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b699f338-f43c-4d96-944c-9256d006fa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37ebefe-3ca9-46b7-b7be-5f744446248f",
        "cursor": {
          "ref": "15846419-a112-4859-8731-036a6a463497",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "67b57cef-bf2d-423c-94ba-ec177620611a"
        },
        "item": {
          "id": "f37ebefe-3ca9-46b7-b7be-5f744446248f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "238daa57-4084-4489-86c5-5ee6078d4dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec72548-e66f-4dc3-81e7-98049850a929",
        "cursor": {
          "ref": "bff68642-4897-42ba-beaa-6cbe993bdda5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a462256f-d91e-4514-a716-8db69ec48f73"
        },
        "item": {
          "id": "eec72548-e66f-4dc3-81e7-98049850a929",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "72b4504f-cc9d-47b0-91b5-176f6f7c1caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8a66aa-c50e-42db-9dd3-786b16908446",
        "cursor": {
          "ref": "be1572fd-ee91-419f-a548-7b75e8bd67a0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "abdce739-105c-4d16-b3ca-61a5f1a722bf"
        },
        "item": {
          "id": "9c8a66aa-c50e-42db-9dd3-786b16908446",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1d814814-0223-4b5f-bdb8-7ec0e7ff7b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db99d0c8-6bc7-4ab7-81f7-ae7ad463338f",
        "cursor": {
          "ref": "5f73ffb0-767b-4741-8e07-7f0c68ecbdf7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1242a13a-6177-4dcc-b287-0930f7c2f1c9"
        },
        "item": {
          "id": "db99d0c8-6bc7-4ab7-81f7-ae7ad463338f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1be061f1-1116-4f9e-8a6b-4cd0f5d69c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eaf7dd2-b159-4457-b3d0-d1679ead123e",
        "cursor": {
          "ref": "a9d991f2-c983-43a6-af90-e71239b495c2",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4b9558ae-b65c-4ae3-8015-b1269d9afaba"
        },
        "item": {
          "id": "8eaf7dd2-b159-4457-b3d0-d1679ead123e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "25ae9420-ffcc-4c07-abf0-3489f16b3956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c3d00d-a96b-4bc2-9f35-e9521d1b641e",
        "cursor": {
          "ref": "50413689-a5b1-4070-8c3b-fa249df54e73",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c4e1209b-5a2b-42b8-a930-02eef5390fdb"
        },
        "item": {
          "id": "37c3d00d-a96b-4bc2-9f35-e9521d1b641e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "177eac14-f9be-40d8-b28c-226a565dd7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df5e771-f4f3-4cb4-afb3-7c1e971f1e41",
        "cursor": {
          "ref": "31f5b509-f977-4d8f-a29c-42c2f7565666",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bf14b87a-577f-41fe-bd98-1a0059e63abf"
        },
        "item": {
          "id": "1df5e771-f4f3-4cb4-afb3-7c1e971f1e41",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7f2cf9d6-aade-436e-ab22-4551be4ff4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20d86ad-7cd0-4a13-ae1e-ec91768ddefc",
        "cursor": {
          "ref": "0cbd6559-9bc4-4964-b24e-dd4d59ce3615",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dea57171-224f-4819-9e16-d3ed41fdfb95"
        },
        "item": {
          "id": "d20d86ad-7cd0-4a13-ae1e-ec91768ddefc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dc9e8173-8e5f-45bb-a9d0-e9c0f2bcb0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44c2924-43df-480a-b7fb-1b8224d8d4f0",
        "cursor": {
          "ref": "36121f6e-7b1e-4bfc-a629-c3bc6476e51d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bf5b47c1-9a91-41ac-9c6c-b5b4e4ad84b8"
        },
        "item": {
          "id": "e44c2924-43df-480a-b7fb-1b8224d8d4f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5aa353c0-af1b-47fa-a272-7e5507e7b898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ebf64c-2380-4e19-a264-0e7b3aeb2e1c",
        "cursor": {
          "ref": "631736c9-5db1-4e72-bf22-62003a50d33d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "59345199-74d4-4606-a62c-bd443e14a5c4"
        },
        "item": {
          "id": "61ebf64c-2380-4e19-a264-0e7b3aeb2e1c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1954d879-6992-46e3-946f-50a33601e956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935137a9-ac31-43a3-ba9c-15ec461fcdf9",
        "cursor": {
          "ref": "2154bbfe-d9ec-445d-bab0-1da299b8c2e2",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cbc492fb-5720-49ec-a751-4a6582efcb4d"
        },
        "item": {
          "id": "935137a9-ac31-43a3-ba9c-15ec461fcdf9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "63913f16-aada-48a5-8f0a-cb43e74010be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7c6983-df34-4d54-8dd0-221bc0e56e98",
        "cursor": {
          "ref": "a1e46682-0ade-4063-a636-f5f0ddcca2ad",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5a624223-6226-476b-b3ca-5b977d278700"
        },
        "item": {
          "id": "0f7c6983-df34-4d54-8dd0-221bc0e56e98",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "35964718-1583-47c6-8489-a6fe7b4b4373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3081b8c1-53a8-41a3-a69a-8187ac2bcabe",
        "cursor": {
          "ref": "cc853394-2996-4b43-a556-61efb0d90488",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5fe279cd-8c86-4ada-9767-41fa90fece5c"
        },
        "item": {
          "id": "3081b8c1-53a8-41a3-a69a-8187ac2bcabe",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a46083bd-16c6-4193-9ba6-7d53f6b4010f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad1cf62-5612-4b6c-b914-6c3f39d7175f",
        "cursor": {
          "ref": "21faeecf-6b85-41b1-99b0-28d1699de0bf",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "23e5d73d-c3be-4cf9-b550-6d3b319d6c67"
        },
        "item": {
          "id": "fad1cf62-5612-4b6c-b914-6c3f39d7175f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1fcdc53d-ac69-4b91-806d-7bcf43616d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d407f5-a34e-4a45-b8d7-e694b0a0b67e",
        "cursor": {
          "ref": "34a39e14-4058-4620-908d-6f89c39193ac",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7cde91c4-8e74-410c-94c1-a09a29d71bc8"
        },
        "item": {
          "id": "d9d407f5-a34e-4a45-b8d7-e694b0a0b67e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aaae74c0-6526-4a59-82e2-00861c36b73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f318ae42-ac97-4869-b379-dbc9eb20c5c4",
        "cursor": {
          "ref": "a7c35247-58e6-4d11-b4a6-514d589dcaca",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "257a79a2-cb37-459b-af87-7f475a800010"
        },
        "item": {
          "id": "f318ae42-ac97-4869-b379-dbc9eb20c5c4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9786f973-88c9-4977-8a52-3d74696a158d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9719b040-5fbf-458d-ae83-979141ee454f",
        "cursor": {
          "ref": "c5e8bd1f-c5fd-4c7a-ba2e-7250221ba9b9",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a06e169d-5f20-4023-8ee5-eae6ca738def"
        },
        "item": {
          "id": "9719b040-5fbf-458d-ae83-979141ee454f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6e178d82-5ab0-4b89-9484-d75599a9f8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5276f5-9a9f-4833-81ea-448850b77732",
        "cursor": {
          "ref": "80df7be8-13c8-4cb9-b596-0b6fcacf63b1",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2d0608f4-9e8a-4ce7-b628-e1b7bfe446f0"
        },
        "item": {
          "id": "7c5276f5-9a9f-4833-81ea-448850b77732",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "07b93b3f-2edc-4c69-8118-8c02e9c93dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97c17ee-979d-46ff-aaf9-8aff53f357e8",
        "cursor": {
          "ref": "802cad90-87ae-410c-9956-3a4d6b90161e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "25ab2e75-03c6-487f-adf1-4d686df7b2f8"
        },
        "item": {
          "id": "c97c17ee-979d-46ff-aaf9-8aff53f357e8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "95726ee8-91f7-41d3-b9d1-de658e44c686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f797dfb1-ed02-45ba-94bf-76b328877580",
        "cursor": {
          "ref": "06b8c16f-0968-4597-a774-a9841ae71991",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "262d8af8-741c-4fb5-bad6-7b66273f7e19"
        },
        "item": {
          "id": "f797dfb1-ed02-45ba-94bf-76b328877580",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fe0acdcd-5890-4d23-8810-e7c99531a12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73ad494-a1ad-41b9-8e2c-473957836b74",
        "cursor": {
          "ref": "e23a7f90-1d58-4f83-a31e-449a95e4d57a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b00daf71-fd50-4282-a72e-1f56d5d6d7f2"
        },
        "item": {
          "id": "e73ad494-a1ad-41b9-8e2c-473957836b74",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4a604ad8-f7fd-483f-946f-70a6c5402c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283297ab-106d-463e-af48-b157bde57ea9",
        "cursor": {
          "ref": "e6efbc10-7d57-4d2d-b169-72521b980b14",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7f19d2fd-12ff-4c84-8429-037c6b12f41b"
        },
        "item": {
          "id": "283297ab-106d-463e-af48-b157bde57ea9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "55c19b61-eb18-4ef5-99d1-c47b51f8c96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441b95b8-1e7a-4020-af43-98c49aced506",
        "cursor": {
          "ref": "a97a2e13-915f-4046-ac6a-43db2b8b7d15",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ea0f2ae6-df8e-4db7-8e07-cc31a0cbc73e"
        },
        "item": {
          "id": "441b95b8-1e7a-4020-af43-98c49aced506",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eeb6c3da-f821-409e-afd7-af838a6ed063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6f543e-6d61-4282-a26c-540e93de7deb",
        "cursor": {
          "ref": "03ecd9a5-562a-4154-a620-b865b8401b01",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f5a1d5df-9889-48c6-8c5f-0eee304138aa"
        },
        "item": {
          "id": "4c6f543e-6d61-4282-a26c-540e93de7deb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "27107bf7-609f-4c98-a062-eb36287d0311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721a9f4d-ecf5-4172-ace3-fc2414c3c0da",
        "cursor": {
          "ref": "0fca39fe-9507-4deb-a89b-74a12aeca056",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8022a97f-5190-40a3-a980-79fa8a47665b"
        },
        "item": {
          "id": "721a9f4d-ecf5-4172-ace3-fc2414c3c0da",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "98ce41be-2802-4d36-9345-0f6dc2ca88c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cd36b7-3f15-48fb-b64f-9bc41f67e2b2",
        "cursor": {
          "ref": "8811cf42-eabd-4d43-916a-24eb0805e909",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d8d2ebf9-2f39-4005-b30e-3e867cc77dc3"
        },
        "item": {
          "id": "c6cd36b7-3f15-48fb-b64f-9bc41f67e2b2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5c42d95c-93f5-48de-b200-24fb30d4c923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0049dd47-0d34-4d3f-89c4-9387b3c7f83d",
        "cursor": {
          "ref": "d2af14a7-fc28-4bac-b733-24c96eb52ae1",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6ac8cfef-fc8d-4d67-b39d-3ecb2e0c4e6f"
        },
        "item": {
          "id": "0049dd47-0d34-4d3f-89c4-9387b3c7f83d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d414f8c9-acdd-4851-91b3-c4d861e8526b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191f785e-c17e-4d92-99b9-cf66876b7eb9",
        "cursor": {
          "ref": "ad8aea00-300a-4cdd-8443-f076f436518c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9ddf7b68-cbdd-455d-9322-39e9b5accfb6"
        },
        "item": {
          "id": "191f785e-c17e-4d92-99b9-cf66876b7eb9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "60ad21f1-168d-44b4-a547-559fb905d868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce99bffa-52cb-478b-b92a-356695dc0299",
        "cursor": {
          "ref": "4c0f35a0-aef7-4121-963e-5e51e0d96583",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7c9d40ce-1117-44b1-aea0-2150cf781b42"
        },
        "item": {
          "id": "ce99bffa-52cb-478b-b92a-356695dc0299",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c001f3f5-47cc-471a-afd5-1ae79398cee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026ee843-b6fd-4c34-8476-6e13d6544a75",
        "cursor": {
          "ref": "4e00c7a7-40bc-4f5c-9182-09fd484cef78",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "99d83b7c-5f16-443d-bf73-f2930ea18f1b"
        },
        "item": {
          "id": "026ee843-b6fd-4c34-8476-6e13d6544a75",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cfe12e1c-5c6a-47c5-bed0-1e7a198bca70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cbb8c6-fc95-4d3b-9505-f6fbf77b7620",
        "cursor": {
          "ref": "0faf6de1-f6dd-4a7d-986a-0dc08c027bd1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6ca884c1-3b7e-40bf-a10f-0492e3b16907"
        },
        "item": {
          "id": "91cbb8c6-fc95-4d3b-9505-f6fbf77b7620",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a357533d-0ecc-4896-b130-8684dfacb2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2b7add-f6ed-4055-8125-4f46cdc52781",
        "cursor": {
          "ref": "aa4b8458-2a73-4a57-9987-a600b2fc4415",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "77ed233b-24a3-4d90-bb3d-8112b5e3c4e3"
        },
        "item": {
          "id": "fe2b7add-f6ed-4055-8125-4f46cdc52781",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "432be60c-9d2e-41c9-9fcc-c2a7934ad5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a089fbe5-89bd-4d79-8760-08b9a286ed6e",
        "cursor": {
          "ref": "1f347783-1a08-475b-b680-3f4efc510dc6",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c170aa00-663f-465d-a0c6-a153f04f9e98"
        },
        "item": {
          "id": "a089fbe5-89bd-4d79-8760-08b9a286ed6e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ba79ce2c-2816-42fc-b8ab-1bfff234ddcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fff989-61c0-4d40-b067-9d0a5ac59dde",
        "cursor": {
          "ref": "2e91a915-f145-486e-abe9-9985d0243b91",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8abf17a8-306f-47e2-8eb5-a47ca07ae5cc"
        },
        "item": {
          "id": "24fff989-61c0-4d40-b067-9d0a5ac59dde",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "43688ca1-f659-490c-aeb9-ac67e29c4c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a1e4a5-f9d8-4cd5-b763-1131ce4c20b3",
        "cursor": {
          "ref": "7a70dc59-068b-4f5e-893c-3518fd5c7a56",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "05baf599-9b74-4669-b09f-4281b0260d67"
        },
        "item": {
          "id": "97a1e4a5-f9d8-4cd5-b763-1131ce4c20b3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4f0f74b0-3918-47be-8402-c64f42733426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948030e2-1198-425f-b877-9c3d3e1cd574",
        "cursor": {
          "ref": "5c3495c8-88cb-4771-b471-ce0808110424",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dd1611ec-5e78-451c-9b6a-5b53c8b1d7e5"
        },
        "item": {
          "id": "948030e2-1198-425f-b877-9c3d3e1cd574",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7ec5095f-e7e2-4fbe-bd8e-fec65fe258b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26e6807-856b-4237-99f2-77f9e9df1774",
        "cursor": {
          "ref": "37ecc4ca-382b-4812-9514-eacd8ca87595",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8cc22945-0b4c-49b4-b82d-7fc8889888fb"
        },
        "item": {
          "id": "f26e6807-856b-4237-99f2-77f9e9df1774",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7eeb60a2-7a60-416a-8a30-34867eaac6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4d337b-fff9-45e1-8b87-8c5af5741f7c",
        "cursor": {
          "ref": "e20cc6df-d657-4af3-af3d-770c11fa4f03",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6b0a05c7-fe49-44a0-93bc-63437bac330c"
        },
        "item": {
          "id": "0b4d337b-fff9-45e1-8b87-8c5af5741f7c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "26dd1107-d295-4e13-87f3-c3748dd28043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2aa81ae-24ee-4d8f-b0fe-6a56f6187127",
        "cursor": {
          "ref": "c14b0aca-7d7e-47a8-aea1-51aa4fa13c9d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6f538510-4192-4423-80f3-4e02f84481b6"
        },
        "item": {
          "id": "b2aa81ae-24ee-4d8f-b0fe-6a56f6187127",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9d9e9011-19f0-4ef5-be1e-bb349f21321d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cbd7a1-d694-40c2-9eda-68b728099974",
        "cursor": {
          "ref": "487fe749-26b2-4e4d-9f12-c203d4f72521",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ec808b63-a3d3-4930-abc9-25921d3b662f"
        },
        "item": {
          "id": "03cbd7a1-d694-40c2-9eda-68b728099974",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "85832896-c07f-4032-b674-183c05533798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8895171b-c336-483c-a45e-7c8d4080c1f3",
        "cursor": {
          "ref": "2fbbdf86-c3b1-4003-bf73-ff0c0530313f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "78ff2b0d-3a5b-46d0-ba4f-4ea41cb6545e"
        },
        "item": {
          "id": "8895171b-c336-483c-a45e-7c8d4080c1f3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "67a4cb0d-da4b-4e41-85b8-a33481f466ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6189bca9-68e5-413e-8827-e225e2e49063",
        "cursor": {
          "ref": "40117f23-01a9-4750-bc81-6a61b2219a1a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1ba73e4c-1ad3-463a-aef3-a9d550be9640"
        },
        "item": {
          "id": "6189bca9-68e5-413e-8827-e225e2e49063",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3ac160f0-8582-44c4-ad3d-7b47fffe191c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b29537bf-1123-4c76-afaa-2fc33715711c",
        "cursor": {
          "ref": "51551f66-391e-4961-8851-3a5bf3dba125",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "119cf554-605c-4b7e-adeb-488c8a2ae41a"
        },
        "item": {
          "id": "b29537bf-1123-4c76-afaa-2fc33715711c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8e8eddeb-63f8-4c7f-b84e-d8dfd902a07c",
          "status": "Created",
          "code": 201,
          "responseTime": 2789,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d861cd-1368-4163-b34a-16d0304b7acd",
        "cursor": {
          "ref": "785fff33-7694-409a-9b39-b018396c89e3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7546c7a9-dc9b-4d00-990f-e20c2b0a109c"
        },
        "item": {
          "id": "67d861cd-1368-4163-b34a-16d0304b7acd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "969ab359-3b0c-4cae-be8c-0625e2ed321c",
          "status": "Created",
          "code": 201,
          "responseTime": 2135,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c79c110-5808-4c2c-b996-b881e75ebe44",
        "cursor": {
          "ref": "6c4e0804-ea06-4c1e-a269-5db3e67c8c5f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "86fe5494-a6b1-4567-b7d3-62097fb5a5e4"
        },
        "item": {
          "id": "6c79c110-5808-4c2c-b996-b881e75ebe44",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2c2c694f-0d18-4562-8405-6fd1141b25f9",
          "status": "Created",
          "code": 201,
          "responseTime": 2193,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea9661d-5a53-48b4-983c-f4889477de74",
        "cursor": {
          "ref": "3712d178-c683-4b34-a0fa-1ca6502c12bb",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4d862370-c6eb-4acf-a8bc-d7e1b4d19271"
        },
        "item": {
          "id": "7ea9661d-5a53-48b4-983c-f4889477de74",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "248e20d5-0639-4bee-bb49-9d5cb0a60d3e",
          "status": "Created",
          "code": 201,
          "responseTime": 2744,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "400db5ad-33ff-43a1-9571-d5d114f3ae0c",
        "cursor": {
          "ref": "b9cb2e0a-9e3c-4932-949a-922ba8bcd787",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0bc9785a-c4ef-4aa1-a482-924713e13f25"
        },
        "item": {
          "id": "400db5ad-33ff-43a1-9571-d5d114f3ae0c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bf06727f-d35a-42e8-b26e-33f3c3578c53",
          "status": "Created",
          "code": 201,
          "responseTime": 2416,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9570ff2-3ce7-4276-9697-7d51adb0456a",
        "cursor": {
          "ref": "e4d24d78-9893-447d-bde0-f70a90d0bbf6",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "efe7c33a-c53e-433d-be07-91c4bcb46857"
        },
        "item": {
          "id": "d9570ff2-3ce7-4276-9697-7d51adb0456a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4c9b411a-10d6-4ebc-a0f9-f03d94e8a762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f306c093-9d4f-40b9-95b6-88a88006ba21",
        "cursor": {
          "ref": "5944a705-f130-4907-8350-1a0ad90997e6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d4f5a6e7-a099-45d4-82fa-39deb91b6b4d"
        },
        "item": {
          "id": "f306c093-9d4f-40b9-95b6-88a88006ba21",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "542658cf-863b-46e8-8bfc-bff60bee1d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f68b8fd-3811-446f-997c-137123ad04a7",
        "cursor": {
          "ref": "49372de3-b693-4663-b603-07cc7b170b11",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1643a624-e024-4144-8c7a-a09a2b722ccc"
        },
        "item": {
          "id": "2f68b8fd-3811-446f-997c-137123ad04a7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cf2df5ea-7d08-4e2a-bbe8-e7ac3a9d6a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3662e30b-b935-462e-a95d-9a21c9780122",
        "cursor": {
          "ref": "84fca592-fc1e-4a9a-8447-84c1e0a1fa79",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ba5f7c2f-6cbb-493e-994f-3f292b6ef956"
        },
        "item": {
          "id": "3662e30b-b935-462e-a95d-9a21c9780122",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "950b4750-656f-408a-a87e-c974dfaf4bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bf8c7d-248a-465b-abba-1ec2947a8c4d",
        "cursor": {
          "ref": "ce9df93b-7d79-4fcd-bf1a-962fc0818359",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "39cff9a7-e52f-47ba-9768-75a312836a8e"
        },
        "item": {
          "id": "b0bf8c7d-248a-465b-abba-1ec2947a8c4d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "15733e41-2c4d-41b1-b2e9-ea2bd828e750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37f62b9-1cbf-4697-84f8-7ae31b56f72d",
        "cursor": {
          "ref": "5f46515e-669c-487d-b9fd-2c41ee15739e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "009581ac-0868-46ab-9f9c-34023bfbe08d"
        },
        "item": {
          "id": "d37f62b9-1cbf-4697-84f8-7ae31b56f72d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "994247ff-3ec9-40ca-ae42-5b59922556be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a699a43f-2ad3-43b4-a3b0-35eb28590204",
        "cursor": {
          "ref": "947c2fb4-0a92-4374-8b85-12a7d6902a85",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9b4c2a49-7147-408e-9b82-2ca5f965d83f"
        },
        "item": {
          "id": "a699a43f-2ad3-43b4-a3b0-35eb28590204",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "080d6cfe-096a-4d7b-83b0-46e85aede7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98e19e1-cb1d-4ad9-ac72-c9de8407ba5e",
        "cursor": {
          "ref": "f3f629e3-5430-4eb2-abc0-002865fb5de8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "98664185-7d17-4f40-badd-513f4a9f652d"
        },
        "item": {
          "id": "c98e19e1-cb1d-4ad9-ac72-c9de8407ba5e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fef8d627-77a0-4710-8d08-d037b20c17cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3b2c43-d08a-4e5a-852b-0127aced7a58",
        "cursor": {
          "ref": "77dff4d9-08db-4950-9d98-21892c2ae2dd",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "59da347a-a1e5-46ef-b506-f700af6456ca"
        },
        "item": {
          "id": "bd3b2c43-d08a-4e5a-852b-0127aced7a58",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "87c43dba-1863-4e34-9b1e-290ee47aaf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506c943e-1c9c-4b4a-8158-0e0e30fc2a81",
        "cursor": {
          "ref": "0042f0dc-cb96-438e-a5da-cfcd8deb7dab",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9fc005bc-1fd4-4d86-98c8-37ddd044229e"
        },
        "item": {
          "id": "506c943e-1c9c-4b4a-8158-0e0e30fc2a81",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "47341365-b5a0-4bdd-a5e2-cb293362b0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c3e269-792c-4769-ae78-158931a68411",
        "cursor": {
          "ref": "83e6f61c-022f-4975-a978-d995e73acf38",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ccf1525f-a7f1-4a3e-a869-0f08677069ab"
        },
        "item": {
          "id": "96c3e269-792c-4769-ae78-158931a68411",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3f6e327f-f195-406d-aac5-90a5d250c9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3aa9cb8-f979-49e9-8fbf-ab8d1f7585cd",
        "cursor": {
          "ref": "f013e112-3e8e-4b13-b635-be2bfb49f1d0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f2543c69-53ab-4e63-a6f4-d907d2b47cd4"
        },
        "item": {
          "id": "f3aa9cb8-f979-49e9-8fbf-ab8d1f7585cd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "121836fe-637a-40e5-9168-7a005f97924e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bff563-f9c6-4b17-be57-16237246cb16",
        "cursor": {
          "ref": "49fe571b-b5cc-4602-a58d-c288cf56265e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "75d7cdb3-7423-4c35-a605-0f043b4e8583"
        },
        "item": {
          "id": "67bff563-f9c6-4b17-be57-16237246cb16",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7e569ad4-82a2-4ffd-8e93-8c4267e40a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730ca490-f31b-45fe-a328-ea15243643ca",
        "cursor": {
          "ref": "5661f069-3a4c-44a3-988b-c2bbf67411c0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e39f9b2a-87c8-4b93-9419-fd66263c987b"
        },
        "item": {
          "id": "730ca490-f31b-45fe-a328-ea15243643ca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bebedb86-e88b-4213-a2c5-e12e09777c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30d7823-d1cc-4c03-a202-e0ca63164859",
        "cursor": {
          "ref": "fd73c625-4e41-4273-bb5e-c909867c06f5",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fb54a1ce-ef72-4609-8393-72c0c577cb4c"
        },
        "item": {
          "id": "e30d7823-d1cc-4c03-a202-e0ca63164859",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f0500a95-834b-4199-9f42-3766c1e2833b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286f3ee4-8559-46d3-bce3-f1aa1685f7f4",
        "cursor": {
          "ref": "00234afd-85fd-424f-b83e-32560ff3046d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6ace7427-d540-4f43-956f-6a059746a0f6"
        },
        "item": {
          "id": "286f3ee4-8559-46d3-bce3-f1aa1685f7f4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ea8356e8-c991-47af-adfb-8ec028b70566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3055616-3580-4a29-a02c-456de2818e10",
        "cursor": {
          "ref": "12fd6305-c03b-4e92-b897-98bbddeff40d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "56b78358-3dcd-4b57-bdde-be1cbfeae714"
        },
        "item": {
          "id": "b3055616-3580-4a29-a02c-456de2818e10",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "71133917-b537-4df9-90af-80f7b32433ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d4101e-754a-4586-bf88-c9805910ac16",
        "cursor": {
          "ref": "9aa1799a-4021-4d53-b018-815981bf183b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ab0058fd-002a-479c-a029-1344c9b4c4d6"
        },
        "item": {
          "id": "40d4101e-754a-4586-bf88-c9805910ac16",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b5d26f36-481a-43e4-a1c6-74e710c17c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dcffbd-f90a-4c92-8364-33bf61defb29",
        "cursor": {
          "ref": "501c951f-6aff-46eb-a72b-50ec829af381",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0320b9b7-d553-402e-a183-4e72e7c0fc27"
        },
        "item": {
          "id": "70dcffbd-f90a-4c92-8364-33bf61defb29",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f86798af-0b6b-486d-a63f-f0cd2b5c474f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa03bb51-7cb4-4cc4-a845-4a76ab021876",
        "cursor": {
          "ref": "c5f6b96c-31f9-4596-9b03-1374e5962bc7",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ceaa7dd6-d231-46b7-9962-71809dae20ae"
        },
        "item": {
          "id": "fa03bb51-7cb4-4cc4-a845-4a76ab021876",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "343a0f03-2cd9-48e8-99b5-7a40d6e6b260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bf40b1-7461-4d79-bd7c-cd9f922ce587",
        "cursor": {
          "ref": "0f5f9e75-1c86-4e71-a818-d224e98d9a4b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "816b2236-47f2-4e65-abf8-46bfbe1048b7"
        },
        "item": {
          "id": "a7bf40b1-7461-4d79-bd7c-cd9f922ce587",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "25e337c9-f1b6-4c78-b229-56bb0fbadcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b45a31-3f3e-42e9-8d23-5cb3dd9e8ab5",
        "cursor": {
          "ref": "a2e1c41d-ae91-4a64-bea1-b67edde031de",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ad268d43-d01a-42a2-998c-f348c68821eb"
        },
        "item": {
          "id": "b6b45a31-3f3e-42e9-8d23-5cb3dd9e8ab5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "60424a1e-f8b6-4a50-b3ba-84e55fdf09d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3ea7f3-1789-4bd1-abd6-4b05e58d295a",
        "cursor": {
          "ref": "041dbc37-7e8b-45f3-8a7f-a9a6a3167c0d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "adcc46d4-236f-49ac-9418-3488b89383ad"
        },
        "item": {
          "id": "1d3ea7f3-1789-4bd1-abd6-4b05e58d295a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1c83f13d-5477-4ca6-8c23-bbf0e867ccb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db0358b-d33f-420d-ae9a-10fdf1bfd84f",
        "cursor": {
          "ref": "f8fe8be1-5798-48be-a035-0387d1411952",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a9428baa-ab67-43c9-9e6e-2aed3c11ffee"
        },
        "item": {
          "id": "6db0358b-d33f-420d-ae9a-10fdf1bfd84f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "50f75e34-c41f-46a5-8233-5cad9998b448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23438565-4de7-4d44-9a6a-558ff92fc2a1",
        "cursor": {
          "ref": "5100dc91-13e2-486c-a0e6-e78d518398e9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "32c0f7f5-c5c0-4474-acaa-1d74c90f69f0"
        },
        "item": {
          "id": "23438565-4de7-4d44-9a6a-558ff92fc2a1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a6f215bf-b3b1-4979-a651-9002a2d028e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f071596d-6c62-4247-893d-d9cbfe5d2df0",
        "cursor": {
          "ref": "c7ff61a2-dc66-4da8-a79b-c2261a825e32",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dd4bc3d3-f3f0-449d-9c6f-f7ba4dafd3eb"
        },
        "item": {
          "id": "f071596d-6c62-4247-893d-d9cbfe5d2df0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "04a647d5-f676-45e5-9a66-c07cb05944f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ce531c-2589-4629-ac7e-8af6c8065455",
        "cursor": {
          "ref": "ab9e8550-3d83-4d79-857e-57a3f09c9d98",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7228b666-b91c-4080-b624-248e99fc75bc"
        },
        "item": {
          "id": "39ce531c-2589-4629-ac7e-8af6c8065455",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2287f899-ffa2-4d5a-b607-f9879a66b3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb42e21-d4d6-4a27-a955-197309eeecb5",
        "cursor": {
          "ref": "c626bc7a-535c-4b40-ae40-7ae599b814e1",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4e262118-0ac9-4a3f-8dd3-af6dc595059c"
        },
        "item": {
          "id": "2eb42e21-d4d6-4a27-a955-197309eeecb5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "90bae4e1-bf29-477e-89d8-70f7559c0eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6f8960-f41c-4231-9eda-985537c33abf",
        "cursor": {
          "ref": "109d9812-939b-425d-819c-15b5127e4e78",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "18b6636d-b927-40a9-b100-a948b86f345b"
        },
        "item": {
          "id": "8f6f8960-f41c-4231-9eda-985537c33abf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7f37a0d6-13b1-457d-8c1c-125860a0320d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf0019c-2580-4974-982b-b35ec340b702",
        "cursor": {
          "ref": "90a63312-92d5-4bfd-ae0f-ddebbf8ddf9c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "73e3deef-1c4f-4690-9048-5b01d8bcd910"
        },
        "item": {
          "id": "8cf0019c-2580-4974-982b-b35ec340b702",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4600f60f-5fe6-485d-a0cf-3f57dfafc7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aaf7fae-e3e3-4900-957c-b224e3cda89f",
        "cursor": {
          "ref": "da416d6b-bc51-449c-b06d-5e0c8e079837",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1404ac98-609b-4129-8683-1a7a4695d8ca"
        },
        "item": {
          "id": "2aaf7fae-e3e3-4900-957c-b224e3cda89f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "31c3fa45-e105-4097-a12e-b67ae67ff9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf4ba07-0978-4ab7-9731-ff08d72d7cc5",
        "cursor": {
          "ref": "eaa01e50-46ac-477a-ab97-99dcd17ab634",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dfcb9832-bfa3-4c93-a988-053d8e79d6fa"
        },
        "item": {
          "id": "ecf4ba07-0978-4ab7-9731-ff08d72d7cc5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6af4b2bd-f84c-47a9-bda0-3987a09dc1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f7a991-7c3f-4eba-8edc-05ac80e61cc6",
        "cursor": {
          "ref": "fe9f13eb-b5c2-41cb-bd9a-fbfdfc47d31e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7b4016fa-315f-4b38-90e0-7618e97b6fce"
        },
        "item": {
          "id": "70f7a991-7c3f-4eba-8edc-05ac80e61cc6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e30889b2-a95a-40ef-8994-812c1cf46b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baecfa0-0b9f-4822-8ea3-cf4e82856635",
        "cursor": {
          "ref": "91362196-ab8d-4d75-9f79-2cb10908669e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6e52a999-cf4a-4813-8708-3b2924d9cce3"
        },
        "item": {
          "id": "9baecfa0-0b9f-4822-8ea3-cf4e82856635",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3e7ee2fb-2d3a-44b8-bbe3-18300049bb74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2c0833-2e37-4b81-ad16-633afe828cc7",
        "cursor": {
          "ref": "e512758b-c032-4963-89fb-1c41d8e62399",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "840cb4c9-bfa7-4c39-a4a1-bc9f55fe7abc"
        },
        "item": {
          "id": "1c2c0833-2e37-4b81-ad16-633afe828cc7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f6681ed4-3735-4353-bf5f-e2285b17023f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5faa6b-1141-4314-bbe1-8a783e85fd25",
        "cursor": {
          "ref": "d2776e62-ce4d-4c40-8f9f-5134e63abb8c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ed6d331a-f3ba-4f83-a743-c0888b22ead8"
        },
        "item": {
          "id": "2c5faa6b-1141-4314-bbe1-8a783e85fd25",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "419c2546-6472-4a78-b1ee-6148a0ec2a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e2fb0d-0954-4e0f-9a03-9f92e9992bfa",
        "cursor": {
          "ref": "4f53989d-e542-4d85-909a-6c56e38f7ad1",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "430bb885-c5fd-40ab-8985-6a0bd0a8c44e"
        },
        "item": {
          "id": "23e2fb0d-0954-4e0f-9a03-9f92e9992bfa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6de6195d-d336-4f09-b611-fcf1699df324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68418556-0d2e-44a8-b291-0a9d977e67ca",
        "cursor": {
          "ref": "1618c5d5-4f08-47be-a790-45340b7cc505",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "85326e83-017e-4763-8aa7-74e47933b0b0"
        },
        "item": {
          "id": "68418556-0d2e-44a8-b291-0a9d977e67ca",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "717dc5dd-25ff-43c2-81fe-d2f356c4c51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b4b134-32cc-48d8-95cc-26e3a0b8d188",
        "cursor": {
          "ref": "b2fc42d6-59bc-4ad7-9cd5-b2af5b33c96c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dfb2928d-1da1-451f-9503-7042daf129ec"
        },
        "item": {
          "id": "74b4b134-32cc-48d8-95cc-26e3a0b8d188",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a691dfff-0836-4cfe-b8ae-4f58e3571820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a1e73e-3d53-4ef4-a02d-08e53273a36c",
        "cursor": {
          "ref": "5a5b9064-5375-4635-b079-b4b8b0791f8a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "865d7420-0a47-495d-8ccc-617a2cc50cc3"
        },
        "item": {
          "id": "13a1e73e-3d53-4ef4-a02d-08e53273a36c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "54aa27c8-39b9-4c33-854e-f79de7c6b4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fe0060-85a4-42e4-930e-b69986757451",
        "cursor": {
          "ref": "e04f9003-a738-42f3-8ec5-15a558872bcb",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "18070a03-ca87-407b-8de0-b18f67c3589e"
        },
        "item": {
          "id": "10fe0060-85a4-42e4-930e-b69986757451",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0ffbca00-9020-4389-9682-84b03e57af30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ce5119-5c25-4b16-b146-4ecf53c749ad",
        "cursor": {
          "ref": "fc57a6c8-7541-4c0f-8c4e-52dff2bf9470",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cd01427b-49d5-4ad2-948a-373a64b86257"
        },
        "item": {
          "id": "88ce5119-5c25-4b16-b146-4ecf53c749ad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0e840b3e-8196-4b53-a7d5-81d2a8fad013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b00305-ff88-4b82-ba3d-d29b40b2bcdd",
        "cursor": {
          "ref": "740ab7b5-2263-41fc-a9bb-91bae1155146",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "31075eec-b6b4-471c-b665-2ee1139d9b96"
        },
        "item": {
          "id": "e6b00305-ff88-4b82-ba3d-d29b40b2bcdd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f6302360-519c-492e-a37c-fc7eab108f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9027202c-73c9-4a57-ad20-e4ff5fc7e216",
        "cursor": {
          "ref": "5774014d-41a6-47af-b1ef-c16cf27dc515",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e7bfbd62-2b6e-43c2-93a0-1fabd557cedb"
        },
        "item": {
          "id": "9027202c-73c9-4a57-ad20-e4ff5fc7e216",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8f932f3b-dca3-400a-a413-abbe7062a494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ccf03d-b0ff-403e-9ea5-4a558c3e0eb7",
        "cursor": {
          "ref": "5e63992b-d214-4146-be2a-323c2cc2fa48",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1a3bf4a9-21ad-4abf-9d5d-324283089c5a"
        },
        "item": {
          "id": "73ccf03d-b0ff-403e-9ea5-4a558c3e0eb7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "642d5886-587f-4c3d-b5ed-32529a4d3505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c0ca7d-5c22-437a-ae13-3ef5829c7908",
        "cursor": {
          "ref": "e7a65379-dbac-45bf-84cd-81e98f6c0202",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1bd0cb6f-4b7c-463f-b0a3-63968065902f"
        },
        "item": {
          "id": "00c0ca7d-5c22-437a-ae13-3ef5829c7908",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0ba11b63-3412-4e2b-b362-228be3b9004e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03425e9-f67d-4f2d-9ad7-6566f70d0ef8",
        "cursor": {
          "ref": "a7bd2b7b-329b-49ef-a181-5c22689d90da",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c320a945-7bfc-48e1-8afd-11c4732ea6be"
        },
        "item": {
          "id": "c03425e9-f67d-4f2d-9ad7-6566f70d0ef8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a9ccb43a-b5b8-4f6c-85f0-1e7494e42288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d039af9f-6357-4001-a714-94f22889caab",
        "cursor": {
          "ref": "34a9eeae-9794-44dd-890f-3226c5199094",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c7e8cbf1-5b93-4048-9de8-98a5cdf0e06c"
        },
        "item": {
          "id": "d039af9f-6357-4001-a714-94f22889caab",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1566c846-8c63-4f3e-a990-74129f6cbd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03263897-6f03-43b8-88e9-935b8c172e5f",
        "cursor": {
          "ref": "27388f9c-9a38-4779-8f55-ed6b160fcc0b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "448e0faa-a7d1-4376-80ca-c1468101882c"
        },
        "item": {
          "id": "03263897-6f03-43b8-88e9-935b8c172e5f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cb12a67d-8fa6-4617-9d3e-a9d7f961b9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01771a20-9a43-4b80-bcbb-08179aa08754",
        "cursor": {
          "ref": "f5cf8f3c-722e-4c54-a7b5-1abeed3718f0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3df5868a-d005-4ce1-87ea-6a1f0dd15459"
        },
        "item": {
          "id": "01771a20-9a43-4b80-bcbb-08179aa08754",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1ad399b4-93d0-4907-b40c-34b1ef219492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd30937a-0e2b-4d91-b49c-2f3451925127",
        "cursor": {
          "ref": "45b5b0fe-1dc1-4ccd-8c36-6e7bd4301b76",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "05acb32f-0fb3-4888-92aa-8ae3f9a23a04"
        },
        "item": {
          "id": "cd30937a-0e2b-4d91-b49c-2f3451925127",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "17d76c14-aaa5-4be6-9cd3-853bde0ddb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851f6b6d-91a9-403d-be86-e97cd1ae4433",
        "cursor": {
          "ref": "0da2f578-9491-4c3c-bb57-2aa2854eaf21",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "95df113c-fbbb-4e60-9d51-445e6ec8d947"
        },
        "item": {
          "id": "851f6b6d-91a9-403d-be86-e97cd1ae4433",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4b556255-8e93-4dc5-b7f2-9b6f39e58a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615b75af-d0fa-415c-8e0a-13640e6deadf",
        "cursor": {
          "ref": "7585ea30-7668-4d1a-ae6a-fcc9dcfb1b84",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0b72055c-de2c-4b53-811f-744eca86b124"
        },
        "item": {
          "id": "615b75af-d0fa-415c-8e0a-13640e6deadf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "86e5ed0f-f56e-4d7d-be1d-7d19d8664538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a757935-046f-4c74-98a9-c6e6c4b6a975",
        "cursor": {
          "ref": "c5135df9-b158-4ae1-b04d-9b199b9afa63",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e9709347-972f-4cb7-ae66-2c0933f521b2"
        },
        "item": {
          "id": "2a757935-046f-4c74-98a9-c6e6c4b6a975",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b0bd23cf-87ee-483f-98de-873a659eb0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c29e4b-f8ac-489b-a750-4202a97bea38",
        "cursor": {
          "ref": "c698247d-c67a-4fad-b588-08d44dda88c6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5cdfb939-34f5-4312-8cba-df8359aea327"
        },
        "item": {
          "id": "66c29e4b-f8ac-489b-a750-4202a97bea38",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ccf156ff-3a73-43d5-aeb6-f10829353bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a04923-9929-4aff-967b-ef75edb0dfaf",
        "cursor": {
          "ref": "0808a340-8d13-43ce-8163-bd37779caf51",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3d88c2c0-0900-4ef6-a23b-09a5785cb884"
        },
        "item": {
          "id": "02a04923-9929-4aff-967b-ef75edb0dfaf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f7d49d68-1a8f-4c1d-8744-82dfdf006400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5322b48-abff-4921-9656-b843df42c405",
        "cursor": {
          "ref": "16f2d462-9ba6-4765-b733-1f4a0774e1a4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4c76c252-48a7-4952-8881-a5033277839b"
        },
        "item": {
          "id": "d5322b48-abff-4921-9656-b843df42c405",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "74465f54-aabb-4ade-9365-81952617c481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3779757-e78b-44de-8f36-db66bf9dfe4b",
        "cursor": {
          "ref": "764387e4-33f1-4cf5-8748-525c37bb74e2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b2d883d2-59e9-40e6-bec5-d85b7439c14c"
        },
        "item": {
          "id": "c3779757-e78b-44de-8f36-db66bf9dfe4b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fc5d2280-3675-420f-8e63-9081fb6c13b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5222f83a-d494-41e6-a6b8-c3aa067855fd",
        "cursor": {
          "ref": "421d4f7d-87f6-4edf-8d30-dd83da7746a1",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "08585599-4c13-41cd-bc1b-01e352c14be0"
        },
        "item": {
          "id": "5222f83a-d494-41e6-a6b8-c3aa067855fd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "35591ddc-0582-41de-bf17-154cce6d0b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c737c8cf-9a2a-4c10-8e96-05a65f821d35",
        "cursor": {
          "ref": "b6b470ca-a084-48b0-9e1f-fa1726b3b4f3",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "af173a18-c1d1-487a-b4e5-49e00cf0ead3"
        },
        "item": {
          "id": "c737c8cf-9a2a-4c10-8e96-05a65f821d35",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2b9c0f02-2a96-49fa-8b32-f54c2592e640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515a4576-f619-4c94-b4f3-62372affb4ed",
        "cursor": {
          "ref": "1d47e4a4-26c2-4aeb-90a2-1cf95f861a02",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e2bead0d-c06d-4e20-bf51-49ddd94f792b"
        },
        "item": {
          "id": "515a4576-f619-4c94-b4f3-62372affb4ed",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "45f32c4b-cde8-49e4-b821-e73ef7f6ebc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cf4475-f7bd-41b8-9a7c-57ece852d4a0",
        "cursor": {
          "ref": "cc72f0cc-8e79-432d-8a22-29f77f8cd0ea",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3e9a6111-ed7a-4d15-a808-f6eb267c0612"
        },
        "item": {
          "id": "85cf4475-f7bd-41b8-9a7c-57ece852d4a0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aa706690-d75d-486a-9d0c-93a3a589d199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42916ec8-f8e5-4109-a842-6eeb0cbfad28",
        "cursor": {
          "ref": "c1e3d7ed-bf97-45e1-b314-6a47df09eba0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5b306fef-a56e-4da3-a59a-7521607c8548"
        },
        "item": {
          "id": "42916ec8-f8e5-4109-a842-6eeb0cbfad28",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "547a08bb-944e-411e-af3f-64ccc4589e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb839168-1abc-4693-8e33-fd7174e6daed",
        "cursor": {
          "ref": "6ad0c0c9-bfd1-47c6-a4e0-71fb269598ed",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "37ee2e7d-52ad-4ffd-8d4b-fb6073f7fae5"
        },
        "item": {
          "id": "bb839168-1abc-4693-8e33-fd7174e6daed",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ccc75810-883f-4f82-9054-c9f009fec222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fd1c66-eef2-4314-9ea3-c6b176d569f1",
        "cursor": {
          "ref": "d59c6901-a56b-4a92-8458-6163880f6f0f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6eca7f42-fcd8-4109-b7c5-eaa4060ee93a"
        },
        "item": {
          "id": "44fd1c66-eef2-4314-9ea3-c6b176d569f1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e27696d6-f05a-4e8f-a852-f102fd00176d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e982248f-fe0c-4b09-86dd-633e23d6b33c",
        "cursor": {
          "ref": "baf0f614-767a-48d5-833d-02393ce201c3",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "73ae3c41-1f0a-4765-ba80-a4d80565a897"
        },
        "item": {
          "id": "e982248f-fe0c-4b09-86dd-633e23d6b33c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d0a0cd57-9c6f-420a-b8fb-bc038809e8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2f3d70-431f-41cc-9667-3d5a2c689e6b",
        "cursor": {
          "ref": "f8fd68fc-254f-40bf-b306-48d4a90336fe",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ee0d8437-1fb1-4046-aab1-3b62871f56ca"
        },
        "item": {
          "id": "db2f3d70-431f-41cc-9667-3d5a2c689e6b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4e6f9511-cc3e-4862-aa49-b5af5e498ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc8e900-5503-44c0-b42d-140d6adb1f12",
        "cursor": {
          "ref": "e1cdd93d-3810-4cd8-8239-76f313515bd9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2c98f2fc-5861-4b0f-8c55-ae34e277cdc7"
        },
        "item": {
          "id": "bdc8e900-5503-44c0-b42d-140d6adb1f12",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7282b69c-b3f7-422f-9cb6-bd357417af3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955cfd26-adea-49e4-84e9-406baf13c3dd",
        "cursor": {
          "ref": "afdb9245-1143-4cac-85b4-410f6a856039",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f0db294c-51ac-4fa5-8c00-6de78d594f62"
        },
        "item": {
          "id": "955cfd26-adea-49e4-84e9-406baf13c3dd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "abec59bc-7782-4dce-8744-2fa773c24bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dfc62b-5826-4daf-9cff-29e55be9d3c3",
        "cursor": {
          "ref": "6ed8be2e-a6d3-4493-8128-78f0bfc73212",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bf04eeab-7412-4794-be3f-47b1a54438b5"
        },
        "item": {
          "id": "03dfc62b-5826-4daf-9cff-29e55be9d3c3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1b2e717f-ef6d-412d-8306-dae338e96e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2e0cee-14dd-4021-8e3d-001c37c07e07",
        "cursor": {
          "ref": "19924d8e-0bf9-418b-8d8f-1baa4eb93de9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5779130e-e455-45ff-a732-3570edda64e4"
        },
        "item": {
          "id": "ea2e0cee-14dd-4021-8e3d-001c37c07e07",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ee5d8f7d-9945-48f5-b614-6e79e75a0daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b92bb3-dbd6-4c5d-89d8-693e4ec3e66c",
        "cursor": {
          "ref": "986e7f73-2aea-42ad-9b16-d5b7ac461876",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "97794eda-1012-4a96-8f67-fa8aec9648a0"
        },
        "item": {
          "id": "a1b92bb3-dbd6-4c5d-89d8-693e4ec3e66c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "38c210a7-d117-4c0d-9d0d-80d9530300f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2551f80-28c2-4ffe-b563-ebd31da686d0",
        "cursor": {
          "ref": "c8810509-47f3-4d91-afa0-8fb936899f22",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2c03c9ee-17fe-4c4e-8332-2e4f547c925d"
        },
        "item": {
          "id": "d2551f80-28c2-4ffe-b563-ebd31da686d0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7c74f5fa-59f8-4888-aaa8-0c2b13531ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cb2cfd-ae82-4990-a2d6-7982d7f829ca",
        "cursor": {
          "ref": "2b694964-c7ef-4a0a-8f50-c3aac1dc578c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "067544cc-25f7-466b-9ff1-3a3ec5326514"
        },
        "item": {
          "id": "24cb2cfd-ae82-4990-a2d6-7982d7f829ca",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "97aaede0-bc1f-41de-8277-762466cc0655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857121d6-7e3c-444c-9f17-fcb133cb5ffd",
        "cursor": {
          "ref": "9e9f510b-37a9-4c24-a357-9cacd7cb875f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1667e66c-55b0-4556-a62b-a4a8f36097d1"
        },
        "item": {
          "id": "857121d6-7e3c-444c-9f17-fcb133cb5ffd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1a209a9f-4e2e-42b0-a911-012a3eaeea4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cac8705-82cc-45ed-9b15-17d6f1da3cd7",
        "cursor": {
          "ref": "80bbe947-a750-43f4-aeaf-ae2266d23fce",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4a84835e-cbd4-490b-9f8d-befc120e2af3"
        },
        "item": {
          "id": "6cac8705-82cc-45ed-9b15-17d6f1da3cd7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "56cc0392-d757-4ee9-821a-df3fb4b81cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0978be03-c1bc-4b2f-b4ac-1967b085cdd5",
        "cursor": {
          "ref": "acf4b7ea-544f-46f6-97f9-60e6bf1893bf",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1b727d69-e623-4e15-95d9-79d5ceb762c2"
        },
        "item": {
          "id": "0978be03-c1bc-4b2f-b4ac-1967b085cdd5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f0c1441d-461d-4625-aa0c-c9c877d84529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba99ff1-bac8-4c80-b825-1cde938db77f",
        "cursor": {
          "ref": "b906e624-771a-4a53-b8ce-0596d9aa627b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "080dcf15-42a0-42ed-9000-7e94e3dd1cfb"
        },
        "item": {
          "id": "6ba99ff1-bac8-4c80-b825-1cde938db77f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8eec0d40-9e83-4233-8339-36be9be68d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc252d16-172d-45b9-bc9a-f9d3e5c3de14",
        "cursor": {
          "ref": "d410bbbc-b242-41a5-bbe9-83ddff3f6a66",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2ec2e24a-f677-4b32-80d0-c382232af4d4"
        },
        "item": {
          "id": "fc252d16-172d-45b9-bc9a-f9d3e5c3de14",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9d9ed8b1-0420-4711-8411-27a4b6d20fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489aead5-6c64-4bad-9806-4ce3b8769c3d",
        "cursor": {
          "ref": "7aa74eea-f2a6-41fc-9cf0-bd74de154770",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bedbdaaf-86bd-4649-b73c-ae8b47b754bd"
        },
        "item": {
          "id": "489aead5-6c64-4bad-9806-4ce3b8769c3d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b164a4c5-46b7-4d6b-805f-6df7169557c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c530bd-4f0a-41a7-9a86-1901d009322a",
        "cursor": {
          "ref": "9d0671c2-c190-47a2-8396-fd226bc86207",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dc0144c2-286d-481c-b44d-2fa89e46d596"
        },
        "item": {
          "id": "a3c530bd-4f0a-41a7-9a86-1901d009322a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6b891c83-c808-456c-a5aa-a1b608ffffad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6942bae7-7abe-43ca-b342-7eeb83411008",
        "cursor": {
          "ref": "599c1e9a-e6a4-48de-804d-a22fb5bb9265",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "468b7502-be4d-4ace-91d9-826eae3d6b4a"
        },
        "item": {
          "id": "6942bae7-7abe-43ca-b342-7eeb83411008",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "78cdf94b-7e95-4d6b-9d15-269faba8ab98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7cecbc-7c68-4f51-ab93-46fa2f7254c7",
        "cursor": {
          "ref": "90f288e7-ea5a-48cf-a4ed-017e34d335c0",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e73fabec-cc22-4d1c-95a0-a763b70c5d0a"
        },
        "item": {
          "id": "2a7cecbc-7c68-4f51-ab93-46fa2f7254c7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "838a590d-4397-4b08-8e02-60faf809637d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3ba5bc-bc64-4529-9380-fd036ca4323e",
        "cursor": {
          "ref": "5f6dd8ea-fe5f-4ed6-8028-3cdd6ca660ff",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8a086de7-1a1a-4d6e-b269-5a7abbdfe8d2"
        },
        "item": {
          "id": "da3ba5bc-bc64-4529-9380-fd036ca4323e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d58fe7b6-fa89-4069-952a-8b98fbef3498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9dd3cc-da6e-4252-b4fa-89325d7dcec9",
        "cursor": {
          "ref": "bb4003b7-efcd-426b-a85b-fd7f14cc028f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5d4ee652-e49b-40dd-b014-0fbef3ce406e"
        },
        "item": {
          "id": "7b9dd3cc-da6e-4252-b4fa-89325d7dcec9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eeac3b98-36ec-4f51-8d6e-4e9afaf2df6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcae49a9-88f1-414c-a2d2-ccc3451ae90d",
        "cursor": {
          "ref": "a44f81e7-1601-4513-b7e8-980b25d9c86a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d29d4ece-832e-4103-9989-8fdcb43c03be"
        },
        "item": {
          "id": "dcae49a9-88f1-414c-a2d2-ccc3451ae90d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ccca6c7c-fa77-47b2-9792-b3074bf5d366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425b63d9-aff1-4766-92e2-fca3f030f6f4",
        "cursor": {
          "ref": "d08c3459-33a1-4c47-b810-100fefb7966c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f44d0647-81a5-4aee-bd39-671157595c7d"
        },
        "item": {
          "id": "425b63d9-aff1-4766-92e2-fca3f030f6f4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eba6f7e0-a0eb-45b8-abca-e90a4ff8cae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d187660e-d85e-466c-84aa-44f3d3dbab8a",
        "cursor": {
          "ref": "53b8be9b-6030-4cc5-ad13-b929350b4be5",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f8183b77-678f-4f25-b58c-ba0f7900e825"
        },
        "item": {
          "id": "d187660e-d85e-466c-84aa-44f3d3dbab8a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a5118bb2-fe1f-4636-b7be-cab8ab9536f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d850f52-daeb-458a-988e-e4dbb19067ba",
        "cursor": {
          "ref": "73c8bc0f-3682-45cf-b9ca-cb5d31dd370f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c4251f11-577e-46bc-949e-bc6bfc17fcf0"
        },
        "item": {
          "id": "1d850f52-daeb-458a-988e-e4dbb19067ba",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1f370e4d-198f-4ef2-bd04-fe23a906b156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5720399e-6b2c-400c-8a22-73d8fe702258",
        "cursor": {
          "ref": "7e3c006e-f003-49ab-a455-0b66a5ecbaee",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "65fb67da-22a3-4795-95af-37190e052cf2"
        },
        "item": {
          "id": "5720399e-6b2c-400c-8a22-73d8fe702258",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "58057b21-8d2c-41fb-abac-7a4d63f31d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7b0a7d-389e-4ed2-bad2-7d8024484379",
        "cursor": {
          "ref": "25d3c450-7171-4094-bcf7-dbc3d9391367",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fc784324-7c54-444a-8d1d-355e0f6bc231"
        },
        "item": {
          "id": "2a7b0a7d-389e-4ed2-bad2-7d8024484379",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0ac094cf-bb9f-4456-87cf-aa9e257aa47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e14df5f-a05a-4d0d-a605-69d2c6962a6a",
        "cursor": {
          "ref": "4e4e5ecf-8199-416f-addd-868af9c14b38",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f99b1f0e-0eb3-441e-9066-4fa4da69459c"
        },
        "item": {
          "id": "2e14df5f-a05a-4d0d-a605-69d2c6962a6a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5d12fe01-971d-4992-b238-39a63e268a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87a24e4-37be-4aae-9555-6dd9252b10ea",
        "cursor": {
          "ref": "0a0e93f1-a791-4041-a8af-da1ae8b1ba55",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5ea156cb-e03d-4f9b-a480-7974401e3036"
        },
        "item": {
          "id": "c87a24e4-37be-4aae-9555-6dd9252b10ea",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "229d5e91-b342-4af6-9bfd-27f4768162df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9177baeb-6c5d-47a3-99b5-15f693e9270a",
        "cursor": {
          "ref": "3f7967f5-03de-421c-92b9-775e850502f5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5ed4b229-835f-4fd4-b4b3-56f69112e6ba"
        },
        "item": {
          "id": "9177baeb-6c5d-47a3-99b5-15f693e9270a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f7816b45-14a1-4a24-bb9b-8dc8bdbd6273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb3d02a-80ad-4f1b-af5f-20fb8697d424",
        "cursor": {
          "ref": "62f2b495-e76f-4737-b69b-a7d87d06115f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a20eb4f5-f37a-412b-b098-f9563a03a5e4"
        },
        "item": {
          "id": "9bb3d02a-80ad-4f1b-af5f-20fb8697d424",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "13709742-80e8-44dc-883e-1f2f005e644f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e91afa-2921-444a-bc0a-09f1244bc51c",
        "cursor": {
          "ref": "f52841bf-656b-463b-ad23-a4b977244a5c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4d801658-4bb1-4b8e-ae26-68f4ce0fa34f"
        },
        "item": {
          "id": "41e91afa-2921-444a-bc0a-09f1244bc51c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bac69a4d-6c50-4a82-ab52-465639bd776c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816416c5-a08c-41ea-a063-5f8f40770a1f",
        "cursor": {
          "ref": "b6640b5a-b1da-406e-8020-b02006f65347",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0c128e84-6a8b-4aec-8498-66dd8a5543ca"
        },
        "item": {
          "id": "816416c5-a08c-41ea-a063-5f8f40770a1f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e3a7ff1a-73cf-4977-a2e5-68fd9cf6b336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fc0fe7-948a-42df-9fe4-e85858fcea0c",
        "cursor": {
          "ref": "736e448e-c58c-43cc-aa6c-6748f10e84c5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7ab0e7c7-054a-4eba-8b4e-b31f27913aec"
        },
        "item": {
          "id": "11fc0fe7-948a-42df-9fe4-e85858fcea0c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dee2ccb4-e237-440a-adf6-647dc7a4a697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f52e0e3-fa6e-43e8-b616-733ecf5b1b3e",
        "cursor": {
          "ref": "4b292b72-03da-44d7-bbb1-51fe3cbfa5e4",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "33339543-53e7-4763-8115-e21597e2736b"
        },
        "item": {
          "id": "6f52e0e3-fa6e-43e8-b616-733ecf5b1b3e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d137605c-f0e1-447e-9bd1-645182f9c2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b30a198-abb1-4ffa-a848-975838c1d17f",
        "cursor": {
          "ref": "beb229c3-87ae-4947-a9d1-eb175dc67144",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4fae5076-00af-4608-9160-c82bc9d3c980"
        },
        "item": {
          "id": "4b30a198-abb1-4ffa-a848-975838c1d17f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e9057eab-cf81-4661-9153-395100efac0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e88d081-5cd0-49f7-a104-3c4dbcebd25d",
        "cursor": {
          "ref": "c4f4cca7-01f0-4411-b09e-5cf36a2b58b6",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "20459eee-373c-436f-bc45-ec8e6951bd24"
        },
        "item": {
          "id": "7e88d081-5cd0-49f7-a104-3c4dbcebd25d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "687bf4a6-9321-45df-bdb7-6251d6694d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a0f3e3-8bee-4008-a8f3-392010b8977a",
        "cursor": {
          "ref": "8fcc5aa9-c6be-4a30-9619-bbd2339c3261",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "297e21ba-535b-4e6c-bfa1-668452242907"
        },
        "item": {
          "id": "70a0f3e3-8bee-4008-a8f3-392010b8977a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8c347671-76f1-4706-a4b5-74e6cc3dd514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f937a2-2b06-4cbd-aa8e-148607ed5c74",
        "cursor": {
          "ref": "643580bd-f3fd-4fbf-93ff-458e47dccf5e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "53ad54c9-c995-49de-8116-1f3e8513c4e4"
        },
        "item": {
          "id": "71f937a2-2b06-4cbd-aa8e-148607ed5c74",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5fbf99d4-e542-42fa-885b-da2b35bff498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ca86e8-b0e7-4603-b998-d271b3ebd0f3",
        "cursor": {
          "ref": "09bfecaa-7e76-4dd4-95b2-f3a52b08bd68",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d81bc1ac-ad96-40d0-93c7-1f4a10ea4509"
        },
        "item": {
          "id": "70ca86e8-b0e7-4603-b998-d271b3ebd0f3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b99a362f-c5d1-4fc0-b5da-d43d893c9438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242f55ed-f5ed-48c4-a0e2-b9e7f84c4aa5",
        "cursor": {
          "ref": "b314588b-8617-4c3b-b113-d27c56f5143f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "590f671f-6dc5-44a2-876e-71081143e415"
        },
        "item": {
          "id": "242f55ed-f5ed-48c4-a0e2-b9e7f84c4aa5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5425ea74-7a74-4bb8-a1eb-d27a18f8956f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a4caa7-af03-49f1-b62d-51d252d1128e",
        "cursor": {
          "ref": "9ff13f66-d1b3-496b-9cea-fad91252dd87",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dbd3b4ff-d359-4cad-8bc0-08d593fb380c"
        },
        "item": {
          "id": "69a4caa7-af03-49f1-b62d-51d252d1128e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a9e75c01-42ac-45cb-a0b6-80f7f84ce345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e4b7d1-f063-42f5-a9fe-0c66a32b8bf4",
        "cursor": {
          "ref": "9348957b-68c8-42a2-b3e3-997ec97d79ad",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6ef163ec-ee72-4b86-89c2-10d2a9a50c7b"
        },
        "item": {
          "id": "d0e4b7d1-f063-42f5-a9fe-0c66a32b8bf4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3a057646-5e4f-4de8-8b06-fc2a81820dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcb1a90-5428-4694-ad14-f1947355c3d4",
        "cursor": {
          "ref": "6b014f83-bc77-4cd7-9531-92b714f87695",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6d4b8c96-4515-4a5e-974f-b85017f31520"
        },
        "item": {
          "id": "afcb1a90-5428-4694-ad14-f1947355c3d4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "387faeb2-4529-420c-9f9c-dd3d2a990d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c4db69-5dc8-4e66-97f8-a41bc909ba3e",
        "cursor": {
          "ref": "8b22b870-24fa-4b09-a77c-4f2a502c08a6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4e151f55-c0a7-45e3-a4e5-6d1a4f4c1f82"
        },
        "item": {
          "id": "b1c4db69-5dc8-4e66-97f8-a41bc909ba3e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e471291d-f629-4060-bef1-3db0555c8d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f2c794-dc31-448c-bc74-3890d8205564",
        "cursor": {
          "ref": "94e5fc6b-51c5-4a31-98c3-66a84edd6340",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bddca954-be06-4996-b67f-78e740cbb5c8"
        },
        "item": {
          "id": "46f2c794-dc31-448c-bc74-3890d8205564",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "245474bf-6735-47db-b830-cb5e1432d191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463e0dca-517a-486e-92e2-1c46912c6493",
        "cursor": {
          "ref": "6802a115-1d64-4463-a436-cbbfa1e06a4a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "566337e4-d815-4ae5-90f7-723472e8c748"
        },
        "item": {
          "id": "463e0dca-517a-486e-92e2-1c46912c6493",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9eab9cdd-4220-42c2-9913-6871b480469a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae12f93-e901-495a-9021-7e91b243fd51",
        "cursor": {
          "ref": "da443661-c5cd-431f-9e7d-e86624e0f8d5",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7720b490-d159-4765-94b0-c213996388c7"
        },
        "item": {
          "id": "dae12f93-e901-495a-9021-7e91b243fd51",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0333b555-40e7-4985-b162-23d2e85556de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1575ee0b-72dd-425d-a416-989bce6dbdf4",
        "cursor": {
          "ref": "9f01093e-e326-4ace-8d23-65063dd0549f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5bcabccc-17d0-4792-abc2-164aead4e526"
        },
        "item": {
          "id": "1575ee0b-72dd-425d-a416-989bce6dbdf4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cad8bf13-15ee-4997-8c48-271b05faceab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fd5333-8c45-4e69-8db7-7c9b37e5b235",
        "cursor": {
          "ref": "9820735d-56d1-4088-a0d2-2d4a4e8a6357",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ab93115b-a224-4382-b36f-b73bcc21d924"
        },
        "item": {
          "id": "b1fd5333-8c45-4e69-8db7-7c9b37e5b235",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "abedab11-335e-4a1b-9610-2da381fea52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf379733-1687-4e36-ab21-edfed780b956",
        "cursor": {
          "ref": "c602c52c-cbd0-4e77-95ee-22ede275b532",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "812ed670-0022-403f-ab34-dd34cc9ca367"
        },
        "item": {
          "id": "bf379733-1687-4e36-ab21-edfed780b956",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a03aa96c-3050-456b-ac2e-637ff7fe6492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342a5b17-2fcd-4614-9d15-12fc711b03a3",
        "cursor": {
          "ref": "933f95f4-28ea-4b33-a31e-41e3b55a4e07",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "803ee7e9-ce89-43a5-8380-f0fcd8322b85"
        },
        "item": {
          "id": "342a5b17-2fcd-4614-9d15-12fc711b03a3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bb2c9ed2-44d1-43ad-ad1c-0ac9bcc4ca59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c92771d-7aa3-4f4f-9f05-7d2706f57435",
        "cursor": {
          "ref": "9b43ba43-3d9c-4cc2-a356-f065a0607a4f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8ba113ce-f0e8-4ed1-9df2-5dd1ed2940de"
        },
        "item": {
          "id": "0c92771d-7aa3-4f4f-9f05-7d2706f57435",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "eff60caa-b053-4ca8-904a-c21a12e4eda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88e5743-1415-464b-97aa-71d1edbbea05",
        "cursor": {
          "ref": "3d2495fe-7314-4c95-b361-29cf1dfe0a20",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d2575a8f-35d9-47a8-8ce0-de4cf342caf7"
        },
        "item": {
          "id": "c88e5743-1415-464b-97aa-71d1edbbea05",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ecdd71b6-66c3-4c3f-94e7-a442afe0c544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fec390-41d4-48a1-a1d6-3c6b50469087",
        "cursor": {
          "ref": "aa7e9886-315d-4bd3-a585-dede644aebec",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "afa2d9d4-7c1d-422d-9c7b-d82d64799f4e"
        },
        "item": {
          "id": "42fec390-41d4-48a1-a1d6-3c6b50469087",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "71285acd-ef5a-4855-9ea8-758235914ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f01a85-e472-4b0c-bffd-733695de8d19",
        "cursor": {
          "ref": "c6fb7fe3-3844-4f5d-a8e6-001b84f067c9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8e71c1d8-3c1a-4746-8b86-78c4afc52274"
        },
        "item": {
          "id": "b0f01a85-e472-4b0c-bffd-733695de8d19",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cc3d68d8-8f89-4414-96a9-5e76631bf944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f68c3d4-d679-4ea2-9c57-40c82d2f1eb2",
        "cursor": {
          "ref": "ff998058-d16d-4e06-b833-6aef15d486de",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5aa6f9cc-18a5-4eba-83c7-9e988be72f41"
        },
        "item": {
          "id": "6f68c3d4-d679-4ea2-9c57-40c82d2f1eb2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6b33c49d-68f4-4fd2-92d5-00b99f27c0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2df2707-88b9-4649-ab3a-23cabb407705",
        "cursor": {
          "ref": "2efa3d13-61ba-477c-a4c7-44b87bc38b0c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1ad20119-5b9d-437d-8302-14f39ffdac32"
        },
        "item": {
          "id": "e2df2707-88b9-4649-ab3a-23cabb407705",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e47670c1-c648-4004-8ec7-5f353dafb2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4174657e-8e55-492a-9a6d-8069035ff7a5",
        "cursor": {
          "ref": "8fa3c958-dbaa-468f-b0f1-71d39ae31928",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "722633c7-b82b-4ac6-9a2c-bb477301d4ed"
        },
        "item": {
          "id": "4174657e-8e55-492a-9a6d-8069035ff7a5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e2000498-8866-4280-8fc3-ffcf630359b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2df47c-1e6a-4216-84ff-331477aae754",
        "cursor": {
          "ref": "3afcbb86-f752-43f4-9df5-9b5cd837d626",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "57059711-da54-4d46-8324-ac47173df7b8"
        },
        "item": {
          "id": "bf2df47c-1e6a-4216-84ff-331477aae754",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2739088e-84b6-4699-96fc-94a49e640498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650c5282-3fc4-48fc-95bd-ce1783a0068f",
        "cursor": {
          "ref": "6a22c1fb-0f9b-417d-9db6-82ca563a0ef6",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "43e5302e-2c12-431c-8588-10d98a4b34f1"
        },
        "item": {
          "id": "650c5282-3fc4-48fc-95bd-ce1783a0068f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b87d7215-6f74-4ebd-a35b-1ae0bcab3692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e11390-91c6-4e59-85e1-e3cf559e2a8d",
        "cursor": {
          "ref": "8b81e05e-2b93-47e7-9497-b58c26f28b37",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "02f6f7f8-f8c6-4d65-94ff-b2e01e7912ec"
        },
        "item": {
          "id": "02e11390-91c6-4e59-85e1-e3cf559e2a8d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b5086090-ded7-47a6-aed3-db81a5b998b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c410b89-73b4-4e43-afa1-9717c70e2fba",
        "cursor": {
          "ref": "1493140b-2617-4dac-82e5-f2cbc07302ae",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f65da537-7a4a-4ad6-a431-744ce12e036e"
        },
        "item": {
          "id": "8c410b89-73b4-4e43-afa1-9717c70e2fba",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "03d21981-5fa4-4e03-b7ff-107e78959907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02669a9-b4ce-4622-bc09-1d4c35e85992",
        "cursor": {
          "ref": "69e67ca2-ec69-4aa4-88e6-a42acb450f21",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4f470285-d9cd-4980-af10-0831169321b3"
        },
        "item": {
          "id": "f02669a9-b4ce-4622-bc09-1d4c35e85992",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "16387db4-ef0c-4d4e-9e60-216d57767381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38901f0f-cdd1-438e-a419-de891eec4168",
        "cursor": {
          "ref": "b01573de-2a7f-42ea-a2ca-9ff617ada50b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "acfd1058-d7aa-4cea-baaa-5b9dc7434c9d"
        },
        "item": {
          "id": "38901f0f-cdd1-438e-a419-de891eec4168",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5c1e8404-3d2c-4fca-b2c5-a22674507c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b98b12-ee93-4e58-bfa3-20c2bd066d26",
        "cursor": {
          "ref": "53aa5e01-7a56-494a-b02d-63a526d1a983",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1069235e-bc7e-4f85-8ada-5db51ed07588"
        },
        "item": {
          "id": "07b98b12-ee93-4e58-bfa3-20c2bd066d26",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f61ff081-a668-4efc-94ad-f00bc9789122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5315ac-80ef-45ef-bcb6-adec8c60f65f",
        "cursor": {
          "ref": "e46d3400-401c-4b61-a98c-0f7b8356a611",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "434b59b3-b672-4915-ac36-e13593c6f4a7"
        },
        "item": {
          "id": "cd5315ac-80ef-45ef-bcb6-adec8c60f65f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7a59c2cf-f646-491b-a3ce-f3391e44616e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88aa0b1-d53b-47f8-86a9-a9da03f3c4b9",
        "cursor": {
          "ref": "3f33d06a-9dae-4ed2-88e9-5968907a3e2b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bed1c408-a804-4254-969a-3754070ba3c8"
        },
        "item": {
          "id": "c88aa0b1-d53b-47f8-86a9-a9da03f3c4b9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a75388e3-f90f-4abf-a8e3-dc2785258bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfef75f-1a62-4a7c-8441-684d1711d8cf",
        "cursor": {
          "ref": "d4702c10-8422-420c-a601-ca7746caedda",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a0d5f166-bde1-4339-93c8-2967b758cab5"
        },
        "item": {
          "id": "abfef75f-1a62-4a7c-8441-684d1711d8cf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f65799f3-c1d6-4599-91f9-e3cabb7d44a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890a54ce-049b-46c2-a373-685ebb5b1b07",
        "cursor": {
          "ref": "a2ca38a4-6590-408e-ae78-4aee1b043665",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ce141bb2-41bb-49cd-8582-998348a86344"
        },
        "item": {
          "id": "890a54ce-049b-46c2-a373-685ebb5b1b07",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5a462436-5627-42fb-b0dd-93558cd49bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2c35eb-b48e-4a85-92bd-f44115c877f5",
        "cursor": {
          "ref": "50fee05a-d918-4e15-ba47-8e005730cf16",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "346a59e4-f802-496c-aa91-45695e111924"
        },
        "item": {
          "id": "bf2c35eb-b48e-4a85-92bd-f44115c877f5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bd9b3af2-c425-4f6a-9527-b4ec9c5225a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afa02f5-a4b3-40ed-b5d2-a50589e15e03",
        "cursor": {
          "ref": "200fbb2e-3f04-46d7-8c6b-b68e801264e8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c403009b-3b2f-4af8-8e94-0eb14ac82dd7"
        },
        "item": {
          "id": "9afa02f5-a4b3-40ed-b5d2-a50589e15e03",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "85972095-f34e-403b-a0e4-ee64db1fa938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b30f85-dd5a-4530-a78d-27d4e416d0b7",
        "cursor": {
          "ref": "f6587d55-ce33-4698-9605-d55ba0825c52",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "48ea5846-7b1e-4a5f-b149-f8927ae36bea"
        },
        "item": {
          "id": "47b30f85-dd5a-4530-a78d-27d4e416d0b7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fdbda2b3-e824-488a-96d3-e92fbaa65604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c44484f-6d24-48ad-9e30-20dd6f2c68c0",
        "cursor": {
          "ref": "8cc8966c-301a-4c6f-af8f-1bd63c1639ca",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "94963965-67a5-4fad-82ad-827c052df0fd"
        },
        "item": {
          "id": "0c44484f-6d24-48ad-9e30-20dd6f2c68c0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6a7edc1a-c55d-4cb9-bace-90a858c64f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71909951-55f3-4db7-b676-6fe0af535170",
        "cursor": {
          "ref": "7a9f3f8a-f99c-40ad-9f3d-2eb7ee37fa71",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8c5ad96e-b350-41d4-9d77-a059f3e45a38"
        },
        "item": {
          "id": "71909951-55f3-4db7-b676-6fe0af535170",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d8da6d2d-9578-427a-a5e6-b00d8aaa82f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cbbb81-b2d6-4c56-a216-0129c545f282",
        "cursor": {
          "ref": "e7d34d84-0fde-4e66-b698-6e63eba6c067",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5a218440-8c50-4530-badf-e195385e56eb"
        },
        "item": {
          "id": "19cbbb81-b2d6-4c56-a216-0129c545f282",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ab48f5bf-4d87-48f0-a53c-68f7b578b75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0778b827-2dcd-42f9-97de-e9ba01d803b8",
        "cursor": {
          "ref": "ac926187-9781-46c0-8844-3d730db99f95",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3915171c-1c2e-4587-90f6-545d420b8d67"
        },
        "item": {
          "id": "0778b827-2dcd-42f9-97de-e9ba01d803b8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f29b1f22-c435-4285-805d-66f9d2861429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58936f22-af32-4cd7-919a-0671c4273382",
        "cursor": {
          "ref": "22954b4f-8f56-4996-9062-c47eefeec20e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "afe9d513-5c01-4a2f-a400-f59d93468c05"
        },
        "item": {
          "id": "58936f22-af32-4cd7-919a-0671c4273382",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "84d2d911-ddc6-4af2-b0ff-e9caf4ba8749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa7d07b-6024-43bf-94ff-6684a16bc090",
        "cursor": {
          "ref": "1b3ce342-a5c5-44dd-9407-1369fdb76a99",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7822985e-aa35-4bef-8746-f56849e529cd"
        },
        "item": {
          "id": "dfa7d07b-6024-43bf-94ff-6684a16bc090",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7a26efb3-923b-4d8c-bac6-a002372de8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d66e16-4914-4b5c-97a8-6bc4c3215e93",
        "cursor": {
          "ref": "e72f7d66-ad48-4bfb-b880-682314bb09ca",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e531dfa4-5350-430f-a0a5-7855efdbb1da"
        },
        "item": {
          "id": "94d66e16-4914-4b5c-97a8-6bc4c3215e93",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "41547ecf-5555-4f63-bdb2-543de198266e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87563635-7c7e-4f3c-b8eb-bc720c404bf4",
        "cursor": {
          "ref": "582da328-0c2d-4d63-871d-17fda8cd617f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e103ad1b-82c9-4cff-90fd-20eee58b5741"
        },
        "item": {
          "id": "87563635-7c7e-4f3c-b8eb-bc720c404bf4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "868ceb56-457c-4cff-ac86-dd9550e2cff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d817f2-88ad-4d74-8fa2-7e8cc560239b",
        "cursor": {
          "ref": "eeb9d08c-52ef-4bbc-b731-8c97492c8d37",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1450e073-2c24-4467-8828-1a9232c20d54"
        },
        "item": {
          "id": "78d817f2-88ad-4d74-8fa2-7e8cc560239b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7fed31ec-d8a7-413c-8724-2ab6f23457e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3ac028-8fdd-48e7-9c44-2fa3c7cb7ae8",
        "cursor": {
          "ref": "4ec6e5d0-f7f8-4c57-9f77-d9456a715931",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b82affb5-6aee-4089-8fdd-6c8e184bc2f4"
        },
        "item": {
          "id": "2d3ac028-8fdd-48e7-9c44-2fa3c7cb7ae8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b121d292-3bab-4123-b05b-c15c3554498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f6510b-67e4-42f4-862f-7c2febab3735",
        "cursor": {
          "ref": "50b864b4-f451-47ae-9eb2-bdfb36294835",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c864082b-830d-40f3-ae4d-ffcce536a4ea"
        },
        "item": {
          "id": "33f6510b-67e4-42f4-862f-7c2febab3735",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "78604c37-fe45-4a1c-be8c-d12a849458f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5998d73d-da09-43e1-b40c-58d610bcba7e",
        "cursor": {
          "ref": "27c4d60c-c95b-4e2a-9f65-f29ab1b5bf65",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7aa04c76-06f9-4f5a-8493-63ed49fe9d6a"
        },
        "item": {
          "id": "5998d73d-da09-43e1-b40c-58d610bcba7e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ad8ea671-8d55-46e5-b7b1-79e846963112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1686b13e-db2d-4675-9830-c274c3522283",
        "cursor": {
          "ref": "d40e0b59-2300-476b-86cb-07486dc5d574",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e03e4c92-2a90-49bf-8af1-d4a7bfaa87af"
        },
        "item": {
          "id": "1686b13e-db2d-4675-9830-c274c3522283",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dce6620c-e0ba-4a94-97e8-b955f049b1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24abd4b2-4e23-4f24-b8c0-03c4892d7b66",
        "cursor": {
          "ref": "6a8b2f7c-cb3c-4191-9c87-0e1d7f218d8c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fcc3b1b7-3d9a-4a79-9b15-3c75bff9bebe"
        },
        "item": {
          "id": "24abd4b2-4e23-4f24-b8c0-03c4892d7b66",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "244afa7d-64ea-43b8-a510-fd5cb417964f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad4c226-05a4-45b1-8f17-784a8de206f9",
        "cursor": {
          "ref": "4c791016-bf6b-4e2b-80e6-0d3ea75a06a2",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8b2fffe0-a39b-4194-bbb3-65da8ff0f2b2"
        },
        "item": {
          "id": "7ad4c226-05a4-45b1-8f17-784a8de206f9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e96597b3-1aa4-4433-a402-60ffa7d2118b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8deeb5d-9923-4ffd-8c97-04d815aa06b7",
        "cursor": {
          "ref": "1565f8d1-4faf-41b8-be43-22a643f4dfdb",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "066c12ba-793f-4461-b5c6-f231366e1915"
        },
        "item": {
          "id": "a8deeb5d-9923-4ffd-8c97-04d815aa06b7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d7bf182f-ab77-446d-854f-949fa8445bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626685f9-4f16-4580-a21d-a1f264b0c491",
        "cursor": {
          "ref": "507bcea6-acf0-4f6f-a898-700415cb79c9",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cf5ec919-468c-489b-bb4e-3a8012155c24"
        },
        "item": {
          "id": "626685f9-4f16-4580-a21d-a1f264b0c491",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7d3dd3a8-030e-4591-b4c0-28f55eb73223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ace8650-7b78-4937-922f-79038ad3e66f",
        "cursor": {
          "ref": "c3811162-b30b-42d7-a619-cb64fb3a9044",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b00833b4-9653-4d6f-a519-f0036b67d03f"
        },
        "item": {
          "id": "1ace8650-7b78-4937-922f-79038ad3e66f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4e353fa8-7368-4f25-adfb-96a9231ac1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454d6dd2-3190-426b-93bc-1074e21d407a",
        "cursor": {
          "ref": "141f31a7-369b-4e9d-be14-5e0a6c83c3ba",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b1ac9312-dbac-4f0d-b6ef-6e0ac5aed6bc"
        },
        "item": {
          "id": "454d6dd2-3190-426b-93bc-1074e21d407a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c85f3252-ecbb-4ef0-ad70-1faf597da8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229f9995-a6a3-4f8c-9039-ad0c56015997",
        "cursor": {
          "ref": "41cf328b-1261-4a54-8113-9d6d66c15dea",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "327d7152-6de3-4040-af03-ab27631a2cb6"
        },
        "item": {
          "id": "229f9995-a6a3-4f8c-9039-ad0c56015997",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "88211b65-8485-464c-b408-4dadd4662400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194b99f7-5051-44fe-800f-0d0bdd25a660",
        "cursor": {
          "ref": "46f3590d-7b14-493f-b1ed-236cdcb3b66b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2f03d8c6-8f71-4ae8-ad51-4bb6e499b45f"
        },
        "item": {
          "id": "194b99f7-5051-44fe-800f-0d0bdd25a660",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "13554eb4-f205-454f-bdc4-fa9ce17662bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdc330f-e2f1-49b8-bc78-2949b85169db",
        "cursor": {
          "ref": "1dd04204-4bc6-4ae7-9ac4-8c14fa332d1c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "14f068a2-bc93-4e3a-a58d-b24d9a4a0de5"
        },
        "item": {
          "id": "4cdc330f-e2f1-49b8-bc78-2949b85169db",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7adc4962-14ba-4b70-a7b0-d19970003877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038839c5-933c-4677-be37-82d86aafdf6e",
        "cursor": {
          "ref": "a7b41c94-470e-46d4-82d7-47de288bac98",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "eb0e76a2-758d-4ba5-b5ae-3bab42866b2b"
        },
        "item": {
          "id": "038839c5-933c-4677-be37-82d86aafdf6e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e93992d9-53e1-4674-867d-24c11919b911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dfffdd-fc60-40bb-bffd-e365445966f4",
        "cursor": {
          "ref": "2cf35127-219c-4ea8-a9c8-e131a56fe925",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8d5efec0-df26-463a-a24d-bb72b076f0be"
        },
        "item": {
          "id": "b3dfffdd-fc60-40bb-bffd-e365445966f4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "64c33aec-12d6-4e3c-adf1-a675834bad3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ff4ac3-bf74-4f93-821e-bf4fcfbf7c7f",
        "cursor": {
          "ref": "36461300-2af7-474c-8b1b-942bcc4468f7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3e4d6995-96c4-4bbd-ab7f-8cb6493d1f3b"
        },
        "item": {
          "id": "f0ff4ac3-bf74-4f93-821e-bf4fcfbf7c7f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "94476ec2-233f-45f2-aa4e-a28c734227c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b190da46-75c6-4551-8094-93581004f41f",
        "cursor": {
          "ref": "3f076edf-5530-4d8d-b2d8-4eafc17331ca",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e5b85393-ffc7-4a62-a75d-4be937fdc254"
        },
        "item": {
          "id": "b190da46-75c6-4551-8094-93581004f41f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "350b0350-5015-4137-af98-04c21e94d1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f8bdb2-972d-4a8d-98ff-b767e5a6cab6",
        "cursor": {
          "ref": "443088c7-9fe3-4d74-b3a4-92b596306789",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f182c3c9-bad6-41d5-b727-99f690a0ef68"
        },
        "item": {
          "id": "07f8bdb2-972d-4a8d-98ff-b767e5a6cab6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7e026c0e-c20c-4112-b7b4-f81e21e387b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2f7bcc-5862-451e-99a8-21bed0f11af0",
        "cursor": {
          "ref": "acb970cb-8d6b-4934-b246-911c95a24c09",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "674fbe40-c79e-44ee-a9da-b814847c18a5"
        },
        "item": {
          "id": "ad2f7bcc-5862-451e-99a8-21bed0f11af0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c878005c-4405-48b1-8043-c19f9a3b2430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2b3ab5-8c12-48bf-b1e5-c98142dbc1b6",
        "cursor": {
          "ref": "38e63043-4017-4a1f-b432-0415fec95e56",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a5000550-14ae-4d5c-a218-fc42be34e7fc"
        },
        "item": {
          "id": "9a2b3ab5-8c12-48bf-b1e5-c98142dbc1b6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "aa4bef6c-6c69-46f0-a196-4586395af0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d86cc23-1d0b-4cf5-b631-dfbf24c2182e",
        "cursor": {
          "ref": "37cacc63-186d-4b09-ae7a-708b064681c2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "156e7585-b60c-4a48-9a72-d7423b4f6ad2"
        },
        "item": {
          "id": "1d86cc23-1d0b-4cf5-b631-dfbf24c2182e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "016522e6-6438-4367-be70-899367f402c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15c2150-aa94-4738-842b-3d0daeea676b",
        "cursor": {
          "ref": "4aadb181-5d51-4502-98ad-43e19e8099f5",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "bfa9289a-43e6-4fd5-8ec1-fdae6b5ff30e"
        },
        "item": {
          "id": "f15c2150-aa94-4738-842b-3d0daeea676b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3c2ac0d0-ad5f-427f-a2fe-8b6d6b988b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073b769b-4413-49be-9a18-d3db52e75f50",
        "cursor": {
          "ref": "679a5dcb-1400-4844-a72d-031468e66457",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d97fe353-d4b9-453f-b315-3d981bcaef6d"
        },
        "item": {
          "id": "073b769b-4413-49be-9a18-d3db52e75f50",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0db2f96b-6f49-4d18-92f9-8469ae45c0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b3afa6-7689-4ebd-b843-b8a6bc5b7bc6",
        "cursor": {
          "ref": "430e889e-f1f7-4445-816e-5270c03a428a",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f97e816a-c625-4d46-a4c4-164ad44a6885"
        },
        "item": {
          "id": "22b3afa6-7689-4ebd-b843-b8a6bc5b7bc6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fe2052da-7ec4-439c-b295-db2e2bb992a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b0a0ae-0bfb-41a4-898b-7d99af8ba017",
        "cursor": {
          "ref": "05e0e2d8-412f-4d83-99c5-04885108daa9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "eb8a0065-1b19-4d53-af08-6300974c90f3"
        },
        "item": {
          "id": "a4b0a0ae-0bfb-41a4-898b-7d99af8ba017",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ac06536e-3c87-4896-8ee3-61ac66e8b7ab",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e96ef6e-9f43-4d4e-b204-b8adb7a47ad9",
        "cursor": {
          "ref": "04145a0e-7a13-4f64-85b1-ac4e7754268b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "83fa168c-6b24-4905-a51a-49abb1d1206c"
        },
        "item": {
          "id": "1e96ef6e-9f43-4d4e-b204-b8adb7a47ad9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e0052a67-de34-4d35-bdf9-4dd72f49a6ae",
          "status": "OK",
          "code": 200,
          "responseTime": 1479,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71cfd93-c5d3-4b35-a7d7-b17181fb5e99",
        "cursor": {
          "ref": "528d9e4a-ddd5-4ae3-a3f5-3427721222cb",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "099252b3-7217-4347-ae19-c1aff2c4c38b"
        },
        "item": {
          "id": "a71cfd93-c5d3-4b35-a7d7-b17181fb5e99",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2a1e43fb-0a34-4dae-bd5e-2936da3df0e3",
          "status": "OK",
          "code": 200,
          "responseTime": 1293,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4834f966-c204-48f9-869f-de155f52b2c5",
        "cursor": {
          "ref": "aa205ef0-a2b2-49e5-8a4d-4eb41120d26d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "74b87d66-f538-4da6-a161-105e8531b627"
        },
        "item": {
          "id": "4834f966-c204-48f9-869f-de155f52b2c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1153103-085a-4f5f-8fff-71f82e98c530",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4834f966-c204-48f9-869f-de155f52b2c5",
        "cursor": {
          "ref": "aa205ef0-a2b2-49e5-8a4d-4eb41120d26d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "74b87d66-f538-4da6-a161-105e8531b627"
        },
        "item": {
          "id": "4834f966-c204-48f9-869f-de155f52b2c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1153103-085a-4f5f-8fff-71f82e98c530",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b51df16-5d90-43b2-8c65-a6f6af0db605",
        "cursor": {
          "ref": "8279977e-e469-47a1-a7ed-6eded2b281fb",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "847472cb-dd98-4b69-9310-0aa899ab07d9"
        },
        "item": {
          "id": "7b51df16-5d90-43b2-8c65-a6f6af0db605",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "027370f0-0a98-414b-a43e-da6fdfa889be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11ee84e-6c5f-47ab-be24-a41d58c48d6b",
        "cursor": {
          "ref": "b61bbf27-3bb1-446c-adca-196afb1bdeab",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c751e8c6-a57e-4205-93b7-69a4f5754071"
        },
        "item": {
          "id": "c11ee84e-6c5f-47ab-be24-a41d58c48d6b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "293c6cc5-eb97-4da3-98ae-716e6e91e660",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}