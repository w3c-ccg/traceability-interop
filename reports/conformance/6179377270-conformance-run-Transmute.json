{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9203f030-fdb0-40a9-aa7e-d63d37a49afb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "60b9fb73-c250-4bb8-8a70-10fc3ac3de43",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67b28f0d-3a99-4840-93f4-62a237fea08c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1ce0c193-ce7c-46da-841e-acc97435a0ef"
                }
              }
            ]
          },
          {
            "id": "97a82d60-47d1-4ef0-87b3-d2e623ea6c14",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3efa278d-d95f-454a-b798-d047cc9b0e8e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "21a109fe-8ef8-4e3c-bd1d-4ee19eb497ed"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "152dbd66-62ef-4f7b-abd9-929e31812cd5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b8891981-dadd-4c13-a28d-45d5eef5bd6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79b5ad98-99dc-42d9-9d3c-4fd0bea19c48",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6c11309-a2f3-4900-bcac-f0e422e86453",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a4bce19-78fa-4e1c-ac36-6b02724f3a5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "655b708c-9c46-4d82-aea8-ef2e697d5924",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1ceefe9-d07c-40bb-9b1b-8f9848e194fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1bf0b2d0-50f0-4d48-aff9-301a69f431cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe71a8e3-a368-432c-9015-aaaaadcdaa9a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8299495-0276-4bc2-bacb-3b457254ad6a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7c6cdb6a-2a51-442a-8486-b9649b337d50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "456f18e9-1f86-488c-9f98-628c539e4757",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f169ec8-c1ae-4323-96ac-adba1338abd2"
            }
          }
        ]
      },
      {
        "id": "3aa55d3a-f998-4fbd-9825-793adcc1673d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4e651d53-92d4-4622-8d54-fce3e309e374",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d64b9bf-3880-40ae-b3b1-7591b09a5cfd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86d897f8-2f65-4392-b217-0daef824478a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838c9332-5fa8-436c-ae89-f9d6f0f7a63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "387573ea-d1fa-4190-a9e3-c2789a13ebce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fe0e2e-e1a7-44c8-80f1-345487e32c93",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1da8be8-6c78-4953-b0ae-668bd59bac15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9e4f63f-3fdf-4efe-837d-8a0517071cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbc2ccf-a163-4183-a307-b1d13ee5aacf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3f0543-c303-423d-ba97-70a2320fa1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af39be81-66c7-43c9-bd18-5485ed618bdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "765eaf28-bd7c-4f07-8802-f94a3fa4b689",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9860927c-6f01-4d90-82cd-9d67e5013c2c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32cc8b6-c586-4431-b2ef-5d3a46d75ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e05649e7-c10b-4ed1-86fb-01bd6a9c3ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c496e1-a3d2-4953-96e4-0cc33edc066e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceace7c-c699-473c-a5c8-fc0d1d8971b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f3999ea9-017a-4e5a-9c77-b12e58b4f496",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4db7ccf6-7ffd-47fa-9d73-25b711f043c3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e5b85b2-4753-4bdb-b715-af2bd4e82d49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9b4062c4-48f1-4a86-a16e-fda0b1f30dfe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "105b71e8-86af-4b9f-a511-bf670fb77296",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e74470d4-ce79-4884-94a8-26060f4268dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7f6cc1c-a473-48c0-9377-9bab2661f490",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02c8e8d0-f2ca-436f-ac17-1b0a493c4d84"
            }
          }
        ]
      },
      {
        "id": "89a4a538-8c9f-48b2-a352-2698fd98be6f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "231dc054-33ce-4bd4-8fab-49b17673f3f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98231059-5048-49ad-abfe-a758ab8d2e59",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5be1bd0d-f727-4efa-9291-acf49fb785ae",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e07576-6050-415e-99c7-b4c8e7241731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aced9866-90ac-4717-9788-5953e2992d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d2e019-de90-403a-a6a7-871412401149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1144fbf6-fc3d-4865-bb09-3ac9eac98840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbf82d3-8815-48d9-93c8-090836afd10a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9deb1cb-536d-439e-9791-88595c498841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e997bc-f04f-4215-b804-2481530d025a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0f1e8f-310f-49e8-8748-b8a910170340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d9349d2-d31a-48e9-b7d5-5caa60979b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25bdf83-3b19-4be0-aad7-e24007995388",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97190d83-5573-406c-a3d8-21ec662028be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a857a08-ee8d-4560-8634-45191648431b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5dd39c-5c85-493b-a55e-40ae15c4d63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "803c60d5-2d9b-423e-98af-6dcb22174fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df827df0-037e-4e5f-9379-4890e7a7ea46",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f1607f-cb20-40af-b29f-d83fd9ce6016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9115847f-9d5e-43fc-8a7c-6780be729835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dea8c4-bf5c-47e5-8238-444ec3cd3ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c98f0b9-7796-4061-b712-d160f08eb986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56204e54-de05-4c12-90ba-ce9d4cff4c19",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb01a28-d31a-4030-8e30-f01bfb4d9e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231894b2-d03a-4b39-949a-0f22819a8728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb553f72-a533-4a4c-b28c-28d7be5eb161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d40580ce-2845-49f1-a4cb-d6c542198fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203738dc-38e5-4ca7-9fdf-39195226ddef",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c4c622-6b1f-4e9b-89f3-62d2b3c6d01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f30776d-5f4b-4fbb-9f2d-ecdc2657a95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ac6a69-0714-49b9-a9cb-3b1ec4effcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bf91176-acc3-4008-8a18-4d49c09db81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736fd2a6-c709-4ea7-af29-456eb0e9a900",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e319566-adbf-4b4d-aac4-6897d1a34781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc10233-654c-45f9-8388-63f315eaf8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18a899d-e358-40a6-950c-ac28d137eefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88360667-593d-44a3-b745-67781fb6db03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de1d715-b4f0-461c-bd0a-1a0ecca067d0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c66d28-dba3-42c6-b9d1-d003874f65df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acc0d39-32b2-4897-a963-1775ce1e0b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e09b9ca-3710-412c-a022-87468762480e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "220fa48b-b8d4-453c-9c64-08f7c6101b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6e3fcb-8457-4082-abca-2bc491ee387c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9422a738-6ad9-484d-a3fd-6968e97e2e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb15e574-277f-490c-87c2-2bc6961f1ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1cd2fc-7ba5-4a4e-88e5-7e379b80dcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "691fda1b-7156-4f41-9183-42f0d3d4b4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f709a0f-33dc-461e-81f6-4f9028c07025",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c02446f-eb87-416b-977b-d76bdb3c93f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624c3b9e-36ea-4a43-b36d-eb35444b1b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba33793-2fed-46ce-9e86-3840ff254052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dfc6bac-eec3-4faa-86af-103872773b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56b721f-61e4-401a-af52-86924a6c0bcf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7baed98-bf6a-4174-9bdb-74103f0be95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e71f25-94fc-42c4-8979-9d1a4154b831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb79c74-bb78-4f26-921a-68fb2e0a2c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "691eb86b-b8d2-4de2-aeec-a344d6dd7576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a395b0fa-2b34-4ee0-9211-f37ad2664292",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb6d2d8-629e-4bb2-bfff-23e148d105ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4e674d-bfcc-42de-927e-6da54c09335a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d755d705-1dea-45d3-91b3-b6e0ad3f4e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaff8320-9dd9-4369-a9c8-6a39babc322b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18456200-1931-4073-a8f4-53e280a0bf2a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a59f333-f432-486f-bb9a-73584a5bf2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9473ba45-8731-4e26-9980-3eff5eec2e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da74ab1-99a6-4e86-9af0-6a27f5c0aaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "492654eb-59e5-4dd3-919f-5d5f8653854a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0606eae-d65d-45c5-ade6-c2d49ee31cc1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691450b3-858e-44ee-a186-bc4660417617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fd0e86-b195-42e6-b40c-2f8cdfedf73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba29103-94ff-4c76-a18e-b870c3aaa0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7a79407-f18c-4196-9915-5bb028bd98f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829b5b91-382d-440c-8f54-30bc48c0babe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0611c38f-b033-4311-a477-7b4fdf4f17c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff7928a-2c8a-46a5-9b46-1c41a37dcb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1d3854-94d7-438a-a1a3-68f6c87687dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ffe84b6-07e5-4545-a060-72b688ffeffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02038ac-df51-4e22-b0f7-77d0af4ba880",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e851660a-9aff-49ed-9bbf-4ffea4af619c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cceb3cb3-5246-4ba3-a6ca-9894380e6644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c71637-055e-458d-8bb7-875a8fc64177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff5f4ff2-1b6d-4811-80d7-9a3e7df5860d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b7969a-a497-4d28-bac0-9b8dd7d7736a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f62bcc4-f0c3-4ae6-b261-66486c1844e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248cb485-a196-413c-a447-092559fbb41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62221994-1436-41f6-bd9f-b4ed3347df67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1717ab4-f273-48d7-92c6-0e68cb0b3ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe61151-1f3c-43d0-bd2f-4f297e03ce93",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0113b81-448b-43bc-98d5-dd57042c0cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b1714d-d199-4361-9577-8f086e551ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e3f69f-67c6-4b84-8701-640c743e0b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d4660a-18e5-4eb5-b9ae-a9608afebec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ba0507-3d76-487c-95a4-a06d2f2dc3e7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c271d83-fe25-4640-bd8c-0445eda3eb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5e6d96-abd7-4d99-9b08-83354f60133b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95404696-1a95-4178-8b12-25f09140e082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e601bae8-90a5-4bde-889e-8df6faa2375e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08724101-3a6c-47b4-9fc0-26a0e832f57c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e65b84e-ee53-40dd-82a0-57757ce9ffde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9cad9e-900f-4932-b39e-69b5c4153d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58439986-57d8-4e7e-81a9-0c32ae5e1012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6dd9ed5-e4df-4ec4-8493-23459e32b391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbf7232-c538-4c03-b3f3-9d4bd29fc1f9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71f8ad4-bbb3-4061-972a-41a71e4709f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af6c09b-a86f-4e3f-ba3f-c61fde25c6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e154f318-80c7-4e96-b03b-2cd142158ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fea6eed-3ac8-471e-bd5c-3d88899d6b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63454ba-3519-468e-8fd1-eb0374f9e6a5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfb224b-ab0b-48c0-bad0-61b973e50943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34e3bf7-2aec-4492-8a73-c318b8969a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce931739-1da3-4301-9e38-ff518a2bad0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7adb1e-2572-4c0b-b21a-e9dbf370ea0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886074a9-13e3-4414-9255-91fe3de969c1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1106a3-6ef0-4f7a-9f5b-6a96d27f29c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aca5ef8-863b-4b1c-b9a0-ad2831ee923b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ff66fc-199a-4ee3-924f-5aeafebf3970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec89762-46d4-4d1c-8f76-0348cc2962f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812c8b05-6b0c-4880-af7d-deac2c04ccca",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0391d9d5-214f-4da2-8364-850d508a6ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3395f378-27a2-43b5-887b-3283f702a4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ae71d9-fd5c-429d-ae9d-44a9a4ca12cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfcaeed-975a-4bb1-ad1e-f0e6c4ae8bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b497c363-e159-4e85-9f6a-df2b9e107a91",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655b5a0c-46da-4030-9b8a-911b0134c173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e196f9a6-e328-4b0a-9c23-f4ed909a241d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f1da50-db7e-426e-afe2-f5a3731a224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "220e0413-412f-4089-a801-543a4ccae1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd306957-4031-4439-9795-065f2c3c4f20",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5be62a-b5b3-43d3-b06a-6fd5c295af9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7067c76-8055-490c-aee7-d34713d8c266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6af4715-784e-469d-9b35-213ee1fbc2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ed9950-dd6c-4a90-96eb-9651fbef3eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc85a04c-4709-4b5e-a2fb-2609d2119fa2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adeeb52-e937-469d-bae6-14cd322e0a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d05dc4-bef3-4566-b720-7b0b6e2baf34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54173412-64e6-43dd-af22-533e3a32178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5ec49b-3773-4bc8-af1a-05b5626c3f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2f935b-3ef5-4352-b264-9b35210e481e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bca25d0-9498-4f11-88e3-abddf3b4087b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c4cf58-3fd4-4607-9c99-3a25c3988ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d5e889-205a-4509-a7cc-dd180bf566ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc0fb7b-8dc7-40fd-8740-2a8907270276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc2c34c-e880-4111-88a4-1847d67be13c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9c16e7-3b9c-49db-8573-1c89bcb41134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a8e761-e42b-4c75-a828-dc81e02226f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67729687-25c7-4714-82f2-053beb1040d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68b10ff8-32e1-4962-8a12-ed54b0961c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28667e5-d39b-45b3-8b42-d4abfcd4f422",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d71c15-9767-4494-b292-fcb9b4cd4e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe838ec-534b-44db-ae0e-ae8556cc1138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cf3882-c16e-4f5a-a054-9f59695b4995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c48b8745-5e58-41dc-a6a4-f2e2ed74a2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec70c9b4-c49a-44eb-ab70-ad6c2cb8ce78",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d593a0d7-4efb-436e-a50e-65b38f7a3fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a9a8f8-b11c-4b97-9a9f-0e980dab10c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1a4755-0afd-40ed-99a7-91f832c23981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e659c6f-32e0-4bc0-b8cb-9c7a42c57c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d883d2-1874-44b5-ae7f-1b35e89b9d70",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a36577-12d7-4b41-b114-6e727add1a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b777d2-bdda-45d8-a386-483d4d206d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735affa9-09dc-4560-9db5-b7943cf38ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81277fe2-27d4-4474-855f-bb28552e9aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76999c58-741d-48aa-b2bb-f62d0c7e8b52",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378762f0-8752-41da-8b5d-d81c565dd4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9000f4-695e-47fb-bb2c-3f0aac8c4792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c41df2-6ebb-401d-b676-9830271304d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe8ac2c-e1f4-46d7-9943-b3487d8e1899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e82f319-2650-48a3-b00b-a8e542e9a781",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ed9c47-b69e-4f33-a4f0-94b949df5b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ebc5ec-ca35-45d7-8f0a-e3a33a8c4add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f373a7-419e-459b-8c32-a610870015a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7d0bfc-9101-4fae-9655-e71e03548c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c77b61-6bf8-4967-835c-7ad41752b991",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502866ff-e2fa-4463-99f6-ffa4197ec957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac664244-192a-4393-8d63-3742b1961a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a97102-e508-42ae-9fed-73009babc8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0edbba00-5872-4809-b0a5-fecf7ad5d357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f66585d-80e0-4708-9074-99bb5ce1a09a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709bc72b-0b05-4187-8a4c-3137cedefd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8d38328-28d5-4147-b7d6-ef5e0ac86977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3c3b1d-640e-4f20-823a-8729b4f52147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76a0f85d-b20b-4fa5-8fd2-ed47ec623f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43ad8b3-a7dc-4504-9409-0297c35041df",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878d531e-387a-400c-830d-fc7f47ec9338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc7d8fa-840f-452c-b2de-1b0982d7a38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cc5870-86e9-40b4-8dd3-5b6abc1d85c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "faf28a6e-ab54-46ad-833d-ba5d55b18fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0de7df4-c4a0-4826-b863-3556dadefe18",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8f569a-32c1-4c56-933f-f706374795c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890b939f-b9b3-42ff-9478-1b3e17409fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bfed23-4d77-495f-a87e-1dd3d0a37f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "32b64985-2973-414e-b738-bcb56c0c4a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074fa611-63b2-40ff-b8e9-280adaf9f850",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61de8716-46be-4c5c-be42-e4719692a78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b61dcf9-dad5-4827-9483-111ab8bdfbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cb5d8f-31d3-4780-969a-11e0270e507c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b63840-c3a6-4279-9b3e-d056b7c8991c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061f90a0-424c-44be-929f-e8b641480118",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e049f37-989c-4905-89b5-0a37efa68d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d50721-7d00-43bd-8034-63503abd4b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c5e1e4-e4ff-416a-a83c-7e7f03d72e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c8a207-859e-4244-8c45-bc2e2f4d2b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4494f98a-4f44-4270-976c-4a112b1d961c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6412a24d-8902-4b40-92c2-7bc0cba473a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8346cfce-d845-4369-b799-3eba0cd6dfc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9a2db3-d10e-42e2-aa6a-ff25d6a256e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "558bfb1e-7a6f-41a9-b4a6-0ac8ff9f6c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ba69c1-d3d1-468c-8db3-696f6ecab4d0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834b0410-ad50-4274-86e5-01f37cb2cf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee2923b-8237-41eb-ac65-5d62360b8ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482a3c0c-be5f-44f2-bc37-480e91b148fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "eb64f28c-ba16-47ec-a3a3-e2297d0a2f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62345c56-1d95-4119-99dc-309b7f96a4e6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66638880-2fb6-4731-a8a5-3f1ced830cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa43800-4aad-443c-b285-dd083c8d07e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a228c057-2bc0-4089-8cd5-b9b11f8cba53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "90eed362-0fb6-4587-817a-5a2554e799ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de509e3-aa29-4fae-a4bc-799e25c857ce",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0827bd5f-affa-4b4e-b3c7-be31bb54cbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e93e4b-021a-4566-afd3-8c6903692f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419745a2-f133-4025-9313-047933960eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "82d7dad9-f503-459d-899f-1f84ac32052b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af351370-59d5-44a2-9df7-ee27935e7ab9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb83f1a-6072-472d-ae97-140a13ba1257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77b06d2-4f09-48c6-b4c5-3c4bf734361f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a6905b-cd37-4288-8bb0-517d54e2ad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bcd2ce1-1703-44f3-8783-d8fc8ce506a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f68c808-2ab2-4020-a0f2-afe26becdefa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7c753e-ad01-42df-bfe5-6df51fd3e883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00ef629-2af9-4592-86f8-b2a7de1c3d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96b7858-f5eb-4c11-894c-407ba42c1a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dff60fd-255d-4bb6-9596-444e85e41f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b50474-36b1-4220-b136-fffeaf1772c2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4050b9-ad2d-4196-961d-61115bffa933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00c2f85-65e3-4c43-bee9-135786a83fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66230367-bc9b-4797-b6e7-4327391edb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81bba986-ded2-44d3-aaf0-ae5aaa40be67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cf4402-3de7-4d76-98d6-868851a54384",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0f8fe2-e362-48f3-ac42-2e2d089ca9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8da136-7de6-4192-a043-df3c6de51c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6d7aaa-4c07-4f88-9b41-d4989461d936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdc347d-cc01-4ab2-808b-ae574db8dac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8104a06d-0b1d-4795-920d-8b69f254ed14",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2474cb87-fe50-4cea-be45-274fc3497c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020eecc3-0f2a-46b8-baf9-453922c1a730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad341f5-2471-47ba-b1df-b1d025a74648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc705534-e28f-4958-89ec-e1ca8d8c7af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4260cbb3-5909-46fd-9f09-802c7a3f87f4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b52fb87-1c24-40c3-8d55-2ceeccf7b03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebf533f-6d74-4906-b7ec-2f4c57995a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53168539-849f-4544-9b02-a5a7340c8b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d622372-4365-40cf-8b90-f8586f361b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edf6ed3-6232-46fd-a4fe-00d2f7a4d34e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289cd5e1-3829-4e0d-8a8d-f7748ef6c4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9b2daa-c0bb-460d-a104-8f0a0084bec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a166d6f7-5370-4912-8a9a-1f7faab8d7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "58a6fc88-9250-402c-abe0-4e71eff72233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91837404-d3d1-4472-a768-af1fa3189d96",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fb2b43-741e-4e55-a9cf-f76fe4ac2be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504d0d95-f756-4fd7-812c-5442dc796b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18a260f-ead9-45cf-8cdf-68ad3d41dee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1cf4d02-e1bc-4971-9606-30eeb1adaeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb034dd5-541e-4176-98e1-82a8ba714b2c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb07fd1-b108-45ee-bd92-08178157c7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1109f664-2bfb-4263-b048-0b5ad1b824d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27267dd2-9d99-4167-887b-a571d6c5aea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed1e857-35e7-4534-ac89-7472c79b12b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c557c84-e072-42e9-8c70-421ead5f5714",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0acbb9-7bbb-4d20-989e-f3d248c09d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae47d88-8094-40cb-b8d2-6d34726630ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c7210c-a9bc-4a56-9ade-2caa111919f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e224b6ed-5c45-47b2-b6fe-22ce61d8b585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b255743-37f9-4a9b-83d4-16e3241454f9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb467b34-5fcf-47a7-9473-a800db79345f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15813b8e-1ca5-49e7-9138-a201353bd1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2600aa2c-2847-45e5-b2be-0c97faa88d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcdcf2f-d34e-4bfa-8f60-d331f90a60ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c579251-24e3-4698-b52d-41a3f659a07b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f113fa-f9e8-4f8f-b974-8fff20efbf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b575577d-4969-4e43-adb6-04b8db9a8675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375175ef-6d0b-4862-8dbf-7c525f41dbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1deb9120-beb1-4bba-ae0b-644eea9f0a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cceb2e-b229-4f7e-a642-58f35ccb29ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45884d0-e031-4a97-8ae5-d1472ee60fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23cd1eb-da12-493b-9d1f-132fc9fc7da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8242fc5-01fd-4a63-8496-1d8522cf2930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f34b2899-d571-4971-bb19-9c6ccd3ed880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc5dd69-1c4e-423f-b1eb-b68fbd5bd8f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc4e803-2906-4deb-b15f-d86dc6423db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b24c6c7-3d7b-4a79-8c27-b8bae2231154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7880e417-3be1-44ca-8360-813c671fe455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f56c5d32-c855-445d-9bf6-753822743679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d593cef-3d89-4dfc-bbfc-4efbe96f2189",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c5ab89-35a7-40d6-bbe3-1d43fdd80019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa292d03-02a8-4438-9b23-490ae966c7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e379ca5a-c021-4606-a2f9-c7bc090dcdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7702cb98-7a81-4212-bf07-8467d5ebafe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84950a01-6323-4cda-9923-11d981502507",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63576559-4b71-43c3-8a3a-e1dad6cf83a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8207866b-f370-4ca7-bd03-74f35425da15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1f7e5b-bbc3-4264-87c8-77150dc38acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be779914-176b-487e-968d-790d6ee150b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcf6ebe-db1f-4b1a-b3d3-6774fdd97916",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4751bb8f-456d-446a-8d28-a9eabf3deab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b1df77-7736-4556-a72a-e8f3ff1804c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3940b60-a988-46f6-9670-dfc2c8ad9cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "23cce8c1-49db-44e9-9ca7-a9528436fdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c43dc0-c85e-4342-96de-24e90e9b6967",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cae0f2b-4242-42a4-a465-1134fc5eab52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd1819e-8d2d-4999-a8c2-2d0576dba945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d21aef3-ed63-46f6-9bca-1eece8fddcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "097c459e-5bb6-4c14-bf7e-04967236651d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ab407d-799d-47d2-a05c-4c19d1964896",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581d0403-975a-4a42-a92d-b63b4bae69bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04c8397-cc52-475f-84ce-7d0cc5739d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba06809-e47f-4569-ab9c-ee088efa471a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "39373c31-18f8-43a5-8657-35a7ecb9e3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0289c50-a644-4023-bb93-b0086b96c1d4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c2a4f7-be7c-4ef9-8bb0-65e26af03c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7231de95-a2c1-421a-9e42-b99a318740dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd3437b-fe9e-4ea6-8e00-03a0c33d091b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "379458ae-1138-4aec-b2e9-350c26e7ce92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aafb261-5617-41f3-9e5e-d3361bfc1803",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e49f624-255b-40fd-a1ad-7f57f9efbcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adfb7a4-f76c-411e-a21f-f33c596f1dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ebcebf-49b4-46ed-94ae-741b73497406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "299b41ff-05d6-4eb3-9039-91f1c09769d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbab340c-9b8f-4421-b2cf-9b2dc0299cf4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751c6d66-861a-4f61-9b78-dc8efaad2281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c55bb15-90ea-4ef8-a57e-35bedac5784c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd7608e-f873-4fca-9938-fd01febd26c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b059fd-fb3b-483e-866f-666ea5510c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b92cc8-d110-4fa7-aab7-871c846b73d0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edee774-88dd-4429-a971-76f3547844d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677b853c-8e16-49cd-bee1-90b6c9488270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa286b6b-2f46-4e50-badc-1240426ec23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc472e9-7dee-4af9-b2b3-a57ab0d2669d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4f421c-222a-4b06-a1bd-9eeac1e821dd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c0c11d-b567-46c5-a25f-3dbc8dad9232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae9f618-e17b-4c52-be42-4841131137d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e8d0f6-ae46-420d-8809-1f47af51cbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "21f846f4-386a-4473-99d7-108105540f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bc8aab-8e9a-4ba8-8f67-8b0f12aa8f2f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8649e2a7-a06a-4c3b-84e1-764c87615981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edeb0fd1-569d-4718-9ce7-f2321daeb001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bc7f8e-7398-46c4-a4f3-efc4bca0f13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ed297f-1a60-4e4b-b752-23c62d3cae8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c0e3ae-5ec0-49c3-8ffa-3e7862e95eeb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4f981e-f0cf-48fe-be93-befca7a01369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc4e0a1-6bcc-46e3-8f90-1eaa6e349d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563f3d47-6a3b-43fe-8310-2b41eb63b0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8154ef9-16d4-4efa-bb28-df38d46fabd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4889081-25b2-45d8-899e-61b5e4bd8ab1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be73a3b-be32-4254-82be-8e22c6824fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cb2b24-2064-49ba-bb98-af331f68aab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e328bd-3669-4fe9-b05c-3f2a2010d740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2456b681-4d9f-468f-add4-f88ace95f5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1646991d-199e-4feb-9f2e-3dcd0ae6ba7b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9d9d7e-1edc-413c-9436-4783165f777e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3572edfd-a3cd-4726-a8e2-b2402284e8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f78980-94ea-4076-92c1-1d2a3430a6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ceca80-140c-48c0-98a7-bf0902f993a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff94ae48-971f-41c7-ad4e-f9796111caa9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a165c0-5691-41a3-9439-da868515e24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ecc457-c0b1-4102-8932-a4816fa007f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd5a514-ad09-4011-b2bd-17737a20df65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6694d88b-6bd5-4336-a11b-8f48d24f8bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7e7cb4-5c78-4fe3-8ec7-8765299d4b19",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dabad79-2816-44c8-aeb5-2a7933f59443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff4d745-2ed7-44ed-9f16-87ec2bbadb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e7a0e0-21f7-45d1-beb3-79bc65e69c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37f029a0-64f5-46b9-ab27-5dbfbb63c054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1e46e5-e0a3-474c-a218-6af4c38511ca",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ee952f-2cb1-4a41-b248-eb227f9b0138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e56d536-c6e5-4411-8a54-9aaab567a1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb1eace-6d79-4643-b37d-b8963fc0b00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5443f999-2294-47d8-8342-97859da7b77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc1253c-bb69-4d72-98bf-dc19e9a27256",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7499bd-bb62-40b6-b83f-969cc3eb4f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00e2b85-4da7-42e8-b033-4d9f95d2ae31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adafaad8-9e16-409e-a755-90d6c7e78d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e164550-15d7-47ff-8480-01f7a35113aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b462f292-f10e-4514-ae99-f1075ed8db40",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed89c84-e5bf-4886-be3b-b65bb46e841b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6a21e8-2d53-4c0d-ad08-6abf7defe37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5220e0d5-0438-4ee6-9c24-e313307af728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb7407e-20ba-4bee-87da-5b8f4fe2fdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37604154-a3d7-4a0b-9c0f-0953fee5e368",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810607ca-603b-4630-a4fa-bd0e1e672d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60405004-dbe0-4ef7-bfdb-be95b8da59f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0966be79-cbdd-43e5-a159-f3beb4668e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e93d372-358f-4efd-9751-518b48c10553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5913e951-8b21-4f22-81e2-cbe0e28daee2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb285e6-8e91-4949-b9da-bf0d672f57e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a36298-ba27-4ab7-b7cc-9a330dece137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040185d5-0cc2-4358-ba74-451bc66ef12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d626b4f7-060f-40a3-a3c7-904073ea4a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b18a23-87eb-48c0-9be1-7614bfcb61ed",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fc9eb5-42a3-4065-ab94-7348be1017b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56aaa118-ef80-4812-a7f1-300bf9b8c3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60f6e58-ed64-4a67-95b3-052278a60ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a130f235-5705-49c2-9d2e-db5a1fe02ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e54eb5-88de-46c7-a796-a917ed14d841",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332b58a9-b184-4edb-8393-15722879c339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feecf01a-b24c-400a-b9e1-8fd2b22e067f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae7df26-58b0-4df7-bcc0-bd4ebeab55f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "713e6a46-8183-40ff-b338-5288b8910bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01aa805-7b8f-4c89-9710-171042eb1c18",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2375c4d4-01ec-4adc-ade7-b3830343ed96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcae52e-0ab7-45bd-9092-53e8f4eb761e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b39252-cf0d-428c-8421-be91b159effc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eec17fb-38cc-46d0-916d-8c2a92164a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cd8e69-da69-4ecc-b73e-1ca856664334",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35849353-2c0f-437b-9222-0dec7327f620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ede14c2-d86f-4267-ba9a-020a75e6abca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8848e7-1cf4-493c-b01e-9f0922dd234a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "086fc8ab-c352-4654-bd4e-25c229b62325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d6a40c-cdbf-4a7f-908d-d263c9830796",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aec3f6c-9a7b-462a-a16b-a494de379de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ac1222-22ff-4d9b-9174-6b74d122305e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0901d36-54b4-43a2-819a-e776a1e1cd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1980693b-69b8-4aad-9e36-7545d32b46d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfcc561-0a00-4ea1-b919-4cffde5385c5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e2f290-a022-4f45-b917-a5a8c62fd2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7c37f5-45d0-4b5c-81fa-0198430748ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29832dd-b849-41be-ad56-3b6c6bcd66a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d94201e-650a-4aaf-9d29-1362129bf13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d18b6ea-e5ed-4b1e-a69b-f461ea5cfa45",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a978f84a-aea1-49df-885a-9c808f2b158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944461f1-06c7-478c-bab5-1ae1211db33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533ab80e-8fa4-47b3-9a96-8dfefdf7e38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56ef2b77-0703-4272-9b97-b90e1307dec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c61075-507f-4cdc-9449-89b29ba492fc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa4fcba-1e5c-4383-a08c-3edbf6ae6c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3969b825-d1d1-48c5-bb0a-1bc31db17ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec980bb-b2d3-4459-a049-6133f94a995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3898a360-8a3c-4891-b111-440cf1a26973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ade030-b237-41d2-af06-0a7223032cf5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a825d03-5894-4ae1-ba11-681ccaa7ae79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efee33ff-1cb9-48e2-98a7-550be0720629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77836186-d0f7-4247-b30a-6753573fb9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "950beccc-cea0-431e-b7c1-991eb9b0af19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905e52a6-6383-4b8b-a87a-65e58a8a03ca",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c86a115-24e1-4f42-9a6f-2c1fc0288373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f936a017-4bc8-4cd9-a1d1-3d6e20bd78ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6171b90-40b6-421c-8251-80b3a21a9fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "86c13e21-bced-422e-a06f-751b085428e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fb4da5-522e-4165-b17d-ecdc169134ee",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fb0c59-dd65-4dbf-8e25-14c989bf242d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b224d73-c63a-4a90-aaf8-a01dd0728fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224ffc8e-1920-4a34-bc29-e8c1d27cf0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be61814f-1575-4bc1-96f2-a34ffa852ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c84afe-8639-4278-b589-0a3d03643e30",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60d9351-2823-4622-aed1-c9ec713d1e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43d5aff-8be9-4401-b01c-b6d33b62d8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4013ac49-401e-4f50-8a27-b52a1db1be0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44c4fb2b-2e64-48a4-ba2d-383dbad91f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75d9e61-cf3f-4aaa-aee2-b4488021eec2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f72a496-0e74-427a-a578-4a9eaec67c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5c0f7cb2-701b-4b7e-8d89-d8887c2061d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa50af58-817e-4203-a2ea-3bf56e7dedcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "37734c9b-1444-4b6b-95e7-1e2d8550d418"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0dcbefc3-8556-4a66-846a-b606118d8873",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b513c3e3-200d-491e-97c8-3191041cc59d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d9efa1-10ec-4c46-8656-f81d276cdc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36fa3114-6647-4d65-a7bd-8fb434501d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc8b55e-85d7-4093-9139-7e8f02d6a4ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81d0f0e2-f00f-4271-a2c1-82b48b565b6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e74fb49c-e8e9-4a8d-b7c9-0816c1c6de15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fc4aa9d-0929-4b9b-8688-3745e1063753"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cce0e7cf-fa91-45a6-a434-9d184cd85c7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65b670bd-a88f-4e16-97f7-5e08206dfcc7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9125d0fb-f0a1-4899-aa1a-c0547c0df37d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce19e1a5-0747-4afb-9956-90ab77244530"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b95665a0-72ab-4ce6-b077-19d94ac96221",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe8a6754-af8e-461a-8293-20723d9bcded"
                }
              }
            ]
          },
          {
            "id": "a88a56f7-9974-4d16-9d98-ab1e33cc3731",
            "name": "Positive Testing",
            "item": [
              {
                "id": "68386903-7d0d-4f23-9cb5-a90630b9e89c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa372111-ce71-48f3-b6b0-2ca1767a5036",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8cbba7a-c5ff-42d1-969c-834aa56152ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de1a9bbf-f98e-4fcf-a05b-95a09644706f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "353e8b4c-682f-4f9f-9a51-d99ba4e98cbb"
                    }
                  }
                ]
              },
              {
                "id": "2aab0fa3-5124-4840-b8a8-aeb84a5c2164",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "687eae5c-e865-453e-9d9d-699cbc5979f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b854196-b1c6-40d7-b438-1077bf12f177"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baef8d9a-119f-4570-908e-014af857c931",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b022b196-c659-4774-a951-e6297b6a8277"
                    }
                  }
                ]
              },
              {
                "id": "e4134116-4bb4-4a1b-a2ba-72aea02fd370",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ad0da0e-bdf4-44ec-8f07-5f03824d12f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "678340bb-5ed2-4c69-a552-869339a95504"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86011b1e-4f27-4ad6-9eab-86e4b031259a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3f59851-2734-4764-bd64-7d1eb53527a4"
                    }
                  }
                ]
              },
              {
                "id": "2adb9f07-24ab-4f04-b412-750c9d881899",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "955f7a57-df47-4d4f-981c-3ec18a497146",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cacebab1-40cc-47cd-a4c4-f913fca72cb0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "700952ca-dc63-4c02-876c-c9dc2b2f9d4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "506f1cc7-6ea2-47e2-80ac-bc6fd111fad5"
                    }
                  }
                ]
              },
              {
                "id": "74e838b8-cec2-4185-8124-da33df7c8138",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdd168b2-c4bd-4342-a978-f6ed35fe9453",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "824a05aa-aa32-44a3-851c-1a16a7412072"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e5393c6-b751-4bcf-acd0-727db41a46ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5ec6dcd7-7d7d-4e51-a2dd-e08eb20444fc"
                    }
                  }
                ]
              },
              {
                "id": "2acefb2b-65bb-48b2-8f36-ea4b9ea124f0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "106d2f0d-25a8-4555-a47a-05b4c7611921",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fa2b15f-7be5-498d-a731-338276b7a9a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a538dc72-7124-4fc5-aa3e-fa24c9be26d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa23dc7c-1036-40cf-a2dc-157ef52f0b55"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bbeaab8-bc06-4a67-b001-a0d19d8690d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7515c9f1-470a-4b06-ae01-31f833ff9f7e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0040dc48-ea42-4e29-80c4-05a16d277463",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70aee567-c267-4e89-868d-0ad799b164a9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c615590-7086-487b-a554-7d9db9e3f304",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4e445563-c558-4cd3-bba5-2fa79f674720"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c293ded6-4f41-47bd-928d-0695dd6041b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2c8ac68-7f07-4778-9118-deeec49456b8"
            }
          }
        ]
      },
      {
        "id": "61d4ab68-b643-4670-854a-a7c3c6b2857a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "46450f5e-1268-4c26-a844-93f72a526872",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65de53de-99d0-4096-b422-423d4ca2bab9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5a25bbc2-d4f7-4cdd-bbb7-a652c88cef3d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf2dcf1-5f3a-4274-9271-3aacbc0fdcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acf41ce-ab53-4413-87e4-c2314aaa8607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7733238-5d40-4ed5-af9a-2ef88bf9cd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d4fe28-886c-40b6-b094-6af936b74ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6c971f-c849-4211-98e4-4429f591ccec",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804f7f15-027b-42cc-b30d-499c1965af0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8628ee0-3a11-4fc0-9a9d-c960d8862db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319619fd-73e9-4db7-bdc8-c1d2c3d157de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d12130d6-d093-4534-b151-773ef1de0308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c2e7ed-fafd-49d6-8078-5c606073a971",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbb037d-9898-41be-87b4-de3f9143b2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef3bde2-6f68-42ee-a829-92a3f927c5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1a8e55-3e2e-4b53-844e-173de2005419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8714ec8c-4826-43cc-b160-8233a1c596fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09a496d-41be-44d7-a9fc-38b629901f13",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9643c3a9-4cad-4c35-b589-d415d175c478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7178ed-4cea-409a-bb8e-3874ff2c56ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1218be4-4bce-429c-871a-0c36deaf4630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1c3e04-5a34-4e27-8636-4ddfea6d6822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b595e0-86b7-4774-9b1c-51c5ddbc8f5f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f10b381-4eb2-41c4-a008-34e07d64a145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e75d392-6d35-4da1-b354-6b4cb40692ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc676b1-57d0-41ce-bcd5-f9d3b0c6c307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84bb68c4-15c9-4605-ad43-a220f1296bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55ec62c-5ffc-43d2-b5ea-90aa7db7b412",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb6a729-1f73-4410-aa0f-635d5c4b0a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef540232-1c5e-48b4-b7ee-914ecdc7ae5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752d8a15-7038-4642-bc76-f98b0a234467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81754959-eb2e-44e3-a061-5cc77b874f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4422348b-085f-4ea6-b8b5-46b391ce6901",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec866eb-d464-46df-9c60-4925564cb766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc617653-3c2b-4656-9673-3fc58f01fadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813d94ee-888a-41d9-87c4-d132d3b0141f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "283668da-ff71-4315-ac5e-ea65670474f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b915b08d-bb95-4154-be05-681de30ebf73",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532801ac-4cf8-41a7-a31f-b3ae400a0196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f6c7ed-7f3d-429d-a91b-236389205bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cb2bfa-a226-40ef-aae9-d8ab19b16ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75cd13fb-5a9c-4edc-a35a-f2493d6c2433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8566a2aa-5762-42c6-9c2c-cd81a5f94749",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961a6371-e509-435f-8e77-0d6edef49113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a722748-4ec7-4337-bec6-9d4f727a9fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adccdfcf-dcfd-4e18-805f-fcf769e610cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ffda84-db17-4c34-8f0d-7acebc3c9a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbee75f0-ad48-4bfe-87cb-c2ab948ae705",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107e0934-9c96-40ac-8d9a-bc31bf5c5c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971afa14-5d8f-4142-9cca-b753c3ecc936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e87fe04-b71e-4a2b-91e6-59e190b6ef8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf3ed27-b094-456a-abe4-cff1c5ca88d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbd0be1-de50-4d94-942b-9df6f11e4ab2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54753b4c-737a-4065-b132-2d92f9f136c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89aca62-a80c-40f6-8ebd-28bce9e264ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df11d4b4-75e5-4dd2-9a62-f96f8b6b6694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "45fda974-c9dc-400c-b363-d77fdb080e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf0b61e-462c-47ce-a1ec-403b310b7244",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ebed55-d30e-4907-8ca2-9334b67dfac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18565619-9d4e-4272-8daa-5664c31f0ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1eff3e0-d757-4b42-8fb0-633b754618a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "babe5f97-0f19-47e4-a369-c7ccff272bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64f2274-be15-4874-bc3c-5f4e91edf4dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89236721-dd5a-4da1-bd8b-de535db76943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e408cace-de4b-4bcc-bfe2-28064f13e65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7a2781-e52e-4b29-b061-08ec3b58c26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97a27cd-c9fa-404d-9811-871925e426f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535e6eb4-124b-4fc6-978c-51b815ad9cff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be10c35-db31-4375-92fd-7c68184c9762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10bc081-ce0f-4068-9101-fdf9560b7b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5afb45-111c-464d-8c22-8cc696d2f379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "87325774-374d-476f-8f41-7eb43faff058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e76911c-8ba7-48d1-81c8-efc577cb28cd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60336593-deec-4643-84b1-57562b117cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a003037f-264b-487f-b604-1a5af5763f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251dbf53-7e01-4317-9df9-9850e740a284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8275c05c-c66b-431e-bc1a-55029eae7261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3471161-4f6d-4a02-ad4a-ec697f1114ff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e516bd28-2de5-4143-8044-0515d92f0887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6035fa93-5778-4605-8a60-59c2a234cecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9bb6f4-eed3-479b-8286-c4e0554b523e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c677b07-7f7b-4c4f-bc33-f714009e21a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcf759b-e06e-4652-b4bd-18962ee9c408",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1852e15-e97e-4d1d-be37-419f9eedd2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be8a1e5-6afc-4a24-8f7c-f6c020aee115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99470e4-d5b2-4160-acec-0529ed9bc006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc409f7-41b7-4364-97d1-886efc63d3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb33d21-8301-4cf0-88c3-7aa149136d01",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60b2c6f-d933-42ad-b2b6-fd2aee5bad2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5e7cb7-2d67-4224-b48e-f2d8a30c9794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b71a243-842a-46ad-8a21-ec265a8f8e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b370d23f-8bd1-4277-9dbd-f3e369e246c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cd7123-4630-4026-bb2d-345f065310a6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41f8586-0eb5-4209-a746-ca682f010f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c502862e-1afa-4556-8469-6688612622e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3785a27-9e0e-47b5-96af-7e5b89a44ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f6a878-848f-496b-a2a9-8204062cc275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ab8659-e83d-480d-ad7f-f09740e76c2e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489ff3db-a96a-4282-b2ba-501c7c759327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70d4e9d-c404-486f-a8a6-593b2db26790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a34dfb-f300-4d3b-866e-b42ada377711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce40230c-1e8b-4542-b1c0-dd7a428a4e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e4aaf7-8f97-4a8d-8cdd-00df5c6951ba",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531b7837-c196-4ec0-ac2f-7957f4cb7d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dc96fb-b55e-4f5a-92c5-41298c6fb085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34a1b20-4cfe-41ff-95a1-98d47018369e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45df7306-259c-4b00-9997-6d99e601609b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cd4c32-9b1a-405a-afc7-af47a5a6b822",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8f3ab6-d011-4315-b870-efbaf381ec1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8ce893-61b9-4d02-af7b-543ce815e5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532b7d95-0fcb-4418-917c-44e05b621128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d7bfcf-4cef-4cce-8dae-7c972622a543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2ec4a6-07b8-45af-91cb-90250dd79dab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069559eb-56b1-4d47-88c9-e7b76fe0dfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c3134a-855b-49e6-8c88-764a1626183c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ddeeb4-e3df-42dd-9360-ac4fe1b9dbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4444f872-b16d-4137-bcba-2ddf470051b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2df12f-7b62-409b-aef5-7b6244c9e430",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aad72ca-dc86-48cd-9a84-a0b9d672c68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cf09ab-bb99-4b21-9453-4fb0b98c7f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9fe502-53ef-4e3d-9624-ae98f5f44e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "639f18ae-d3c9-4648-9493-3caeb22a1cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1023ba54-e7a1-4b3a-ac96-f03ed76db8f8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92193285-57fc-4a40-bff5-3f5905468133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198d5911-d8d3-49bb-af42-166444a49f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47251345-3210-4840-8591-8b1ae6b254ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "180c9aa6-a08f-47bb-978a-7f9e4f32c329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f436d4d-7d63-4a42-9070-8f3cbff4f664",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d850294-4d26-4979-bbcc-ab6e86d24e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae8b754-dc65-414d-836a-aa146d923c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b897e5e8-d542-4250-a016-544827017629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c136a3-a170-4275-97e1-e2429896eae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6be9ec-fbf6-40f0-a050-94ca0a2b7e68",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e903f10-daa4-494d-b7fc-f38e6c92a9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ced56c5-3404-4ed6-947d-3acc8da55137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cd1b51-d5be-4337-aba9-8747aef0c018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1bacea-bdac-4184-aa83-ab7e6eb0ff18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb7f4a1-7826-455a-ac28-12830bc7c7e8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01b7dbc-7a91-4cb6-9b45-98cc06cf7108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd4c799-d95a-4afd-ab51-53ea3b390104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43707de-2ac6-4106-9cae-8a8f0e19f10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8e2edd-d269-4a6f-865f-9944ef45eabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3359b61e-b9a2-4663-8b10-ce3d59384ed7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d42d55-7e0b-47dc-a8f8-48e38e2eb38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc9c656-d65c-4249-b420-99b8ceda2211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5141ce1e-d8f0-44f9-97aa-07a2155dcab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8eb12d4-f79f-410c-b45e-977c1bf5bc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12379a1-83ac-4b8f-9811-c20bc3e8c84f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa52450f-f554-4529-bf6e-c4accd0b498a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b9caf5-cc07-418f-a1e5-ae296244f8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3b8a7e-903d-4e86-b7a0-12497ff9c978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efd4f8a5-c063-46bb-88f1-a81bbe4c1937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b9501c-5873-4ad4-b39d-535d70d10831",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea60aac-4548-4e1d-b100-55b05298178f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55dde4fe-5e16-48f8-b574-80a731800c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a5ad1b-1714-4cfb-a2ac-ff8b57ea3833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "097c521f-1a65-4c89-b0e2-9214b85c2b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937f7414-6596-43f8-a085-f89b2ea4aefb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01230765-016a-43fd-9f04-d9e82ace574e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1e59d1-aab2-4cfb-8b0f-e48a3ae7a2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19c8577-23e2-46bf-963a-aa41b751a7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce593769-a46e-4337-a9d7-4f78914fb91b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc3469bd-2cc9-458a-97c8-f79272c6e8cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae52d92b-6995-46b6-ae77-791e0b7dc557",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d5ef72-b1a0-4321-b540-39e982841d72",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "94f51dd1-7f97-4b89-85e6-19ff87d6aee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97708337-66df-4038-86cd-b04621425fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84d07eec-5a86-479f-a9ea-ecb480d66de2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e250d7f-1e72-4354-ae9e-cb53d42d48a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "283f4137-e093-4c0a-8b06-f9c929de46b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbc2df9f-6f86-4093-85eb-9d3a3025e69a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b1ad8eb-4a04-463c-8f19-abe16b487cc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1a27572-a731-4f26-8cab-39c4e3bb8604",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee4253cb-68a1-4cf1-b451-7d17bf9f6fa5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21905a17-3ebb-4cc0-ac55-6279ed2509ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4aeb57c7-a080-4da8-9682-6c79d923a936"
            }
          }
        ]
      },
      {
        "id": "fc538050-cd3a-43ec-9172-784fae33833e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "71c2ef6e-e144-4ede-a24c-f3699ada2577",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8caf8bf5-26de-4e83-a62a-f3d5e023463b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5a75311c-5016-44c2-9b94-e239999ff6e6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc74099-eb3b-4e66-9f9a-514ac6c8fb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d8983f-58c8-4b3c-a0bd-8c8efe87b756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ad2994-9fcb-47b2-a62e-632233a0401c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "994de6f0-1dd2-48c1-9ba8-9c9c38f80553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3b1530-416b-409f-b373-4846b06e0b85",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e1fbe1-8970-420e-8606-ff45941b51b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a80bc0-dbbc-420c-9e4a-af2c4e944ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e61ff7d-2117-4a31-a5a3-150cbcc856f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea88628-599e-4bd2-b8cc-38618f6458f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fc7900-efcf-4f19-b934-953be512cde4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb33212-cdb9-48b3-93a6-311a61eaabb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053b1742-87bc-4526-b0ff-d0b770c464f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825e630a-8c29-4801-9932-afc601da9e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32b22c52-9dec-4677-8370-3e6316908865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66157fa-edaa-4659-b062-8d0c7acd84bb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37008573-0d46-4feb-adf9-d6cb2f90a4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2533a8-b07c-4508-b133-2654be8af5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79a9d75-c33b-4d72-b44a-f26b60b515ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d06324c4-355c-4e7c-8f06-c7852cdae8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa67f35b-252d-4241-94ee-2ffc52633594",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57b2e1a-4057-4fe6-821c-4560195074b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e423257a-a730-444c-bfac-21dd48685927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6d294a-b7d0-4bc6-958d-6a610fec9f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89def95c-5984-4f8b-b042-8fd1474527fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74da4fbc-0d7d-4fe2-b738-995ca6de546f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad664ad7-05a4-482b-a8be-7cdb60d22c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8745f5b-1274-47d5-97be-7781eed73cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661f4fbb-2ef2-4784-9dc0-f6fa7f38509d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b769171-d73e-4134-b8b6-ff9ec7774b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709d0da2-a160-4163-86b5-98cd73457c8e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e433c550-1dba-4696-a099-22644a638510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2916c83a-fa23-4777-acdd-b729e88dd064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca2b7fc-61b0-417d-942d-a88877ec90ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb6fa7b-1e19-4f34-a9b5-33e9bf8a679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7216feb7-e41e-4a7d-ba6c-ef23598c3a35",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e88efa0-1483-4ce1-89f0-20822ec28032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b8018c-7566-487f-bb29-a717fdc8e039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5239b4ee-3c97-4497-8b86-78ff05ff68c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f62717e8-98a6-42d1-a5a7-bfe82da8bbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35abc307-974f-4468-b14b-ece28e93b523",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37afca42-060a-40f5-987b-e06eb0cfb10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2690f58-e974-4ba6-b74f-74cbad743920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b127b45a-0dee-4694-aa34-9dd4718314e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e25fcd-13fb-4861-9b88-afd8d848f2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986b7168-808c-45af-881b-d40857474aa9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e8f970-3ecd-4cc6-826b-b674c0d943e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30155986-d866-4fb7-bc6f-1bca1ae80db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4efd03-7c72-4371-8cb3-acefa138cbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c333bc3-d736-4a7e-ae50-b09547c4088e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b6f884-2ad5-4ac0-ba11-163999c892e9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fcd24c-169f-4d46-88a6-7a1acb46e1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4474e9a2-f770-4600-810d-e2c82e12001b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3687f8-01bc-4eba-b7cb-4a2c2e40d0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "59f4869f-4390-4cbd-a9c3-66f3874140fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e988d93-7c76-4683-a526-805f3cffaf57",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5d8683-c2aa-4a6d-9b39-9f1d6ee7a772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae2b721-fd98-46ef-8fbd-8669cb2621c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968b6ae3-ce3b-4f1d-ba09-ddb04df1fcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d94b350-f8dc-40a2-b40a-fb50f5b8ff5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb49d19-85b4-4242-8485-aa71d2dbe570",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9424c5-001c-49bf-89a0-13a2772cb5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b503be-ec59-4a3c-90d5-6ee8675bfcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571b95a3-8a97-42c3-9766-9a24c518d321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f1af74-6d62-4a32-af75-1f2e0b7c1708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4eacee-7caf-409f-8101-51525acd9889",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35d7bfc-3eba-4e1e-ac2a-9771636e7db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cef562-b551-45ff-8534-445431514258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252b50c3-f7f6-448c-a227-3e365a9e2479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7074babe-d53a-45cd-a481-21326077cd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33e17b5-f6d6-4bdb-a03b-c74025d592c8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7a9fe0-bf31-4a49-a999-05646d3a3b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacd9965-8616-45a8-bfce-d4f32d24e203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d679de-3266-475e-8285-f247e042804a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e2c7eb-1b61-4969-a2c9-43979daac275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f466b1-d7bb-4bf7-8afc-21ba35f6348a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a014bc2-dea0-482a-91f6-6d9e77f0440d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44fac9d3-95f1-4810-9669-694d537245cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19753bb5-2298-4d33-81af-6f5de3ae7d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "16de6244-aae1-42f0-8a10-5340f055213c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249a9e2a-0653-4162-8f40-40a1786b938c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb0f7d6-1e9c-4947-bb01-fa7c563fe4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b48338-890e-4d01-af13-d03bca8c1f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212c8fdd-b2f8-4491-97b9-be213413fcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "794174bd-4587-4f2c-ab6a-2d7ccbbcefee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eb3975-c3e0-4b7a-95a6-352b30c39ca8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc719b62-0dd1-46bd-8717-d8d2a454a252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014b3886-8258-47af-b176-78a098e7147d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a86f552-449b-450b-93e4-b5ed4649a574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d1433d-a6fc-48bf-b324-f94c4647b863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3997741f-6265-4dce-9ba2-868cc49710db",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b169ae-b721-44ca-85ea-8d8a7c3d6771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d5f7a8-9196-4617-8570-75f6692642ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d7355c-9bc6-4f83-8491-f8ed8a2ed4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bebddfe-f1cd-4533-aab4-f7af1ec94442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f74e582-f6d1-4fff-844d-6ef4b44afbd9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515a8de8-6561-460f-981f-658bff832659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1d4ed6-0c36-466d-8c1e-242bb648cc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fea5db-b511-4871-a785-784cec57710f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2922ad0-1ce4-40c5-bc88-655f8f116367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf5152a-fcea-488c-8cb6-074fb10b73a5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f5427d-3e14-4666-97cb-ad2f0e0bf033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d3d8fe-33b7-44e9-966d-fa2d5a71046b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13cb88b-0a08-4a16-a8c7-47fc2de06bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22736f93-f082-499b-a69a-37aee2f432bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406f45a3-8837-4689-a05a-8d0c9b0a570c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336a5207-591c-4fb9-96c2-aeb464d6d000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d494e9d-fa2b-4840-bc24-2cf091b44214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980a200a-fdef-4a04-ba37-8a4a2fda1963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81d2cf2-5847-4475-a15a-2e24d310830c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecf6954-181c-4bdf-b9e4-afec6b6c6fb3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edb5f7b-a800-4974-bade-1eb5b1c34d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb881d3-f1f8-469b-839b-dc125d9b6a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7badb7-a334-4dba-a737-0e89f1c25201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b443e4-ef2c-46d1-88b4-d327847e55ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f60401-bdbb-49bb-a512-24369f183a99",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c98153-f7b6-4456-b71c-6d4dff6946fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b670d95d-c1d6-404e-979e-274aa157e385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e806acf-469a-44b3-a334-b08b9c777aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaabf2f3-59c6-4ad1-932f-615a317a4aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48010797-e6b8-410b-8818-050392ea5a3d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d1db17-3fe8-46b3-905c-664e09b4c7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49ec6e2-b91a-4fba-8baa-5e484f04475e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ca987d-3d03-4878-9303-2150dea2b596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae949493-c81b-4db5-8827-531a71cdd884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82769e27-359d-4296-8344-2d9cce67d0aa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59997cbb-061a-4c71-a2fa-6985db1e87c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bc1f6a-e872-405e-9f95-9c235e2b058d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bdd29b-52dc-43cf-a3d2-a877c9581077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b5bbfb-2421-4d02-9683-8c8fb42854f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d99b019-7731-4cbb-8c10-5e029b1bddb5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7b25bd-2432-4b6e-b549-de9860b041e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2fd610-c291-4512-a097-e0ef7fbc4862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e367c000-2c29-409f-941c-c7fc3ef82dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9dbf7c-e109-4292-ae0c-db0e201bc3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc8733f-00ec-4bf3-bd99-37fa254454be",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7af0d5a-71de-4746-8ce1-370379baed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d389bbb5-cfd6-4413-8273-d30e2190dbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8e67c8-e595-4cd5-a89e-f2fc69334e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ca8a14-2be4-4c9b-8383-b667feaced4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bb130d-c67d-4283-9f49-e9af2aa7010e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff9deba-99fc-4114-b30f-fb55c24e56d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafbc5e6-f8c6-4315-aa16-cb24cf404f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49dc9b5-38dc-4486-ae32-38c0a319b3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "405aac35-7a4a-4d21-a729-0fabc5a314c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02c1d16-1984-464a-be4e-c1733bab75df",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f505bb4-2eba-48d8-92dd-5fab9327c6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a8547d-ca50-412c-9caf-a9a313904ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf47bd3-c456-4bae-b7bc-19ed5523249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde9c66f-9c39-4eda-afbf-749f665fe058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ef8621-f042-4704-ba79-4e9f6324a09c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8978ea42-f6ae-40ad-9ffc-f71eeb94a467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc04ab68-d30d-4615-a15d-efd74890cc0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3833b1-54b0-4fa8-b8c6-f8cc462ba687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e77fd4-8ccf-4243-9a5d-8b086b3538a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9feae2a1-cab5-4b9a-8766-ac5acfbc1ad8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6024d7df-c221-4758-8134-87dd2441609b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfb8bf3-cb09-4ecc-ad4d-e044f1fd109b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3a4a9a-615f-4727-97c8-c3797bfbf6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebba9f1b-4ef3-4a76-8ce4-5005a562b897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d8ec34-0e0a-48d0-b885-4ddfdcd5c198",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0ff4be-1204-47ee-af21-6240f1450f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3975ef-5f11-4d38-b75a-453dcd448e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0c2046-cce7-406c-a0af-c43d93b24d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e1b69a-d8ce-43b2-8bbf-f10fc9ee10a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08db6f76-22f2-46bf-9405-e7ac00a13b5f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131c402b-1b74-42fe-9f7c-55d16bc8f16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f42f96e-283d-4997-8082-73b42ea27b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e910432-8bc0-4e42-9354-5bbd70526c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e03feb4-cf1e-4176-821c-0a725cde9636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf9e22a-4cee-44f0-a760-0d48e64c0413",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e158b8-8ad8-428f-a1e4-9ddeee6233ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f13a66-6883-422b-b9ad-927638107da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19376f9-5496-4f1f-9da2-2866982050a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68eb86d6-6cf3-44db-b38b-d47a2e31c7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58426db-d3f5-4f52-b65d-b4a673172bb5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efce450d-5dd5-435c-90e6-98366a3f0a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538b8cc6-b7ef-47ca-967f-377b5d7e3d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d98854f-f472-4bd2-a4a4-4df89b689fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07e797bb-42f2-45bc-97e8-aa415c29e18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a39a0b1-27a9-4c34-9e61-be2b73c9b9be",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8263a3a9-0c64-4ec9-a13d-a53d0abd7643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e0fb08-ad3f-4b06-8205-97dc00b45e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58268c5c-3de2-402e-af89-04e72685cc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8b1384-8bd1-4213-bbe6-f3ab9a08834c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "973ea514-e2cd-49c4-a024-215951527e62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa13ee68-50d5-4dcf-9329-71830da3378c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c12b2a-eb37-44a6-a62e-1c915a4507cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3310bd3f-033a-4773-bc48-9ca5b1d30152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b57b5e-069e-46ac-8563-d71c0356270b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5254007c-bae9-4a67-94d3-d8b0a0962245"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a64f22d8-5455-4cba-b59d-ba79c961756f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc75adf2-4f38-4829-910d-872e518db04a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed642e23-6e4f-45d0-992b-1580bef0dd97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ec8ae8b-eaf4-44f8-bd1d-799bd58dcec1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ac95eb3-4184-41f6-9b20-2052dc92ee34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "77101fb1-b4f0-481d-aee4-cf91b38ae247"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8d5862b-663d-47be-a6e2-286870901d33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55a4caca-dca0-4757-a8ea-d0e32161c4af"
            }
          }
        ]
      },
      {
        "id": "8486e4e2-465c-418b-9a48-ea9fbeaf5421",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e8947bb5-607b-452f-8a3e-201abc14631d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "175ba70d-eccb-4c1b-8ac9-72a797513c5e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cbde16b4-7c65-4b83-907d-6b96799dbeb1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df12207d-3d66-46b5-9a1d-c8ad08ff4676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6bb253-72f3-4459-8b59-ac33c8d56ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404e0324-4fbe-46e5-a34d-792391a11ad6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb7ae88-5ecd-4f18-bd61-43f0a9feed40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351b0778-1d44-439f-9efa-c5d66d336a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925e483f-b1e3-46ff-94c3-89c9e780598b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b5534c-8db5-4d88-98cd-c1b70f70a27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8de3aa-8091-48c4-8741-431fb07c85b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa0a324-c5ad-4c0f-a1f4-1c31c479cd95",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31da1e7e-39a9-4090-b941-23ba04cc3ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc59c72-211a-4c37-82d5-472aab3f6039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3f396c-e3c3-4c9e-ac3c-28466c899b6b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c266b729-bd09-430a-9295-5f3fc0870321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef96de2-c07f-470b-bd37-c557164aadff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d68be1-5ced-4652-a5ed-01e27c084d5f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342cd6cf-dc79-439c-82bf-18c240c7cf08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cab167a-0720-4665-8d4a-258ae57054d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177ccc24-2f11-4ba7-9d1d-9c28f6d18a4d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30858128-f619-4733-9fbc-64c79082c80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2acc8a-d3d9-474d-9677-77a363c39d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8301f2-d8e1-4d21-9827-3f7d89f0b38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391c18dd-37c5-4c8e-8e6d-6649285211a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bd4b2d-229a-4dfa-9862-a5b5f0c18c85",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff334e4b-36af-4f15-a854-618abafcf2b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcfccfe9-df6e-48f3-b529-54a920c9258d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebe9062-e76b-457a-897c-849b16a5ac5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70a7cdc-cec4-4f94-b065-75b9ba88ceac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f617af-95e2-460e-84f7-a48ac2cc17c6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec0c0df-42df-42c1-9a93-689e205c2b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f687ac4-2cc0-4951-af0a-5bcfadb0efd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db3f333-88e9-462a-8c45-d79aa95ee6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee11ac9-487d-47a6-b2bb-d7b76aebd6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495a7a59-7580-4096-8f1e-920c99e435c2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53620310-2d04-4dd1-af08-ab22ad12371e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8da42c-3917-4836-8263-1e99a1040ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a733428e-7c11-4dcb-9b18-b8f95c07d64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a205d2-d930-4a2c-950b-cac088cbf1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6e1bd5-54b5-450f-8e8c-8b6b28afac53",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f2ee15-a23f-4bd9-96fc-6d582e00e32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8317ed5f-a3ad-4826-884e-c4c4283fa151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbc8090-3ae3-48e6-b161-64a1cf590284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e11375-480d-49b5-b1ff-a337f66297aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00072c1-201c-411a-89a9-6ae5e731e260",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1a0a95-9502-4f09-b5cb-b97944212d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97987c8b-4958-49b1-874f-3ef865f5f7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a799c4-555e-4662-abdf-479f130ef066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba33463-7a06-4aea-95f1-2179e5c6d87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cbf7cf-294e-4f40-8a32-28dbea0f070e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d801b69c-70e7-4546-968b-b8275c2b26db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818d03d9-d5bd-4574-950e-635b13ef4831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b440e693-a72c-4acd-b6b2-7913a054e8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7b4ef7-2689-44e7-ac42-85a10f19b1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cb12dd-11c5-4d57-98fe-b5c66911047b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1486ba-3a1b-4c4a-b2b2-1df7c310beaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf0c939-575d-4e30-9bf9-1b642e4fd06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c82c466-5454-44d7-a8e4-ea5a2ae61457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec52391-f6fb-4430-b4bd-dad7e1047bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003b7650-ae45-4c50-abd6-8e6ef7157139",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5f165a-6b21-4ab1-bfe3-0a7a25760b52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160d84a5-1a9f-43c8-87ca-019436a41e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb9fdcf-d87c-4f06-8bf0-03e368dba836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0a0664-4e82-45a0-9aad-46b14a20bf6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dad3ee-6a0f-4314-b259-704ba81ef0e0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1c9652-aa26-444e-8775-a152d660db0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d7a48c-7941-4715-906a-8ebca7383524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5010883f-83fe-4e08-861c-f393dec31f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e08bfe-a0cf-4dc0-89d1-da10f1fbf0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c71f70f-2b9a-401d-b6f6-b6b1c456db95",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba27e71-c3ea-425d-9979-55ec42951414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c009e6-2932-4399-a6ff-9a00f410acad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d70d729-f0b3-471f-aeb1-bf5a421c1220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d8ad89-9050-4ec4-971e-7f41404f0551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8b68cb-a27d-4b2f-b3d5-54d837b109e2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4feb05-0490-45d7-91bf-56adfd53d42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d5f23b-4449-4a2a-9f82-00e03e77bb00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98afb59-bf57-4f40-9627-a5f51941b033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0710d8-91f5-40a4-a7ec-0b73ca09aaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733c72b9-9e75-4096-87bf-8d849cc5e415",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f7a51d-4f51-4043-bb14-e322025ebead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36bc4a5-13a7-4bde-892a-8da42221be18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2be594f-6f84-474b-a407-6691e844e7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d0261c-a51d-417b-a102-0ed2f6d161ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddd64cf-6ad9-48e5-a495-622fb95d4e35",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b275be-a3be-45ab-859d-16fc18802a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a26f98-b6f7-4ea7-b387-72c016d5c14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab138aa0-8d3c-4780-aaee-832feb20fe4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f4d4c3-3a76-4b0f-a365-749dcda03251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2300b9ef-d680-43e9-a95a-43be7f3ccf60",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309c552a-cb2c-4457-98ca-38903cb8fe6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91b5af5-2cdc-461d-85e4-c8315cfe3d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65bf677-ec6b-4462-a4fa-7b5c7aa7eb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167d46c8-0c53-44b2-a054-130d1115084a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee502b48-755e-48c5-9c64-5f67df16ba22",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6db2cb-f86f-4ea0-918e-343616904271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330c21ea-91bd-443d-bc18-4e65d183a2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1babfe8-b408-4063-a4cc-1ba57dd24331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09f3f64-f3e6-423d-9050-ed19ac75a42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757020bc-cbcd-409a-8bf3-e4a024e76d7b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b95c861-0240-49a3-ba76-6458945af047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c3c524-1b70-409f-a0f1-b60a590e7506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e22616-d9dd-4c94-a5ce-cae385c809ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb5b014-f3d6-4fdd-b32b-00a434ba19c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0307a6-eaf4-49e2-b1c0-a3353432c504",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3789bc59-1829-482b-994a-c121d5b88845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd78cd8-f8f2-49c0-a383-e36720f6d2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb582c1-fc3f-421d-98b1-68c2b2823e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4bf8bf-e7f3-4bd5-aa80-6b43e68aa071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51988af7-e286-468d-bf4c-e62504fd4c80",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aac79a7-b25e-4f7b-9754-876283bce37d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d393ab1a-ea1a-4689-90a9-e9c04bd85165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81f2c4e-8058-4917-8e7b-55637b4e0dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753d0756-5f65-4182-af04-81236904fb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f87744d-8e3f-48f0-96f9-51f468a07684",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b1e3dc-a7e2-4fa4-ae15-c3e93bd8e321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3179f746-6980-4232-bc01-51ebc7c85f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b014e23-703a-4e68-8bbd-34d9376d962f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d9d485-bf01-40b7-9faf-5655adc9a4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a15f463-e673-43b8-885e-22eef2e7adcf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7591fc5-7587-4577-b5ca-74428d23125b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e452a3b7-c119-49a6-b0c3-9b9405fb0ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5522bb1-e570-4db4-8874-c6886b7c93c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9b49f3-cd2c-4590-943e-2648003e1b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c244d5a-e0ed-4966-aace-34e9e0bd8a77",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c304c847-a35c-4f9f-8de0-75889a7499a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ba1a9e-17ad-469b-8b85-d0aabecb8884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e40ff0-2d05-4e21-90d8-a3b272c73cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b340f91e-0eb3-42dd-8e15-85c99616a3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd76a9d-1703-4f85-9065-9198d0b58876",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f553d980-9129-4bca-bcef-b3d52a5091fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc28fc5c-37f9-43cc-a4c2-801bc696b592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa447b6-1861-471e-9bc9-ac2bfbed7f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43e1864-e8f7-4b9e-92db-5d3caced377e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee7a240-c864-420b-8d0d-41dc0765959b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5297c93a-992f-4cde-9f6b-771e072b4421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60611173-77a8-4546-b6f9-833919c204ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a5dca3-d608-4e02-871a-66f0677d6a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3d7d0d-d506-461c-afa6-edc1c9696f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb0db15-b9f0-4df7-b6ed-ed07f0213556",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2febd3-68f7-4000-9a2c-9e330d76ecfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef4bc1a-19da-4d11-a16c-c10e4c1fb83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a8ac77-ab91-4c4c-9089-2f8fecf2d0e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa835cb-6f94-489f-bf09-6d71b2916c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c3446a-397d-45f7-aeaa-a1fa3ef6d6cf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1457b6fb-f3e5-4fcf-87c9-294bca7bc7ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50acd27-921f-4308-82ad-4b7ef8a1a697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464e5bf0-114c-4b35-9612-55527ae9b118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e80e2e-ed2a-4e33-bceb-c8d4825cf111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597c124a-1625-4830-8dc4-bdbf8ce05f31",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1439851b-4c05-49ec-b630-53f60ff8395b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fba457-bfba-4815-a194-38f40fb9dafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389be931-700e-4adc-bc8f-0aa7a968e3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947d2f6f-9991-4a26-8cd3-38e105872401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e173cec2-8695-40fe-a442-927b45141324",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4c7d21-a613-46d4-9f5a-0b8dda02c809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebeae52f-11a1-4adf-b2db-e27b3cd05325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7086666b-4202-430c-bafd-ec31e31c4f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafc9c81-de9b-4d1a-a9de-362e4ea117fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707d4207-93b6-4a67-9f62-de67c3181188",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e94008d-0839-4a7b-b5cb-d5e0342a0693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc39c35c-1456-420e-96c4-ab9b7a2bc457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbc502f-0d1e-4cee-8721-2b768990eb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c841dd-34fd-4503-b656-f16139fbff39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3882d81-4bb4-401d-9eee-a8000d3086a8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4841884b-d6da-497f-8036-f3affd9e424d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cc4b40-682c-42b2-a27e-336337330b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499eee88-5f4b-4ecb-8015-a575fb0d231f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdd828f-5776-4f5b-be5f-e896e0d9d5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794a6053-b1cb-4ec9-a573-8d513212be61",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f1ee11-cff0-4bd4-8c13-9be06aae9f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b29f55-3a0b-41f1-a8fa-ebe1d08d9b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7450c6d5-33ed-4ed4-af4b-551a3ded053e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd4cf10-805e-4f72-aaaf-971c8def7c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336b525d-c803-44ed-bd1b-5faf1bc60b50",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa145078-c513-4789-b8df-4e2820959559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55623db4-d244-44a5-a156-70d6e6ef2307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef69fc8-c12b-4942-85e2-512934c07687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9857f42-ffe3-44d8-a2f4-36decbaaf151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f894128-d861-4171-8874-60fbe0746906",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeaf9c0-83f8-4530-a5ce-8fdf817836c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b2c9af-e222-4dee-8d49-42642808c038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc293f4c-9ab4-4c81-a501-0b0563226fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d634afef-7089-428f-8092-478f0d2f7a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f044443-9453-4a3e-b2dc-ffe453d2a307",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4363bd44-3cea-490e-a58a-d1f4686369ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48990c1-5dd5-4698-b29b-741d5fc51563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d024f2-0a26-41b6-8fcd-404a9f78dfcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814dc08d-7467-4f25-9307-ca74bd26778d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd47d0a-b4d1-493a-a4fc-749b39d1e4f2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ad9292-a3fe-4187-9e34-d5c87e25ebcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9404db48-0b26-478a-90db-9e3d48475101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fd8bd9-f084-47f4-9399-5601649d188e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c2c9c8-0a27-4f8d-bfdc-73a5f0449dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c1bcc7-a547-4cd7-8f02-8f41f48cc082",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f15531b-da04-43b6-8aba-cbf0116eb81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab097bd8-9913-4cc5-a827-589fae328f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be37ce2-b9a3-4b39-906b-bf6214f3cf82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a657b073-f232-463e-b840-6248ac26c40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a0d7f5-3cf6-46b9-b79f-f651442ad5a6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863d546f-488c-4e92-9c9c-9bcb0cac3e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89abd93e-0ee8-495e-9c24-1ee225860c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558c0f4a-9bf4-4232-bb84-55b579273cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a241b6-8d73-4d02-9ebc-3225efd106dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff15776a-03b8-4163-981d-6fec2d4aeaed",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27855c47-39ff-46f5-94d0-7d645e3a464b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5689a99f-6a70-4e25-9e9b-26a7fc318472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ba7be8-9b47-4e17-ac6a-c332e02b28b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c888ad5f-40bd-4c2c-b02f-a47ab5af1d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39448d3c-6b79-42d4-8d36-38b514a4d4bb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d104e386-f442-4d37-98c5-00c2584167e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc45736-dcd2-425f-9f59-e73bb258a866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7317837-fe03-43cd-aa5b-19d6c6d2f143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac43e4b9-83cd-488b-83b5-69373ccfea07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064324c7-a322-4ea3-8d75-86a8afcb45bd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df774076-104b-4f09-b556-fdf32db33a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cdc19a-e2c7-43ae-a36f-f027277c0e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "003f73e8-5480-402f-bd2c-acccedd784ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4562d6-bf50-4905-bed6-551635fed4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc6e001-b78a-4c37-bfdc-093ba9d5958b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc3b53d-320d-41ae-ba6b-60eb4b3fc110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f20bf9f-a471-4670-adde-1f12cd981147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e9c66a-cc32-48e3-b587-fe208d05660e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70f2596-e5cb-4d28-ab2e-a8869e9a6727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a2475c-ddab-49a5-8ab7-1f1f21deec3f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe44909a-1202-40d0-b48c-83da2d183a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1859a903-aa2a-43e2-96bd-1e990714c312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1eb19d-7478-4337-854f-968bfb61fcc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c1734c-4c1d-4103-ab12-51f60e5597ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cc8fc0-2679-462e-bde6-64b50dbaae26",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d65f6ac-fe7e-4bc8-810c-57775693560d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfed9133-fac6-4bad-b498-929497e1dfa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f232aba0-1198-4771-9660-688c71f9ec14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fb7a54-fe8d-483e-b14e-11b70f32b4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb88147f-d034-4521-9546-e27362d3016c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcccba25-193d-48c2-a32a-bea5d40261c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4101934e-f3df-4f14-9390-14431e0dc3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef061bc7-1aad-43e9-85cd-acc6a5ea4ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0139d3-5198-41d4-bad3-d0d3a0c62b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c845f3-bf6b-4653-9b04-ab285bc07760",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b30aa7e-f241-41b6-8d88-684327cfd358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20d240e-d004-4909-8dea-78ad12220bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5d0ce1-dcba-424b-8210-552ec33ecabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df25781b-85bc-472d-8685-4ecfb47cf7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9103ed40-56a6-4263-9868-d06bf5cebb8e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4895e233-001b-4d01-a183-e72a085973be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdaa79d5-6ed3-4fd6-872a-fda562eb9f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abbc065-d359-4eed-a61e-ee382161645d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6f04ea-7dad-45c9-8cf3-374499ac3dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b717955-9f0a-4a4e-a54b-13b4b70138a7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2442f3ce-1f00-4b88-bf48-938caf54805f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a8c69d-3964-4347-8fd0-6897f692e8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a4d991-8302-4a95-ae68-8d8021e49769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53f670c-d168-4929-98cf-a06eaa080213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0461651e-2b2d-4cc6-a73d-51ff99c1b1ef",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be03969b-d4ff-4061-b84d-bca5aa3d6e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d881a56-815e-449e-83a6-485413a6ef99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd89d2c2-ac08-4a1d-a0dd-c4b84806b45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db9201a-5b5b-4a34-b582-39b3b04e999a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fea097-61be-4858-9bd4-2790942aa991",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b505f131-d396-4101-b174-a7017bc27259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8572adf0-4d0e-4eb4-b041-eb5831f1ef86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15504d16-d754-4a1c-8bf0-d3be9b4b1525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2475157a-b809-4ff0-8b57-001743018275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef49b3c7-5136-4470-a9a1-357defc5a346",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dcb2a5-95ba-4688-9d4f-839eda3637d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411ebe04-a762-41c7-8213-09b3195c3bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18d3496-5d08-4e60-88bb-afdb9cf9b9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730c791d-951a-4c0d-812f-77bff08de92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec3a7eb-26f1-4ab0-9a04-3f3d26255571",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee813c7-a072-465d-86b6-46c29254abce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea8c098-fd9e-4323-873b-3f369ee1ac62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3d95c9-9066-4db8-83e7-4cfe9f5aeeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae00e40-5054-4433-8200-3baa98084ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10ec6a5-b679-4b7b-a22b-9b8c5179dc19",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b1fcc6-54e1-4143-81ed-7e8fb60e3742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8dbfca7-58e9-4854-8ca2-46e70059ab9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f270aabf-5e65-4890-a7f1-6a8bcdf4c449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9321c15-6e8c-402e-8d08-15c3711e37ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0cc22a-1f3e-4481-a502-7faa80a122d0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5560045b-03a0-440a-a3ec-377dbc4c9cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ae578f-29ed-434c-afff-0fe6ff6b0abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a26cc5-eb5b-4a8f-9d44-92eec38d17ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b7d25b-073d-4f0a-a5ff-b76cfdd4e35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e3416e-46d4-4c8d-8778-6e1fbb745881",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba642052-366c-4a57-a662-213df1a7cd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a45a58-0377-4208-8cbf-2d7cc9e7ba60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2317cd-c967-4a66-b4a9-0a671e29b55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec90645-9d8d-4fbc-bc29-f4901c736b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084e5223-aa7b-4234-b2be-3716ce7981d0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fee8071-c8ad-476c-ac02-50ad9f44f703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85aae7e4-a6c0-400c-bf2b-f06dbfc2d645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a053346a-2141-47bf-a6ae-0c1f1a141010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1395f0b5-f60a-449b-a9e4-996a5b8f59af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b592d0b8-92f1-4aaf-a3c7-489df3a14829",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9edf0c3-ac98-4df4-932e-ab6cf266a6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b96b25e-6cee-4d2e-b908-74ab03afaac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e89ac6e-f18d-4819-bf24-46bfb8a78b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c445187-8b51-4693-a9d2-f63b7e4e0644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a0eab9-491f-4627-bd22-e8b6d57c6a69",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8094b75f-6d7b-4cf3-a724-52695a42b2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5ac353-ff2b-4dd9-b70d-39fbf38eb73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ec7cb6-e47f-4c65-b057-c1a43bf3f989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34ad651-6c1e-4df4-af71-2ef7c82db878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bc5d33-82bd-4b97-8a1c-5f811270d750",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca31e4c4-a582-45d1-b657-31333871670f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d08292c5-f4f4-473d-89b8-221f549a11fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9deb14b0-52d0-44a3-b80a-ed7fbbf8bc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f1c5a0-b4d9-4982-99cc-85392836b89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787e09ce-ccfc-4cf1-a21a-2c5649dde819",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7446780d-3ae0-4ead-9d2f-543acbd398b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e941d61-10c1-4c05-9a6f-73db0a9a7930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c82fb0b-8c00-481d-a53d-0293d812630a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6300cc-de7e-488c-bbbc-a36f4888ee31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fd0292-7545-4316-8eb2-c2fe8914c50f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fd717b-40b4-469d-bd10-927658588e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ea6303-99bf-469d-8146-f96e32040ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba511e2-be17-4ed5-9cde-ce0a3d670716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83022236-ae14-459f-8f12-431238026ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c978ce-da2a-4955-a76c-01390e7dcda7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe481f7-25d5-4d70-af22-bfcfb672e5e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d478a7ba-7471-475a-ad06-2cbe99c631bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda99730-66b0-4afe-bc7d-f1179523e365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac89a5ce-bcd9-4ea6-9650-12dc6561465a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0dbcf1-5552-4a02-bace-33e196fc4131",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4649c035-6abb-4bbc-b63a-8e83b956b989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e047d987-aa22-4606-922b-337896bab283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd7546d-dd0f-4896-a0e8-6c11948191ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78d1dc7-0a2a-4070-b60e-427865b46260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc585782-930f-4011-914a-4682493a3ae8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a9f05b-99d8-4442-80bc-909fadd6ae55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05be8276-84bc-489c-b655-52a9586d5dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff385100-3807-49d2-8e74-bac8bd4be118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49db4e3-f9ae-4c76-926d-ffc16bc48cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291462ee-30b8-40c9-9386-42e703c0d040",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7768183d-3dd4-4061-ad58-4d59e4ceb3c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a8fb05-c6b7-4138-a3bf-0c0f8adfafac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2666c9-a9a7-4a6c-9969-1c3fbb3e3678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e4f6e3-4758-4f79-bf12-949a0a75344e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9815c403-c61d-461f-bee3-827fa8ecb159",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e97ce18-2c56-4afd-8b85-b7f83c7c5771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5951708c-a44e-4a57-b260-ad85326607a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6bb980-a5df-46c9-9bb5-53039b5820e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ede11f-356c-4dbf-9961-32da9d44d368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029984ff-8304-4f39-ba24-ac11bf6bfead",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab969430-8c1c-45ae-a243-7c27427496ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c841e42-0a38-4a7f-b120-b0204065e379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f4b091-6789-4690-a3e3-1340d8af2082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7bb59d-a4b7-4a4a-a211-b298ca1f47f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4ee904-9de2-4db5-a4c2-d7a2a2f82276",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ef0593-30c3-4bff-b51e-967a6638874a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b585367-536e-49b8-8306-1755fd6ee30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5322f0-724e-4bc8-ad60-bc4095a25117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a3bdbe-81b8-4381-afc2-b5c42f984e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b0ffba-adf6-4470-93d3-f675c4a21d48",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ae0829-bc29-4c39-a67a-d4aea3f9f093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe8d624-f078-468d-80eb-c3ac3c0ccc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360149c7-d449-48ca-a652-d7504b21300d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a685aa-f6c4-4c40-8765-f5b9e9459e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b3ecc7-ff98-4302-be65-d938ae61fd4d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d95bf5b-edd6-4161-aa57-4007bda53200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed387f6d-9440-4916-84ca-9b98e6010201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94617658-4847-41c2-9431-ba84dbb5a126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b34f5ce-6bf5-4a57-944c-cff2afc70c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dd37af-5e9d-44d3-83db-7d5f14bafe70",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821c7248-3ff4-4c95-b697-7b77963d7de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e78715-4b37-4918-b4f5-2a67bb818b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b15c6e0-b188-42b4-83f1-9c861ac7ea1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9374420f-514e-4aa8-abbe-8af6bcf5041c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e45d6b-aa42-4ec0-905a-cd58755737fc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d33ad2-2096-497e-87ca-8e261805d3f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2819c3f4-51b0-421f-aa18-79756c30b0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8110e9e2-4328-4612-9f40-219c34aedd6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb47d82-5b9d-411d-ab4c-d7261db3a2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c643b2-4d11-42ab-b0ca-37bb9933debb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913ec82f-741e-4606-ae1c-59e83df932af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb92284d-22fc-4a2b-8442-af84788be0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eb1ee2-f62f-480f-9217-4b11d5c4720d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4151deab-8f02-47f1-be7d-030b099d8f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91d94f8-9d6d-494e-991e-b43e3ca50f97",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e53ba5-1e30-4bad-be47-b14d26a884ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84040ca0-aed9-4cd7-826e-172291998ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e432f5ae-f575-4460-8000-02be4cdebc53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcf6713-fc36-416b-83a5-0f4eb969ca4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1766bae-c3a7-48df-ac6d-421e901c886a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796db2ce-0a3d-42ae-bdc0-d3a9f3064a1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fceff753-a380-4105-8206-f714b4c7acd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3f442d-768d-4da3-a47b-70c796289652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0d4219-708a-47f6-8577-954c433cbf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e76be01-5e70-4825-ad9b-126243748e8e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6733ba31-2454-4f44-80f6-b2fba4b4204e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1115e454-9d19-4a6a-a706-b10a3dcaff3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0345c2-c6b1-443b-b42d-3f81bf370513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5358263-7791-4867-9a37-dbf01da242f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a3be82-faa1-41db-a085-61025983e6d7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158c5186-3a0a-4cb7-9520-bae58348a41e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbed821-a54f-43e7-b6b2-887d7f0ba7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa248fb-f3ad-4496-9b57-adf5f22be0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70416b7d-cefe-48b5-9745-7f240cea37a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2469baca-19f1-439f-86f0-560244cda678",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a6184b-aef1-453c-b736-71040beb466a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7683794a-b1ca-4652-8209-41398cdb9c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81835b53-1be9-42f7-a5be-22760fc80f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6449709b-2dfb-4388-b523-df474218033d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57a342e-2d1c-47de-a131-a53e87a43819",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e79f27-22de-4034-bbbd-70dfdd7b60f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e00905df-4fab-4d1a-8a90-1279599c44a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf3f0ad-18fd-49ad-a41f-b46c78084bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc3a15e-e45c-45f4-80cb-433aa5217946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6eacc8-993b-4df0-985e-814e5880e091",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71220376-a48e-435b-97b2-3bbd3f145f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a540b705-43f8-4ceb-bc79-e3bdb66cc6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ece7b4-3ac4-4048-bdcd-6a1d065e739a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfd89f0-7d0b-45e4-849a-2ce66bae201f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1e3750-2881-41aa-ac44-d264b4653161",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5de816-b435-4bcc-a732-b5c486b8d5a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15eb0599-d2a3-4f20-959a-e6c8014634ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3842ae5-a4a2-43fc-b81a-9d10cb7aee6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f762d5-d4d9-4870-8f44-272107dd509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ff80a4-1c1f-4e25-99cb-9fc8cb137c15",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242f3752-a34d-4c63-8afb-5e6b1ba291b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ad65b7-07d6-48a6-9dd6-93dc4b773146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f5b3a0-a32b-42ee-b80d-6439e04f0bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c6e37e-4526-498f-a51c-20a18a022e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e272fbd-c98d-462f-9995-848b4a7dceb3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728f95a7-5b61-4024-8838-7a05a4b3138b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67505283-18bd-4380-bb7a-4e3041cca131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9419a63f-fa35-4325-8041-050c75091312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380dc42b-2ce4-4c2f-b047-8ffb9c07f943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fbb4e7-954e-4c21-af3f-c93895b09d1b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0779511-9e68-4b5d-81ea-87025f090b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989bb49b-8adb-424e-8fe9-850bf3f73e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e65ba9-b414-48ea-b9f2-f76ff4fbe539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed87a94b-a110-4a42-b1eb-d291ccfab4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5a98d1-88c1-4476-96b4-19218ae62f86",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8264d42c-6c03-4fdc-85fd-3b462d132c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "272f4f53-b605-41b3-92cf-bdb109b1476b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1f229d-1177-4a2e-88d2-96e97f32f6c0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7838a560-b2a2-4f9d-bb60-d76ef809e15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266cd009-8b02-4bd7-a9b7-93a5c2b76d71",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9be0a5-9b6d-4f36-9683-420d0c7a28ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd37568e-aeb0-43ff-991d-de6a534372e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841b4952-0e1a-433e-9f24-c27f75c8766b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a337faa-f7b3-4afb-aef3-27d348dada37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdd1cd0-b48f-4495-982d-e97c2c680c18",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db6c090-21bc-4a26-a720-05c266f32572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5d3de9-c46b-4e83-ac4b-17fa55650f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bfb4bc-3386-4551-964d-7e06bdb81fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba155bd-e9cc-4557-b8d5-68f91d76ba64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ac5833-5578-4460-8186-6e0c5d897c23",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f6bdf9-3517-4536-85ab-52935b8e5b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d28ad6b-a15e-4d3f-b376-fbc132890180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4cb3cf-0138-41a0-bc20-7bfa621b7252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22e2a7a-f0cb-4c57-a4bf-300e2e7cdddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac26ac9-19a9-4672-a1a8-8c94efe708b2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03cba0e-688f-43c3-ad0e-e750728dbc06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8769d48c-0fe5-4745-8833-98ef8b285632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56826c69-e8d4-452a-815e-1b33530fb63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7abd84-6ab5-4609-9e1e-3cda0266ce62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08706d6-d0d8-406e-8a04-d7967208b506",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a529231-40a0-4bd6-aac8-d50466e43458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb1a41a-6851-4795-bdbc-f7ff1f314487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912d1ae3-d3a4-4d6c-a07c-504292a7f0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b65bc3-6d8b-4310-ba4c-b64ef18248d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467c49d9-b4cf-49cc-a285-0bfa2382a6a6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9da8efc-62d9-4871-bd28-8cda33a12e5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb29c8f-01af-4e9b-9d03-923499fbeb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caf48ae-f384-417f-97d5-387c7cb5f111",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d5bb75-561e-4de9-bf80-6c72b2fe958e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23b37f3-c41c-4b8a-a3fa-63b863f12187",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341d3b9b-7837-4671-a2a0-3c02b3b5ff66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbba68b-09c3-4590-a7ab-100989270ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356dc821-6e53-440f-a609-e5281cd37e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1036d65-997b-46f2-8d6f-f2b45f6cc0ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3013312e-9391-4bc8-b3a9-11cb2787db82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe071339-36b6-491b-985d-34fe7b9d4929"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c3e806e-cfed-4277-9726-b66c52e50fb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f88ed696-2a5b-44dc-96d4-f88564bffdf9"
                    }
                  }
                ]
              },
              {
                "id": "6c4495ef-18aa-4311-822c-818cfaf72ddb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5eb9c63a-f9ca-43c7-bb22-5f97b1154d57",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945804f1-bd02-4752-bfb2-f82696c59a13",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "193c4840-62ed-4375-857c-d928ab50ad0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeac6783-e868-4f1e-9a71-d52168429401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb477a6e-0ef7-48c0-88b7-fe7046ccb602"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45ee0120-a55e-4eff-9787-dee7a8f3c507",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7644e37b-5090-4ddf-8dd8-bba3c6f51c21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "576f6895-db73-46f6-9ea2-eaeaf596fce7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bd6da0b-6dfe-4358-acc6-c21b62687fc7"
                    }
                  }
                ]
              },
              {
                "id": "20e1f8f9-bf60-4001-a479-5893cf402d1e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0ea80d80-c9e0-4efd-95ca-ba99515026ea",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0123fc08-e79e-4468-9322-1dc837cf2754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d1b326cd-99de-49b4-943e-9c69c84fc8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a16b593-d323-4f53-804a-d95e99d9e64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac91108-7f88-4917-96a3-98fe8d1aa6b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "245cd269-7d4e-45a4-842f-78bdbfde5136",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d5a2175-cf01-4e7e-8a25-751bc10ba5df",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54e41990-c9c3-49f8-850a-4f232852a8c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0b0685ae-7b76-4d79-a177-ffe91b6b3c3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32f7cd67-5954-4ead-9f28-27060a0cd2b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61ee3a37-0d99-44af-b011-110f64ef5b09"
                    }
                  }
                ]
              },
              {
                "id": "afe2f317-8c39-49a8-9afc-d925f9c3e65d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ce7d208-79ad-49e9-888b-345cabaedc06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "25dbb6c8-cc34-481c-9e00-75c3ce03a1a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec417ede-17a8-45cb-9c3b-51ed4eb60397",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d4c0979-8eac-4b9e-adf9-8c4febcb521d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ebbacb8-2d07-4696-802f-1329623e8078",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0d575d00-727a-4c43-8382-478cca1b1b21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eee7dab9-49e3-4525-bd1f-1eb621cfc981",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3296eb5-e760-4efa-a2b6-09db9fdeed2c"
            }
          }
        ]
      },
      {
        "id": "886bfe97-f81a-4683-8261-0a9af2d3dbf9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c5ece4ed-ea5c-4f14-aa97-ce7569ada530",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ff754e1-5683-401a-8e43-7cd9ff93f454",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33e1e412-73c6-4498-bf16-1bda7691872a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773d08b3-c6ae-40d1-8aa7-cecbbc707294",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6c02efde-fab5-4fa2-92d5-1f02117f42d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba2db15-4b39-4cca-aef9-0f1f8242ebf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83189277-209f-47dc-adbc-34b047b969a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2e509cb-4409-4ac4-8b8d-a0e14a3ce8f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "836340f8-b777-4d86-bc26-7cde86edbd9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3357aad1-c96b-4855-bd6d-5e08eb4daff8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8877858-21bb-4850-9fc8-388fbecfe190"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9f9306a-364f-48ac-aea8-7ea42a57c24b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a5dac40f-4f42-4ff9-94ca-bed2201ebafb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35d29bca-2d0b-4e80-9674-bd28f62d4d0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d4d79f7-bfe7-419a-9429-abad46421407"
            }
          }
        ]
      },
      {
        "id": "9b40a4a5-0eaf-4038-ad9e-d030e8e133f9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f70c1368-7280-4ba7-93b6-103380607c55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be909379-19d2-446d-9dd4-bde18eccae20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70caa909-001d-4ac5-9f61-3923a156815e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3487769c-bc67-4366-8580-12a7ce702a3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d38ce48-4348-44db-8f79-1379e038365d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c26802-4b71-4fdd-b4aa-3634480fdcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76275382-50d8-4f59-81b0-f73e0fa0f499"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c358b61-1f5a-4a01-b059-36f9402fa92b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fff64a82-bdbe-421a-9323-9748960a7d42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d765350-75ef-4b7a-bb0c-21ff1a6c4796",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20333132-917d-4c20-9ab4-ce83ff0cc650"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11bba472-18b9-4ef0-b28f-4341352bd0a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a3e7a4d-2926-49e2-8adc-0662502eafa3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd866a4d-a666-420f-ac36-2bb25a5c74ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1666687b-d95e-4c9e-985d-c09360d26163"
            }
          }
        ]
      },
      {
        "id": "c44bc928-3a30-4a6f-88e0-028a1647ae60",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bea69161-4b90-4e14-9db4-014a78f26333",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b62b183-4cac-4a47-9903-712af352dfe5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a6dd834-ba67-46d5-898f-0ed34f83f975",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bac94a0-4144-4496-8076-a060227830fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd76210c-b17e-4cf5-8966-68543ee421b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16d49ac-6b60-46e6-9281-4fbed7da694a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfe0406a-942e-44d7-b88e-e8b0bd60bddc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7092f8d7-7114-42c7-b182-097017847e11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2fcbf49-17c0-4d43-ac84-08742bd97eb7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e15a70b1-a07a-454a-a02d-b4df72aa9061",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc8e1222-b1ca-455f-a092-c3c3bb136e55"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b866cf6-d645-4074-9c67-7ae1663fe3ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ad47b776-b3f2-4997-91b5-c0ef351d6889"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d691c712-6884-497f-b9c9-076319bb996a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "171e8f24-3044-42cc-8d66-9bac10d130a9"
            }
          }
        ]
      },
      {
        "id": "d3e241eb-67f6-4e52-b1fc-1705b341ca7a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "581dfd45-9b9d-46d0-ad0f-4afb0efd5d6e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c4145cf-69c2-45c8-ac38-930244972a55",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b2e64e1b-2a87-4fd2-878c-3ac2cd297e90",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba507349-2afb-4754-8202-7187aafb639d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1f0cffb-aa72-4ae0-aa8a-55332210ddbb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 319.22183098591546,
      "responseMin": 19,
      "responseMax": 7244,
      "responseSd": 846.6494839532688,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694651570393,
      "completed": 1694651673279
    },
    "executions": [
      {
        "id": "60b9fb73-c250-4bb8-8a70-10fc3ac3de43",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e3ef312e-4a69-42e4-b904-2fde21fd338f",
          "httpRequestId": "a64d2beb-fd4b-4da3-9a23-6bc2e98eb9da"
        },
        "item": {
          "id": "60b9fb73-c250-4bb8-8a70-10fc3ac3de43",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c38c6d95-3272-4a73-9cb0-dcf6739d9497",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 0
        }
      },
      {
        "id": "97a82d60-47d1-4ef0-87b3-d2e623ea6c14",
        "cursor": {
          "ref": "18c802a5-270d-46d4-8466-27df98fda5f8",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d21a66a7-cd69-4091-8d30-64901ec7b364"
        },
        "item": {
          "id": "97a82d60-47d1-4ef0-87b3-d2e623ea6c14",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8593b2fb-b9ac-460d-9ea6-93010bf2da8a",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "79b5ad98-99dc-42d9-9d3c-4fd0bea19c48",
        "cursor": {
          "ref": "f4ce15ff-577e-4a97-ac01-8343b8075803",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "68d8adad-c382-4fe7-8e23-189eaa1d8997"
        },
        "item": {
          "id": "79b5ad98-99dc-42d9-9d3c-4fd0bea19c48",
          "name": "did_json"
        },
        "response": {
          "id": "d1983ee2-d24c-4097-a350-a8847e7a7bab",
          "status": "OK",
          "code": 200,
          "responseTime": 1401,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d897f8-2f65-4392-b217-0daef824478a",
        "cursor": {
          "ref": "4f8e79bf-c38f-4bc7-b202-7c284d0229a8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f9f2c72-051f-447a-b5aa-4a4ddb5a7956"
        },
        "item": {
          "id": "86d897f8-2f65-4392-b217-0daef824478a",
          "name": "did:invalid"
        },
        "response": {
          "id": "938b295c-5c3a-477f-9512-e4df38840b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d897f8-2f65-4392-b217-0daef824478a",
        "cursor": {
          "ref": "4f8e79bf-c38f-4bc7-b202-7c284d0229a8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f9f2c72-051f-447a-b5aa-4a4ddb5a7956"
        },
        "item": {
          "id": "86d897f8-2f65-4392-b217-0daef824478a",
          "name": "did:invalid"
        },
        "response": {
          "id": "938b295c-5c3a-477f-9512-e4df38840b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fe0e2e-e1a7-44c8-80f1-345487e32c93",
        "cursor": {
          "ref": "0560f446-3b3e-46d1-8f88-89bf76bd560f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7b50b09f-f098-4146-9961-902283e6ca84"
        },
        "item": {
          "id": "73fe0e2e-e1a7-44c8-80f1-345487e32c93",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2ed10181-0bb7-4174-aaec-196cfcb19321",
          "status": "Not Found",
          "code": 404,
          "responseTime": 376,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbc2ccf-a163-4183-a307-b1d13ee5aacf",
        "cursor": {
          "ref": "20cefb11-a56d-4ade-9ac7-24116c837db2",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7494ee78-5b92-4bee-919d-979fd0e0f4f4"
        },
        "item": {
          "id": "7fbc2ccf-a163-4183-a307-b1d13ee5aacf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f35c2fe3-d626-4159-9d27-f17499979d08",
          "status": "Not Found",
          "code": 404,
          "responseTime": 266,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9860927c-6f01-4d90-82cd-9d67e5013c2c",
        "cursor": {
          "ref": "34103a06-8872-45da-8c17-437118aa0224",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7a1c2795-2019-42da-895e-c3809ca0114a"
        },
        "item": {
          "id": "9860927c-6f01-4d90-82cd-9d67e5013c2c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b031531d-840d-42d6-a3e9-7183624170ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db7ccf6-7ffd-47fa-9d73-25b711f043c3",
        "cursor": {
          "ref": "07c5458a-688f-4bf9-84ad-bfc8e8731702",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c5616c2-5c6e-402a-9641-42253c614fa5"
        },
        "item": {
          "id": "4db7ccf6-7ffd-47fa-9d73-25b711f043c3",
          "name": "identifiers"
        },
        "response": {
          "id": "f35eca17-419f-4c86-884d-e87e63e7f803",
          "status": "OK",
          "code": 200,
          "responseTime": 1093,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be1bd0d-f727-4efa-9291-acf49fb785ae",
        "cursor": {
          "ref": "7431b70b-c47a-4d39-901d-28bd71465cae",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8c095658-c95c-4697-aa88-ed07c6b1f33b"
        },
        "item": {
          "id": "5be1bd0d-f727-4efa-9291-acf49fb785ae",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1226282a-57fc-46e9-a429-6d72a76ef141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbf82d3-8815-48d9-93c8-090836afd10a",
        "cursor": {
          "ref": "518dec06-6a4a-411d-b979-00432adfe917",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b97b2cdf-d067-41eb-a916-a7bb14ca02cd"
        },
        "item": {
          "id": "2cbf82d3-8815-48d9-93c8-090836afd10a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "abc4a8a7-3aa6-442b-88a7-84341ecfc346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25bdf83-3b19-4be0-aad7-e24007995388",
        "cursor": {
          "ref": "f1f18e94-9c1d-423e-b433-6e833707a1da",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d6af4dfc-4bdb-495e-a8e0-acb613789edf"
        },
        "item": {
          "id": "e25bdf83-3b19-4be0-aad7-e24007995388",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "21402d29-b2f8-4fec-8ea1-4e11789899f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df827df0-037e-4e5f-9379-4890e7a7ea46",
        "cursor": {
          "ref": "4efc17f2-4b59-4a0d-ae82-dca9a46fa966",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bb723631-f7f1-4ad9-8be3-08a73777ce02"
        },
        "item": {
          "id": "df827df0-037e-4e5f-9379-4890e7a7ea46",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ceeaf9c8-3555-4136-8fb2-d3dd93edb1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56204e54-de05-4c12-90ba-ce9d4cff4c19",
        "cursor": {
          "ref": "7d861556-c629-4f36-99a0-ab51e067c8e4",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "78fc5e5e-1705-4f29-8917-f7623e13a007"
        },
        "item": {
          "id": "56204e54-de05-4c12-90ba-ce9d4cff4c19",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c820d141-cde4-42ce-99c5-ce9bfaea837f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203738dc-38e5-4ca7-9fdf-39195226ddef",
        "cursor": {
          "ref": "7a74d3c2-5094-4220-8c01-51ada28c2c4d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0177287b-de75-4a2a-8497-4e300f7ebb6e"
        },
        "item": {
          "id": "203738dc-38e5-4ca7-9fdf-39195226ddef",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6373f495-7c07-48f5-a29c-2eddd6c72664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736fd2a6-c709-4ea7-af29-456eb0e9a900",
        "cursor": {
          "ref": "d1adb8d6-c6e3-489f-b469-78ba493b48c1",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "92e4e142-eff2-4506-a5fe-dfa1fa8773d6"
        },
        "item": {
          "id": "736fd2a6-c709-4ea7-af29-456eb0e9a900",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8c66f09b-b941-4c9b-8b24-9e26475e21c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de1d715-b4f0-461c-bd0a-1a0ecca067d0",
        "cursor": {
          "ref": "6c4e4875-2a91-4a7c-98ec-ca081da30e11",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fd613d67-950b-4d51-9fe4-27dda47cf4da"
        },
        "item": {
          "id": "3de1d715-b4f0-461c-bd0a-1a0ecca067d0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9eb5c984-5646-4c07-882f-1053eb0f076e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6e3fcb-8457-4082-abca-2bc491ee387c",
        "cursor": {
          "ref": "e16a684c-93f5-45a1-8756-88f2489302f4",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9131c5c3-9c3b-44cb-b89d-33f8a25b0ebb"
        },
        "item": {
          "id": "ea6e3fcb-8457-4082-abca-2bc491ee387c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "98eaf7e1-8897-415e-8d08-ebe42c7c9dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f709a0f-33dc-461e-81f6-4f9028c07025",
        "cursor": {
          "ref": "7bdfdf80-3d7b-4c16-bd77-e0fa331c0279",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "52c6d074-b034-4928-b168-71a0b5dcf73a"
        },
        "item": {
          "id": "6f709a0f-33dc-461e-81f6-4f9028c07025",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5572cba5-48de-4fe2-990c-b7ae09262ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56b721f-61e4-401a-af52-86924a6c0bcf",
        "cursor": {
          "ref": "b5e2ad1f-5c7c-46de-a87f-2ecd39402ce8",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "48fb01f1-c6e4-4bce-af53-2b0a65a7fbe3"
        },
        "item": {
          "id": "e56b721f-61e4-401a-af52-86924a6c0bcf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4551029e-e40e-4b52-bd3d-4ddd91ff5cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a395b0fa-2b34-4ee0-9211-f37ad2664292",
        "cursor": {
          "ref": "af4eb472-0386-47a3-b12c-4ef76e807a74",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5c7e90d7-8dff-4b16-bdc8-4918d186b77a"
        },
        "item": {
          "id": "a395b0fa-2b34-4ee0-9211-f37ad2664292",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9b584e8a-bfff-483b-a207-2c24bfc9e0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18456200-1931-4073-a8f4-53e280a0bf2a",
        "cursor": {
          "ref": "d4ae9825-f622-4d33-9481-6bf7162e0fed",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "edc19b94-9edc-4050-8185-1a19efc30597"
        },
        "item": {
          "id": "18456200-1931-4073-a8f4-53e280a0bf2a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e9189166-6c5c-44a5-b6a7-6d22dd72d0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0606eae-d65d-45c5-ade6-c2d49ee31cc1",
        "cursor": {
          "ref": "dfd53347-56a0-4937-836d-15bebca7fd6f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "852b9c81-f5da-4b2b-80f4-447794d5c94a"
        },
        "item": {
          "id": "e0606eae-d65d-45c5-ade6-c2d49ee31cc1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "13017b51-45a5-43a7-a10a-fcb2ff921a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829b5b91-382d-440c-8f54-30bc48c0babe",
        "cursor": {
          "ref": "16315f96-ea28-4620-828b-1ee15d30bb44",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "82953146-5467-4e3d-9afb-11e9852590e5"
        },
        "item": {
          "id": "829b5b91-382d-440c-8f54-30bc48c0babe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ff0838dc-d358-49d8-8678-f64da443d3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02038ac-df51-4e22-b0f7-77d0af4ba880",
        "cursor": {
          "ref": "acbc5f71-4fe8-4a94-a260-bfe8c697dbee",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "44ed6094-4ba3-43d8-ac42-a730ecfd2c7f"
        },
        "item": {
          "id": "e02038ac-df51-4e22-b0f7-77d0af4ba880",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c0573e68-0df3-4796-a485-d231bb597dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b7969a-a497-4d28-bac0-9b8dd7d7736a",
        "cursor": {
          "ref": "62632b2b-2ea3-4c9b-8338-71dd6fb3449d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b6ce3561-7c24-4c35-80a3-678cda92be47"
        },
        "item": {
          "id": "13b7969a-a497-4d28-bac0-9b8dd7d7736a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f7c0a97f-3144-4697-a165-0f8ebc1c6151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe61151-1f3c-43d0-bd2f-4f297e03ce93",
        "cursor": {
          "ref": "3e1c0a1f-df30-4d40-b8a1-1314885111a2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d597502d-51d3-4c41-b071-f8a68394c8e5"
        },
        "item": {
          "id": "dfe61151-1f3c-43d0-bd2f-4f297e03ce93",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6597361e-b36d-4c86-9d5e-5ad5923fc1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ba0507-3d76-487c-95a4-a06d2f2dc3e7",
        "cursor": {
          "ref": "21796478-cfbd-4066-86ea-984946f1e08d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0cf3aaaa-16bf-43ea-9f2a-bddb739e3024"
        },
        "item": {
          "id": "a0ba0507-3d76-487c-95a4-a06d2f2dc3e7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9a33a10f-ab43-4cdc-a746-c94cdeba1be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08724101-3a6c-47b4-9fc0-26a0e832f57c",
        "cursor": {
          "ref": "fd9e1920-ca3e-484f-a5c6-ee98c82b2267",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9c4e7072-61e5-43ed-b636-b5dd11441dec"
        },
        "item": {
          "id": "08724101-3a6c-47b4-9fc0-26a0e832f57c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "587d98d6-f248-4df5-958b-6f137803b787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbf7232-c538-4c03-b3f3-9d4bd29fc1f9",
        "cursor": {
          "ref": "db3a3efe-8a67-4300-8996-d30459c81daf",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "914b5bdd-7094-4078-aafa-cce0990d505c"
        },
        "item": {
          "id": "abbf7232-c538-4c03-b3f3-9d4bd29fc1f9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "902f0413-b26d-4110-b6f9-957fd313b745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63454ba-3519-468e-8fd1-eb0374f9e6a5",
        "cursor": {
          "ref": "66b690ce-e1ce-44ef-9300-7defd4f751e1",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "188b14cf-e149-4e79-8997-dee6e3784e17"
        },
        "item": {
          "id": "d63454ba-3519-468e-8fd1-eb0374f9e6a5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "694a9eea-1b52-49ce-ab61-cee2616bdfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886074a9-13e3-4414-9255-91fe3de969c1",
        "cursor": {
          "ref": "6c2f0851-e03c-450a-b8ba-93b270c18836",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2d90ecbe-6306-400d-a82f-926d8d056d42"
        },
        "item": {
          "id": "886074a9-13e3-4414-9255-91fe3de969c1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "23c7d2d7-c8bc-45b6-88d5-92843258748f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812c8b05-6b0c-4880-af7d-deac2c04ccca",
        "cursor": {
          "ref": "0bd93de0-ad4e-4349-8328-01ade472c355",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "13ddb425-b6b0-415d-8c0b-2760129b1348"
        },
        "item": {
          "id": "812c8b05-6b0c-4880-af7d-deac2c04ccca",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "81e72bec-451a-4f2e-847a-75b74efd6740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b497c363-e159-4e85-9f6a-df2b9e107a91",
        "cursor": {
          "ref": "cd620910-9336-4a59-b34e-8669fb606b6d",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9352fc48-26c2-40a1-8f62-c044be43d7cb"
        },
        "item": {
          "id": "b497c363-e159-4e85-9f6a-df2b9e107a91",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c6346ab3-ec4e-470f-8037-971f084d8c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd306957-4031-4439-9795-065f2c3c4f20",
        "cursor": {
          "ref": "1b29644f-6f22-4256-b669-596770883651",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b4c4c56f-56ac-4ed6-93bc-65bb048cbfa5"
        },
        "item": {
          "id": "cd306957-4031-4439-9795-065f2c3c4f20",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "92929303-14e6-46b4-92ba-23d311910cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc85a04c-4709-4b5e-a2fb-2609d2119fa2",
        "cursor": {
          "ref": "fcba2ce0-6404-45f6-91e9-6493df2b5ec2",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "33460195-c609-4d24-8393-07a2b750ab5f"
        },
        "item": {
          "id": "bc85a04c-4709-4b5e-a2fb-2609d2119fa2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4b721bf2-ed23-4b46-8db5-235873fbf0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2f935b-3ef5-4352-b264-9b35210e481e",
        "cursor": {
          "ref": "7adf9a96-2b02-46ad-9194-595023144283",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3706e160-cddd-4d05-96a9-b62922200a53"
        },
        "item": {
          "id": "7a2f935b-3ef5-4352-b264-9b35210e481e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0aab5ba8-365a-4a89-9014-7158ded22032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc2c34c-e880-4111-88a4-1847d67be13c",
        "cursor": {
          "ref": "97a904d1-0068-421c-aaf2-2f6abd5d4547",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0eb466af-35c5-4775-a2d5-ce3b72168bcf"
        },
        "item": {
          "id": "ddc2c34c-e880-4111-88a4-1847d67be13c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "34ac0350-cae5-472e-aac7-243c81032791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28667e5-d39b-45b3-8b42-d4abfcd4f422",
        "cursor": {
          "ref": "67b6f261-12a0-4d4d-9a73-067b76bc0732",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b00109f0-96a2-4c48-b779-b831ba97dec4"
        },
        "item": {
          "id": "c28667e5-d39b-45b3-8b42-d4abfcd4f422",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7fad02bd-9158-48dc-b7f2-11be3e081343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec70c9b4-c49a-44eb-ab70-ad6c2cb8ce78",
        "cursor": {
          "ref": "8971ae41-dd68-4424-a7b3-5454d408db3d",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c026044a-f699-46ec-9479-dad0beac8cbc"
        },
        "item": {
          "id": "ec70c9b4-c49a-44eb-ab70-ad6c2cb8ce78",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "42b89b4d-82f8-48ea-b3f9-810a8e495c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d883d2-1874-44b5-ae7f-1b35e89b9d70",
        "cursor": {
          "ref": "cd0f1846-5d33-45ad-8d3f-1c7e99f201ba",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "14dd671e-760a-4a30-b6d5-22fc24a08592"
        },
        "item": {
          "id": "f8d883d2-1874-44b5-ae7f-1b35e89b9d70",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8b7f96b7-f6ea-4ef8-bcdb-4ce316e481fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76999c58-741d-48aa-b2bb-f62d0c7e8b52",
        "cursor": {
          "ref": "ce452136-bbeb-49d3-afff-c1a3003a8995",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fc1db5e3-09ad-429b-b8c3-59a218b6fd62"
        },
        "item": {
          "id": "76999c58-741d-48aa-b2bb-f62d0c7e8b52",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "385f9750-ce5c-4176-a994-d215b1073312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e82f319-2650-48a3-b00b-a8e542e9a781",
        "cursor": {
          "ref": "f0cdc4e0-271d-406a-ba7d-725119648345",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2af42841-7ab1-4a32-9a7d-483e20d4bb51"
        },
        "item": {
          "id": "6e82f319-2650-48a3-b00b-a8e542e9a781",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "986e07f7-b1f5-4bfb-81a9-9d3e052f4fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c77b61-6bf8-4967-835c-7ad41752b991",
        "cursor": {
          "ref": "e57f67e9-1d5c-43f7-94f8-54b060e90a2a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "37dd69bb-05d7-49e8-9190-499e95df553d"
        },
        "item": {
          "id": "54c77b61-6bf8-4967-835c-7ad41752b991",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b5616ccf-b504-40b5-9a9d-e105aec437cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f66585d-80e0-4708-9074-99bb5ce1a09a",
        "cursor": {
          "ref": "6dd9ef81-a6e9-4a26-94c0-c1d289c63512",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "10d02154-46c2-4f4e-bd59-79e32676bd5c"
        },
        "item": {
          "id": "9f66585d-80e0-4708-9074-99bb5ce1a09a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "04bc6ebb-e557-4275-9ec2-90d8a0ff3c0d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 608,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43ad8b3-a7dc-4504-9409-0297c35041df",
        "cursor": {
          "ref": "f22f6d21-6564-45f5-9c36-ec5f746b5e9d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3f56b6d5-9d32-44a6-9daa-b1af10788c93"
        },
        "item": {
          "id": "d43ad8b3-a7dc-4504-9409-0297c35041df",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4c051cb8-bbd7-46e3-aaed-9aad2a949a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0de7df4-c4a0-4826-b863-3556dadefe18",
        "cursor": {
          "ref": "ed0dbf7c-b018-4dd1-b0ea-bdba43d96347",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ae23d8d4-dbae-4357-bf36-0078a1914b15"
        },
        "item": {
          "id": "f0de7df4-c4a0-4826-b863-3556dadefe18",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "40cb3ffd-ba43-40be-ac95-412b7dddc186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074fa611-63b2-40ff-b8e9-280adaf9f850",
        "cursor": {
          "ref": "6f2685c8-652e-4818-a01e-7027645be80a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "86725b9d-1ff4-429b-9c31-b63fa33e211b"
        },
        "item": {
          "id": "074fa611-63b2-40ff-b8e9-280adaf9f850",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a1d78ff7-e7c1-4713-814d-c5c0fd72a174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061f90a0-424c-44be-929f-e8b641480118",
        "cursor": {
          "ref": "489ef527-93f0-4499-99c4-2049bd873fbb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b483d7de-90ae-4ff1-9b00-5d48fda55417"
        },
        "item": {
          "id": "061f90a0-424c-44be-929f-e8b641480118",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7588ff23-447d-4009-ba39-82671dd9ad9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4494f98a-4f44-4270-976c-4a112b1d961c",
        "cursor": {
          "ref": "5ae6c21e-1c9a-4b4f-be48-0663e73559c3",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "49189fde-e835-462b-b0c6-0867f27f9abe"
        },
        "item": {
          "id": "4494f98a-4f44-4270-976c-4a112b1d961c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "209907c4-3d38-4259-a8a8-0fbe87154997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ba69c1-d3d1-468c-8db3-696f6ecab4d0",
        "cursor": {
          "ref": "1f9016ca-964a-4009-81df-ae3963c2be6b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "427aa7d6-2895-4b04-b17d-e46342aff1f1"
        },
        "item": {
          "id": "a5ba69c1-d3d1-468c-8db3-696f6ecab4d0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2f2b4ac6-f665-411b-ac86-f22a5aac8f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62345c56-1d95-4119-99dc-309b7f96a4e6",
        "cursor": {
          "ref": "0f4296ca-00a0-4419-a9d2-171ff6223b99",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e7b0cda9-7c17-48b7-81fa-17ce25bc3530"
        },
        "item": {
          "id": "62345c56-1d95-4119-99dc-309b7f96a4e6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "32d64ccd-8148-4f2f-8ea0-5f163ff98b11",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 591,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de509e3-aa29-4fae-a4bc-799e25c857ce",
        "cursor": {
          "ref": "b3b223e5-6e6c-4490-a856-ad8765612d9a",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "35ec4c9b-0cd0-442e-a5c6-57e2e45941cd"
        },
        "item": {
          "id": "7de509e3-aa29-4fae-a4bc-799e25c857ce",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d5ad190d-e478-4df8-aa69-d5dd7a98492c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af351370-59d5-44a2-9df7-ee27935e7ab9",
        "cursor": {
          "ref": "469fa3a4-8f11-4676-8db9-b4f824288132",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0d2ae8ff-b86e-41fb-8311-ffb7847cec65"
        },
        "item": {
          "id": "af351370-59d5-44a2-9df7-ee27935e7ab9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0525fc65-e935-43f7-b8f3-122dc8c9dc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f68c808-2ab2-4020-a0f2-afe26becdefa",
        "cursor": {
          "ref": "e7315635-044a-4a70-ae30-7d7b97cab135",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ab3f9ad6-8f9e-4cfc-b8a9-7d2360bff869"
        },
        "item": {
          "id": "6f68c808-2ab2-4020-a0f2-afe26becdefa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e470d8d2-ee4a-4db6-9eed-777f5eb2f5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b50474-36b1-4220-b136-fffeaf1772c2",
        "cursor": {
          "ref": "a8b4634a-b08b-471f-a752-c423c687ccb9",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "308b6838-e2a6-4e6b-9b12-43558f08cd52"
        },
        "item": {
          "id": "a4b50474-36b1-4220-b136-fffeaf1772c2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b62f331b-e321-4842-a626-2e04899fa776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cf4402-3de7-4d76-98d6-868851a54384",
        "cursor": {
          "ref": "1b5b0e95-0348-4d77-839f-d150ca2e1958",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a022a1b0-0eeb-4a96-9bed-71608ac57dac"
        },
        "item": {
          "id": "82cf4402-3de7-4d76-98d6-868851a54384",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ad97520f-d019-4980-9d52-771cb5852b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8104a06d-0b1d-4795-920d-8b69f254ed14",
        "cursor": {
          "ref": "90473408-d820-484c-b7ab-785d362f5ca0",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "27efd716-449c-4667-8416-d8bba20486be"
        },
        "item": {
          "id": "8104a06d-0b1d-4795-920d-8b69f254ed14",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4815d72b-16e7-4674-8ca5-fbff3119ef62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4260cbb3-5909-46fd-9f09-802c7a3f87f4",
        "cursor": {
          "ref": "dc3daabd-f09c-4091-a002-c2cf90abf4c8",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d635b388-d07e-48bf-8c97-c298dcd5f568"
        },
        "item": {
          "id": "4260cbb3-5909-46fd-9f09-802c7a3f87f4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "da4bb3fc-6afd-41a2-841a-6e7b8f49e88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edf6ed3-6232-46fd-a4fe-00d2f7a4d34e",
        "cursor": {
          "ref": "4114bf90-23bd-4e53-9846-e927ea06a0f6",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8172624f-f695-408a-a437-5a153504d4f9"
        },
        "item": {
          "id": "2edf6ed3-6232-46fd-a4fe-00d2f7a4d34e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "036a9081-55ed-4ee9-bb86-86d80b73ea6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91837404-d3d1-4472-a768-af1fa3189d96",
        "cursor": {
          "ref": "ea703bef-0e67-4d68-9abd-1b34c2b5e99e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1cd37c63-bfae-4121-a6b1-bbdb29e0e977"
        },
        "item": {
          "id": "91837404-d3d1-4472-a768-af1fa3189d96",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b99f841f-6887-4b92-b747-5f4567bfa3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb034dd5-541e-4176-98e1-82a8ba714b2c",
        "cursor": {
          "ref": "a724c62e-ba20-4664-8727-b742fda327bd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "138629a4-56c0-4d80-a59a-14b037a1347d"
        },
        "item": {
          "id": "fb034dd5-541e-4176-98e1-82a8ba714b2c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a83f1c70-107b-44be-b364-1074145b02f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c557c84-e072-42e9-8c70-421ead5f5714",
        "cursor": {
          "ref": "d567f0b7-240f-40b0-9d09-6c4a3bbbf718",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fb17ee0a-eef5-44e7-8f44-89441255bc83"
        },
        "item": {
          "id": "2c557c84-e072-42e9-8c70-421ead5f5714",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "207b4705-ce86-4723-946d-22af80a4930d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b255743-37f9-4a9b-83d4-16e3241454f9",
        "cursor": {
          "ref": "e9f383b5-8156-4701-abf0-9032f06d5a19",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "176801cd-b31b-49be-b2d2-d27965a9e2a0"
        },
        "item": {
          "id": "6b255743-37f9-4a9b-83d4-16e3241454f9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1c65b286-9d82-4df0-8445-18c656aa28b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c579251-24e3-4698-b52d-41a3f659a07b",
        "cursor": {
          "ref": "f722fa1e-3fb0-4af0-9f56-b84904cc09a7",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "528e5b5b-4956-4aa2-9950-5c270feae787"
        },
        "item": {
          "id": "2c579251-24e3-4698-b52d-41a3f659a07b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "708884fe-573e-40c8-89e8-1717bff6afae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cceb2e-b229-4f7e-a642-58f35ccb29ed",
        "cursor": {
          "ref": "3b43a9f0-819c-4b55-817b-075bf804f820",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ef66e323-1ca0-4777-96f3-6b0da4da5a92"
        },
        "item": {
          "id": "c2cceb2e-b229-4f7e-a642-58f35ccb29ed",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "99e0f141-09b7-4f2c-a69e-d4830c0fae04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc5dd69-1c4e-423f-b1eb-b68fbd5bd8f5",
        "cursor": {
          "ref": "3cac591c-e5bd-4c22-8857-264f45675070",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "798d96b0-b09b-48e7-8b17-08744003fbe5"
        },
        "item": {
          "id": "ddc5dd69-1c4e-423f-b1eb-b68fbd5bd8f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4916d9ff-c5fe-48c2-95f4-775eacaa3cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d593cef-3d89-4dfc-bbfc-4efbe96f2189",
        "cursor": {
          "ref": "f7b3b21a-b856-4a96-8cb0-3e7c0ebd83d1",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "76ac9a2e-83f3-49bf-9b50-3e05d1ee7193"
        },
        "item": {
          "id": "0d593cef-3d89-4dfc-bbfc-4efbe96f2189",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "df5e6dca-df84-4809-a3ed-d53c1528c0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84950a01-6323-4cda-9923-11d981502507",
        "cursor": {
          "ref": "4025bcb2-07cb-4943-b630-87f83a1a3473",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "33c600ef-1358-45c3-a554-536dadfca906"
        },
        "item": {
          "id": "84950a01-6323-4cda-9923-11d981502507",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "24dfe08f-4587-4290-8211-e69259dc6e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcf6ebe-db1f-4b1a-b3d3-6774fdd97916",
        "cursor": {
          "ref": "36c33e70-e1c3-462e-9405-f50b0d403373",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "24addaeb-b405-469b-b011-ef85d9eb5ab4"
        },
        "item": {
          "id": "ddcf6ebe-db1f-4b1a-b3d3-6774fdd97916",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ce79cb5e-af31-40de-8228-f3b3420e05e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c43dc0-c85e-4342-96de-24e90e9b6967",
        "cursor": {
          "ref": "d7c111f0-da2c-4fdc-834c-1153826ffb3d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "73c345ff-832b-4e91-87f1-319c2da12923"
        },
        "item": {
          "id": "18c43dc0-c85e-4342-96de-24e90e9b6967",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e7418741-3768-4cff-902d-16f04d0b53c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ab407d-799d-47d2-a05c-4c19d1964896",
        "cursor": {
          "ref": "1aa0b1ee-7846-43de-b4c0-638c8e173d6e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ea54eaeb-472d-4639-8ae8-d685d8650d2b"
        },
        "item": {
          "id": "16ab407d-799d-47d2-a05c-4c19d1964896",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "68f99fd8-a84e-4311-850d-0bf77b22c185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0289c50-a644-4023-bb93-b0086b96c1d4",
        "cursor": {
          "ref": "0ae5cba2-965b-44ed-a77d-7deb91cb9b99",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2f5cc7bb-902a-4bed-8611-dcfa2adfb87c"
        },
        "item": {
          "id": "c0289c50-a644-4023-bb93-b0086b96c1d4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "91d76fcd-97df-484b-8a12-275f56a2544d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aafb261-5617-41f3-9e5e-d3361bfc1803",
        "cursor": {
          "ref": "6468e197-5b60-4e56-969e-4f2c1c04a243",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ba139a76-3753-4577-a0db-6e6b62be5b94"
        },
        "item": {
          "id": "3aafb261-5617-41f3-9e5e-d3361bfc1803",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "22d184b7-da60-40c6-abb6-1c060c422673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbab340c-9b8f-4421-b2cf-9b2dc0299cf4",
        "cursor": {
          "ref": "ff76d341-bec6-4e83-9e7d-c039ec768b5f",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "438585cf-262d-4517-80a5-ae2cf05e1e7f"
        },
        "item": {
          "id": "fbab340c-9b8f-4421-b2cf-9b2dc0299cf4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d89d94df-e7a1-4985-8387-18d070db8d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b92cc8-d110-4fa7-aab7-871c846b73d0",
        "cursor": {
          "ref": "fd9fde22-f379-48e1-ba1f-2891ca642ce2",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6f9e6583-f0e9-41fa-aac6-9d682eea1cbc"
        },
        "item": {
          "id": "f6b92cc8-d110-4fa7-aab7-871c846b73d0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "adb4688c-8542-4c2e-a279-7d114fdeeeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4f421c-222a-4b06-a1bd-9eeac1e821dd",
        "cursor": {
          "ref": "31dde048-36ce-40ef-903a-ece05dc04d3d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8794897b-b9b6-426e-abb9-abad9d68aed5"
        },
        "item": {
          "id": "bf4f421c-222a-4b06-a1bd-9eeac1e821dd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4dde84c1-c72a-422b-935a-1b34ca4f93d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bc8aab-8e9a-4ba8-8f67-8b0f12aa8f2f",
        "cursor": {
          "ref": "57332159-9f53-436e-bdb7-d4c8e095efda",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "aad2f31c-a6d9-4ef0-9961-536b59804ab5"
        },
        "item": {
          "id": "a8bc8aab-8e9a-4ba8-8f67-8b0f12aa8f2f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bfd5e0ac-9e57-413b-8b07-f49a8020bdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c0e3ae-5ec0-49c3-8ffa-3e7862e95eeb",
        "cursor": {
          "ref": "4faf349e-0e74-4ddc-a8db-0f0da9e3155e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "61cfad8a-6e40-42b8-bff5-a960859fcfec"
        },
        "item": {
          "id": "45c0e3ae-5ec0-49c3-8ffa-3e7862e95eeb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8fdbb795-f08a-43cf-995b-3cdf0ab0f3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4889081-25b2-45d8-899e-61b5e4bd8ab1",
        "cursor": {
          "ref": "68473312-6ed8-415b-8eac-5fbacefcf1f8",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "db79e089-a961-4786-ba2a-94756b816a24"
        },
        "item": {
          "id": "c4889081-25b2-45d8-899e-61b5e4bd8ab1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ecaf6422-71bd-4203-b5c3-e4a3f6a3717d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1646991d-199e-4feb-9f2e-3dcd0ae6ba7b",
        "cursor": {
          "ref": "49d796a0-1ee5-4368-b987-cd74b4e8fc69",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1937d84e-9728-43cb-b2bd-e63ba891b98d"
        },
        "item": {
          "id": "1646991d-199e-4feb-9f2e-3dcd0ae6ba7b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bf9e41f2-79cf-4cca-9e95-41689b6d6a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff94ae48-971f-41c7-ad4e-f9796111caa9",
        "cursor": {
          "ref": "fddd02e4-415d-4b27-af9c-ed260003c701",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4230fb10-4978-4d70-bf42-3ba7d3121705"
        },
        "item": {
          "id": "ff94ae48-971f-41c7-ad4e-f9796111caa9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9b0045c3-21d1-41b5-b2e4-e5c69b6c6b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7e7cb4-5c78-4fe3-8ec7-8765299d4b19",
        "cursor": {
          "ref": "e40800b8-1e43-4be3-b644-bc2956fab7ff",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6af50db1-f121-4ee1-9b09-fde347eaf3bd"
        },
        "item": {
          "id": "0e7e7cb4-5c78-4fe3-8ec7-8765299d4b19",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ae178a82-b207-4ec1-9999-374dc6a3f9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1e46e5-e0a3-474c-a218-6af4c38511ca",
        "cursor": {
          "ref": "00c43578-4c55-475b-a8b8-f5e2cabb1d0f",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0c12b0b9-82c6-4ced-8b5f-a0638679e6ad"
        },
        "item": {
          "id": "fe1e46e5-e0a3-474c-a218-6af4c38511ca",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2d257866-abaa-4e22-af21-e24027334bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc1253c-bb69-4d72-98bf-dc19e9a27256",
        "cursor": {
          "ref": "09a94306-89cb-4912-8ed7-2f9503d30190",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "69661b99-137b-422b-8e7b-aaed3be951d2"
        },
        "item": {
          "id": "ebc1253c-bb69-4d72-98bf-dc19e9a27256",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8d6f35c5-4032-4061-bc1b-3763889bb578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b462f292-f10e-4514-ae99-f1075ed8db40",
        "cursor": {
          "ref": "66ddbe55-55c8-44d9-bd59-79f31d920eaa",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0a268cf1-e632-4315-a4dc-d0f246b38148"
        },
        "item": {
          "id": "b462f292-f10e-4514-ae99-f1075ed8db40",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "439d2018-e67e-474d-adc3-d172f11d7186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37604154-a3d7-4a0b-9c0f-0953fee5e368",
        "cursor": {
          "ref": "e0d659eb-9f26-4e99-8bab-615f28449a7c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f5d2e58d-594a-4e57-a61f-e2e6f97e72f9"
        },
        "item": {
          "id": "37604154-a3d7-4a0b-9c0f-0953fee5e368",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "53d0451a-f8e3-4232-bbc1-61864a53b812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5913e951-8b21-4f22-81e2-cbe0e28daee2",
        "cursor": {
          "ref": "8ae579f7-cda1-43d1-82ae-b9bbcb3bdce7",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a8de4e48-e1aa-46e6-a802-9d225c3aa1ce"
        },
        "item": {
          "id": "5913e951-8b21-4f22-81e2-cbe0e28daee2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "12487264-dd0a-4ed3-9339-f1557cc37375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b18a23-87eb-48c0-9be1-7614bfcb61ed",
        "cursor": {
          "ref": "62ad54b9-45fd-4cab-925c-9b70da25fa6d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6d9b20e4-88fa-4c33-b00f-54e992282614"
        },
        "item": {
          "id": "b6b18a23-87eb-48c0-9be1-7614bfcb61ed",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "55b47e18-a088-47e7-bfce-5e5ede64dcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e54eb5-88de-46c7-a796-a917ed14d841",
        "cursor": {
          "ref": "a2b0143c-5e8b-42b3-84eb-d766878ad987",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d5369ec0-8d20-43e6-a2cf-14267298107e"
        },
        "item": {
          "id": "79e54eb5-88de-46c7-a796-a917ed14d841",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "02ae36af-5a51-4859-9ac3-3597c3febb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01aa805-7b8f-4c89-9710-171042eb1c18",
        "cursor": {
          "ref": "d9d0c5fa-3d44-432a-8caa-50a792c1ad8f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1d86fcf5-2d56-4f97-ac24-1cc81184c542"
        },
        "item": {
          "id": "c01aa805-7b8f-4c89-9710-171042eb1c18",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9c0241f9-c75b-4e0c-8ec5-abc6699e96aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cd8e69-da69-4ecc-b73e-1ca856664334",
        "cursor": {
          "ref": "a8c039e4-118e-4fbc-8d01-c75b352967bb",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a6838856-2122-438b-bb68-3a6fe05a11aa"
        },
        "item": {
          "id": "46cd8e69-da69-4ecc-b73e-1ca856664334",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a67fbd4f-2fb2-407e-929e-3139b6c7cf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d6a40c-cdbf-4a7f-908d-d263c9830796",
        "cursor": {
          "ref": "c4b098b1-75c3-4b6a-b6db-ffc416768771",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4aa2e499-5ec5-497b-a766-05307bf93b28"
        },
        "item": {
          "id": "22d6a40c-cdbf-4a7f-908d-d263c9830796",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f4333653-744b-4209-80c8-24996969bf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfcc561-0a00-4ea1-b919-4cffde5385c5",
        "cursor": {
          "ref": "4ae95af8-1631-4f30-9bf4-b599c2cd2e03",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ed683cac-b9b7-4c42-960e-d003d8ac2eb1"
        },
        "item": {
          "id": "2cfcc561-0a00-4ea1-b919-4cffde5385c5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8617b62e-4ec3-4613-b262-e52ccb4c78ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d18b6ea-e5ed-4b1e-a69b-f461ea5cfa45",
        "cursor": {
          "ref": "d3d6e945-dbe4-4192-b1f1-7c681483f884",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ecf44ba7-c850-448d-87ef-c224af647d92"
        },
        "item": {
          "id": "9d18b6ea-e5ed-4b1e-a69b-f461ea5cfa45",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7847ce93-a371-4234-ad40-660a683696f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c61075-507f-4cdc-9449-89b29ba492fc",
        "cursor": {
          "ref": "f865d9b6-3541-4588-b4f9-77d8ae040252",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5714da94-e8c9-44cb-bf56-88425403f828"
        },
        "item": {
          "id": "77c61075-507f-4cdc-9449-89b29ba492fc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2f4f4977-9ea2-49d4-bda5-8cf81ac059b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ade030-b237-41d2-af06-0a7223032cf5",
        "cursor": {
          "ref": "56b9ce83-dc6f-4ef9-93d2-70c18e40138b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7f4aa24c-154f-4717-835b-5f9d7ba78299"
        },
        "item": {
          "id": "53ade030-b237-41d2-af06-0a7223032cf5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "255160cb-5359-4954-af5a-7a796ef71d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905e52a6-6383-4b8b-a87a-65e58a8a03ca",
        "cursor": {
          "ref": "1bfea7a7-dedd-4805-90d3-0692be40fc8d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "23973c4c-af2c-41b6-a3de-25b18790a460"
        },
        "item": {
          "id": "905e52a6-6383-4b8b-a87a-65e58a8a03ca",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b2537ca2-09c9-4be1-8208-d6f107bec897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fb4da5-522e-4165-b17d-ecdc169134ee",
        "cursor": {
          "ref": "788ae6ae-29e2-4e5b-9aeb-4a4bea75997b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "395c21a1-551b-42ad-9d8f-9665a56cd3c3"
        },
        "item": {
          "id": "d6fb4da5-522e-4165-b17d-ecdc169134ee",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "347e1baf-44a4-4661-9091-8f8c1512e9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c84afe-8639-4278-b589-0a3d03643e30",
        "cursor": {
          "ref": "d1ebf084-6a5d-46c5-9c75-cd39b2579a9f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "691af370-c3ea-4b40-9acb-8b289cb2bce9"
        },
        "item": {
          "id": "84c84afe-8639-4278-b589-0a3d03643e30",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8f985f32-4196-44da-918f-a96d3ab5c503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75d9e61-cf3f-4aaa-aee2-b4488021eec2",
        "cursor": {
          "ref": "b86c3c0e-2633-44c5-8690-e77a2eb620b8",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "906a7cb5-adea-4b9b-8fb8-a555bf591e99"
        },
        "item": {
          "id": "a75d9e61-cf3f-4aaa-aee2-b4488021eec2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "34b9300c-bffe-453d-ad1a-974ca27f96da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b513c3e3-200d-491e-97c8-3191041cc59d",
        "cursor": {
          "ref": "d1d25a87-8a75-45f4-8255-f83c502a4467",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a7d41d49-b6ac-458e-b9ff-99200753507a"
        },
        "item": {
          "id": "b513c3e3-200d-491e-97c8-3191041cc59d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "91ea8aa2-6a0f-4827-8ee2-789e562d2e67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68386903-7d0d-4f23-9cb5-a90630b9e89c",
        "cursor": {
          "ref": "3e524bbb-6319-4458-adff-62925dfe9459",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2b37b462-e8f1-497e-9719-e430245cae52"
        },
        "item": {
          "id": "68386903-7d0d-4f23-9cb5-a90630b9e89c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dbdb1320-ca68-496d-88e0-e66df6671490",
          "status": "Created",
          "code": 201,
          "responseTime": 7244,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aab0fa3-5124-4840-b8a8-aeb84a5c2164",
        "cursor": {
          "ref": "35577a78-d6ae-436c-ad0e-392c622f3500",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0c840bbe-269d-4e62-ba19-f49d8c331c81"
        },
        "item": {
          "id": "2aab0fa3-5124-4840-b8a8-aeb84a5c2164",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "57521ff0-b55e-4ddd-b7a0-5c550e71953c",
          "status": "Created",
          "code": 201,
          "responseTime": 6367,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4134116-4bb4-4a1b-a2ba-72aea02fd370",
        "cursor": {
          "ref": "cbcdfa93-0b0b-42aa-9f23-dadaaa49543a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a28ac7c9-abe7-45a5-b876-875efc404b96"
        },
        "item": {
          "id": "e4134116-4bb4-4a1b-a2ba-72aea02fd370",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "545ee306-2f55-4278-8aff-1783287128ab",
          "status": "Created",
          "code": 201,
          "responseTime": 6699,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adb9f07-24ab-4f04-b412-750c9d881899",
        "cursor": {
          "ref": "3d25655e-2ef7-42ce-a6ac-9a841adc3d4b",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4e67d3f1-7148-4209-8fd4-079ad7ad770d"
        },
        "item": {
          "id": "2adb9f07-24ab-4f04-b412-750c9d881899",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "02cd9766-69e5-4500-bd33-2207b01e6581",
          "status": "Created",
          "code": 201,
          "responseTime": 6046,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e838b8-cec2-4185-8124-da33df7c8138",
        "cursor": {
          "ref": "26776da9-7f71-45b7-aafd-85970f0559f4",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4e8c08cd-63da-4634-966c-efb6daf22e72"
        },
        "item": {
          "id": "74e838b8-cec2-4185-8124-da33df7c8138",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8561d3cc-01e8-4479-a23e-151559deeeb2",
          "status": "Created",
          "code": 201,
          "responseTime": 5984,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acefb2b-65bb-48b2-8f36-ea4b9ea124f0",
        "cursor": {
          "ref": "6a3234c9-3df3-46b9-9e76-34d722d9e6f5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1d1025d1-d320-48ef-b26b-a94bacb2a9af"
        },
        "item": {
          "id": "2acefb2b-65bb-48b2-8f36-ea4b9ea124f0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dea5e1ad-cb76-4853-a28d-207c72b866d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "5a25bbc2-d4f7-4cdd-bbb7-a652c88cef3d",
        "cursor": {
          "ref": "eb2997c1-72df-4d9e-bcaf-a494bea5edde",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7d3fe93a-97ed-46e5-a764-90ea92ca6b11"
        },
        "item": {
          "id": "5a25bbc2-d4f7-4cdd-bbb7-a652c88cef3d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "94ed8bc5-01a2-40b9-a63b-863936f7d4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6c971f-c849-4211-98e4-4429f591ccec",
        "cursor": {
          "ref": "d30cd838-b80f-4505-b0e6-18bbb84c7c07",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4ed39e45-e26e-4959-8379-44fdd64e5923"
        },
        "item": {
          "id": "3c6c971f-c849-4211-98e4-4429f591ccec",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "98c613ac-de72-4b9e-916a-b59291d58752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c2e7ed-fafd-49d6-8078-5c606073a971",
        "cursor": {
          "ref": "59544031-2bbc-43ae-8e54-a3e4ef85f45d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9912d0ec-9a0e-4394-9de2-1e7b1a0a53f3"
        },
        "item": {
          "id": "68c2e7ed-fafd-49d6-8078-5c606073a971",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "550c881f-b300-41ae-8ba9-b4c3ce88517a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09a496d-41be-44d7-a9fc-38b629901f13",
        "cursor": {
          "ref": "3e605661-08b9-4a52-ab26-cd573ad55c1b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "46888d9c-c8dd-4609-98d7-2f1cad9f7880"
        },
        "item": {
          "id": "e09a496d-41be-44d7-a9fc-38b629901f13",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2cc17a95-50b8-4c2c-a87f-501d83f884d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b595e0-86b7-4774-9b1c-51c5ddbc8f5f",
        "cursor": {
          "ref": "03aaab8c-f2b7-47ac-aa4b-c3750744528c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c70c50c1-1c51-43cc-80b5-a27bdf93142d"
        },
        "item": {
          "id": "a5b595e0-86b7-4774-9b1c-51c5ddbc8f5f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "39154d2c-863a-43df-88e6-63787d1a0a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55ec62c-5ffc-43d2-b5ea-90aa7db7b412",
        "cursor": {
          "ref": "d2809f3d-9106-4599-ba46-8b1e31d8e747",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "930fc8e3-f2bf-4268-bd69-a57ada726892"
        },
        "item": {
          "id": "f55ec62c-5ffc-43d2-b5ea-90aa7db7b412",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "566e7c01-3da4-42eb-b1a1-4abdf85d5228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4422348b-085f-4ea6-b8b5-46b391ce6901",
        "cursor": {
          "ref": "4891a1cd-0d21-4f1c-a432-7517ca303d50",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "44c12f70-39c2-42d6-8d14-3ae76ca82774"
        },
        "item": {
          "id": "4422348b-085f-4ea6-b8b5-46b391ce6901",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b8a2dc32-34f6-4bfb-8b5e-c399017fa176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b915b08d-bb95-4154-be05-681de30ebf73",
        "cursor": {
          "ref": "8687136d-3ffa-4c70-b53b-444f36c9d561",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3aa39bfb-c188-4d67-80ea-4c9be0dd2e02"
        },
        "item": {
          "id": "b915b08d-bb95-4154-be05-681de30ebf73",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "955e0bbb-dc4b-4c59-8d8d-5b60d6bb7a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8566a2aa-5762-42c6-9c2c-cd81a5f94749",
        "cursor": {
          "ref": "4bdcfd49-9b45-4120-a53d-f4878b63f079",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "216fc9b1-7919-4bfd-9d2f-ce4a7c648f1a"
        },
        "item": {
          "id": "8566a2aa-5762-42c6-9c2c-cd81a5f94749",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "49e39dd0-0fd0-4204-9b63-e5446b464a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbee75f0-ad48-4bfe-87cb-c2ab948ae705",
        "cursor": {
          "ref": "81646f6b-64e6-4aef-9dea-4632b4a21c04",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1ce70aa4-272c-4472-80cf-4788bd8652ae"
        },
        "item": {
          "id": "dbee75f0-ad48-4bfe-87cb-c2ab948ae705",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2b76c4d8-ec06-4d99-8f50-623d622626e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbd0be1-de50-4d94-942b-9df6f11e4ab2",
        "cursor": {
          "ref": "14fcf90d-0b68-4069-a864-6930a024a3c2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8704be89-de93-4dd7-be1d-e1b403c6e121"
        },
        "item": {
          "id": "5bbd0be1-de50-4d94-942b-9df6f11e4ab2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4741a2e4-bdd3-4ad1-9e8f-133e91a6e09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf0b61e-462c-47ce-a1ec-403b310b7244",
        "cursor": {
          "ref": "1047fbbb-5def-4809-8f55-bfabebcfeafb",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb014c18-355e-4272-83e2-b261fa65b11e"
        },
        "item": {
          "id": "bcf0b61e-462c-47ce-a1ec-403b310b7244",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "09f7b522-c811-4aba-ba78-f8509b383be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f2274-be15-4874-bc3c-5f4e91edf4dc",
        "cursor": {
          "ref": "f7727521-de9f-440e-9b0c-0582f3809240",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b0c0d294-6fc6-4997-9291-5b1453a3a051"
        },
        "item": {
          "id": "a64f2274-be15-4874-bc3c-5f4e91edf4dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6629e29d-d758-4a97-9389-f87db2e70594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535e6eb4-124b-4fc6-978c-51b815ad9cff",
        "cursor": {
          "ref": "f308c2b0-dcb4-4b49-bfd0-42c2c07f6b8f",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4f0cba1b-3c94-4736-b702-6efa40d31641"
        },
        "item": {
          "id": "535e6eb4-124b-4fc6-978c-51b815ad9cff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1c03b8bf-ba6a-4a61-9467-bd526073e4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e76911c-8ba7-48d1-81c8-efc577cb28cd",
        "cursor": {
          "ref": "23ce5571-6c38-4301-919b-debcd63f88cb",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "27604180-f872-44ae-9d3a-de03fdc21629"
        },
        "item": {
          "id": "1e76911c-8ba7-48d1-81c8-efc577cb28cd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e07ae0a8-7d19-49c8-bdd5-13b2ddad7aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3471161-4f6d-4a02-ad4a-ec697f1114ff",
        "cursor": {
          "ref": "0d76ba3e-17b7-4106-9582-759f43acb8f1",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5792d88d-9f6d-48ef-b3e5-97be25456c75"
        },
        "item": {
          "id": "a3471161-4f6d-4a02-ad4a-ec697f1114ff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "12c17375-56b4-4d43-be20-bcaa4ce739a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcf759b-e06e-4652-b4bd-18962ee9c408",
        "cursor": {
          "ref": "4261956d-2de6-4552-9c13-03d7420d15d2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "99ebc0d2-8af6-4fa4-b894-3bb641c3deb2"
        },
        "item": {
          "id": "abcf759b-e06e-4652-b4bd-18962ee9c408",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cb170469-bacc-4c02-b275-c36e4c279712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb33d21-8301-4cf0-88c3-7aa149136d01",
        "cursor": {
          "ref": "6d2ac30e-11b6-4561-a701-5e99b050326c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9c9f493a-59e5-415e-9a2a-b676875899e4"
        },
        "item": {
          "id": "1bb33d21-8301-4cf0-88c3-7aa149136d01",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d83de063-0e4e-4508-b220-4f7b839d9cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cd7123-4630-4026-bb2d-345f065310a6",
        "cursor": {
          "ref": "90fee48a-3c6a-475f-94e8-087a5f779fd5",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "028a2219-1ccd-4bff-ac22-ddc752752bc3"
        },
        "item": {
          "id": "b2cd7123-4630-4026-bb2d-345f065310a6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9179f3b4-bd97-4d75-890c-59eda47c8a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ab8659-e83d-480d-ad7f-f09740e76c2e",
        "cursor": {
          "ref": "02a321c7-9afc-4d45-89da-7c4ff4906ec1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "51ee27bf-ef66-45aa-8314-860da2460b35"
        },
        "item": {
          "id": "16ab8659-e83d-480d-ad7f-f09740e76c2e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6c6acaa1-66fd-4a54-9fcd-46b2a99b10a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e4aaf7-8f97-4a8d-8cdd-00df5c6951ba",
        "cursor": {
          "ref": "b50ee3f0-d441-4e22-8cc0-94db3e455457",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dda65cad-e08c-4283-897a-eebd77e2a1d2"
        },
        "item": {
          "id": "a7e4aaf7-8f97-4a8d-8cdd-00df5c6951ba",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9e36a0ce-3682-4599-9337-8304b7218411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cd4c32-9b1a-405a-afc7-af47a5a6b822",
        "cursor": {
          "ref": "5e5ccdc5-d71b-4bca-bd17-4462a4753402",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "525bd24b-dffb-4eaf-a0a5-62ce2780cf5a"
        },
        "item": {
          "id": "f2cd4c32-9b1a-405a-afc7-af47a5a6b822",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b899a9a8-39d5-4b52-b78c-f6fbb6d73d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2ec4a6-07b8-45af-91cb-90250dd79dab",
        "cursor": {
          "ref": "0501d5db-7184-483b-9137-b9b365348cc3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c256544b-958f-4188-95d9-d2a74e3c1be2"
        },
        "item": {
          "id": "6a2ec4a6-07b8-45af-91cb-90250dd79dab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bd34d900-04f8-4871-babf-dc5783427a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2df12f-7b62-409b-aef5-7b6244c9e430",
        "cursor": {
          "ref": "ff0d385f-b721-4171-811e-bab0e371d8aa",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "83b753cb-3225-42a6-8acc-a4a45bdffaf9"
        },
        "item": {
          "id": "fa2df12f-7b62-409b-aef5-7b6244c9e430",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "43d5e961-c440-492a-92b3-d454e110b489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1023ba54-e7a1-4b3a-ac96-f03ed76db8f8",
        "cursor": {
          "ref": "9918669b-7244-4dab-8d58-1510c7bce7fe",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cf1d6ff5-d29f-4529-b646-077c04566c41"
        },
        "item": {
          "id": "1023ba54-e7a1-4b3a-ac96-f03ed76db8f8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bf06455e-9a2c-479e-81df-be741582a078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f436d4d-7d63-4a42-9070-8f3cbff4f664",
        "cursor": {
          "ref": "b24987fe-7a35-4785-9600-590e9ab2ca3a",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "423d94a4-ab2d-4a27-bc04-78aaaeba87f9"
        },
        "item": {
          "id": "0f436d4d-7d63-4a42-9070-8f3cbff4f664",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c0bd74ff-dae6-4018-bc36-e0f64c7994ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6be9ec-fbf6-40f0-a050-94ca0a2b7e68",
        "cursor": {
          "ref": "cbeef8ef-883b-41d4-af21-d32d64c311d3",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3b0b6f37-196f-42b3-833b-b2ed407fe843"
        },
        "item": {
          "id": "3d6be9ec-fbf6-40f0-a050-94ca0a2b7e68",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "53bf6fe8-23bb-4e1e-a030-093f84590717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb7f4a1-7826-455a-ac28-12830bc7c7e8",
        "cursor": {
          "ref": "e666262c-31e9-439e-9aa9-61dd71664f40",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1311edfb-b174-4c20-b1cd-994c428ff58d"
        },
        "item": {
          "id": "adb7f4a1-7826-455a-ac28-12830bc7c7e8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b3dc93ad-af02-40a3-9056-3e11ab6c9ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3359b61e-b9a2-4663-8b10-ce3d59384ed7",
        "cursor": {
          "ref": "d5885f2a-2251-4092-994b-9e8a7155f333",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4a55ecc9-b5ac-4197-a4b0-4bdd7ac0a2f9"
        },
        "item": {
          "id": "3359b61e-b9a2-4663-8b10-ce3d59384ed7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d67ab731-9493-49d6-8274-3f7171e0295d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12379a1-83ac-4b8f-9811-c20bc3e8c84f",
        "cursor": {
          "ref": "db8424e2-1b4b-41c8-8089-1ebadd3de797",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fd739a61-ff10-4e38-8346-0e36e864616f"
        },
        "item": {
          "id": "f12379a1-83ac-4b8f-9811-c20bc3e8c84f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fcaaf4ac-5e04-4357-9675-8da48327c0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b9501c-5873-4ad4-b39d-535d70d10831",
        "cursor": {
          "ref": "ad6f4d7e-3a0e-426b-bdb6-97991c5f26fd",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "80248253-9a33-4a49-93a0-e675c7e3c3a6"
        },
        "item": {
          "id": "d0b9501c-5873-4ad4-b39d-535d70d10831",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a065fd6b-a8a7-416b-b51d-6167adf2fc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937f7414-6596-43f8-a085-f89b2ea4aefb",
        "cursor": {
          "ref": "73064efa-6d9c-4fe8-9ea1-1bbb88f99d8c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "54c04533-8319-49e9-8a4a-57d1da74dc3e"
        },
        "item": {
          "id": "937f7414-6596-43f8-a085-f89b2ea4aefb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1a4c99d1-b60b-4529-bdc4-029db756691b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae52d92b-6995-46b6-ae77-791e0b7dc557",
        "cursor": {
          "ref": "e4e396f7-a454-4001-b0e4-ac5245b061dc",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a2eb9091-410f-4758-8ba8-f03788597a1e"
        },
        "item": {
          "id": "ae52d92b-6995-46b6-ae77-791e0b7dc557",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1e288ba5-7876-4d51-9bd8-5eaf63d82ed5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a75311c-5016-44c2-9b94-e239999ff6e6",
        "cursor": {
          "ref": "7028905d-2211-4201-8fad-b43f901ea44d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "302db4f0-bb1d-4bb6-9d53-69daca530082"
        },
        "item": {
          "id": "5a75311c-5016-44c2-9b94-e239999ff6e6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c446db09-8595-4dd5-9a1b-01bcd3a65637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3b1530-416b-409f-b373-4846b06e0b85",
        "cursor": {
          "ref": "7a7e61c0-f7ae-411f-8f19-588d433f0250",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7fd304a9-dc08-4e15-aa9c-da831c67beac"
        },
        "item": {
          "id": "9e3b1530-416b-409f-b373-4846b06e0b85",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc15502b-323c-44c9-9127-718eb7d46df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fc7900-efcf-4f19-b934-953be512cde4",
        "cursor": {
          "ref": "c09100cb-68ee-40e9-b37a-e0bca50c19b7",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0d5ca2cb-bbda-4c21-951b-9bdabb3b1444"
        },
        "item": {
          "id": "92fc7900-efcf-4f19-b934-953be512cde4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6249a572-64d9-4b10-909c-dc77d446bce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66157fa-edaa-4659-b062-8d0c7acd84bb",
        "cursor": {
          "ref": "d7cab2bc-7e5a-49a3-887b-84bd08d78706",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "85f790b7-f932-47ac-865a-4c30cabeb9f0"
        },
        "item": {
          "id": "c66157fa-edaa-4659-b062-8d0c7acd84bb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "96d28684-78be-4732-a299-e539315404e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa67f35b-252d-4241-94ee-2ffc52633594",
        "cursor": {
          "ref": "3616479d-e036-4492-8679-8ebcd0dc5366",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "eed7e5bd-1a20-4f6f-b192-01eabc8b4d28"
        },
        "item": {
          "id": "aa67f35b-252d-4241-94ee-2ffc52633594",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68114ab9-79da-4d25-b56a-025bc2fb40a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74da4fbc-0d7d-4fe2-b738-995ca6de546f",
        "cursor": {
          "ref": "6e3294db-2f15-4d58-b7c5-65a98a434919",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "de6893cd-4256-479a-9adb-09483dbaec99"
        },
        "item": {
          "id": "74da4fbc-0d7d-4fe2-b738-995ca6de546f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ac4bfd53-8650-4247-8fd1-ffe39d99bc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709d0da2-a160-4163-86b5-98cd73457c8e",
        "cursor": {
          "ref": "8dc0ee4b-7d51-42e0-8517-09338d49d29a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a08d5df1-f578-40ca-9e82-97272896f9a2"
        },
        "item": {
          "id": "709d0da2-a160-4163-86b5-98cd73457c8e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "158d01c4-77dd-46ed-963f-2374036cf8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7216feb7-e41e-4a7d-ba6c-ef23598c3a35",
        "cursor": {
          "ref": "4c9d1c9d-e825-4b82-a29e-15e08e027e73",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a2840f0e-3a80-48d1-a5b9-2d23be0edc3b"
        },
        "item": {
          "id": "7216feb7-e41e-4a7d-ba6c-ef23598c3a35",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b1931ea-4f1f-4344-a42b-06d6cbe9a7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35abc307-974f-4468-b14b-ece28e93b523",
        "cursor": {
          "ref": "ea43e029-7046-4a30-8de4-5cd959e77113",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "81b0814f-cf18-400c-a36a-9fa9ebe7cfb7"
        },
        "item": {
          "id": "35abc307-974f-4468-b14b-ece28e93b523",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7b445614-ec18-407b-a8cd-e19e8d3c68de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986b7168-808c-45af-881b-d40857474aa9",
        "cursor": {
          "ref": "189ebadd-8dfb-4ef8-877a-f8cf9596e1f9",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d854665f-ea9f-46ec-89ae-daeca6b57d46"
        },
        "item": {
          "id": "986b7168-808c-45af-881b-d40857474aa9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5e51d3e3-449f-46d9-b893-3546d9e74aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b6f884-2ad5-4ac0-ba11-163999c892e9",
        "cursor": {
          "ref": "8c119290-7e49-4df8-b259-e5e4936b3837",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a339761b-a779-4352-b213-c36205f9efc8"
        },
        "item": {
          "id": "f3b6f884-2ad5-4ac0-ba11-163999c892e9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5f1164a0-e6c5-482c-a741-a13c0421e33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e988d93-7c76-4683-a526-805f3cffaf57",
        "cursor": {
          "ref": "c9ca6af6-3325-4c8d-9e1f-5707d2a219db",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e6645fc3-9b2f-47d1-8d52-d801e734b4db"
        },
        "item": {
          "id": "4e988d93-7c76-4683-a526-805f3cffaf57",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ea868864-c42f-46b6-9364-e048845c4a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb49d19-85b4-4242-8485-aa71d2dbe570",
        "cursor": {
          "ref": "1d8c6425-5b12-4a74-a69e-4a0f7d3cf5a7",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "feccce11-9e67-43aa-b8cf-9f6339ba1938"
        },
        "item": {
          "id": "4fb49d19-85b4-4242-8485-aa71d2dbe570",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b80bb231-451f-4a6c-9888-c479dcf8fb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4eacee-7caf-409f-8101-51525acd9889",
        "cursor": {
          "ref": "e7dc18aa-d1bf-4cb1-b786-2382775b11a8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6f58393f-e3c0-4e4d-9cff-5bcde0a37acc"
        },
        "item": {
          "id": "af4eacee-7caf-409f-8101-51525acd9889",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a60ac441-9fd4-4f76-bd21-7db101e781ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33e17b5-f6d6-4bdb-a03b-c74025d592c8",
        "cursor": {
          "ref": "69b6bd6e-a5e4-440e-8f05-4ea03d921827",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4636bb55-2b3f-43b6-ae88-ff993860ec82"
        },
        "item": {
          "id": "e33e17b5-f6d6-4bdb-a03b-c74025d592c8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8c5ec4a2-4a0f-4b0c-9ddd-1548a7a126be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f466b1-d7bb-4bf7-8afc-21ba35f6348a",
        "cursor": {
          "ref": "d36fc0b8-d5b6-43ae-a496-474405af292a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1d95dd02-5d7c-4da1-9bab-eb441145cd45"
        },
        "item": {
          "id": "a0f466b1-d7bb-4bf7-8afc-21ba35f6348a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1873f2c1-4444-42ed-a615-62cb97c72cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249a9e2a-0653-4162-8f40-40a1786b938c",
        "cursor": {
          "ref": "be7e5072-5d58-48e7-980e-4b6dd35bbd75",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8a7e852d-20e7-4962-93ce-227526470b6e"
        },
        "item": {
          "id": "249a9e2a-0653-4162-8f40-40a1786b938c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "61a5805a-5862-41d0-b84e-1bc8b550b804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eb3975-c3e0-4b7a-95a6-352b30c39ca8",
        "cursor": {
          "ref": "3927c944-1844-4361-b4c5-985afa7d0d6f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5885a1aa-73e3-477f-8f08-c13c7b64784a"
        },
        "item": {
          "id": "47eb3975-c3e0-4b7a-95a6-352b30c39ca8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "53e81ef2-d3fa-4692-b86d-3c658e426d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3997741f-6265-4dce-9ba2-868cc49710db",
        "cursor": {
          "ref": "c5df5794-beb6-4e5d-b528-4b87c8881b3c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "17bcdeb5-c619-4dab-af82-b54b1ae7bad5"
        },
        "item": {
          "id": "3997741f-6265-4dce-9ba2-868cc49710db",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "04a30dfa-8d11-47d3-9f02-63d6254632a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f74e582-f6d1-4fff-844d-6ef4b44afbd9",
        "cursor": {
          "ref": "62f271b8-92c9-4d9c-a802-7e653dce84f1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b5c11b5b-85ef-4d38-9b6e-995a41b47b33"
        },
        "item": {
          "id": "3f74e582-f6d1-4fff-844d-6ef4b44afbd9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8dc88c13-c313-4634-b86c-731bc6e7ba0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf5152a-fcea-488c-8cb6-074fb10b73a5",
        "cursor": {
          "ref": "77145bfb-c6af-48cd-8fce-b87f501bab26",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1ed87fe3-c21a-4037-9419-c6d032f009f3"
        },
        "item": {
          "id": "8cf5152a-fcea-488c-8cb6-074fb10b73a5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e602bd18-1aa6-4719-bcd0-4f3306675b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406f45a3-8837-4689-a05a-8d0c9b0a570c",
        "cursor": {
          "ref": "132cdb2f-8419-43ea-86a3-5e98986328c2",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "333d2ab8-c3be-4e6d-b488-3b704e543f6d"
        },
        "item": {
          "id": "406f45a3-8837-4689-a05a-8d0c9b0a570c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f8a0b9ed-86f1-4e93-b089-a6eadedf24bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecf6954-181c-4bdf-b9e4-afec6b6c6fb3",
        "cursor": {
          "ref": "56157ad3-1716-44e8-904d-7cdae078672d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "64a5e89e-07ee-40c8-b829-00824bc23b4c"
        },
        "item": {
          "id": "0ecf6954-181c-4bdf-b9e4-afec6b6c6fb3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "13a6b9ad-75ce-40a4-bb24-232f288b3258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f60401-bdbb-49bb-a512-24369f183a99",
        "cursor": {
          "ref": "1e077f55-986d-432c-af8e-cb78eeb10e3f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8bfeac7a-10ee-4466-b8ad-e71801befa1e"
        },
        "item": {
          "id": "b4f60401-bdbb-49bb-a512-24369f183a99",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c29ca0f1-1a1b-41df-b8dd-54e158e5dea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48010797-e6b8-410b-8818-050392ea5a3d",
        "cursor": {
          "ref": "759c57fd-4826-4c8f-9de5-d62f2e769211",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f28f66be-febd-4469-9778-7c8ed78581a6"
        },
        "item": {
          "id": "48010797-e6b8-410b-8818-050392ea5a3d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f1174266-0cf7-439d-8056-aa1619f98e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82769e27-359d-4296-8344-2d9cce67d0aa",
        "cursor": {
          "ref": "3f8bf458-fc55-4ec5-b748-3ad606aa03b0",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "11df74ae-1050-470a-8770-066f034731df"
        },
        "item": {
          "id": "82769e27-359d-4296-8344-2d9cce67d0aa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2c9330a5-d799-4ab6-b6c4-529db2de2b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d99b019-7731-4cbb-8c10-5e029b1bddb5",
        "cursor": {
          "ref": "eba7914f-8afc-4139-84b7-607f47440c34",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "18c02511-54c7-474b-ba7a-b5d26d38e558"
        },
        "item": {
          "id": "9d99b019-7731-4cbb-8c10-5e029b1bddb5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "38691760-f237-417a-975f-51c7dcb3a5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc8733f-00ec-4bf3-bd99-37fa254454be",
        "cursor": {
          "ref": "b2026385-8236-447f-8f3f-8f58498cbebb",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f66f5e9e-7f11-4548-9f11-eab50b85aac4"
        },
        "item": {
          "id": "0fc8733f-00ec-4bf3-bd99-37fa254454be",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b7589863-de76-48e6-b0f6-aa7a2655290b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bb130d-c67d-4283-9f49-e9af2aa7010e",
        "cursor": {
          "ref": "d466a9da-96dc-4118-8ffd-579b28afc05f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "72d3e5f1-747c-455f-8a7f-df1da6caec6c"
        },
        "item": {
          "id": "c1bb130d-c67d-4283-9f49-e9af2aa7010e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "64df9fd8-4545-473b-bb83-0b5409f6ce6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02c1d16-1984-464a-be4e-c1733bab75df",
        "cursor": {
          "ref": "1c9fdcaa-99e7-47a2-8a4e-9d671d8ab30d",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7a1d1e41-105b-428f-82fc-5b250df0931d"
        },
        "item": {
          "id": "c02c1d16-1984-464a-be4e-c1733bab75df",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e39724f2-87bc-4961-9f82-68392aeaf9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ef8621-f042-4704-ba79-4e9f6324a09c",
        "cursor": {
          "ref": "558844cc-cfb0-4397-b1c1-9d2b9e89fced",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1e36f00e-5411-4ea0-8c65-9e0f1c180835"
        },
        "item": {
          "id": "21ef8621-f042-4704-ba79-4e9f6324a09c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5aa63676-913b-4528-aad1-88d07bd0e63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9feae2a1-cab5-4b9a-8766-ac5acfbc1ad8",
        "cursor": {
          "ref": "42d2beec-1884-421c-9e67-4dd9ba438116",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2b982f23-ef2f-46cd-8059-f9e7b7c86e5c"
        },
        "item": {
          "id": "9feae2a1-cab5-4b9a-8766-ac5acfbc1ad8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "acb2b6d4-6d62-408d-a63e-d107574c4ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d8ec34-0e0a-48d0-b885-4ddfdcd5c198",
        "cursor": {
          "ref": "43f73ec5-8047-4c12-a8ed-cd93c5596dac",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a6823ecf-6c51-4abb-8ff3-aafd9660d150"
        },
        "item": {
          "id": "94d8ec34-0e0a-48d0-b885-4ddfdcd5c198",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "30e7285f-4413-464a-ad3b-b8039e398e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08db6f76-22f2-46bf-9405-e7ac00a13b5f",
        "cursor": {
          "ref": "6f9e658c-fb38-4d8f-9b08-26872522ae1c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "37106bf4-6471-468e-9e6d-a37ca61ed67a"
        },
        "item": {
          "id": "08db6f76-22f2-46bf-9405-e7ac00a13b5f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "736fb5a6-ded4-4bf2-9916-a66cd873833d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf9e22a-4cee-44f0-a760-0d48e64c0413",
        "cursor": {
          "ref": "0ae45e34-891c-4069-bae4-9e2bb0adc383",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3166c1f9-1c9b-4f8b-b344-1c4e4044e9cb"
        },
        "item": {
          "id": "caf9e22a-4cee-44f0-a760-0d48e64c0413",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5bfe4cc1-d51a-4c6f-9ef3-f95afa55eca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58426db-d3f5-4f52-b65d-b4a673172bb5",
        "cursor": {
          "ref": "464f1e19-d4a8-42d0-8774-d289d3ddf8c2",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a0360957-29b3-4b6a-aa65-f517c19d6ad3"
        },
        "item": {
          "id": "e58426db-d3f5-4f52-b65d-b4a673172bb5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e9ca4379-dafa-478a-8d8e-acdbd6b078cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a39a0b1-27a9-4c34-9e61-be2b73c9b9be",
        "cursor": {
          "ref": "3907675e-7726-492d-bf2d-d439871369c1",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f6df71a8-20f2-4242-a5ff-c2743da6f050"
        },
        "item": {
          "id": "8a39a0b1-27a9-4c34-9e61-be2b73c9b9be",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1f479a1e-84cb-4be4-af6a-7dbf50171e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa13ee68-50d5-4dcf-9329-71830da3378c",
        "cursor": {
          "ref": "69a7e4e3-c9cd-4047-a060-ecd4b930dc1c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fc92cb89-8296-434d-ba72-036a4b23c64b"
        },
        "item": {
          "id": "aa13ee68-50d5-4dcf-9329-71830da3378c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7502b8b8-04d7-4dc8-a770-17b1bef0ea17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbde16b4-7c65-4b83-907d-6b96799dbeb1",
        "cursor": {
          "ref": "2e1c039e-11bc-484d-8e6c-e076ff1add7b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cb17b25e-9136-4229-8a0d-13b35334bfa4"
        },
        "item": {
          "id": "cbde16b4-7c65-4b83-907d-6b96799dbeb1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8ffdc0e2-275d-487f-ae77-ba317ac9a7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404e0324-4fbe-46e5-a34d-792391a11ad6",
        "cursor": {
          "ref": "19311ec9-32cf-4c0c-8a6a-8187851430e6",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "847f0c2f-ff08-4939-b22e-e20c32b5b5d4"
        },
        "item": {
          "id": "404e0324-4fbe-46e5-a34d-792391a11ad6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d9c8da03-b7ea-440b-9ca7-fc670bc7a12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925e483f-b1e3-46ff-94c3-89c9e780598b",
        "cursor": {
          "ref": "1045982d-fc66-4a6c-8bd7-b40dbfa34a3c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ca30a6ff-d6dd-4476-b504-82849a9716b5"
        },
        "item": {
          "id": "925e483f-b1e3-46ff-94c3-89c9e780598b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3193250b-9bfb-4d8f-b66d-da1c9fa146cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa0a324-c5ad-4c0f-a1f4-1c31c479cd95",
        "cursor": {
          "ref": "ccd65229-7ea1-4b37-85a9-e6a95c34d2eb",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "99164121-f15f-4f45-825f-fb8771ebab80"
        },
        "item": {
          "id": "7fa0a324-c5ad-4c0f-a1f4-1c31c479cd95",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e3d3cece-1e66-44e0-98d7-75af3df9ca09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3f396c-e3c3-4c9e-ac3c-28466c899b6b",
        "cursor": {
          "ref": "8b9674fc-6852-49c9-9ec9-fe556fb6dd6b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "21ec177f-e9d9-42c2-889b-a38d5287a6c4"
        },
        "item": {
          "id": "0c3f396c-e3c3-4c9e-ac3c-28466c899b6b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0f964a9b-b949-4769-9e1c-cfa8b94c8f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d68be1-5ced-4652-a5ed-01e27c084d5f",
        "cursor": {
          "ref": "2c326dc0-8a58-4c4b-a178-e8177295e629",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a8c52ed3-d5a4-4f0a-8451-89c3c38aa8b5"
        },
        "item": {
          "id": "38d68be1-5ced-4652-a5ed-01e27c084d5f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b16b3715-00f5-4281-8495-66e25364dd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177ccc24-2f11-4ba7-9d1d-9c28f6d18a4d",
        "cursor": {
          "ref": "c1ce474f-abc0-4e7f-bded-976508332870",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0abeafbc-1453-4d2e-bcf1-1d1c72b78740"
        },
        "item": {
          "id": "177ccc24-2f11-4ba7-9d1d-9c28f6d18a4d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "67851216-191d-4844-9600-156eadf428aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bd4b2d-229a-4dfa-9862-a5b5f0c18c85",
        "cursor": {
          "ref": "b1a8baa9-87c6-4f86-855f-88e2c62ce0f7",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c818db3f-8445-4fb2-b166-a563a0294e49"
        },
        "item": {
          "id": "e9bd4b2d-229a-4dfa-9862-a5b5f0c18c85",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c70f423d-fe86-4e86-b362-e426eb992001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f617af-95e2-460e-84f7-a48ac2cc17c6",
        "cursor": {
          "ref": "50496524-ca81-4d40-9567-daadf2818bf7",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "32f929fc-8f99-4c1a-888b-ef6eb58e7a03"
        },
        "item": {
          "id": "46f617af-95e2-460e-84f7-a48ac2cc17c6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "00a71a63-c969-4a65-aeda-69af14dbf2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495a7a59-7580-4096-8f1e-920c99e435c2",
        "cursor": {
          "ref": "a6d03832-0d73-4d3b-9e90-38d52702a19b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "85cbd31e-f398-43cc-ac14-41df6c9679e5"
        },
        "item": {
          "id": "495a7a59-7580-4096-8f1e-920c99e435c2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "322d7c1f-946d-42bf-ad8d-8ae18900702a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6e1bd5-54b5-450f-8e8c-8b6b28afac53",
        "cursor": {
          "ref": "3247b49c-6d75-4f53-856a-444d2a81c5be",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2d153316-e264-4ece-9466-1d4eb8dd0e8b"
        },
        "item": {
          "id": "4e6e1bd5-54b5-450f-8e8c-8b6b28afac53",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0409106e-9f68-46de-a0ff-cf6a8bdc7b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00072c1-201c-411a-89a9-6ae5e731e260",
        "cursor": {
          "ref": "46fb9039-0b0e-4e6b-be68-8f4488d15658",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7474ef37-0547-49e9-9a1b-c603ec403e0c"
        },
        "item": {
          "id": "f00072c1-201c-411a-89a9-6ae5e731e260",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6e40e0ee-8a12-4170-b2d2-2b1ff10da499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cbf7cf-294e-4f40-8a32-28dbea0f070e",
        "cursor": {
          "ref": "1f6051aa-8a90-4885-a27b-df5272a71115",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f21623af-0104-4a4b-9601-7242801b56d6"
        },
        "item": {
          "id": "b3cbf7cf-294e-4f40-8a32-28dbea0f070e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "759681a3-2e88-4a56-b99d-c5fa4035d1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cb12dd-11c5-4d57-98fe-b5c66911047b",
        "cursor": {
          "ref": "1cea62fe-b602-4288-93b9-974fc82b2af4",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "999ae17b-8b36-4c8e-8b77-22dd98789b77"
        },
        "item": {
          "id": "31cb12dd-11c5-4d57-98fe-b5c66911047b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4c3c33e8-02a4-499e-81c6-fddbb03537a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003b7650-ae45-4c50-abd6-8e6ef7157139",
        "cursor": {
          "ref": "d96d9e63-2829-40e7-b77d-054fbad04be5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "159e806a-346f-4be0-9a01-0728a6a24549"
        },
        "item": {
          "id": "003b7650-ae45-4c50-abd6-8e6ef7157139",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1f537aec-f044-4bad-b74b-ce50147d543d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dad3ee-6a0f-4314-b259-704ba81ef0e0",
        "cursor": {
          "ref": "abb68f02-3e7e-4982-92a3-81e7952c5806",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8151d3b7-500d-4240-9155-bdcc4581b8d5"
        },
        "item": {
          "id": "15dad3ee-6a0f-4314-b259-704ba81ef0e0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5540ff74-f40f-4912-bca4-3e4ee7b8fcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c71f70f-2b9a-401d-b6f6-b6b1c456db95",
        "cursor": {
          "ref": "1917f741-8e25-4874-9c2c-c6016c444f3e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "97d4f6f6-98c0-4184-b26c-565d50671897"
        },
        "item": {
          "id": "2c71f70f-2b9a-401d-b6f6-b6b1c456db95",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3a1e429a-e3bd-4dde-80f3-8fe46f484152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8b68cb-a27d-4b2f-b3d5-54d837b109e2",
        "cursor": {
          "ref": "8616a5b8-65e0-4c67-9c62-e001b6a3a1d1",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dadbcbff-0ab9-4fa2-92c9-456e2ec8af24"
        },
        "item": {
          "id": "5a8b68cb-a27d-4b2f-b3d5-54d837b109e2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "904dc654-de4d-4642-a51c-e006b4c2d996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733c72b9-9e75-4096-87bf-8d849cc5e415",
        "cursor": {
          "ref": "d0f15ba2-0ef5-4061-a45d-dcd2fb9e53c3",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "15d0c0b9-7a6e-4b58-a423-517e23de7633"
        },
        "item": {
          "id": "733c72b9-9e75-4096-87bf-8d849cc5e415",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8f376b4d-dbc8-4423-be88-26dbeb89935a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddd64cf-6ad9-48e5-a495-622fb95d4e35",
        "cursor": {
          "ref": "98cd39a0-6d0f-4c13-84de-08ad3568c3a4",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b549a481-ac45-4eb6-b38f-c7ae0edd6942"
        },
        "item": {
          "id": "6ddd64cf-6ad9-48e5-a495-622fb95d4e35",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dd501449-2c14-49f3-840f-417705935538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2300b9ef-d680-43e9-a95a-43be7f3ccf60",
        "cursor": {
          "ref": "6b8e8010-4cd5-4b03-8f9f-79baf0b48aa2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f73dbe59-8a2d-4591-9d80-cac709e0c8c8"
        },
        "item": {
          "id": "2300b9ef-d680-43e9-a95a-43be7f3ccf60",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0a8539a3-d7c0-4473-8522-8ad4184d1622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee502b48-755e-48c5-9c64-5f67df16ba22",
        "cursor": {
          "ref": "37fad1ff-33a2-4386-8a2e-235deb3effa8",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f5b1b753-ca96-4cdc-bf8b-02ce797bbc6e"
        },
        "item": {
          "id": "ee502b48-755e-48c5-9c64-5f67df16ba22",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a67182e2-6010-42b4-a3dd-c0387963fffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757020bc-cbcd-409a-8bf3-e4a024e76d7b",
        "cursor": {
          "ref": "8bf1b7fb-d55d-469a-bd23-b6890e0a3cfc",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "44d78108-3dda-40e6-9373-059872fdefcf"
        },
        "item": {
          "id": "757020bc-cbcd-409a-8bf3-e4a024e76d7b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb184362-e10f-4daf-aada-9c8a77e708e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0307a6-eaf4-49e2-b1c0-a3353432c504",
        "cursor": {
          "ref": "6041043e-824d-4f03-8f14-9e0aac723169",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e4fd134-2e4e-48ec-849b-adca1235772a"
        },
        "item": {
          "id": "0d0307a6-eaf4-49e2-b1c0-a3353432c504",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ee85095a-59eb-4008-90cf-254f096ce769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51988af7-e286-468d-bf4c-e62504fd4c80",
        "cursor": {
          "ref": "043125d8-955e-40ad-ab0f-2092fabe1dff",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "00ac375a-7863-4fda-a77e-b19abafcbc80"
        },
        "item": {
          "id": "51988af7-e286-468d-bf4c-e62504fd4c80",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d4f14a4f-6bee-4fb7-a1d9-7b74d7ffb549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f87744d-8e3f-48f0-96f9-51f468a07684",
        "cursor": {
          "ref": "7a31ca97-8665-42ca-bf5a-8f969ef5e844",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dbd45616-8661-4a1f-8aa8-53f08cc5e41c"
        },
        "item": {
          "id": "9f87744d-8e3f-48f0-96f9-51f468a07684",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2f47d63d-26d1-4c9b-94bd-762653c55a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a15f463-e673-43b8-885e-22eef2e7adcf",
        "cursor": {
          "ref": "4acad187-c2fe-4263-8956-816234b5cd8a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "73470385-13bc-4e10-a53b-9056da79d7da"
        },
        "item": {
          "id": "9a15f463-e673-43b8-885e-22eef2e7adcf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b5d1c18e-7d90-46fb-82da-4c3cf5038a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c244d5a-e0ed-4966-aace-34e9e0bd8a77",
        "cursor": {
          "ref": "fcce6fb0-427c-4aa1-b6cb-bfec8b795078",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "04740e5b-bd44-4813-946a-ec1aaf41915f"
        },
        "item": {
          "id": "2c244d5a-e0ed-4966-aace-34e9e0bd8a77",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "92d4cdd2-7af1-4ca5-95b5-e94e3e21d29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd76a9d-1703-4f85-9065-9198d0b58876",
        "cursor": {
          "ref": "97a3a55c-a331-4ebd-80c1-4dc3f66b7a4a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "995c1afc-95f0-4feb-92d1-47d5008c9385"
        },
        "item": {
          "id": "4fd76a9d-1703-4f85-9065-9198d0b58876",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e7327631-a5ff-42c7-aaa6-99788cdc9429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee7a240-c864-420b-8d0d-41dc0765959b",
        "cursor": {
          "ref": "772d0f9c-becc-4c8b-9eb6-ba39b61054b3",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e5ece240-faf8-4527-b565-7c5d2079dff8"
        },
        "item": {
          "id": "4ee7a240-c864-420b-8d0d-41dc0765959b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "157b9e50-9c1d-42f6-aa88-be291c240266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb0db15-b9f0-4df7-b6ed-ed07f0213556",
        "cursor": {
          "ref": "4d5ea315-8305-4abd-8cfa-5c180a86fd78",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a4354f48-757e-46d8-8724-6d7dd5e5cff1"
        },
        "item": {
          "id": "3bb0db15-b9f0-4df7-b6ed-ed07f0213556",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "29345a39-1367-4f04-9c92-da1a47b3dc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c3446a-397d-45f7-aeaa-a1fa3ef6d6cf",
        "cursor": {
          "ref": "c5bd7253-7f3c-4e02-bf2f-a75dc2404d1b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6bccb3c1-502d-4504-ad6c-54b53193cb6a"
        },
        "item": {
          "id": "23c3446a-397d-45f7-aeaa-a1fa3ef6d6cf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fadcd02a-975b-4ba1-9725-b73d49b37e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597c124a-1625-4830-8dc4-bdbf8ce05f31",
        "cursor": {
          "ref": "f16e34d7-cb9c-479a-8bb9-8bd533652081",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7a5e9672-a275-44f3-956a-56811d1bb191"
        },
        "item": {
          "id": "597c124a-1625-4830-8dc4-bdbf8ce05f31",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6fc1afa2-211f-4987-b799-a540d8d834c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e173cec2-8695-40fe-a442-927b45141324",
        "cursor": {
          "ref": "835d9bef-fd4a-4287-9335-925328f4e553",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d001c3fc-8d75-4066-b444-5b825f165f2a"
        },
        "item": {
          "id": "e173cec2-8695-40fe-a442-927b45141324",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d55f06ea-44d1-43dd-a513-6baeacb82fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707d4207-93b6-4a67-9f62-de67c3181188",
        "cursor": {
          "ref": "43fae0b3-20e6-4482-a835-3bc97c515f1c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9f812ce0-1950-4edd-88c5-3c0978c076e9"
        },
        "item": {
          "id": "707d4207-93b6-4a67-9f62-de67c3181188",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b966f552-b49a-48d5-88d6-9deed03850de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3882d81-4bb4-401d-9eee-a8000d3086a8",
        "cursor": {
          "ref": "16eca0e2-b6aa-4c92-b8fa-d8e02e7d146e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8c9b9d2a-fed2-4bb8-9160-f435b9215c7c"
        },
        "item": {
          "id": "c3882d81-4bb4-401d-9eee-a8000d3086a8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "019e695c-0f9c-4cf8-a790-d231b2a2a62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794a6053-b1cb-4ec9-a573-8d513212be61",
        "cursor": {
          "ref": "c57fa05d-a30a-4ce8-9099-5391918046cd",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "54f643d6-c8b8-4468-9976-2b513f086601"
        },
        "item": {
          "id": "794a6053-b1cb-4ec9-a573-8d513212be61",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "db8f1e52-aaab-4658-9e94-a7762760ab58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336b525d-c803-44ed-bd1b-5faf1bc60b50",
        "cursor": {
          "ref": "90cee5eb-c93b-4ace-a066-0e6a33e66990",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "89e1bb07-47eb-4cbf-a038-318bb39c4d20"
        },
        "item": {
          "id": "336b525d-c803-44ed-bd1b-5faf1bc60b50",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "899a0c53-2022-4e8d-8ecb-fc2eca1d8819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f894128-d861-4171-8874-60fbe0746906",
        "cursor": {
          "ref": "6a19d12c-a822-4fda-b9da-3304070ae533",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "95ce8e13-ae94-4771-acb0-08a0b03b7a62"
        },
        "item": {
          "id": "2f894128-d861-4171-8874-60fbe0746906",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4f3cc625-fe29-44e2-a14b-009f51697ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f044443-9453-4a3e-b2dc-ffe453d2a307",
        "cursor": {
          "ref": "07754c0c-af20-46b5-893a-2b11c8cc4eda",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "281ef1be-4c08-42ce-8e2e-611c69884759"
        },
        "item": {
          "id": "1f044443-9453-4a3e-b2dc-ffe453d2a307",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d18c3e3c-b34a-43fc-8f6c-925889bde499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd47d0a-b4d1-493a-a4fc-749b39d1e4f2",
        "cursor": {
          "ref": "f8ff1598-59aa-41f7-989d-5438e6459e03",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0506236b-ef64-413e-bef8-14e6aca4543b"
        },
        "item": {
          "id": "fbd47d0a-b4d1-493a-a4fc-749b39d1e4f2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5a3e0507-d6ac-45d5-9f54-61fa4b5f2065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c1bcc7-a547-4cd7-8f02-8f41f48cc082",
        "cursor": {
          "ref": "b91a9c90-b4e7-4ad8-b7e0-8e7ec7d8b3f5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8c6d2066-91fd-449d-90c9-22a9e4f578fe"
        },
        "item": {
          "id": "11c1bcc7-a547-4cd7-8f02-8f41f48cc082",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "84ce08c3-d0d5-4640-a06d-207973fad8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a0d7f5-3cf6-46b9-b79f-f651442ad5a6",
        "cursor": {
          "ref": "18bcbc55-630a-4963-b692-9a287eb8d9e0",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ea73ed30-c2e5-47e9-9b34-615719a97403"
        },
        "item": {
          "id": "b7a0d7f5-3cf6-46b9-b79f-f651442ad5a6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7507edf9-3a02-4f3c-85bb-ff0780164adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff15776a-03b8-4163-981d-6fec2d4aeaed",
        "cursor": {
          "ref": "abb606c5-a129-4350-bd93-8911b0c48bb2",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7471978c-829a-420b-9048-67257e0b4929"
        },
        "item": {
          "id": "ff15776a-03b8-4163-981d-6fec2d4aeaed",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d9b1c79d-5f2b-4a84-8e61-950c717a901d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39448d3c-6b79-42d4-8d36-38b514a4d4bb",
        "cursor": {
          "ref": "499b8e19-6443-4b59-a8be-41c6436e3d50",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "37181d92-cfaa-40ed-a9fa-48f31376a755"
        },
        "item": {
          "id": "39448d3c-6b79-42d4-8d36-38b514a4d4bb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "78d6f637-c849-4eec-889f-4017bf6ae2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064324c7-a322-4ea3-8d75-86a8afcb45bd",
        "cursor": {
          "ref": "4be223c0-cee2-4185-b680-860871a0c5f3",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e0407d0d-6155-4a01-909b-140be03fc60e"
        },
        "item": {
          "id": "064324c7-a322-4ea3-8d75-86a8afcb45bd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "059cab5a-a174-43ff-8af9-315ff2c67565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc6e001-b78a-4c37-bfdc-093ba9d5958b",
        "cursor": {
          "ref": "b8cb8e75-002b-40b4-af16-554021f23d60",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e37fc5d0-6f40-4352-93ad-a91c73ccac84"
        },
        "item": {
          "id": "fdc6e001-b78a-4c37-bfdc-093ba9d5958b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c78c1b7e-3124-426f-b259-f9b344031472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a2475c-ddab-49a5-8ab7-1f1f21deec3f",
        "cursor": {
          "ref": "a174e5db-f680-4565-acae-cbc9f4bec4d9",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c6a14b3c-36e4-4d77-8b8d-872c68f5a38d"
        },
        "item": {
          "id": "65a2475c-ddab-49a5-8ab7-1f1f21deec3f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66b52eb3-eb40-49c1-860a-da3a2865fabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cc8fc0-2679-462e-bde6-64b50dbaae26",
        "cursor": {
          "ref": "eaab4b32-6d78-4ea2-8d93-55ad4ed7f121",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b37f2182-6c80-4401-845a-00465d8d0860"
        },
        "item": {
          "id": "c0cc8fc0-2679-462e-bde6-64b50dbaae26",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6aa1da3e-184b-4452-87be-e69557d19c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb88147f-d034-4521-9546-e27362d3016c",
        "cursor": {
          "ref": "cdc402ab-130b-4d30-9a42-a9ef9b288023",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4ea81afc-511c-4f3b-a962-977c0c644459"
        },
        "item": {
          "id": "fb88147f-d034-4521-9546-e27362d3016c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "830c6a68-690a-4893-a8bd-2208758e8958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c845f3-bf6b-4653-9b04-ab285bc07760",
        "cursor": {
          "ref": "e6695421-1f6d-4b15-8bc5-c1f508e6eda1",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9b218b35-0960-4c17-81f2-3e3ead0f809a"
        },
        "item": {
          "id": "02c845f3-bf6b-4653-9b04-ab285bc07760",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ea6d58e8-1ca9-4a71-86cc-9f5456176c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9103ed40-56a6-4263-9868-d06bf5cebb8e",
        "cursor": {
          "ref": "23ec2f63-493a-4f83-9b65-0f022264289c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1f06baac-e0b3-400b-97ab-ff1d2491c45b"
        },
        "item": {
          "id": "9103ed40-56a6-4263-9868-d06bf5cebb8e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e4f14e0b-987d-4cd5-9e5b-97bfc343a97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b717955-9f0a-4a4e-a54b-13b4b70138a7",
        "cursor": {
          "ref": "75570da9-f76a-48b6-aac1-3c91d572c779",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "680dad13-23a0-4708-8237-ca0d768ebaec"
        },
        "item": {
          "id": "4b717955-9f0a-4a4e-a54b-13b4b70138a7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3783ceaf-1c25-434d-8b87-1dbbcf749400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0461651e-2b2d-4cc6-a73d-51ff99c1b1ef",
        "cursor": {
          "ref": "38973297-b01a-4807-a788-41393d10ed71",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d358cff1-0b6f-45a4-a1af-3edd2113d5a6"
        },
        "item": {
          "id": "0461651e-2b2d-4cc6-a73d-51ff99c1b1ef",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d285c4e2-1f41-4eba-b12e-911d9cfb1890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fea097-61be-4858-9bd4-2790942aa991",
        "cursor": {
          "ref": "7496d477-0681-4797-83bf-3941cb0a15eb",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "341fc29d-abf9-4b8e-9884-b2f1e2b17052"
        },
        "item": {
          "id": "28fea097-61be-4858-9bd4-2790942aa991",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d8e3361c-0efb-4576-b0c0-d308bcb29114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef49b3c7-5136-4470-a9a1-357defc5a346",
        "cursor": {
          "ref": "cb5d5a71-d12e-4a28-ac71-96876d535674",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bac7bb80-6133-4899-a54e-5f9c775b90c5"
        },
        "item": {
          "id": "ef49b3c7-5136-4470-a9a1-357defc5a346",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "60ab4a8b-79b2-4ee0-9136-2ff1c48ee26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec3a7eb-26f1-4ab0-9a04-3f3d26255571",
        "cursor": {
          "ref": "b4c40bed-7608-48ef-b43b-0164eabdb472",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6e63bbb2-27e9-4917-b2cd-3bf4127c763a"
        },
        "item": {
          "id": "fec3a7eb-26f1-4ab0-9a04-3f3d26255571",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "162b44d2-afc3-4396-a2cc-0c40b0015a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10ec6a5-b679-4b7b-a22b-9b8c5179dc19",
        "cursor": {
          "ref": "20b63646-eb4a-4040-9013-95fc73613501",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "605b5bde-104e-41a0-9403-7c971897ec5c"
        },
        "item": {
          "id": "d10ec6a5-b679-4b7b-a22b-9b8c5179dc19",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a54420b5-59a7-41c8-a453-da25b9d577b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0cc22a-1f3e-4481-a502-7faa80a122d0",
        "cursor": {
          "ref": "93a53662-1578-4a4a-8b51-769ebe2f359c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "50aa557a-fb3d-49e5-a225-b0fb9ceac4f2"
        },
        "item": {
          "id": "9d0cc22a-1f3e-4481-a502-7faa80a122d0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "90e83863-ffcb-410c-acf9-a459b9c9a760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e3416e-46d4-4c8d-8778-6e1fbb745881",
        "cursor": {
          "ref": "d6519ac5-ace7-44c3-a679-32d2f877eb34",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8ba758f2-b6a2-4b49-b0a6-5c1fe445233a"
        },
        "item": {
          "id": "d1e3416e-46d4-4c8d-8778-6e1fbb745881",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "13366be9-08c2-419f-a280-1ac2c69206a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084e5223-aa7b-4234-b2be-3716ce7981d0",
        "cursor": {
          "ref": "bfd57829-f783-4bac-84ed-65751f5d8b78",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "21d0ca92-6d90-4a58-8084-e1d3e761697f"
        },
        "item": {
          "id": "084e5223-aa7b-4234-b2be-3716ce7981d0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c74eb67b-d0f2-4df6-a94f-8b4b77bcc109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b592d0b8-92f1-4aaf-a3c7-489df3a14829",
        "cursor": {
          "ref": "6453b260-8a43-4b8c-bcd2-b26a073295ea",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "972c3596-f117-4699-84fe-80de538e0472"
        },
        "item": {
          "id": "b592d0b8-92f1-4aaf-a3c7-489df3a14829",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "109e2e37-b4ca-4cc9-beb7-922ea7e07d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a0eab9-491f-4627-bd22-e8b6d57c6a69",
        "cursor": {
          "ref": "54272768-a145-4086-94ef-1d40c22ffbc2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9587717b-418a-4091-8917-6628dd06945e"
        },
        "item": {
          "id": "22a0eab9-491f-4627-bd22-e8b6d57c6a69",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "622095b6-fe36-4d06-9619-ae9e0d1df0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bc5d33-82bd-4b97-8a1c-5f811270d750",
        "cursor": {
          "ref": "eacaec2c-1808-4960-bb50-2853556e0d2a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0272d1f9-f385-4771-ac93-cb5caafe3b89"
        },
        "item": {
          "id": "e7bc5d33-82bd-4b97-8a1c-5f811270d750",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "768eeadc-5248-4fed-b6e3-fe3f5fec8356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787e09ce-ccfc-4cf1-a21a-2c5649dde819",
        "cursor": {
          "ref": "1063571e-486a-4867-9cdc-9eee8f68fbbd",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "125256b3-275b-4fe4-9cb9-57137a2f3917"
        },
        "item": {
          "id": "787e09ce-ccfc-4cf1-a21a-2c5649dde819",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "03a7da9f-2c1d-44f0-8ea1-8d676f53e1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fd0292-7545-4316-8eb2-c2fe8914c50f",
        "cursor": {
          "ref": "7faee3c8-2370-45bd-99fe-3f1e3d51aa7d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2cd6786a-5c70-465b-b39e-da5bb306c8bd"
        },
        "item": {
          "id": "d0fd0292-7545-4316-8eb2-c2fe8914c50f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "01073b3c-cf52-46d4-9381-647c10c1335b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c978ce-da2a-4955-a76c-01390e7dcda7",
        "cursor": {
          "ref": "58b3560f-e3d3-4045-82aa-5d4c89f601f4",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "84fc681a-5769-4e22-9740-33a9b8b43052"
        },
        "item": {
          "id": "d9c978ce-da2a-4955-a76c-01390e7dcda7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c5a26b9c-b040-4e5b-8218-b11c93ad0305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0dbcf1-5552-4a02-bace-33e196fc4131",
        "cursor": {
          "ref": "24b94b07-fb56-4c29-b28e-5b253d0bdc66",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8599546d-00bc-49a8-a660-75bd8551b4c5"
        },
        "item": {
          "id": "fa0dbcf1-5552-4a02-bace-33e196fc4131",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bcebdfa7-5864-473e-841a-e7836f05e0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc585782-930f-4011-914a-4682493a3ae8",
        "cursor": {
          "ref": "43a6abcb-ff2d-4491-acc3-c89e54c13cac",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ca1b73ac-8e42-4869-9b31-517b4979b51a"
        },
        "item": {
          "id": "fc585782-930f-4011-914a-4682493a3ae8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "948586e0-7045-4556-a215-7b50116a28db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291462ee-30b8-40c9-9386-42e703c0d040",
        "cursor": {
          "ref": "bd7f2433-60b9-4c30-b5d9-0922680ab11f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e8e70c5-ff27-49ea-b8b7-32110ce02e91"
        },
        "item": {
          "id": "291462ee-30b8-40c9-9386-42e703c0d040",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8b4bf03f-ba0a-441a-84e6-fe0c4faddf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9815c403-c61d-461f-bee3-827fa8ecb159",
        "cursor": {
          "ref": "9b4a0f80-24d3-48a4-8e3e-f41e2a2845f8",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fe732fff-d81e-4edb-9c6a-ce45cfba41ef"
        },
        "item": {
          "id": "9815c403-c61d-461f-bee3-827fa8ecb159",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3cd5295e-22b8-4a69-bc32-e20e50dc5885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029984ff-8304-4f39-ba24-ac11bf6bfead",
        "cursor": {
          "ref": "d9d63e4a-e0e6-46bc-8ad7-bfecb9b92f78",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5428df42-6a19-4c82-9652-f4105f527c73"
        },
        "item": {
          "id": "029984ff-8304-4f39-ba24-ac11bf6bfead",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bdd3eb96-f29f-4c31-84dc-9700d6eebeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4ee904-9de2-4db5-a4c2-d7a2a2f82276",
        "cursor": {
          "ref": "3b3e5f12-bced-405f-bde2-b1ddc3a0d203",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fff9c9f3-af63-4787-a53a-f61f79234164"
        },
        "item": {
          "id": "bb4ee904-9de2-4db5-a4c2-d7a2a2f82276",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a280340c-832b-4670-b308-f96fc8c57847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b0ffba-adf6-4470-93d3-f675c4a21d48",
        "cursor": {
          "ref": "ea3802df-0e28-4a96-97eb-53689713cad5",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dd205e9a-9dac-43e2-9c3f-6ac4596ce172"
        },
        "item": {
          "id": "96b0ffba-adf6-4470-93d3-f675c4a21d48",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6424eb95-be62-46c5-ad03-f3ffcf12ea29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b3ecc7-ff98-4302-be65-d938ae61fd4d",
        "cursor": {
          "ref": "9fba48a8-7a1e-4001-b450-19b161b47c8d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3dac90b3-9a77-4235-b972-abeae9e211e1"
        },
        "item": {
          "id": "75b3ecc7-ff98-4302-be65-d938ae61fd4d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "33c53d18-4fc4-46af-8b48-6f6811a6dffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dd37af-5e9d-44d3-83db-7d5f14bafe70",
        "cursor": {
          "ref": "40920434-b931-4dac-9b12-0e9fd9dc840e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1b9da38e-0f06-4424-a66a-fc46823a62ce"
        },
        "item": {
          "id": "f6dd37af-5e9d-44d3-83db-7d5f14bafe70",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ed0f4da0-d84d-49cd-89a4-b4088f848d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e45d6b-aa42-4ec0-905a-cd58755737fc",
        "cursor": {
          "ref": "b722ee96-dc52-4d14-bd1d-35b7822bdab1",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c991eea3-402b-4e9f-9b71-3f682c3ee90f"
        },
        "item": {
          "id": "b3e45d6b-aa42-4ec0-905a-cd58755737fc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0c2701fa-0bfa-4f97-b390-b90fa3ccf24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c643b2-4d11-42ab-b0ca-37bb9933debb",
        "cursor": {
          "ref": "363b6f5b-7df3-4378-8d70-16edc4f1c1c4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d8179456-56e7-4d16-9f2f-8488f5e3f324"
        },
        "item": {
          "id": "f0c643b2-4d11-42ab-b0ca-37bb9933debb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d328309b-b09a-4be8-af20-1c7069a75fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91d94f8-9d6d-494e-991e-b43e3ca50f97",
        "cursor": {
          "ref": "d7732bcc-8372-4b05-91b7-02b3aeea699d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bb553462-942c-4650-b09f-a754dd68b966"
        },
        "item": {
          "id": "f91d94f8-9d6d-494e-991e-b43e3ca50f97",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b310e6de-1158-45a9-acf9-7c996a68d106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1766bae-c3a7-48df-ac6d-421e901c886a",
        "cursor": {
          "ref": "d4806779-737b-4ba7-a1d4-6855b6a77978",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d11eb01f-d48e-4f12-888f-c34465e52e13"
        },
        "item": {
          "id": "f1766bae-c3a7-48df-ac6d-421e901c886a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2dcb84e3-c974-48f9-b3a4-b53b7ed29959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e76be01-5e70-4825-ad9b-126243748e8e",
        "cursor": {
          "ref": "c66bb704-849c-421b-9e28-ac2b62d2ee71",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "988aa72d-48ef-4ba5-95ac-496e6ecb888e"
        },
        "item": {
          "id": "5e76be01-5e70-4825-ad9b-126243748e8e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3d0a4f1b-8d6e-47a1-ad83-7d0c283f2633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a3be82-faa1-41db-a085-61025983e6d7",
        "cursor": {
          "ref": "05db73ea-cf4b-42f1-9c65-368c0ddaa9cd",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6ca98b3e-8c2e-442c-879a-f67b5e9dd7f7"
        },
        "item": {
          "id": "e6a3be82-faa1-41db-a085-61025983e6d7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "97d6b175-ab5f-448f-8384-a4935accb234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2469baca-19f1-439f-86f0-560244cda678",
        "cursor": {
          "ref": "72dd7ee4-b3fb-454d-bc62-c40f59f279cd",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2bea0631-4265-45ce-8cf4-0ad958626c16"
        },
        "item": {
          "id": "2469baca-19f1-439f-86f0-560244cda678",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "27b26975-bdfa-40a9-af1e-15720ed0e498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57a342e-2d1c-47de-a131-a53e87a43819",
        "cursor": {
          "ref": "5bdc009a-b330-4ddd-abad-bd1104f87ac2",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "929b6736-be6f-45b1-a94f-76e0dd9cdcfd"
        },
        "item": {
          "id": "b57a342e-2d1c-47de-a131-a53e87a43819",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9328062c-5c42-420b-bc06-ebbd9a8af276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6eacc8-993b-4df0-985e-814e5880e091",
        "cursor": {
          "ref": "2bdc93de-da65-4c39-beb7-78ceb6fa909e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f501dc84-940e-4829-9c5d-9c85c2b7192c"
        },
        "item": {
          "id": "ff6eacc8-993b-4df0-985e-814e5880e091",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c6109537-d0a1-4eb7-af26-38e805940849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1e3750-2881-41aa-ac44-d264b4653161",
        "cursor": {
          "ref": "9817f1bf-f264-4ad0-93d1-d6c7a5289b6d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e196aa91-4557-4d0c-8383-90fd32637073"
        },
        "item": {
          "id": "8f1e3750-2881-41aa-ac44-d264b4653161",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "58f45521-e886-4687-a67c-be849efc4db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ff80a4-1c1f-4e25-99cb-9fc8cb137c15",
        "cursor": {
          "ref": "a0f7cfed-33f0-46ee-8bc9-33bfe96a1e6c",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f5252525-4e5f-429a-988c-4ee96e91605b"
        },
        "item": {
          "id": "b9ff80a4-1c1f-4e25-99cb-9fc8cb137c15",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f1bc7335-d1c3-4c91-ac2e-9b190be33d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e272fbd-c98d-462f-9995-848b4a7dceb3",
        "cursor": {
          "ref": "307ff4ff-6f25-4661-8827-0ccd5eb43878",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "59f22dc8-6f67-484b-bd31-85d8c1570031"
        },
        "item": {
          "id": "5e272fbd-c98d-462f-9995-848b4a7dceb3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "db6d6e51-2406-49b7-b743-29ef1d7b0d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fbb4e7-954e-4c21-af3f-c93895b09d1b",
        "cursor": {
          "ref": "1ac2e23f-3d52-4d0b-a613-b4a659d1e0a3",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c1a362fb-5eb1-47f3-99ef-55d58280e8b3"
        },
        "item": {
          "id": "72fbb4e7-954e-4c21-af3f-c93895b09d1b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5a563284-4b2f-4740-a92b-035e95b7d4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5a98d1-88c1-4476-96b4-19218ae62f86",
        "cursor": {
          "ref": "773b4d05-13e8-45e0-baca-cf3299ad3713",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7db47b4c-87cd-48b7-9fa1-f0b4c2e28e24"
        },
        "item": {
          "id": "1a5a98d1-88c1-4476-96b4-19218ae62f86",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "09427830-e27e-4c24-b5c0-29b0b342115e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266cd009-8b02-4bd7-a9b7-93a5c2b76d71",
        "cursor": {
          "ref": "b4d13b18-f1b2-40eb-81cd-967d82ea8b68",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a3480abe-bb08-4d2d-b342-11047de8e61b"
        },
        "item": {
          "id": "266cd009-8b02-4bd7-a9b7-93a5c2b76d71",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "41fb2f33-ead0-4389-b38d-8e2468182c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdd1cd0-b48f-4495-982d-e97c2c680c18",
        "cursor": {
          "ref": "01b5f528-0df6-4bd1-8204-66dd7680bbe4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9dc87da6-c87e-432e-90e5-ce174e046757"
        },
        "item": {
          "id": "7bdd1cd0-b48f-4495-982d-e97c2c680c18",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "efd802dc-3ede-4e95-8c25-9d8160af4eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ac5833-5578-4460-8186-6e0c5d897c23",
        "cursor": {
          "ref": "e1667468-47d1-4493-b4d1-a9d761753717",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "97b7b10d-858f-490f-83c3-f8ffa55237ae"
        },
        "item": {
          "id": "14ac5833-5578-4460-8186-6e0c5d897c23",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cced6df0-191d-4b17-ba39-c62bce799853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac26ac9-19a9-4672-a1a8-8c94efe708b2",
        "cursor": {
          "ref": "e024cf0e-0cd6-4a0b-b86c-1de11849adb2",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d6d123b2-5224-48b6-9d63-048cb1ec31d0"
        },
        "item": {
          "id": "fac26ac9-19a9-4672-a1a8-8c94efe708b2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ec74eebc-1a20-4004-8e62-6888693e5561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08706d6-d0d8-406e-8a04-d7967208b506",
        "cursor": {
          "ref": "066f3052-21c2-4328-ac5d-20d4b22b40a7",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ced35537-af96-494b-8af6-ad3525bdbfc3"
        },
        "item": {
          "id": "e08706d6-d0d8-406e-8a04-d7967208b506",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6c0160bb-5d34-44bc-8d8d-a18596a4226b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467c49d9-b4cf-49cc-a285-0bfa2382a6a6",
        "cursor": {
          "ref": "e2d2a492-2c31-4f10-9f76-64614497f258",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c6710e9b-ba86-4233-9d59-7e34aef79e67"
        },
        "item": {
          "id": "467c49d9-b4cf-49cc-a285-0bfa2382a6a6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "04676669-53e7-4bf5-a4b0-737c0ad034b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23b37f3-c41c-4b8a-a3fa-63b863f12187",
        "cursor": {
          "ref": "3774cf99-12f5-47c8-815d-f36cb984459a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8eb3a8e8-c690-46cd-947c-b97ab6e0ae09"
        },
        "item": {
          "id": "e23b37f3-c41c-4b8a-a3fa-63b863f12187",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "36bd4865-79e4-4364-88a6-962334587fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb9c63a-f9ca-43c7-bb22-5f97b1154d57",
        "cursor": {
          "ref": "1e673b47-fba8-4a8e-a00e-c1c9fa368e26",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9b3f6526-a2df-4e98-8b58-94df1e9c6a99"
        },
        "item": {
          "id": "5eb9c63a-f9ca-43c7-bb22-5f97b1154d57",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "42f7197e-5e49-4b69-839f-b2aa66db0db4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea80d80-c9e0-4efd-95ca-ba99515026ea",
        "cursor": {
          "ref": "a8ba7870-591a-423d-8ae2-2eee29ab205f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2e795b2e-1030-4126-adb1-1945e6be4d72"
        },
        "item": {
          "id": "0ea80d80-c9e0-4efd-95ca-ba99515026ea",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "11bbb40b-a30c-4b74-95bc-bce70f7ed18c",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5a2175-cf01-4e7e-8a25-751bc10ba5df",
        "cursor": {
          "ref": "bc8b86e1-cc72-4f76-8633-57d72f5f4378",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6d2ae247-dbd5-4311-9d09-a06fbd5c74a4"
        },
        "item": {
          "id": "1d5a2175-cf01-4e7e-8a25-751bc10ba5df",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a9f116a9-4822-4979-9ee8-bdcc03c87a9c",
          "status": "OK",
          "code": 200,
          "responseTime": 1602,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe2f317-8c39-49a8-9afc-d925f9c3e65d",
        "cursor": {
          "ref": "2ecdf715-5a2e-4e22-b364-c409556ee89f",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5e318d43-9b8e-4a4c-866d-571cc7eb7bc0"
        },
        "item": {
          "id": "afe2f317-8c39-49a8-9afc-d925f9c3e65d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e936f2cb-35f4-4dba-882d-6fd8a5c5102f",
          "status": "OK",
          "code": 200,
          "responseTime": 1394,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e1e412-73c6-4498-bf16-1bda7691872a",
        "cursor": {
          "ref": "46b95a23-e030-4b10-b02e-1cdd523f9d74",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d39b2a57-f859-4197-af44-bb5dfe89ee21"
        },
        "item": {
          "id": "33e1e412-73c6-4498-bf16-1bda7691872a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fda8a54f-8296-4ab9-9b26-3d2a91b9cfa2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e1e412-73c6-4498-bf16-1bda7691872a",
        "cursor": {
          "ref": "46b95a23-e030-4b10-b02e-1cdd523f9d74",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d39b2a57-f859-4197-af44-bb5dfe89ee21"
        },
        "item": {
          "id": "33e1e412-73c6-4498-bf16-1bda7691872a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fda8a54f-8296-4ab9-9b26-3d2a91b9cfa2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70caa909-001d-4ac5-9f61-3923a156815e",
        "cursor": {
          "ref": "a5a24cfd-3c84-48d8-9e88-75a4dad036a6",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9f9d44c7-7659-4e3d-89d5-9e90b7925adf"
        },
        "item": {
          "id": "70caa909-001d-4ac5-9f61-3923a156815e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8afa8338-4ef3-47f6-ac24-20d8d0b3032c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6dd834-ba67-46d5-898f-0ed34f83f975",
        "cursor": {
          "ref": "cbeab66f-39dd-4d6a-a52d-be3244884f26",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5005afe8-fe8e-4f69-aaa4-2441f360d803"
        },
        "item": {
          "id": "4a6dd834-ba67-46d5-898f-0ed34f83f975",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8a4b9c87-eaf7-4bce-9e29-74cbebdff884",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}