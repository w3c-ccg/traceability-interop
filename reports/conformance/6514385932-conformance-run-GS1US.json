{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1282906d-9615-457b-bdb4-14aa07a4019b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ea6ce2db-0274-4431-a319-16447484f140",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "020b9ed5-a791-4187-9c8d-be4555cdbd99",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31a14ac9-d703-497d-87ac-9e11a6238b7d"
                }
              }
            ]
          },
          {
            "id": "f851057c-c79a-4ffa-a338-733bde510354",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d09ba90-728f-4690-9273-0bcaa8dd6373",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7020167c-a175-4d37-ad8a-541c1563c96b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "98df3d8a-7105-4b8b-9db0-1bf1832e93aa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d48a6c1c-247f-4a1b-877e-8c5b7e6e03a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91a9d269-03fc-4d88-a207-c437d370ec9c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eeffaf2-0538-4e13-96ad-19758bc5a457",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b97c819-4148-4b20-aae9-61e64688e708"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73b8a7a3-8d71-415a-92c0-c1de5b1a7438",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0282dbe5-2cfd-4376-8abb-afbbf64d9a9c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "883594c9-ba79-46c1-b02b-2d9ac85107b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66365961-d271-4d69-adbb-c1b12e0acedd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "199b701e-b822-4e0b-818b-959e05b956a7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "eca68d00-fc22-414e-9bc0-c0cc2086d351"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d66be57c-d4b3-4b22-878e-08e0524eda76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "888fe1de-755d-4fdd-937c-98e9926e80ce"
            }
          }
        ]
      },
      {
        "id": "0a7fdbc7-3226-47cf-bf40-99077433099f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "929dfbaf-4822-4157-aca3-d970b38134c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46f5d563-bd27-4b05-8313-0768dfb67413",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a44ba4a-ace7-4e15-b2ba-84d4a157228f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2e9a1a-41c8-4c0e-aa68-8040dfc82794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "302ebcf1-73b8-4b47-a540-17027f1f6670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c682b1fe-4c5a-4cc4-a2cc-312b13abd718",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17c3314-1c99-48ea-90bd-6cdf68392c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1edee75-07e4-44e9-911b-b993c973f85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a8d0f9-2f19-4cf4-a2ff-9547d8817c78",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b806db69-852f-484a-90ad-1bb17b474697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fbdae23-230f-40c1-8d76-f41ecb3c27f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "363200ec-70dc-426f-a922-0d7b028a8e8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dfc0a89e-e987-44a8-b230-eb4237d94839",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0670ead7-df2e-4d2b-bd18-bc1512748100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64c4c79c-18e0-40a8-90d7-0270c9e9f42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39e32b1-309d-43da-ab0c-629a612f6c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c5414a-efbf-4fbd-abd5-37314bf4183a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2b328099-872d-4d9e-9b9e-c10a65a659a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2a35c090-75ff-467b-a4e8-b8261aad37e8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9268bf3-cd95-4029-baa4-63d4de59826d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c83f0930-f98b-4073-9679-a07736c4dc68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e81a2332-786e-4711-a551-ff9b88ce1a85",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fc2e7aca-d5e1-44c1-8cc6-64f653a341c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "571a0448-c776-47b6-9be2-70d724e44c2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69a0ba1f-7088-427f-96b4-6e76b5553182"
            }
          }
        ]
      },
      {
        "id": "285c30dd-e41d-4399-a4ff-bca0fe9e6412",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b314bd77-cfd9-419e-a0fc-9dc748d9a759",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8842f3b3-e00b-47ae-aabd-61e5bb02c1f8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "35423062-ed5b-4cb6-8e97-a3f4922a8dc9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec46ffa-a2d2-4275-82ba-0c25e12c626f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d33a0bd-34c9-4e32-9c12-d29a84b003ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676ff7e8-ca01-45d9-84fb-a6745ecf62ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d0508e7-4ddd-4b1b-b9d1-658a18d2612b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8d7d4a-962c-40bc-b719-cb1567a41514",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3718a40f-496b-418f-970f-38e239b26d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be497213-5ba4-4399-a797-d3afd19ee679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5516354c-97a5-4178-850d-013dd8945154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98647369-7881-40e8-a1bb-6b64ddc603fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df90812a-2aef-4ecb-a4b0-daed7473e485",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8e3a2b-e3a9-4452-ac30-f67fe981b827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c61768-7428-47e7-8385-073c2ffc4363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fba5e9-15d2-42ed-9838-0bb3c9d817bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28470e17-e16f-4093-a9e8-48d6157df119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba960b7-cdf1-4216-b8ae-f1c7a766dfdc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e084cb46-89c8-4c9d-8415-41d4c5e6c931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6002622-5a43-4ce2-973a-7e6790d130af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ca8509-6572-4bf7-95ff-a41e185e0ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44f9bbe6-10e3-409d-8b3e-ac74efc52645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8402be-1d2d-4156-997f-9083b83f5b8b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f55f844-84b5-4284-9fa5-f834447dddfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a40cef5-d741-4c2e-ade3-26e987fccbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9af5f52-49cb-4b0a-9d66-6db9bdefdc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3173b9a7-10a1-48ff-b18b-1e1aceff63a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885a9b9d-064e-4c3b-acbc-d3647d4e2640",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28143cf5-777f-40d7-91ab-0213c09e9eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dceafbf-9037-4f51-a934-5326ac13f208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bc0c3c-a1d3-4f85-b38a-2423119a3a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5d4b7e7-11e7-45f6-89de-a97a611c941c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc5ec23-5807-483e-a97b-8d937d63983c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879dd635-8ed1-4dcb-9b6c-368e95d41a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3da8311-cef1-4318-8830-7c31312f6f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc639102-3e38-42d2-83eb-f59ab4820248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e840e40d-f699-4f6b-9c45-4eed496b71df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b80b42c-1727-4b47-bec5-e50dc1b535bf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880d6b1b-2406-4b9a-8428-f9e8fb756a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ceee302-377a-41e0-8071-657301a37920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e044418f-6b22-45f8-9ccc-e4ebbfc89488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5eec44c0-95a5-48b0-a906-2795df499890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e28fc7-e37d-410a-8b7f-47a267546abe",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3ec443-e0a9-49ea-ac09-fdf9d6522e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a17e647-a6ed-4ca3-bd0c-c00174253170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b35c1d3-6db0-4fd6-ab95-1041a280afa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2a25136-43dd-4876-a479-72087f070070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fbceda-ea7c-4a55-a02c-c6261d6f92ae",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05693353-285f-4469-9748-3dbbf2a0843c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ea32d1-43df-4560-b9b1-0f9a15cc25a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a354b1e4-04dc-4fbf-afac-fd6827b7cd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc5af66b-cfdf-4986-8f68-96cdcd8b7a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb599b8b-9f47-42bb-b40e-087e1bffb7a8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada66eca-8f7e-453a-9019-251a89eeac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab272682-13d3-498f-81ee-7ce37deeefdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0470df-cd62-468d-b93b-b110814a6430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4248a6a6-91ef-4787-a737-6dff946f2d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8433ae1-20e7-4672-91b8-b5061db0d84a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dbbd46-dcf6-4a02-b8c1-94c55c281a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7b6855-f6bd-4d0e-bae9-3bea209fd2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43745cd6-b880-459e-813b-b25272f3a801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bf1741e-453d-44c4-a6a8-49eb75f82296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dd45a6-8447-42fc-8d9f-3c29855b3b3d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaad242-26b5-46cd-b54f-35707a6e57b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73d03ee-94f3-44e3-b3f3-f3cb5187397a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e293b59a-82a7-4c1d-8517-a2e912ad4c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f54fdd45-1cbc-493b-90a9-23d903ed05a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0550e8c-ac62-44f8-bbbe-cccad56d99c7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb5f707-6692-4909-8cd1-898ebba57e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f31234e-3e01-4b9a-b934-f2628ef27c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70498e0c-b15c-41bc-8b07-fb94c217411f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "559c5c09-1861-4251-ab27-33cb1bbedb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54db5a23-0cd8-455e-b388-5b4bd0b8297d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d7a8c9-d406-468e-894e-7bfc51f609bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717b7508-42a3-4261-9579-11bbe4e1962e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d96fee5-8be1-4e70-af25-cd3b82665326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f27df156-56e8-416a-b1bf-110ba0271c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3a4a25-18c3-459e-82ac-377b26eb15b4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942e2c92-eae8-4761-bfac-f568e042d7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5159a091-e767-4b22-811c-3337ac0c4bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd2607f-1de7-473d-a081-a16091cbaca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4426c71c-b187-4955-9aac-beaef114045a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2478e802-5606-45c9-8f75-ed0994137232",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1aae48-814a-4c4f-904c-c226e9e8053c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3bb5d0-f022-4638-b409-9790fd1f8133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcb1390-5451-4a70-9614-b613f1519249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c2dc825-cd65-43a9-aed8-67cd6d8c447e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac86e3e1-b2f7-46ef-859e-22aecaabdc2a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801001fb-0920-45b7-bd6d-33724c28b069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ae0868-8a79-4446-9a12-b7e558c555e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e2580d-7a2f-4724-90ed-de1aa1df4908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "314a0b8e-499c-40f7-9134-89310fc5a43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b889a26f-553a-44b1-88d5-3ec2bb89e537",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9a8971-3140-4d6a-b6c4-b63ab323aa7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8693beca-2535-410c-8fec-f855ff9496b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbb88cb-0d1d-4302-8187-7a1b1791663a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4abb82b-bd77-4191-af1b-035d16f16b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759d666f-03d3-4ded-8e84-767d2ba0c3d4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939f4656-8ed2-4503-b4cf-d19d8e7b7cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10879ff-2868-48bf-87cf-c14974e1f41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fed7b47-c910-466e-83e7-485d847dfdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e63bbcee-e8bc-4c91-9e06-3c12b48bb087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e232da6-ed31-4163-b00c-59af1595d332",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea7702f-6a9e-4945-852e-4cedbc0fb4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fea055-6079-4d72-af82-d38b9cfc56bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0929e90b-25e8-4424-98a5-06f54d23a71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a845a93-6542-4ba0-b3f8-7761200d31b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c559c0-a7a4-4c04-b0d3-0d8901e925d6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26948558-a394-4371-8661-2d7404c55c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca7e27e-a8db-4914-a2d3-b4c4b35ebe8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dee05a-e1d8-4b5d-8527-fb998e34123d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99041f84-086f-4353-bb69-c9d83f2c5950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de491229-8f2b-4c39-aef0-cb1c3afd4e79",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0f3057-0b6c-4f6b-863e-67a787fb9618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124d09d5-a9cb-413d-937e-d8f075e2f71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0ea280-690f-4550-a62d-e8c572b75efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8be1584-9cc8-407c-b878-6aa0fb348484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9a6f98-d862-4394-b7a2-555e52ef1de3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17fff54-3ee2-4ea3-a3d1-55f0e0048b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9bf484-a0b2-4ecd-adc4-1a9111371b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70be9d2a-35a9-41ed-bd60-8fb1c62d0d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b878e41-e3be-41a8-9515-20aaac7056b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63913465-7a24-4019-9d59-75bb5b54562e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7948a2e-728c-4fc2-8d57-9ef6dde2d209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5759f9-cbd2-4f64-a720-7c26a5917056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db265925-1b4f-459e-9c3a-ef384e5e5301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd00fc23-917e-4c45-a3e2-b60cc927e203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146a6e08-f17e-4b7a-ac51-9e669b922971",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e633439-9d0f-48ba-8b25-7611e99e8c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9edd1ed-3b20-4b44-ab10-eedeb9f241ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11667a4c-605b-44d0-b63f-21a6af6b9cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7868465-c959-4576-9e21-3e383ae534f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8f2604-f5c5-443a-b44d-2e9c5e303024",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e63e6e4-03fc-45ef-9a44-da35fde9c0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcf608b-6efd-4bfe-879c-9a5666f6ad6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ecc98a-669e-45e1-80d9-927fbfc5216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b8b8b1-e291-4c1b-bc76-7083cc95e2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7314a3-d05d-4905-bcf0-2b1408661a2e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d40338-97ed-418c-a831-72e86bd07126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168d812d-62b7-4658-8bae-0454dfbdd687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa77c7a-8f4f-4728-bc55-5469568e22e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97b0d1cb-8f27-4904-b8f1-c67e3d5b9c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b109f6-d44f-41cc-bf03-e9bd3384f6e1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b39538b-9672-471b-a0e8-73add9c7ff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ed2193-c9e1-4d48-97c4-47e831cb0c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30acc910-8fe3-46fb-8b91-9d3f9070ad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44a75e20-2f45-46ce-8c89-eb1178c3e06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb44a7c1-ca01-4b24-a0c0-ee3856d3aa18",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6132989f-2273-4dbf-94d4-546c6d3df6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5be7cc-b623-4fdf-83d3-12a8ae67b5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f7d54d-c5f2-45b4-b519-900c36e9b546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a13865-af3f-4a36-9397-0d1db5b9cc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3fe3af-6e11-462b-bb57-cee22dab7e66",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9700eb1-9d55-4e27-b744-6dca07c3d05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7539529-a4da-4705-a920-225785cdbeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa9f550-a3e4-49bf-bcf6-cc22a8561660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac53df55-5c91-48eb-b106-ce50769df9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6aa574d-1b09-4b0f-a62a-08e9c7a0ccfe",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae2eaaf-a014-4b2f-ac18-7363f292ad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c96a4f4-d6e3-48bb-9e52-20d76c3d90d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa8c446-5ff2-45bd-a89e-5bfadb50c916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "188af36a-7d4a-4041-a0d8-297575f1074f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815ca6c2-1569-4eda-a2ca-cc960400494f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4b819b-167b-4c53-9a3f-40679913b892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7251293-1fe0-4782-ac92-5283bfd1c64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4271688a-3d2b-4f61-a94e-9d99d67e97fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "888a3555-a2c5-42dd-bc92-11efc4d2e96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a53820a-deba-48f1-a19f-e18cfbf72aca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a801254f-0274-452d-bd5f-af519461e912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442b1063-f8a2-4cd9-9d00-155f4cb92d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f9fa4c-acc4-439f-8ad8-2a9804af1c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cefc619-11c3-4809-8e9f-6bdad4502228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33e1a33-b821-4e0f-bfa6-3f830e6baf55",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f69d9d4-0877-4719-af65-612e02323aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d28de3-d67c-4d9c-89cf-8d39a8365860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77952ccd-c25f-400b-9d33-f6e899798865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9679815d-b5dc-43d6-9b90-d5f99aff2afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3805f07-7084-404a-96bb-4dc091f964e8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc25ac2-fee3-4f96-aa57-9f1b649cd6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0e0df2b-6662-4569-b256-0780f6a0fd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72709a9f-06f5-4432-b023-100dc1274633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9693315f-473a-4b3e-a622-6d9d8b49f397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122c980a-c9bc-4856-892a-2e566f25962a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47c7154-d070-49be-adfb-09701efc907a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430fbfd5-7b4a-47ae-bcde-f153ea19466e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506afcef-22a1-4b06-aa11-f15ac26659b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2988ac2-19e7-46b5-ae47-e68f1ee1c36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e51ad38-7879-47b5-a61d-7344f5bd4ae6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f776b3-bdff-4159-a73a-e114548ed4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53d7c1f-606d-462b-be65-5e54a7b1f245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7185bd1-4d14-4d56-bb31-a789fa4340fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8686d696-796a-458f-8c3c-6d2d9a533372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e38aa2-938e-4660-a963-02e0c86800d0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6feb4d8a-4f2b-4e2b-9a79-4d4074c2a58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5da7fd7-a0d2-4471-b768-5b24281359c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dea554-c692-4578-a896-caf4e33c11f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8239fede-f64c-4d26-92b6-9a0e9c67d742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9aaed7-d2e5-4798-93f2-bb7724ca881a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9d73d7-cad3-461f-a8ea-811ba68dcab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c6cb41-ab90-4be2-805c-8175da692e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cc2f3d-91a7-41c2-968c-a8b9fa30f123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae913a05-fdeb-496c-a343-ae166439e38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40d3e7e-c8b0-4245-8ff8-50c9531798cd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d5858a-6bd6-494a-bcc2-4934cf466b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b923349-13e1-4813-aa6c-c61ca3c56339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f65b81-7f89-40b4-be1e-050abc0747fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "782d917f-5d93-4d6c-ba3b-3af28649ed9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2b1060-ee83-478d-9de5-c56cf9e8a760",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4758bb97-fdd4-4016-8085-c6490518a048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c11c3a-2474-4470-adc0-ed85aec0c701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab668f8-9034-487d-a1c5-e15f61fff25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "19e7a72d-ff42-40b2-a58a-9e3e2a985e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616b6b45-be7c-443e-8e9c-ab70fd138a9d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5e0333-13b9-4ff2-b38b-9b22c1b913b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a5b255-6e3f-4580-8c06-dc9946d1eacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988153f4-14ac-4428-a763-7310c0db3034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f391189b-1e04-4cc8-9dd1-bd573f7111b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452078d7-f852-4736-a096-42b5451609fd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fb53b7-9ab5-446f-9636-3beb266bd8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8154248-09d1-4b6e-8d9b-754f6563ef8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cae99db-5aa8-45dc-bc40-5a5816b1c935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ab7a6a-bab0-4376-98e0-03f94a30cce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e73cf73-c1c9-424e-9a33-d4f107220324",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e499d4c-44be-467a-81f8-2705c0c36462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74d0a7b-4d91-443b-857d-55ded778d1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dfcbaf-47e1-4152-9ab3-0d012222a445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef837d67-7939-4d9e-aa13-a8db0e714cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af38d3a1-7f5e-4825-b33e-251768253493",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97db061e-5392-4f5f-baf9-d0fab0e79463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf5e18b-d06d-4afa-a9b6-f80627381767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d577c49d-2ba1-4f1a-a61c-a2b5d1fa06b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11f996b7-f8c6-49a6-a86d-6a31dd2e03fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6718638a-b211-4ad4-a519-5b4324a91335",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0984fb3e-d9e0-448e-8205-07ad7959596b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d486064f-e522-468b-9f37-de927386aba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418d834f-b9f3-4899-bc7e-79940a6f3d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76ceca2-9cee-4718-bcb4-4a0cafd1122c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9e2491-e04a-4ede-ba3f-958358f699d3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd624be0-faad-46fe-b895-1aff9027e97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5528e76e-248e-46f3-a457-130ec0924a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfaf771-c091-4c85-a67d-cbb130468913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6875f24-7e63-447a-80d4-48d5e59fe976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e20c6d-e01b-4853-9e88-c0c86143a94c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8976e55-0ca3-479e-87dc-080d145880c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2dc008-6a96-4532-abc2-033c52c880ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69dc672-5144-43ce-b166-d57144945dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e55c808-64c2-4393-9cff-258f9049a266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3d1c0a-1991-4559-a936-4a14ec57af24",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e38418-5a04-4628-a618-35ff7874eb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a23fbb-11af-4374-b7dd-a960bac261dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6d62cd-b5ed-49eb-80a9-cd0076ce39c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bae3344-7b45-4a9b-9fd4-4ebfef30c7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc8bd5f-0429-4e5a-a9e1-8d814eb6d304",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477fafb8-0e3a-47c5-9f40-0e593170f5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3168d0e-d2a2-412e-9bdd-4405de2907a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412edee1-7dae-4451-b896-2d53f2f5afb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f45c9b-76d8-4df3-8d6e-c19776f810a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3266c91-98ad-4594-afc5-df7a7c9329a7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcb72a0-ee53-4736-86a1-bf35bbd2783f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40243f4f-09b5-4584-9c0e-c9b6bac45486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91945e2-a512-41e8-9aba-423fdfcb89bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3398f2ee-211e-422b-a55b-99ad0e616f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443bed55-b7ea-4983-9008-91c3151b5bf0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558e7dd3-c37d-46ed-b8e2-2e259fa23da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02740152-0d64-4841-89d7-add0fb2ee902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4f3c54-eb7c-4208-a9bc-f20539c1304e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f141a1b2-7722-44ac-97d4-abfd1ae8a7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fc82d3-bce5-4ecf-8478-b05f62d4e026",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4d96bf-ef60-4cdf-b94f-db8fd72cad22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d37af2-67ae-454f-9cce-00a28ebb3dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5de9917-68c7-49e9-b7eb-d035bc312858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec044843-7296-46da-a7ac-5cfb3388371f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c346f04-ad1b-4260-beec-a9635307daa1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8e8f4e-3869-4060-aa4b-2cec66d40e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81e4bc9-c8a7-4598-b577-65ada8313187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0686ab48-6b9d-4662-b258-a7e288869d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ec9ac4-0b68-45fe-8c11-a8fd68aea936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824197c6-a665-4681-944f-564aab84ee17",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c95c5e-49e2-4cdf-aa00-ba682c093434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485d9ecd-ec9f-4224-adfb-1cc72fc2cb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306b032e-bb46-4254-a0c2-05c651938289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1943ad-18aa-4967-976a-a04d4c5db819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d818a29b-44ba-4efa-828b-049f1c258255",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a299c285-986d-4d1b-abc2-c7d9d02a7db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67252cdc-88b9-448d-b1aa-1c8faa6c1c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5e27ff-c9a2-4ef9-8f5b-8a6f4c37bcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "375ccd05-2007-42c4-ac32-f359df23df81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475858a9-a716-4226-a67d-c9281a1f231c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f4a99f-0983-40c7-9ed2-642b89dc19a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f69a823-29fd-437b-984f-59a1302104a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effffb29-436b-48fb-9209-2d595471e8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb57784e-f039-4a68-a069-0fb41358a0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77c9039-6944-4876-a2b5-39fca7961216",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d763a3a-2cb9-4cd9-bee0-e55bcd8b598b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593cf05a-5c25-4832-b459-4dc7f3f9275c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb967fb-f05b-483f-8659-6f66c075e9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6c80f5-4739-48b0-b474-70ff03f1d3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d8e622-748a-4bf5-b5e5-fa49f24699ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d32b5f-a5dd-44a8-a5bb-fc2d6b0dc18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aac7db9-79fe-433b-9815-db60e3e5a0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59739713-89ca-42ff-9082-74cb8b8880ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b0d385-9d29-4d21-a04f-e67b8359ba75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adae2d4-72b7-4cde-b7c8-cf32a36f979f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4ecec8-2940-4e00-9884-874f9e85cef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa714e98-b6b6-4f9a-91de-70a515934703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c99c903-d467-4f57-a5a4-54845388edf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f31a415b-1239-48e0-9420-1a51710a3c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7e4884-b920-4378-9758-6b7c0656c983",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b426dda-36c1-4e4d-8ec2-58607cba422f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0f8570-1055-419b-919b-e46e3c992b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0293e24-6978-42a5-a403-74093a6958ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c47f43c-b119-4234-90f8-64f8685206ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df0d2d4-5642-429e-b69f-d92bcdaa81a0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10da5b4c-2891-4c8e-ac5e-ec53c664ab90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2377d07-4d32-464d-8ff8-330217bb323f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e409af8a-44ed-4c76-897e-d59595820078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b247fc9-2819-4c2f-80aa-8342e0885674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eb470d-9398-4a67-9869-8dca05a13db4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eda871a-779d-47e1-b75b-1bb62329a07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc09f555-14d9-4077-bb6c-ae5e4c73b4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d0a703-bd72-4acf-8876-1f6125d265a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16287e3d-4a8b-4b00-9746-503e26c83bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6792636c-9c52-4db7-9601-53c8419e3858",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5558c2a7-22b6-4b33-a8c4-0934415d4203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14712d91-2f40-4d0a-b1b8-ec4d040ed567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6deada-e1fe-48d8-bb15-829ed02860fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb770dd1-3c01-431e-ae87-239ce621933f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e9d3c9-950c-4cfc-8d7b-fe483c58da6c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364c2f87-a367-4228-bbc4-b078b8c6eef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f368ae97-463a-4e7d-bf7c-af4cc6a8273a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e6e3c6-bd6a-47e4-a9a7-19ca80b4a84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "326b7567-6c55-4f21-842e-a78c86c5e1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9270ab1c-ad8a-4db9-a1ec-484e6f7e6c55",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00393fcb-9b35-4ef0-8da4-c35b4e5fff96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4aab47b-1a32-4115-8b28-a19fbe6df306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61184457-6a8d-42f8-b5b2-98accaf36e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17a27da1-f60d-4e90-8fe0-286adc7bb5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c256c7f4-cd9c-48f4-9e6a-674938809c4b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6110d1-2a8b-411b-9a58-350b15525a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c99dbf-251b-44b0-819b-0d4f5902aae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be63efb2-26e1-4291-930c-481ae941e07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc45762-d42e-4296-a423-e40f3425b1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4ae0ad-8ab1-4899-87fa-dbd0f3e02402",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc79d6e-c801-45f3-b0c5-8f24d68efc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90954c04-6949-4abe-99d3-674ceb133510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ac388c-8fb3-4a31-8422-2c75a521a6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec31e12-361c-4ea4-aa2e-b603392075eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf652e9-f779-47de-b9e4-dfd049de93f1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4bb515-809f-40c8-892c-13ff12c7a6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22beadd0-bcbb-497f-9557-35a6d0ff6cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df9bae5-6244-4a95-ad85-0433f1b8d048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "765e40a7-f5ea-477d-bf1a-0ea139632306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c294382-af02-4105-ae24-ab2e1877c223",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259b087f-8f9e-471a-b13c-dd7e206c0d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3bf636-63a4-446a-9b49-1a52d6cf3f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a6482d-4b55-414f-ae60-5c6a56c9eac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "225fc34a-4cf4-454f-ab64-038722294638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b48bb0-f192-45ee-9083-32f29d934a5f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4423e323-6e32-4b5d-8ab3-6bff4be18e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1f4eba-8de1-49bc-86f5-d1cfb5ae2b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e4c06e-9eba-4dee-83b4-77b01eb8bd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7e5289-0047-49e4-88ec-62750c9c406a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044f18ce-d374-4a67-9f6f-f257ded909a5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cddf7a-df20-49a3-9db9-9392b482be89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06649a3-0330-4a87-8e53-e285fcae6763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1a1a57-b83a-4b3e-80e7-5d0e8597e77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b35152cd-2e15-49e8-977a-e029ba00d34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce614783-48ae-4482-bd8d-85596965d205",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bb7ffc-8836-4192-bd03-eb87d8ce6a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a7855d-0558-4591-97f5-235151a5f72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92822f83-8453-4d51-babd-86341a473767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "347814c8-39a2-45bf-a70e-7a0e13ad40d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63375a17-5cfd-4ef8-b997-9ede9e74be9c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b940fa9-fa8e-4fc1-933a-c7215d5c8044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01dbbfd-a877-488f-b2e0-9a4144b12979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77334f7f-57a7-45cf-ac45-7b5f00bafc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1824adb-83b7-4c5d-abbc-362352e501c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8c9b91-1d0d-4996-b690-392adee58edf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c4e147-a970-4cfc-b6e3-dda3a5999589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4fa182-64de-45cb-b813-4323d80fc158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61cd6c6-f03c-4060-92bf-f4bc752092cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16bee06d-c71c-495e-b892-dc03862b0a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95ea637-6de1-400a-8d32-5a57b56f6c16",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b5711d-824f-494d-825b-1ccab741b7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868db1fe-56df-4e51-8a86-ab64727cfdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b15f8ab-20ac-4ace-ab8f-950da48f2a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9d2265-1734-4b06-9e43-f7c2a8a7ce50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92e2af3-b14b-45c2-a5b7-e8df9dd358b3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4399fdfb-53f2-441e-945f-d135a7d7e0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b362d5c-9cbd-489f-85ae-cfa2aac82568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ed4ce3-9e88-4902-9453-4401e7995be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0dbd7f4-7fa2-4cbc-9c57-3dba2abc33e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbd1dcb-6a62-4d25-ad4e-bf55c0785441",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6381dc4c-3021-4ceb-83b4-56d91fb25386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4530c11b-718e-4f04-a612-acec959aa793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ee9ce4-a928-40e7-a997-67a479ad6201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e54d3ea6-bd74-4263-b586-e56146cb455f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efc4080-3bc2-4b50-95eb-e9cc150a16d2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fba030-4ef8-461b-bb8d-d72a4c066a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2e8c7a-6453-4148-b8af-80ccac15e24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba75a32a-35ef-4ba2-8857-d786967c2e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "725a636f-740f-42b5-8a6b-216adef9f6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad9620c-378b-4443-a097-79f5703c4506",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c66c6f-7adb-442e-b6a2-a6eb4fae2ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42b21ac-fb95-4d25-add0-b7fd5e2b1cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216217de-54b3-44a5-8b83-2f9b6a7a30ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b9909f-589c-4ea6-ab6f-eab8a7330b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52bd4b7-d15d-41e4-9b9b-a8b98a32da4f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cc7b4c-96d2-4262-9dcb-cd70883a72ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa540aa-5bc1-41ca-bf3e-97e7758997d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2297ab4a-6614-4ce4-bb82-6cae10461c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bf67be-555e-448f-af4e-78e0f6ea1729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a060b446-526d-4c93-b1e9-9c2e1f2cc1fd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce1fb45-3085-4b22-a317-227877993741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642e2f8b-7e22-44de-8a46-a115e2109cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92f734b-cca1-40d4-b77c-596ef4651145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c559378-402b-488e-bcc8-0f30fb6ca278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5377a83e-3f87-4355-9c20-b573a97ce071",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be9e622-3f65-4513-9e99-91eaa0d88620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a97788-3e39-4184-a88f-104895f37bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35985596-8550-4199-a48d-c58c0d1e2f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98633d1c-ae71-4c58-8db8-56c155939186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60de91e-ffe5-4831-b9d8-68cdbc8ae907",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f914ad-9155-47c5-b31c-4afeee672c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39a833f-8919-48fe-8b95-c3f90b16d57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8ccca5-f811-4100-b3f1-e6eb6e937e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a399ca0-44cc-4cd6-8fe8-51a4fef8dc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9175208-b754-4609-96f7-4c6797f71030",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a720382e-092b-4cc9-81d0-8f6a39bd6033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f84fdb5-a40b-4475-bd5c-2e959dcf62ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526b4e16-25aa-4eb1-9d82-8c8d67609750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a463461-72be-453f-a4e1-51cafdefc6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc1fba0-e5e6-43cf-a7a3-38828239870f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960cc3ed-e887-48c7-ab90-bb69b4d9af2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af138a2-2fbd-4390-ba02-d87d9f8a0508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8131a30f-a03e-4123-a8a6-5b5bac38be49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9982e0f4-98cd-4d46-ae3f-51ef4397dd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f141c6-20dc-41c4-ae7a-2a74397c075e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44448c0f-9435-44bf-be87-7b22cc607cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891a4730-5dc8-49d3-85d2-5e935857cbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad6e5b8-0dea-4b46-9e4f-a8367cba930f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12c5cbfa-0c5e-49ae-a54d-df535259d835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa8e34d-39f2-4686-9b21-ba93d800c4b2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e4b66f-f815-4833-bbd2-8bad3eb9ccbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de76d49-40dd-48a2-a2f4-2c62f1620e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e54cf2-e18b-490c-b315-04093a7fb581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "092d0006-cf59-4de3-bc80-d17c082f909a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0e88ed-1c1a-4c3f-bf82-b6b471d4e848",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5252e46-58c7-4806-9f0a-2a2ce4930a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb7bf3c-9e2e-4d2e-b2df-abd8d847fa32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c2b452-f067-4ab5-9e1c-6c1d0dc5e4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c37eae23-84c9-4dbb-b6a0-7d5f505c0ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd43372-b469-45cd-aa2f-c775f1c17ed8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26d2867-5bd7-41b2-b0fc-dbf9838147af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7378439c-a31c-4bb8-bee5-aecf87649bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44aa300-8139-448d-b507-b1e0e16a9520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "62b1b657-9328-42c7-af88-fc2083d398c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51eff826-31ae-43f2-8388-03f7d80b227d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27aae004-284c-4a64-b6fb-0e845135560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7e4a10e9-e5d6-4de0-8dd0-75c1e8a133e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44713880-26f2-48b8-8632-49d6fb925e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dba03ad7-4964-4cdc-ade8-bc65f0078537"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "05c1d949-8753-4605-a8b0-0a4a3b360371",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d13c9bbe-bc9f-4f39-b719-0969fb4a34b4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cff1dc-15b6-48d9-9acd-fb13a1c7be2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c02ce777-aa9b-4067-9e77-8003cad6895a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0010733a-fe46-4aac-9047-4d860ffde131",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd170f09-f5b1-45e9-9a72-2c52bba8b720"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76b16d2b-962c-4ab8-bd8b-a33d0741fcac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94e69242-11dd-497f-abea-fa30a9f85ca3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebb921dd-adb5-4c0b-b4cb-a50b30fb3b7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48e6636b-ff52-4173-9622-07948b9e5868"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd6b5199-9371-40ac-ae4c-11c7d866e360",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64a56694-61f0-44e9-aa5c-2aa633eb5d33"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b070d1df-d89a-4d0a-b33e-275d3910f1b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6e00bfa-9611-4e64-8a72-b6e5b5fa728f"
                }
              }
            ]
          },
          {
            "id": "d4944472-4bb5-4446-ac45-8c68dc8ac6ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c92ef5dc-c217-4556-896e-dd4febb3e2de",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0cfd2c1-7fce-457c-ab8a-cecba6857b67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cab84f60-a2f6-40ba-af0e-8a2e393a6d7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e624c74c-d8dd-413a-a515-eef3d6ed43e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f32924fe-c1da-4617-b4b1-3e474f9b5e54"
                    }
                  }
                ]
              },
              {
                "id": "cf8c9fd7-b829-42ae-b1dc-d020c8389f5c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca684e7-f16a-441d-aedc-155cc1025ecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "781be87f-466e-4d8d-8504-61cf385edff5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eedca233-490f-4101-b86f-26de9ee59736",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d625c2fe-4dbc-465b-884f-ee4e4e0c99ef"
                    }
                  }
                ]
              },
              {
                "id": "019211ea-032e-42fe-9fca-85f76d4454a5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a408da32-d037-4b8a-a565-3f00e13b643d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80370f38-51a1-42a3-9a2d-5b7a67d7943a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "669d7659-1b10-40e4-9cc0-fbf20732b0be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "868ac36f-ae0e-4ddb-a13a-8c178396768d"
                    }
                  }
                ]
              },
              {
                "id": "9085aa8c-d903-40eb-b72d-fee136311140",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b759e62d-065e-4070-986f-1089302a6e3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8591ffe-1da7-4f1a-aec4-107c25ad932c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1455e429-9402-466f-a2fe-01d27b541c0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d17bcfb1-ce94-4120-a967-c6c5f75fe923"
                    }
                  }
                ]
              },
              {
                "id": "fcdb981c-4476-4ed7-be83-40efc0b7d557",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d9be444-b8a4-4baa-ac63-5631cef49081",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd4a9325-0a4c-45e6-9b56-cb312bdf44eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a0f8709-b16d-4da9-8576-f2fc46918b58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "284df627-05d7-4bc1-a832-88fc962b0720"
                    }
                  }
                ]
              },
              {
                "id": "9fba0aaa-5ccd-4b05-be0d-f26e49642897",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c9373d2-35af-4745-b7ed-786de6973c97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef2c8b79-8963-43de-8631-8f1286da1b36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "730d17d9-69b0-4ce3-a9b4-91d6222b3cb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0425897-9f55-4135-a88c-1ef8a710077f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fcd22b47-08f3-4450-86ca-472d442f9197",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1762ebce-8c4d-41e9-ab17-7d0c18efc616"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5bae4486-8afc-49e0-8447-fa54d6388b0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7990cfff-f7b1-4c52-b121-dd305aa4e553"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0a1795d-590b-450e-ac78-0892c879a2f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6d1b4eb2-4fbd-44fd-99cd-e356d9bee01e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70435f14-57ad-422e-a386-748e2a6fd02d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d6c7766-69c2-441d-93ce-ca77ec15ada7"
            }
          }
        ]
      },
      {
        "id": "d52ae4e6-73fb-4b83-bc58-0fa05d1085bc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "787fbb5a-c92c-497b-ac0a-bcbf2bde5db9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c85435be-bac4-40a6-9199-bc33903b669e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40ee1c5c-6bac-4770-8479-cbb61e77582f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6c46db-bdfd-447a-9c17-ff3c57586168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a89e84-506f-4b3b-9142-9389e7122452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592d63e6-6a9c-4586-a8f8-4e5f2712248c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c85d163f-2de1-477e-a200-1ffd8424f18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f536f48-c0d2-424f-8a95-1a435c5798c7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78376f12-3d33-4e4f-93f3-bcce224e0df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138d537c-1814-45b9-9d80-bc5af713c485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17f5240-d01d-4b32-8288-72761ad46200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b6de35-4123-4436-bae4-b4f093053f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5587df-3fa1-4ff2-8b1f-4c22fe815d25",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cfb147-2daf-4ee7-a751-9b4389f53ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6b1885-9b10-44f7-a0cf-e6a4e845144c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecee313-622e-4d53-b1f3-d143d57adbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87578423-db8c-4d8f-a382-bf4877af2b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e92cc3-461a-4dad-9462-3d7759530ef0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040231b0-af7f-4cba-9647-4a1c3cfd8c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54ef7ab-ebde-423e-a788-6e2b72118c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9d51d2-f3c1-4ee5-bc0d-fe83ad12747a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67d1f292-4573-45e5-a4c1-7b35f179e395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8392badf-d344-47b2-9ccc-26d139323f15",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb117ce-3414-4911-9975-1730b689fd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36ba440-645c-49cb-ae80-6159cf7ef8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1ff86e-c731-4cd8-903f-9220d8d306b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1345b4f-d30f-4260-b144-0d15cb57dbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b883608e-5e8f-461e-9844-ea44ce9716df",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457559cb-abcd-4a70-8237-9d3e3fa0f5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40754f47-248e-42de-b908-633401bef815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e8c79a-68c7-4d6b-b232-1971fdf65ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ecae7f-c4de-4983-8748-ee6be605092e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812b6e91-e507-49f9-9732-bea595e4cdfd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c099fa1f-bcfa-4c2e-9f40-1847b49f426a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a64df13-5b2a-4a49-9d36-dc3049c9920d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc0eea5-ebad-41eb-ab0c-6f743953ae69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8692756b-1791-46ff-b1f7-512ac4edcd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494b8403-802d-4090-9924-bc833ab0d434",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadb39ad-cd3b-4f4c-b6ec-8924fc503c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e182d660-6a51-4361-b245-f230bb7c4739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc043f5-fe89-4735-b364-e6ee005a87be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2f853e-c966-4d7f-af5c-f7b5fec11224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834130d0-3b97-4512-80b7-9a3531a043a6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cd622a-e947-42b2-bbb0-cdf1eade3b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce98e2e9-eee9-4ff5-b517-63eda22b99c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eb4ac7-d813-4881-8571-cc9f196d0987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3e591b-4cbe-4a44-affd-4d10d1a82ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6132bac-13f8-48b6-b6dd-60a38a187369",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5d0015-e028-4a84-9ba2-9f905353a682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c459a35-d3c2-4308-8277-15c949601ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e1af93-6c31-4be1-a5de-daaf951308ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc3db70-c1a2-434a-947f-2417bf5a7472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9110fe87-25a3-4da8-a386-c66e1128c0a1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59b19d8-8e40-42d3-a06f-9c557c9d4f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e4f912-6591-4c2d-99dc-60f1c5406299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17366c45-b616-488d-9a54-c6f5dd0eff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3f6737-f8f5-4a64-88e0-53b064eab585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60525715-373d-49ee-aeda-2ee786953586",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0cbc59-edfa-4bc9-a056-84939852dee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69c35e8-1431-4811-96d8-bd2447c73243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993aeceb-ba36-4091-8e45-ab41d4ebe40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9e9dd4-99a5-4323-b794-0bb873d6ee53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bfda84-12f7-4453-90fb-9a480ce75184",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc96b6e-db5e-4fbc-9dc1-adff6fee6991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a003b89d-b8d0-4502-b422-78b34cf491b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f02fec-911e-4e2c-bcee-eefe3b3c53ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af2980a-cd27-4de9-a6db-35fc3dbecbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01de9096-7365-4eb2-8855-83c462dc8d0a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370ccdc7-f64e-4aa6-b277-9d45b9c7740d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76457685-f841-4991-99c1-6315f911a4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c14db64-44b2-456b-b2c5-fd7990fd70c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da841048-4058-4de9-aa51-648aa3e4145b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88693a12-db4c-4d36-82f8-a0c0bf4a097d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f454e113-8c95-4a35-a962-7244fb3df6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf3785e-97f4-4e63-a48b-f72af9da5b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4279225-523f-49ee-8f46-ef5638468895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b88fde7-a577-4107-8c4e-3767b43807e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2664f48e-f1b9-4343-8cde-ee3f0e913c4c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9730a37a-f9c9-41c8-9c57-1c9a233d3bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc1b423-ffba-49da-a451-f338401afc6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ece7cf-3edf-4a6f-9cbb-e9c39af5d944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece4deb3-29d9-4269-937b-8eecc57c49da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041f8f4e-e4a5-47ba-a349-99d31a737ade",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aff4a29-34cb-4856-aa47-ef848ebddbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7139686a-561c-4508-957e-262eedf844de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4501ad0f-e309-4cb1-8763-5028b45371a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a60eeda-dce2-4eab-a4db-7e15c1f31e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d700d9-4ede-4ca2-8e0c-3db6a75b6df6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf07aa0-19e9-4c79-8c01-c8d86438cccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb190123-d6c0-4310-899f-594a3ec7f1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe3451c-814e-473e-be0c-1378d79ae4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1f98bd-bbb8-40f8-a1ad-659c1e08484e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab65ca44-87da-43f7-8d60-598e22988add",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e899717f-ab3a-438d-b4e2-c52e6ac7eab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5bad479-1d93-4690-b73d-c687da77d3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66748cef-2b91-4e8d-a9d2-8953298faf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "247136f3-4509-4628-8a40-324fa90204e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134e9413-a227-4d9d-80e2-86966b6a2138",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87280f8-bded-4ea2-94bb-a43ce60ecc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be97c99-b136-46f3-be97-1c1d97a66953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5bb3cc-e2d4-414e-af1d-50a4fd97ac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d376d34-ce9e-4311-9220-9efc37b367d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c22236-707b-4d9f-b3ee-dc7a68a027d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d5d850-b8c9-4025-a1bd-ecee385bdf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9accc025-a145-4cdc-ae94-896f00082778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddd8337-bc2b-45a4-89b1-b7e0dae21fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bc73bd-66d6-432b-8fcd-2c8804c171fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dba94c2-38ea-41ca-98f9-da685ae5d2f5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cbd802-3da3-4464-8a99-ef18b5650b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52c66bc-d95a-4cfa-b848-121649e62b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82904aa5-a59a-40e6-8843-195ce712f374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b733c0-5513-40fc-8c64-b3ba7da10144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e8621b-cd62-448e-8177-6e85db4eec92",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e95a2f-880f-44fe-85af-bfa127d92c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0415bb-4072-4be5-ae98-c1a6b8d5da97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19498a0-1aa1-43eb-8f06-ac9749d3c0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "008a5702-c7b0-4209-83d5-ba1ed0cf7a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e089e331-cde1-4ee1-9872-8b49f885a48a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cac4b28-a20d-4390-89ad-83ab6c99a4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3818737b-662a-4af4-ad0b-0ec286af6f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce458216-e487-4024-bf73-3fc0f455ec11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2920b4de-d176-4b1f-9786-88278c4c996d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40214871-6629-4e73-b77d-f30001870889",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff17cd0-7fca-4b2b-b0b8-3ef2f3837fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2efe3b6-a729-4684-a5cc-c872d74fedba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57e5591-8562-4cfc-9228-030640a6b015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "319e0940-b63b-498e-b8e4-2c3061ef8aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ff92da-5d3d-4652-bc91-fd3329d13ca0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68d092c-a6d5-4d02-a5a0-e162fab68640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c82469-61b5-408f-a957-fb3eed33f2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627a4125-ef1e-4e5f-ae12-b20fe16c996c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb19ee2-be63-420c-8d4c-950bf88081c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10daa64f-eb37-4b84-afba-682bba0746b5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c35672-ce10-43a8-b1e6-e9f520f5e653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdef1217-6249-4e5b-b915-f8f44d6d51fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7790c1-eee3-4da4-94a0-749f19528ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aeeb856-ca87-4137-847c-7589af201153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b780116-5480-43f0-8bd2-91320cfbab7f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14df0697-ca1b-4ab9-87b5-cdb7d85e4cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b679b19-0459-4097-b71b-d6a0284668a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f975dda-ceb5-4996-ab97-f72f710ec8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a69ac818-14b9-4442-a0d2-31b8dcedf005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5334ded5-c5c7-4bdf-821b-0b08eebf50c8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dbc604-e817-40ea-b854-07b916d63852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b563f383-4f8c-4da8-a26c-67904c53df58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ded1d0-15f5-4ce4-a4a6-860b5b24e68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "673316bd-fdc3-4deb-8b9a-487112fd6c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a3a67b-2af5-4aec-941f-83fa681cbcb5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f7f280-7606-4926-b99b-484da502d6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bb2668-4997-4ae2-a756-d9e486cf3294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0454c1d5-a1c1-4ee4-ad1d-e51a8a1fb7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19efeb1-3eea-45dd-b78c-231463cadc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73297064-c427-422b-9520-20e730c9ab0f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea20dbe-7168-49d8-9e4f-40669e99de6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703bb973-0d6d-40ba-8c97-a8e6edeb45b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b3b187-6b7a-4986-ac20-ca6ba03bc4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "facba0ef-eb47-4f82-9b0c-1c92454657b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a0d312-c7f6-442c-8bb8-36eb4866e7ae",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c61e60e-3f90-4179-bfd2-1ac3cc6446a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324d5d88-aafc-4227-84eb-19b40dcf12e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b5ade8-1de8-4d8f-901d-4aaf477aee04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5031979-9fec-4824-a173-d5bb1d1c2428"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11783a08-ad8e-4197-aea1-29fbbb37162d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc66fb70-f776-4d45-9025-ff8556882922",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4250b6-fbe8-40ad-b319-4f301668b7ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa7e7eb-6d9a-4def-b624-3f203016d271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20222fb4-16b3-4a37-97ee-3b373238e5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fb51838-bfd2-4111-ae3a-1aecd5000f2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a78fecb-c12c-4107-b301-9d8407a443b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3d89242-e53e-444a-af99-15ef97e9f736"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf27f118-c815-4874-b027-9ece4ad3b83d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27c5f5fd-6366-4d81-8919-628b2bbf2bf3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0e6d545-4ffe-4db2-b88b-63e02efff0df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10936a7d-3028-49a1-8cf8-831c8e64649b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30a757c7-015e-4263-8c1f-7b9da4f97949",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0f4ea7e-2cb1-4ac3-9a07-49356a6f76ce"
            }
          }
        ]
      },
      {
        "id": "9d8b6483-8593-4496-b12b-56fc6ded325c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9ee6c0e5-3dfb-4983-8559-12845fa1397c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b8039b3-4789-4fc2-a61d-e2ee4257f423",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "14fb1d61-fab9-4fc1-a6e2-43cddb8c7b37",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8285c278-0b35-429d-8bc6-caf7334548e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0e9cae-d69f-45a6-b8ff-4fcbdc6bbc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565914f6-ea18-4d32-9a67-c6f12f8c47e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "19aaad31-7abe-456a-90fa-89d0d73c5192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf9abcf-188e-4a08-bcb5-b8e928607fab",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ffe42a-56ef-472e-bb9f-6a5f79429c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f03e43-39e7-457c-b6da-3177167665ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4272ea8-bf21-45a7-a088-51a441b8b38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09ac25ee-2c71-41aa-ad17-64f9918559d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b8056e-273a-44dd-98b9-18cb3f3b8e21",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3223b8e6-59d8-4567-a841-0a5c35edf530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7c16bb-1efe-443e-83ac-f42426b9bb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d110c99c-4cb7-4ceb-b07b-32ac608d28a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "814d693b-3019-4ab1-b790-2ffba981c4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e35babc-1f09-4a10-8b5d-d720278cc291",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173c3053-d279-42bd-bbeb-4987c7a5a853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb590b1e-173e-4360-98e6-0cbc3bd93255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0072f196-ef8e-455a-9d63-a521fe10a5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "359b8e18-f80e-4ef4-973d-43001d2ed49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a9d5d1-d323-48b5-a530-74cade113cdb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fc5341-5e49-45b2-aeda-54fc79ca34c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1288eb3e-2dba-4021-93a0-cd9e6e49a7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3dbfc7-cd36-44bb-820e-a87fd78f5d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d93dd3-9821-4d88-9f2c-4eb99d217222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e969745-547c-44c4-a138-542f7aaf7b01",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252bc8df-3ad7-4122-be57-f49e1eb0c8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2c9d30-a4f5-4a77-a718-abd70fdac1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b84e1a-ecb7-4c1f-b322-3f90701ff195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0faccd66-be9a-400d-adbe-deb5043403c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f6f692-25bb-4651-930a-1fa02ca64d91",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18414817-f39e-42e9-a290-1b4112962e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5ea375-cc23-4726-9617-fd47b3d5c5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb104e05-3551-481b-9b5b-c74c9c50d1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3cf96fc-42a7-47ab-8396-b137850071dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c8c587-3cca-4753-a994-e2a0f3d905fe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a4f16a-2f7e-457a-a55c-ad73bb953938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d1db20-a53b-49cc-ad71-24fd84880e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb9e403-00e2-4870-9606-5fa955b91924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fbbebd-3b81-4275-849d-1f08bad25e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfd650e-4b17-4f60-b4f8-4f62fda096fe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66167587-b47a-403b-9192-7dd6cccca9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2aa38d-2d0f-46c6-8196-c4f7c159a1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1b41d3-cae4-42b3-928d-9461da003327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c30d3516-4944-4846-92ed-dcf14dc95d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e399b1-f02a-4d20-b899-e46fbe87d90e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09afefe0-06fb-49cb-aa48-88fcd98ad37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba02d34a-b506-42f5-9e3b-02b7defa3ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090e771e-018f-4878-b4a6-11ed8e0d8065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6fd5f7-a2c3-4270-813c-d2f833548372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9919dd3a-191b-4e60-b999-022f122a097c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce6982a-45de-4e84-a938-7593cb68172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d79465-216d-45ae-ad98-7ff67d825b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08e2b2d-a1ac-491e-8ad6-a12e01cd72b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6a821a37-619f-401d-80e0-a1d2b8b9e0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf931b7-817f-4a7d-8407-898971a5c1f8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b57bc5-6ded-4985-8c50-0f3d2a4081c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcc9d2a-cab5-4ac8-8ce1-9384c62aa383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d034edd-13c9-4f3e-8236-d0d750cf1c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "072fbdd5-8ab8-4065-b1d9-d5d9edd68864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042fe387-1b76-426b-be3d-a8a5700165a1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb703965-82a1-47d6-bc05-6346a970a678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4238325-76ec-4553-a7c9-a4f79b4466e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fb6bc8-c458-4e40-a062-63a4cdcc72cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b42347fe-23ae-4d6d-ae31-3e7b624f0961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54712502-747e-4e68-90d0-d4b2c7a3b0a3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2742a0d7-974a-44a6-9a2f-50e63f4ea5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17a2d03-3ab7-4ce1-b2e6-049613a16bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c594265-19c5-418f-b4f9-df1c04960385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "874756be-0150-4fcb-8df7-672724d52511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2707f08-023a-49cc-9f74-90b05bbaaf00",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19144aaf-1723-4d8d-9cbe-b2ef03d727f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845108f4-c63c-4456-8028-c1d344bfdaed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03bef61-8959-481e-904e-0bd8fed3256b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f70969e1-2b7d-403a-80a3-dff355d4bab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c511cd11-049d-46f1-b874-a932185e07c7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b23ebc-3ede-43f5-a21b-cb18bad8555d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9537edc-4943-4ef3-a3ff-afbd86131759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef722214-c95c-4cf7-90bd-6f5f20556aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "576e3ac8-4ad7-4a19-b9a5-bb25c5cd99a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08633576-085c-48c9-9f9e-3e2362d5b382",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fe8dd7-3935-41da-bb87-9c12ee6275ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8ebf8c-6155-4179-bf92-7dbbc75a038d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb2eb15-f252-4996-8bef-e4167de6033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15171f3-9417-4b19-ba19-421de9dede3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d0ca1a-fc01-4e09-8b59-46754a2aa31b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c87aa3-51ab-4385-915b-dfcc0bbeebea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9a614d-e5be-4809-8223-2dc4f0f6645d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5972a0-6f6d-488a-9abc-00d18b6b365b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "56a6539e-d6ef-42ba-b8bb-e28a518b1a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d4abbc-91d1-4484-b1c0-89161fcbe1db",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3296bb96-79d1-427b-9aa1-da47a3d1d4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e183612-7440-4cfd-9375-ceee5e7a794b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fe9681-8d41-4d34-be39-85639936e174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1572be40-6d5a-461e-a80f-d1ec92d57d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09530a6-8c05-4e83-b6b8-4cf33c4b86e6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c1333c-537e-4c91-940e-57aca7cf42ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754d633b-54d0-48a0-b34f-c78eb15a500d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748d288a-dffe-40df-b782-b9d14f505c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5710a3-12d0-407f-bb70-8d645b1965a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c107e2-e6bf-45a4-b20f-a6da6cfa4050",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8741899-74b4-4c6b-a4d2-37be4b8e9e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bac8203-a0e9-4a2d-bcec-67f68d72cdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa616a7-ff3e-49ac-8866-5b7721e3c0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c49b04ff-60f8-4fc4-89ee-078181c0a2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0186d6-36d1-4361-a426-50c001c739cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddfb897-6f08-45bb-b23d-b7fc9a34adb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb12647-ac58-4ec4-974b-a1a5421e8878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0c63a4-c5e8-403e-8eed-cab82695ab55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e3304a-5032-42b1-865e-1e8ac029801a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df005bfe-eeca-438b-b1bf-29d4235af5d0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906373ad-7c69-434e-9c7f-32581add4b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3667d33-5fce-416e-9acf-a871614c2dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f058eb-6710-4a7e-8d4a-9d67d064e257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "073e7e05-9523-4ee0-950f-6dc8954ab526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab2d53b-cdfc-4a86-8586-99db920a3577",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a86b8b-300d-4339-b6a4-1ebb80de318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a768b7-d35e-421e-a13f-ed40d6028fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94efded7-bf64-4ec6-8d54-82d6461dcb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "306a7dd4-2146-45fd-9361-008b3faafdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799df723-b952-4aca-a125-5dd9278c0f01",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f80878-ba19-4ae3-a147-afc1c047069d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9910ced6-1b8a-43c4-9a4d-5699f383868d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c22b41-49ed-4274-98dd-ed919e313c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e9a87f-a9dc-4f26-bddf-b2b955aa5cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c8aacf-3965-4dbe-869a-c6f91c8fdfbd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0724ff9-f7d0-47e8-b25e-3bcc9a903b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0915b1-04a6-47dd-a34b-9f2d7af3a859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3375ed6a-f991-4e2f-8db9-8c8e3437c60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6dbcba-64af-4f28-a75e-9f6a44de6df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0271da9a-f5d9-4ec0-a8ca-3b73c3174b13",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a683140e-9d68-408d-854d-08f9393cd62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2547785-bb01-4c5b-8219-59aabb638062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa94572f-7d7c-4f68-8685-79826dea3d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e087b6-5768-4133-ba96-717e3610e659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0750d227-24b2-419c-8389-3b9c97fafcfc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcbfc0e-def9-4631-b5aa-257c3a220a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b2a341-dbce-4039-8f9f-43d1fb88dabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c15e1bd-43e5-4d57-a9cc-3dbdf513308a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6379f1f-f634-4b8b-9d6f-74c3252e2cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9fa6e2-20a8-458c-b150-1f35e490e345",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e5f0b2-9fdb-4840-be11-31b4cff160ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708a068c-b31b-42e3-86de-0861a0d172f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4870903e-2db3-4fd4-b289-a4b5b20ff0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55470f2-9c98-435f-bc2b-87334e7d8e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba5a63c-cc90-4f2e-afcc-74c2cb984d90",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9692c981-4614-4a11-ac56-5734aa3bec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2118501-d5a5-4a93-9041-de4aa65dcf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005b8367-e7fc-4568-a657-b2cbd03c90e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84b43025-4eda-4bb6-803a-4fa56e5462ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc90173-d3c4-426a-8863-711ffac783a6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0049f9-6f19-42e3-8362-61adc3118f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5ceddb-445b-42b0-b024-9ec902d61df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8400f38-e45b-4f9e-becb-fb70f7db8bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24535353-0b00-4f22-9f3b-1c6909ea0571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1083e41-d340-4daa-b2e0-e9b339651dd2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdadde06-c440-45ec-abfe-893e5715001d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07db3858-e9b5-4d18-8bef-fd5e1a0ce718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f389644-d333-4929-b24a-40f5f357718b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312fdbb2-513e-4a04-8927-7f3f0eedd582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44f07c0-9cd9-4d84-abeb-a543fd00ce9e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d979e8e8-b9dd-45a3-84aa-670006c2eec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f708c5e5-fa80-4b31-b7ee-9182cdb8afaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086f44e1-4368-445c-a0c2-f0ed0f665aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae45d49d-6a82-4b5e-911f-03ae8d2e4833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5548cd5d-6656-4a9e-bb94-148786ba6d4e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4d3854-a433-4c34-ae08-605e38957283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b477e306-1c08-4d25-8d47-89d88f7cb0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac4359f-fb9e-4286-ad2a-b8f700b34454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b29ea1ec-de02-47c4-a33c-b42ac0556ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0166f3b9-ce20-4eb5-8a5a-aafd3f476f34",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd6efb4-c6fc-4fe6-807e-741d9c750f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bb2cda-ecd2-40ad-bd40-49ba2533dff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec083a4-1617-4d5d-929b-0333c640cf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54ec0a92-f0b8-4c9d-83e3-2ce525c45c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ee2c78-6fb5-4163-926b-48d9e14d6d32",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcca7e3a-bd2c-4701-8a89-4dd3b3a1d0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b9cdb9-1e42-4dc5-94b7-e2f0caa5e96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85041a86-8d7a-44da-b123-00441102fa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "241c9719-4cf6-46b6-aefe-9a3b7da968bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b67e8de-aede-4f7a-bf53-09cced3303cf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878d4659-212a-498b-b749-9c9c71723c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bbf394-a64e-473e-bda4-bbb45875ff2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413815fb-0f3d-4a3d-b284-d29e92630f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d84ec0-87c2-4053-8f55-bc1cfdf17ed1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd3d2f99-bfe2-4e36-bd5f-9d8d242cae0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "060d4147-348c-48bf-b0b0-87a131b692c9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9873e0-55c3-4d03-9b84-1c182ffc05d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8865605f-cfa3-4cc1-ac59-1c0bbb7cc1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc31244-2b69-4d29-b13e-3dbc08ef4a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fde5e4bd-9002-4858-bad0-582830732ece"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0ed8abc-5147-4cee-b404-8e1ba6ab0fd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d63d1d36-05f9-4ab8-b8db-99f15d526fa3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05518e17-969d-4408-8ff3-2a8084336501",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06fd9d06-af7f-417a-8fa0-7042011c1abd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e57d4c5f-26c6-4038-9e93-bd094a979e7f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5175e8ad-7078-43d9-91ad-8503e3c2f512"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ee5c186-45cd-4360-a2fd-fbf59ea5b8ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a6b7162-c86c-4d5c-a8a4-1aef9df9e627"
            }
          }
        ]
      },
      {
        "id": "fca4a3b2-22ed-472d-b199-29b108cc6fd2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "14cf68b3-2c5f-4bdf-9c53-fd8a82b0a80b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3cbe962-0e49-4ae3-a3f7-70144603cb17",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "25733e73-e4a9-4d88-b2e2-0de83b641f44",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceed9748-4312-42dc-aa51-178c4500b8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2dd737-0ade-4650-826a-e8d90765a289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08844d43-6920-4e4c-b37a-6ac8f47f485e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffb93b1-23ae-42f5-b18e-fd5bedb91aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0b1225-f602-4262-b35f-5764652c0fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c41da0-a5d7-4de7-a35c-f103c228c6ce",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49309c92-d3e3-4493-8ec4-eb64687290e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a71b4a4-d001-4b29-8737-8b77c241d219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b82240-cc55-40e4-896d-f0cc1ef64389",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d6f531-0940-4e06-a0e6-1e8689f17fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131889fb-97f6-4e92-90b2-84a8d1ba8bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d3c1a7-e2c1-4a2a-9eb2-c378a7dded34",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6260d59c-1695-4131-9dfd-e7f615cfe2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de7fe16-b8e1-4e61-b514-8b7e6b2d00e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa39fa6-8553-4c21-bb5d-939da5939058",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beed22af-f7e7-4d17-a86a-9158036e1a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b496ba9-f239-47e5-82b2-a415ea78ef96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdba371a-2f03-4bff-891b-4175e8f7e822",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb675f4-4ac5-4386-a455-67740b59784b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24965d46-3209-40ca-b4a6-dc6ea21b9f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc1e6a1-3883-4e9a-ace2-c2c265a99f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d715ad1-20ce-41c4-916e-5100f96f7f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bc21c7-be22-4c11-8b19-8611fac8fefe",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beafee1d-ed37-41ef-aa6a-b0aca10a7fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245dab26-1604-4905-8440-e3ed3354d21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2987df2-c5b2-458f-bdc1-d81040424eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20ebafd-d937-41f6-9a15-176e76b23df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9f9fa6-a629-4dd7-8cb1-7ce2ebb29e98",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbdec9d-f02f-4f16-8dd4-feafae93800e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af81f3d-93df-42a4-9872-0ccb6ca87900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a0ffe4-e78a-4b06-9833-afa348b68e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f86b3e5-211e-4d94-b33a-b901745f2f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b372c2-b983-4d74-8195-2a72db7688b2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d0f0db-cade-4bf7-980a-4b887ab932ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "513e7325-7402-496a-92cc-608b703a8620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c94ca3c-7b35-4e07-8b4a-48549032c0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edbe81f-d0c4-44d3-bc7c-024b42447f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815cd845-9185-46d4-ba34-c9ef324a7428",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed894b09-0d79-4078-8e8f-cf5e284a237f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a4ab97-36f4-4fa3-88db-36805e750724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171da8ea-4d43-412a-872e-39ab019942ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedb84aa-56e4-4576-a0e1-c18ba39f3b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32953e15-cdd6-42a5-b7c5-bd3d7416aced",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7bc7bb-b0f8-45e3-93b6-f056cc757cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72f4059-b767-42b1-8afb-6af636f5a6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49a90c2-4640-4b4e-b780-4666ab22c18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c6a15a-b619-4a34-ba34-60cc3f94496e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a79feb-c25d-4269-b514-b65106c26210",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfad155-80f4-466b-91e3-d55f6ddc0746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb9205f-e09d-401a-ba47-113ce544d570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b12d8a-3f03-4a57-ac8e-55829d79e9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972fb106-a1b3-4377-ba4d-0b6ad306bd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8915e2bd-5420-423a-99a3-bed58798ef1e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5a67b6-9b2c-448b-8eb7-d105c7dce5d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "445d1160-81dc-448e-9524-ffc6a4bd920c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281d4ee2-402d-430f-877b-24dcba6aa45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead2ab73-2f8a-44fb-a2af-6dacf0ce44ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6254a72d-fcb9-4a6e-98f4-9abd8c6ea74f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adc3107-c5df-4ebc-a321-04599701ca99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8275234-7b4d-462f-a472-3d0a7cc3d106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804cf030-81e8-478d-83c5-1116028915b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d5f99b-6a3a-4875-b784-571669765230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0233555-2c5d-4fe8-ab9e-80b63a476901",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c7e453-1417-4199-bd18-37dc2ade967f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb31084-c1e2-496a-a9b9-4cf21cfc0587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7158d1a-6237-4623-8e85-4309296efbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc5ee32-1826-496f-b1f4-7b06dadab858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588ebdf0-3eaa-4781-9aec-62074e13bffd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8390316e-c174-434f-88b0-d8e211202627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1061b9c-b9fa-45ce-afa3-08c3ae1b7faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e472b6d4-441c-48f0-9a41-a684881d6fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c167d1-bf03-499e-89f9-42bb4d238c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c98fb55-5a06-4454-84da-25e9635ad0ad",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f02116c-91d1-4e56-93aa-8b4a016e3dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283ce746-bda0-4cec-af6b-48e897d4ca98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f8143f-bcb9-4db5-b60d-fc4247a4fbaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993ad76e-3604-475a-b863-4002e4ed71a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46622220-9d3b-43da-8aef-efe5ce402f8f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41933c13-0264-4c0d-aef5-8150b55a8953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9ef21a-4525-4a78-80b0-f0de3c414cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2324c5-a515-448b-af26-6142a00147a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ee1c05-2bf9-4ad5-af19-49b2ccf72b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02e24c0-bf80-4679-9193-1276412097a4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a4888f-2a9d-4103-b7e9-cb0e826384d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404362ca-c221-432e-b67a-95214d12d261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0f4c81-5049-4fcf-ac15-1f7b9cc53f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f777c02-9853-462a-ad6f-b2f55c3d77e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa222d80-3d2a-4637-b447-2645869fb6a7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfff41be-4095-4816-8341-d363a6159ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1662f964-eacf-45b4-bed2-bff202674115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefada9e-3f91-46c0-8dd4-206d5a14f043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36453f15-4231-48bd-9558-9c3a9ad14215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f610557f-98a4-4459-8cf9-ea946ad5b28d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062e37b4-da1a-45a7-bd43-56fa8b9f47ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c4b4d2-038c-4a93-b553-8b766cd9002c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1844da5a-6c96-4b23-85dd-534aa28e9537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a70b1eb-535c-4a06-8eb2-9adcde12b517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7227c00-ea82-4db2-9ac1-075c753aec81",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7b829c-cd69-449f-b9fd-54b39337524a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2310be-4883-4b30-9766-910333a14cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d054935-f20d-4aff-9a90-8fa85dc3cf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dad972-36f5-4906-ab02-39e7afb60402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce1c97b-ca76-4610-9854-7cf8be201605",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72205c3-358c-4773-866e-c36744d4f44b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9543971-2e11-4e44-9167-05bfdf8eb164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f9adda-59a6-4271-b486-b560cddaa3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214348f5-480d-448e-b16d-f8535ad2a094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1470d2f3-b3b8-419f-827c-088b9a226b52",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870fe041-fb75-40c2-afb1-85e472734c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5aeeb09-f89e-41e9-aef0-c82c89a75a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b588ffef-84af-4d4d-b285-2ea8e7a54018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c620f78c-fd0d-45c8-841d-323fe529fa0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba1fd83-572b-4fbf-9f76-3042edd829fe",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d22ac0-2f83-4a81-85d2-4b9b8a400672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7572fcdf-8bea-414b-977c-04b13d61884d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdabb23-a165-41b2-b948-85aebdcf392e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e63a504-557a-43a4-963b-bd28b231e414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79abae3-06b1-4076-ac8b-a616a10c7dc2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ef02dd-38e8-47bb-a034-40279afc6866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b446cf7a-a298-4104-8039-b00b17efa343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1f2633-7bb7-4582-9924-f86bba713530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5914bb2d-bbcf-4519-a5a4-373d5a654981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a12e03-14e8-4d0c-9aa4-ca1743dc55b6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8b9c8e-790e-4e03-88ba-31ad7d6c0232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7b0d0e-1a2f-4b66-957e-7f652313b4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3baa89-5f9f-4270-8fa0-82c1349ce46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6084e33-3c99-4818-b73d-a7844ea843f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37daefcb-5c8e-49ba-a274-fc5d8270134f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fecead1-6b1b-4f07-83a3-a20a14bb60bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de03ab6-1354-4839-add4-8d11d7220985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8eec1e2-ee90-4dbb-863c-37b19c2b4d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54221989-44a4-4a9d-87a3-a7ceba94ed79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0203f0fd-850e-4a45-9f62-8830857e9e16",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f414a91a-4237-48fc-a8ee-4ee632b7ca83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9038fd83-306e-4acb-a7dc-4b9babec5ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c1f65a-7e82-4c69-9730-938fcd7df453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18e88ab-95c1-4cba-aa1f-3417630d1689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a242039-b9b6-4ad1-bbde-4fd5befaea4b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3074e21e-60b1-4eb2-8f2a-2461c8bee6ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57323b90-6afe-40bb-8565-b998ada6744c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8965491b-992c-4923-9036-b36b3ddd8ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74229153-aa00-4449-b835-4026d27b8279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ab7f45-3a4a-4333-9346-bc0544477155",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036708fe-0fba-4a65-831b-1ddd191bee89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c1f2e9b-3d5a-4437-94b9-f785d5fb6a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc12779b-6584-4345-816d-db99627531ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124acbb2-0cd9-40f9-b329-f1512c4d7b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32859830-69cb-4fe4-8a0b-f457949a68eb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22ad7fe-84be-4d8f-9705-dac75c85ce30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17fe67f-e897-42fa-9790-18f51ad0c8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba13580-e73b-4642-84fa-469dd654afa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052e9021-efbb-4e97-9886-aa8a6af85335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cefebf-4f2e-4500-a267-00edc805e9ef",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2101fc-0153-4717-83f8-c51c38c445e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b02ec7-aeb2-4d9f-bbb6-2f89466778e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047d581e-53a4-4673-8133-860c0acbfe5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a18f4fe-d394-4580-8a02-6b956b283370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cab1763-0c7d-46b4-9072-ad9b5edcd3f2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58eb189a-e257-4565-80ad-f34fbc9e1d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0a5fe2-7bcd-47d2-a570-c600d07a30ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0124c6-56a1-41f0-a6cd-15b1410cf73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8379568d-98ac-4fdc-8b2f-ccc094d01842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc95b332-06da-4cc8-9595-6b3b117f427f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0fe633-3f58-4a87-8a07-6b93007172aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41a2bc4-e9cd-436c-a2ae-22e382faa8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ce1f12-8940-4d9c-a55c-37481073af33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f478d36-1f41-49f4-a737-a7543359a48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318fcdf2-a0f6-4145-8587-b84c33faac1e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9e1781-97ca-48fe-a920-c432b87be23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078d5fd8-18d6-4383-9255-3365b6f43ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19774c53-9e93-43b5-bfc8-7dcf79b7026a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71a36cc-add4-4844-be3d-cb2b1475355d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec240c8d-6f29-4d17-83dd-1871a45894e1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b0f670-9ee3-47de-a17a-878f1f108cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b744987c-7ba5-4481-8d1b-8a9a79a2546f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f93870d-4055-4938-92b5-0a028d63af69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483cbdf2-17dd-4440-9443-eb81eaeaafa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4172acb-59d9-422c-a95f-93cd221185be",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fe5f21-dece-402a-bc62-351da61d4b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe4d722-a37b-4f83-9584-ea5279062219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d586f7f-89a9-41ce-a806-c2d60dbcf336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8391e00c-bd1e-42d1-8eb7-41c2559e1deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcf2cbb-4d4f-4114-9e10-866d4a50ffed",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa7c711-a184-4fea-8b63-a282a1efc37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fa9a48-0354-4163-a682-f5d5dd235cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd3e417-718b-4368-85a8-0c3d2b7c05f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2445f792-161e-496b-9e50-c5a63efd730a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060b9962-0d82-4a68-ae15-294b27372399",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf5afaf-2b84-43f8-a606-725668999e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc6b5e6-a6c3-47d7-b626-a786d1b27ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbc16b4-7ec2-4c80-8255-5d86225a3453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5d6ec5-a8b0-4746-99d3-4ce990e12816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6513f85-c10e-4a6e-9057-3ce8cc746bc7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d66b213-e54b-4b0e-a983-ec99e4bb07e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4677b9df-143b-4833-a2b1-8631ec194e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de2538e-8db9-4671-a5b4-42492a1fcd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3ccca1-b178-4d3d-a7bb-c7d166198482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf5ab2b-c672-473a-b2de-5ae3d42066b7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bc2ffe-14eb-4494-96e8-618ec41e1873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7381ab-18f7-49b0-862d-6b2ed17408a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b868de9-458b-46d6-a8ff-71897a16c955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405d5b00-1168-4bd4-9dcc-4d44f0047619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11938ad-f5e6-4ad7-b45c-9a6b127df29f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4708abca-d939-4acf-8e95-6fc62b8d6cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13d6b27-bc55-4d5c-8a5f-38f9e993d4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e3bfa0-1acd-46ae-9284-b07c9fa7eec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e026009-ca29-46c3-91df-b2d076200c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78554299-c4e0-41ea-831e-7b6ef23c4ef9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3d37d8-4c01-4b75-9419-571e08ec1e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca25c58-404a-4321-96c1-2ce5c9a8a8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fff1dcc-0457-4085-bced-5bc0778b54c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c29685e-a95b-402b-ba96-15d7b8185271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79014521-115a-4ab5-bc83-2c629357bfca",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74222413-8ba1-42d5-8b58-fc24456b0d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1377c7-d880-490e-b00c-f2d07ee21d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd6de60-5d4c-4a86-8df6-b8fc39dd8aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cd2e1d-cc24-4294-8072-7ac9bc1dfba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8532ba6-9bd7-4288-9e2f-cb63e9ae155b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5c95a4-5420-4d93-b041-9e50f44f0f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b161d2-fa62-4cf6-9e02-2a325d8845cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de18f1b0-c910-4aa2-a717-211e91d1ee64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b97568e-6dec-425d-b3e3-a401b42497e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8198993d-0f18-488c-b0ab-63ddb4200d40",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ffdc89-a0b5-4394-bf4a-8a266f957324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2e188c-92d1-4ae5-b119-db29d5531f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da799ed-ca61-4312-a371-cec1c8624065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f986708-d647-45c0-b76b-f0e9fac6d820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb0400-3ddc-4472-8b49-f378cfea5ca6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3681d51f-1431-4075-9335-26ba10643046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a376366-2475-45aa-8a4e-c47a59b0c38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f319e0-6aa5-4365-97d5-566870276ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fe0076-8463-4df1-858e-c38928a781a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a753a7-be59-4522-ade1-6f28f55f9e90",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c25cc0-ac53-4939-aae5-fc5e5bbdc1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422629bd-eb97-4fba-ad22-f1dc19ac67be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd778f55-a9db-4856-a779-865c81707694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfda5a35-6912-43fa-9d61-f3697613a9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694fa532-46c0-4c20-a45d-7851a42591b2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105eaff9-218d-4ee2-975e-a06ea156565d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f51dc73-4612-4656-801c-dcce9e1b3034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079c20ee-c33a-48f4-b34d-fe5307191297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b00fa0-db99-445b-a6c3-afee6a6d73ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4b724f-f2bf-441a-93ea-40e4a5478b57",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7161f1b6-9e58-45d3-b162-ebbcd890aedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fecb0ec-03b3-417b-9daf-2ff12b1d17df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1b64cd-8d29-4024-afb5-ac556903c1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996306fe-a4c7-4d59-88fa-e23ad3af07ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30301aed-db96-457b-9451-16faef30eb85",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d33012-acf2-4319-8955-8c83812a0f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9411c95-4f04-4041-b104-353027a3ff16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4b531d-c449-4ab1-b4ef-d64dfb54f75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14e27af-bfd5-4157-bb18-a40dd8dc6899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fd3c49-e354-47eb-813d-3e56324c6d56",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b5e473-9d0a-48ed-8ddf-7bd582305402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74bd308-126a-473f-ac58-d2b92b41d255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a723e9-4a15-4dfc-bcf9-8c4da3baca92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56feebd6-1a99-40ac-9737-fcb16794976c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9232f0-c9b5-4b28-9af7-f6f42ee1da4d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaf1e46-ca93-4e48-b46a-6d7b3e045444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdbf23c-b188-4665-bd97-e6b868daa2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83e7f18-fcd4-4d63-af77-1906e88cf795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1ccc7d-c177-4400-a0b1-49e04131384f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154199e1-bfe2-4a9a-a944-80abb4362104",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902dff6a-7750-465d-881e-7833e2340894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e5bfe3-34c0-430a-b678-5ea6c9df9871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72d8c74-d582-4a8d-bf1e-fdf61fa51aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1290f1b-d5c6-4098-90a9-227d1fa55e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7fc11b-56e8-4266-b22b-1147d1a51a16",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e88893-d8c7-4783-91a6-fe311aeaca79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821051f0-af8a-4478-bcc3-917d2ceb0dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584fa7b4-d5cd-4bdc-9dd9-2ee98effeec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573c7570-1745-4325-9346-763e521b35e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0eebdf-ab85-46b8-ac13-54bbd3b96195",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983a9ad8-bd11-4b8b-8040-bf5eb36e9030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e03d666-141f-402f-8225-e2e0bce145fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9035986-6ab5-4746-9300-b1ce49076432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf50a665-9b21-4092-a5e8-0675648b784f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97fa852-d482-4a0f-8cd7-bbe769e7803f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119802e2-5e3d-48fd-a8fe-40c9646819f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb3a78f-bcd3-484f-bbd8-ed11940b50e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602577d7-7513-4b9f-94a8-f10a07588623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdd93ae-c272-4a87-8912-81203a9849bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8667f7bf-8350-4924-b9b4-5b54973dcd09",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba2f3b5-42e6-4c31-a298-e45adfb45a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572c30aa-8025-4b0c-ac7b-f3e29a9fae75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8d9539-c5e3-4ae0-92ba-41db9b7efa86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe7545d-a2dc-4186-9ce1-71d8cd263027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06382023-3ef2-4412-a517-788cf1c65f81",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cdd8c9-75f0-469e-983a-0350d1e1928c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240a7727-c7ac-474c-a585-01cc48f037df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8aeb5d-27e6-45fe-b335-841d84cb53ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34ebc43-dcb0-4875-a37a-7907c7ed7e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9e699f-1eb3-4761-a68a-d0cc8169d121",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f342fd20-df29-490d-a7b9-d8e81af0dca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320d6d15-9b93-415c-869b-238bf66103fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ed35a3-d1ce-4f17-a4e8-d7b6e926aad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bd197b-8833-46dc-9b76-f7b0af0566c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a136e70f-43e6-4f84-9d44-26e01a8950ad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad96ca3-0d4c-41a3-894c-a6ce00ddf150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3435e490-e7c1-4c2d-8b9d-63ffb70ed0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4211bc2-7391-45f7-9adc-8971b9b6143e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26c69b6-5524-4899-afd0-065f96bf99a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de33ad9-f2cc-4e34-b995-e151eb570e44",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189d0b36-8509-47bf-a1c1-52225fb26e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5509451-9d4d-41ab-ae52-83fa6e461c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aacfa9-66e8-4059-bf85-fb557b34dcb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a542cf14-3871-42a5-8cfa-ec7840d1cea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4abfe4-4cd9-4aac-98d4-d63ff9665b2d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f11b926-b1df-41b9-b552-743a08356324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7884d392-2e73-4c04-be14-440e92551afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d080218-0929-4884-bc35-d4c71cbe5c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311ed01b-e014-44f4-a825-134d8b1eae02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6e1a31-c79b-47e8-af36-e3aae682d4ea",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405dea80-5d8b-455c-a148-b14fdebf5a1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75dd26d6-c6f7-4bb9-ab18-3573b3d38327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b0f787-28ac-4c6c-af34-6cb5e489513c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eff3080-18b9-4fdf-8042-36ceb957cb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaa6e21-36b3-4405-aaf6-25e0baba6fe3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3bf7c3-66cd-4076-a767-6beaae6c5d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c957627b-97af-4656-9e30-c8dfa9deb12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95bfa4f-9b74-438b-8c51-af6bfa16729b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d86432-e9ef-45ef-8eae-647a4a81b25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e943f5-736e-4e95-b03d-00fc02db6ac1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fcaa56-96a2-4700-9c3d-ada7459da065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0a10d0d-cb51-4ddd-a425-bb59abfd4c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c9edea-c0e3-4e95-95f8-2ab41fa6e4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d97b46-810f-420f-9fa2-55f1e5c11028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79ce662-11f8-451d-a5d7-0e3e241b7797",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58a1d61-3088-479b-a74c-bea6e87d8dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26666ea0-69e0-4d47-a5e6-ab9956d35c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf4f6ab-6551-445d-9def-6459c01acf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d52e13-2700-4a2a-a945-49e1cc42edee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0ff611-129b-4060-867f-427ac07b0b42",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4b1f58-410e-4daf-9447-058cdb7b4231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e0a15f-6e1b-4d99-a37a-8ace62471b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f059bf4b-0ee7-4a69-bc38-c5433ded6949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979806e2-f48a-4973-960b-189f8df798fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7303f02-2005-442c-9378-d72316fb329d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb379351-58e4-4a9a-88a1-52bf011c258b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8f7107-4daa-40ff-9f68-8cf5c4a40e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92227f0e-1b34-4004-8d09-0dd245da9955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d11dcf-c52f-459b-ae4b-9423953e4b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea4191f-698a-45b8-8eca-ea40ef36a68f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9421ed-3678-4bb2-a41c-e3616e6cbfb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "718f97d2-d05a-484d-b900-7d2c84cc13ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b36b4bc-6d89-4628-887b-857128121953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e294a56b-f865-4e6a-88f6-e96020aef566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5068e6-1cfb-4a23-b4b2-22ab289a613f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb611b2-ba5a-47ce-9da7-a2d3c6aa2c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ef0fb5-f355-43fe-9c21-1e26cdfda2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc028115-9157-4376-bdf2-ea54876bae5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ef9b33-3286-446c-b929-9c9ce19f388d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d62340-ba1f-4bc7-9f19-a2531d6c0cd9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9ea527-5f8f-48bd-b2e0-372f764f7fd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147417ce-3582-4291-a47e-3a0f784f6828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99fb036-c809-4393-a8e4-0147fa4b4fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9bb8c56-52e8-4a15-a82a-43944761ffbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf24eaac-799d-4480-bd0d-7d2b6b96ab8c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625f7564-9ed5-4408-84e1-78c3ddcce812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c67cd8-cb16-49b8-973e-02c58b884a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539e8b7a-8fd8-4107-ad05-1b82bb402967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e037406-3559-4839-b927-d2004ecdbf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d550d168-1a25-46d4-b8e5-d69bd764def7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cfe5a5-dcda-43f7-8d57-2685986dbfe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495c32fe-3606-495d-a73b-fbfc409571c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fc4c98-36f3-4855-83ca-ea51db0ef008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77352a75-4ba3-47b9-9bbd-ec66e13d5b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b60d04-0651-41df-a2a3-85989164fbf2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170a902a-04c5-4a55-b5e2-cd6cc7fa948f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9c070d5-dbe3-4600-98c3-881bf7d8d3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d73a90-36a5-4d67-a757-fb3140eebbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c086224-b9a5-4cb3-8b72-a116050016a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c97f7b-d437-4afd-8209-25360680cb19",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b2cad1-b4a6-4845-9ce7-86e2befaa992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca4a1c1-2850-48ab-98f8-9d8c22170f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ac10a7-6f98-4c15-be0c-3f95a61fe452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed61a71-5594-4ebd-bf15-dc94a1be5530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a150d218-b0a3-4f6a-8e43-1fe9fcf9904e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb141bf-2407-45a9-8d89-910189dce585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39f9c71-0faf-4047-a49e-30a8717b25ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2995397a-39cc-4701-a616-2547c9b05be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706fb7aa-dfb7-467f-8670-1a74c8a59adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ab8b7e-c01e-40e5-beef-f9d8c6246ac4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a32032-1919-400a-a1c4-efa9700c5789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf83e95-17e1-431a-a5d1-1248110749c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65528e56-d6c7-4ca1-9f68-1fc87a7ef3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752a6104-5c9a-44e4-8a6f-2b1d531655ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7b73e8-69cb-46ab-ac09-75c0862a868d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4435d0e-54a6-4047-9dc5-ec7b27f63799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58ce48de-5b09-487d-a82c-e8552f2820a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de615524-abd3-4160-b04d-d309ce19f84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4309aeb4-9533-4b7f-9c34-34b7bd423e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ad5bb8-053e-4fd4-b432-d6c5153340e3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff4547c-a529-421e-8b38-1dac1e89bb9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29f77714-3ddd-43db-b65f-b714a2869f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1029289-f29a-428a-91a1-005f49958e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31de5e70-b96b-41ba-ac1f-466082b78037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca01ad3-9319-4724-8861-7937f998f0ba",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c71b0d7-f658-4134-b9f1-26b3f8cba702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98d45f7d-a761-4444-91fa-4953dbe0c3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6c6b91-6319-4200-896a-ccd02c8c5aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ddd99d-75ab-4285-b9f5-2cc7258ee1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6746225f-cff0-47f6-93f8-e3762cc6ec9e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f5497d-0d4f-4a9a-9189-e39fb8e48e06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3ae48d-7623-494c-bb92-272d10779ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdbd977-46d8-461e-ad05-1d8735f74c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a624ae-78bf-410e-9ece-c936fc3599c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac14f46-11bd-442c-9470-293f35c24815",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf7f577-caea-44fc-8d9d-7cd45395eb3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3de644-ea8d-4c1d-981d-d3b44b6e1dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bbeab4-cdd7-418d-81a2-c6a62b5de118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3756b2-b98a-418a-80bc-79f3ae947dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd497c4-5e70-480e-acfb-f890f4ddc03b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b623ce3-38a2-4c21-83ee-ef387b97f91d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b73979-abad-453e-bc7f-b7417625c084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a338d411-a76b-4d16-9c79-870f62b92df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffe7a7b-7349-434e-9b06-68db9e35c35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c632751-59d5-4ba5-a0bf-e76d92b4272c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5683d033-5c8c-4358-9310-f4da6095a5a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796568fc-5514-483c-be02-1d6ad84e0183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304f0148-d206-43b2-940c-27f1ad5b1a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2376982-c8d2-4e4e-9a33-7e4746437d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624de4db-aa3c-4038-8448-9911e9b546cd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff37d9f1-f130-48cf-84e7-82011000bab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e389d0-be83-44ac-a521-e97b788d30ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0ae61a-78a9-47b5-8462-8395564f195f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e03510b-fb36-4d5c-909f-8c0b04cad5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d545915e-3dd9-4f21-85cb-656ab6d4197f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6df308-16a3-4ad5-9b1a-eed73868f708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02fcc96a-2609-482c-9535-6c1ba2487b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcb7761-94f4-4dac-be98-f1ef2100d73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914bd76c-017b-409a-863e-e9e7971ad657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f63dbc-ae5b-4d5d-aaee-e74b3fbe313f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fad6bf-3d79-472b-8140-93653e2c173c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af1c715-1613-4fc2-b695-b97fa5f4218a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b146669-7a06-4c95-a9ae-d1c9503d058a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12546fd0-4681-486d-a3e0-428f02f8c5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6355ea7-4e66-4fee-8def-444c228a24b8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81318e69-7f7c-4a1d-9e91-e35e7e9af6f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bce20cf-ddb1-4ce4-9a4c-b30337f015cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d466ea72-4fe5-4dbc-a5e5-0896c342ca18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae38256d-7d5e-43e1-be23-4355789984ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26b8471-4efd-4622-bd10-7272aac0a651",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1c971b-d265-41cc-a6d3-9154e644e017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a1ad46b-e2c5-4fc6-b387-d0572cc68f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953bc438-9527-4935-afb9-f13c129632dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0af3e34-7399-45f2-8ed7-ce4a2c3d2710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d10a087-4cf9-4d41-bcaa-bb073219029c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23d06ad-f0de-4e68-a055-05b49825b77d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06f47d2-5804-49e0-b226-df281cb143c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6305abc-bb73-4089-82c0-0e10712e2e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2054637-8fdb-4194-9412-52e22d0256e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0f1276-8c12-4e8f-8645-23196af4d024",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d4dab6-0a7c-4974-8f71-3cbf72e73c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c845678-57d3-44bc-bf0e-33179d2d12e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7a4dcd-ce7a-47fd-bfe9-c18ed4c844f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e9f9d2-c7e5-4649-a74d-d45c04164706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c433df-a514-4df7-b3cb-f2e6689905c9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa98c8c0-0a2c-45bd-ac4a-fa397ae9a652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51676d6b-c893-41a6-8d49-7be61b2ea554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb87c324-44be-48f2-88df-eb7539dc330f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc824ea-24d7-4e11-9e14-7bae289bce19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82eb610e-27b5-4807-8b2c-3d64b9cfc413",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2ec53c-9f1e-41a3-88b1-a163af60e2c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6a62fa-7afa-4729-aefb-18e71dcebef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4279b1-a91a-40b4-9e20-9f10bc9b68e6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52988e88-2831-4f2a-bc3d-63095df1a0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb1c33e-a64f-4597-9d3f-28c2c6fefe76",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d148be9-692e-4ba9-b88b-12358c79384c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf2d3377-30a6-4b45-b053-30d8626a0d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce0def8-d693-4628-9501-70a05971a4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef21254a-ed3d-40c7-9975-0f5e051b5efd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff1db161-baab-4c55-9f08-9d077203fea3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "534a1b26-689f-4140-9cb6-2f90e7c4af55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db009df3-6a0a-44f3-ad6d-e784df9f4b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f42d967-f733-43e6-809e-5ad3404dccc8"
                    }
                  }
                ]
              },
              {
                "id": "1818c9a6-892b-415b-bdb3-6237ef15a6df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dc37cc0-5b19-4d80-b495-d844ce3ebd68",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06447ffd-14e4-4be0-b63f-31ff61d01a33",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e26568a7-7ff1-4ead-9fbf-839657f86456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38b9a8b-16c3-4913-ac3a-6615cbff76f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e35d580-054c-4dd5-b01e-7c6a38ed502a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c359fef-4abe-4776-91bb-e1367f774e02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa9c95c5-bd2b-48e4-829e-bb7fdda40dc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f398f717-3189-47e1-967f-e2e6b8edc24c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6472905a-3f50-4c41-8a34-b342702ef1ee"
                    }
                  }
                ]
              },
              {
                "id": "eeee0833-dc08-4c68-aad6-b9c206576f55",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ee46c0da-7756-43be-87fe-55cba5ef546b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbf0d84-a9e6-4222-bbb8-5643bc887f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8785fd20-2d6c-4b2f-a786-34e5b9e89f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f33662-df33-4804-9011-92d3a5b9c633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d965707a-32b5-46c5-9d5c-b74aa8e8aea5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d90793ec-f6cd-4d10-936e-2e8d29a706b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3520fe0d-7056-4cd6-82ef-1d3640847bde",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3449fa51-2e1b-43d2-a914-4ff654091ac7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d620f477-a4f4-46ef-a921-45682574a10a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "203b3f3f-07f8-4a8a-ac93-0b49086c6a58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d834905-a73b-4976-84d0-521e41f00031"
                    }
                  }
                ]
              },
              {
                "id": "38b7546a-bc04-408f-8ca1-9f7cf923a2ba",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98c1befd-5d8b-4099-8011-aeb2fe10fef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "357d6ea3-d42d-4b45-af8a-9ac9a8a5e3f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2d2ed2d-4e03-4c11-b97e-0ccaa96c46a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8574a6c3-b847-4eef-a4e0-92d72f63eec5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2246c5dc-3680-4aca-9d26-1f13def4f8b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "82f1ee81-4f16-44c2-8f21-801bac5b5974"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63df45ff-6ea4-42c4-b9e9-901458aa1c95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe731f90-4d9f-469e-b764-d8f896e9286f"
            }
          }
        ]
      },
      {
        "id": "b708c98f-be83-4b65-a645-eb2cc8d0eb70",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "36b4f1ce-618e-411f-895c-5a03f5dab2bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89d2d2a3-9f1a-4489-ae42-7dda468428b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92be8414-df63-423a-8ffd-c332e552e0bd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c50f9fe-5e57-406b-b690-c2c2b45b0824",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca15b92f-a151-4e91-af17-2380b22708ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd563f2-eb71-4c07-a8f7-9f4f2731b137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "638ece35-907c-4eb0-b7b1-5c1f3815a75d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "914678d0-d4aa-4f09-9828-1cd7a3009c8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99b8d371-2f69-4985-b2e2-60656d2f5b37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44b1a539-4016-4193-9078-c9d5af9b23b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6cbd1ca-c816-492e-a655-06a1d886eeaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "626e5747-dbf3-4fea-9ce4-4cfd4b085089",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8c030759-4d96-4da6-b8d7-6679367fd924"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "720d4465-2265-4a77-ad50-a830352b8a14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c745c5e1-6bd6-48ae-8055-5460a28e6ff1"
            }
          }
        ]
      },
      {
        "id": "dd9afb4a-8d9d-4252-9fd2-4069c18bdcd5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6bdc7d4d-8798-4871-aa6f-d79699158d6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbd48512-959b-4384-82ad-b2e9ee102d32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6807a8df-acde-4241-9d3e-f78588017e91",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6927c679-56d2-4e3b-a43d-81f62774e022",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04d0f800-96e7-479e-8d7d-1dc49f947209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ce2544-e8d0-491f-80b5-8b664dae57bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "844b3293-235f-483a-bf11-ceaa965c0ff7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6f61f62-a49b-4bb2-8899-96841b819d41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "592192f5-f2dc-4a77-80c0-0f3ebea90a5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cdcf177-5434-426c-942c-77c8d5371802",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb9ec19b-9383-4b71-9574-faeefd98c542"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3299870-cc87-42ea-b127-dda209584170",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3ff0f6e4-641e-4c36-a91a-dcd98d460f36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e28355ca-1d39-4378-b7ea-ada623ffd9a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a8ca8b4-1d80-4104-981f-d10fc12e7468"
            }
          }
        ]
      },
      {
        "id": "afee24e0-4d82-49e0-9740-3510856959f1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "755d2fc4-2032-4c24-bbd4-40fe160777be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d2ed459-d7a8-43a9-9227-3743bd619a1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ba82c04-bc24-4166-8aef-2274097c6d63",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc85fd93-1baf-4c44-b205-aae72a13e74a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b59c6e1-a9f1-4a56-9ae7-e3a284f04e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714d527a-c98e-49ab-90b6-537d0d06456c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73dc56be-e997-46d8-9847-f82168995c46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb4ec1f5-0e7f-4543-9e10-d7fab9dba315",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bd8781b-d5f0-4aa3-9bba-cbc0bcbae1aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "610a8a9a-cd1a-44fc-8d7a-ed58ba7d75d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1ba0ca4-45ed-4910-a858-e98899eef07a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc0a1534-043d-45dc-bda5-d08d8fb3cfe5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8293ba47-392e-4dea-8ca7-ff26b17591f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63aa0b88-2a5f-4f9d-a30c-9fbb2cd095d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0eca723-fd36-49e3-9d03-29de443a0dbf"
            }
          }
        ]
      },
      {
        "id": "76c8e421-f7df-4285-a82b-7e58278cf7fe",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25754b78-e409-4c5f-90ab-c2a24f3bb6dd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d56f1106-2994-4495-86c8-ddb1e6051ba8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f98e6ecf-0890-40a1-99b8-9658c1b25477",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "469005ce-4d38-4e07-bc11-9f9f10648af3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8db71967-ed9a-4215-bb57-67611ea6f13c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 97.65492957746478,
      "responseMin": 8,
      "responseMax": 5461,
      "responseSd": 460.5492441406412,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697243548738,
      "completed": 1697243590294
    },
    "executions": [
      {
        "id": "ea6ce2db-0274-4431-a319-16447484f140",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d4066ecf-9534-469e-b487-76c82fca64e1",
          "httpRequestId": "3694d375-42c5-4432-b791-4a65130aebc8"
        },
        "item": {
          "id": "ea6ce2db-0274-4431-a319-16447484f140",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2e8b375e-14aa-4e74-921c-9decb96be439",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "f851057c-c79a-4ffa-a338-733bde510354",
        "cursor": {
          "ref": "af389995-872e-432d-baf4-c0d45ed41631",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9e526667-42b4-4b5d-b7d5-7ed2da90f737"
        },
        "item": {
          "id": "f851057c-c79a-4ffa-a338-733bde510354",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d83d8f66-63a0-411e-b157-b60494e2fed1",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "91a9d269-03fc-4d88-a207-c437d370ec9c",
        "cursor": {
          "ref": "36965107-70e3-4ab2-ac23-b23d367ea17a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "98c1c2fa-1b30-4b72-9296-05323dc2d50b"
        },
        "item": {
          "id": "91a9d269-03fc-4d88-a207-c437d370ec9c",
          "name": "did_json"
        },
        "response": {
          "id": "a676b35b-fc91-4985-b112-e9c90b8518db",
          "status": "OK",
          "code": 200,
          "responseTime": 325,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a44ba4a-ace7-4e15-b2ba-84d4a157228f",
        "cursor": {
          "ref": "a281be52-1b87-4cf0-9f23-1e8f478b8e67",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb590d04-d4ab-4e2f-9537-f18e161bdb4e"
        },
        "item": {
          "id": "4a44ba4a-ace7-4e15-b2ba-84d4a157228f",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e1692f7-23b8-4baf-90fe-ae378794a33c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3054,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a44ba4a-ace7-4e15-b2ba-84d4a157228f",
        "cursor": {
          "ref": "a281be52-1b87-4cf0-9f23-1e8f478b8e67",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb590d04-d4ab-4e2f-9537-f18e161bdb4e"
        },
        "item": {
          "id": "4a44ba4a-ace7-4e15-b2ba-84d4a157228f",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e1692f7-23b8-4baf-90fe-ae378794a33c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3054,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c682b1fe-4c5a-4cc4-a2cc-312b13abd718",
        "cursor": {
          "ref": "b82e7053-0d31-4fb6-8c60-0ea5f81d8381",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f53ebaeb-545b-4c47-9dda-353b193067bb"
        },
        "item": {
          "id": "c682b1fe-4c5a-4cc4-a2cc-312b13abd718",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ae69a039-a54d-4005-a57a-49667ef8b5c2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a8d0f9-2f19-4cf4-a2ff-9547d8817c78",
        "cursor": {
          "ref": "b806a2dc-fe01-4c04-80e0-09b4f1d3768e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6544345a-3d3f-4593-8072-68f9bd9bf8e7"
        },
        "item": {
          "id": "57a8d0f9-2f19-4cf4-a2ff-9547d8817c78",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "92470989-9837-4711-b0cb-3b20d11d4fee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc0a89e-e987-44a8-b230-eb4237d94839",
        "cursor": {
          "ref": "4a69232d-1d04-4728-96c7-ed1b20fc8781",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3fee2ff1-fc63-4692-9d90-80a3156bfdf7"
        },
        "item": {
          "id": "dfc0a89e-e987-44a8-b230-eb4237d94839",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "73e5d6a2-498b-4639-a170-7613b37b56fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a35c090-75ff-467b-a4e8-b8261aad37e8",
        "cursor": {
          "ref": "8c277bf9-8450-405c-879a-1d0a320b8a15",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9e9ef48b-63be-4708-9a4b-600460806672"
        },
        "item": {
          "id": "2a35c090-75ff-467b-a4e8-b8261aad37e8",
          "name": "identifiers"
        },
        "response": {
          "id": "b39470ab-740d-4b37-824e-3bf34ab5f9c9",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35423062-ed5b-4cb6-8e97-a3f4922a8dc9",
        "cursor": {
          "ref": "a07c0bdd-ecf7-4350-9fe0-9d1aed7ec767",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa5cb7e7-58b8-4a37-b5ba-3ca926a277ad"
        },
        "item": {
          "id": "35423062-ed5b-4cb6-8e97-a3f4922a8dc9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "32ddd7f9-9124-4d53-b2e7-ce5c446c22d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8d7d4a-962c-40bc-b719-cb1567a41514",
        "cursor": {
          "ref": "7f97038c-8c37-455d-b183-2e7412f6d77e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "50387bb5-ac9e-49cd-94ec-a4168a6c1a0e"
        },
        "item": {
          "id": "ac8d7d4a-962c-40bc-b719-cb1567a41514",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6e95a6da-0249-45ed-a7bd-d4b777a9e0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df90812a-2aef-4ecb-a4b0-daed7473e485",
        "cursor": {
          "ref": "da139596-0c3b-46f2-89a2-f340cc985cd1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "abde122d-4607-44f5-af72-ecb3c57b27b5"
        },
        "item": {
          "id": "df90812a-2aef-4ecb-a4b0-daed7473e485",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2afcb4a7-8a60-4188-9593-521e4a25e2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba960b7-cdf1-4216-b8ae-f1c7a766dfdc",
        "cursor": {
          "ref": "5c8db7c6-d6be-4d24-a7f0-68c66dd48c71",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e01dd5d4-ae40-4e8e-8c9e-d7cfa641922b"
        },
        "item": {
          "id": "9ba960b7-cdf1-4216-b8ae-f1c7a766dfdc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "95ec5e50-c83b-4483-9e91-17fe00bf245d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8402be-1d2d-4156-997f-9083b83f5b8b",
        "cursor": {
          "ref": "e084866a-5efb-48fa-9477-6ec4df071879",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "415dd430-b3d5-4dad-89dc-c17be0448228"
        },
        "item": {
          "id": "0c8402be-1d2d-4156-997f-9083b83f5b8b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "332f8db1-55a7-4259-820f-f0444c9cb26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885a9b9d-064e-4c3b-acbc-d3647d4e2640",
        "cursor": {
          "ref": "d97fd21a-bb5d-4c81-b739-145195607090",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "385806f1-c021-44a0-b58e-03e6766ecdba"
        },
        "item": {
          "id": "885a9b9d-064e-4c3b-acbc-d3647d4e2640",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b9689b47-2557-4a5c-9c8c-46ffc9db20db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc5ec23-5807-483e-a97b-8d937d63983c",
        "cursor": {
          "ref": "7dd14cae-862a-4155-9aa4-d9413fabda0b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "59d0a6b7-f39c-4616-b777-742412e641b6"
        },
        "item": {
          "id": "ccc5ec23-5807-483e-a97b-8d937d63983c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c0d1a822-672e-4305-acee-161200d259b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b80b42c-1727-4b47-bec5-e50dc1b535bf",
        "cursor": {
          "ref": "20c64178-8de3-4564-a14e-96cd7b8df504",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9377afce-9809-4862-9d79-5daba9066a7c"
        },
        "item": {
          "id": "2b80b42c-1727-4b47-bec5-e50dc1b535bf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "19660bfa-afe4-49bc-888d-2caa07cc5d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e28fc7-e37d-410a-8b7f-47a267546abe",
        "cursor": {
          "ref": "af86468f-8e0c-4ed7-9fd5-6bb5040d4f03",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "01859d9a-334f-4c74-ad88-87eca016eab8"
        },
        "item": {
          "id": "16e28fc7-e37d-410a-8b7f-47a267546abe",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4fd4b82c-9f5d-4077-8791-ca2cf167ea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fbceda-ea7c-4a55-a02c-c6261d6f92ae",
        "cursor": {
          "ref": "38fe82bc-e265-43e3-b0e7-84407a29407e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f65b52d2-1e4a-4c20-b898-ac2f84ee46c1"
        },
        "item": {
          "id": "28fbceda-ea7c-4a55-a02c-c6261d6f92ae",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "634fce7a-be40-4657-ab59-413f3540db81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb599b8b-9f47-42bb-b40e-087e1bffb7a8",
        "cursor": {
          "ref": "8d833815-540e-49e7-9df3-da92a14177b2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2ccdccb5-52a9-495e-a14a-6a2c0a0ae505"
        },
        "item": {
          "id": "bb599b8b-9f47-42bb-b40e-087e1bffb7a8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "320a3ea3-6e9d-4dac-813e-ca91af6c9c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8433ae1-20e7-4672-91b8-b5061db0d84a",
        "cursor": {
          "ref": "6c968eba-09ef-4550-8f71-8bf3edb2392f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f219c609-2d97-461f-8a8a-183419c643c9"
        },
        "item": {
          "id": "b8433ae1-20e7-4672-91b8-b5061db0d84a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6aba4526-7bbc-4ed0-b049-1c3e12705de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dd45a6-8447-42fc-8d9f-3c29855b3b3d",
        "cursor": {
          "ref": "000d2f6a-7320-4e67-8f7b-e8897431d3d7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "92c23820-855f-492b-82f7-4fbf2b5fafa4"
        },
        "item": {
          "id": "07dd45a6-8447-42fc-8d9f-3c29855b3b3d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "10ca34fc-656c-459c-a6e2-984a914f0ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0550e8c-ac62-44f8-bbbe-cccad56d99c7",
        "cursor": {
          "ref": "5722dc85-bd30-4831-a4fa-53ad7f1a9ddc",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e7d1469f-f963-492d-94df-b2896cec0451"
        },
        "item": {
          "id": "a0550e8c-ac62-44f8-bbbe-cccad56d99c7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0efbb0eb-1eee-46fb-abfb-1c3ba46e95d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54db5a23-0cd8-455e-b388-5b4bd0b8297d",
        "cursor": {
          "ref": "85d63b7b-6604-48a9-abf4-c908708cf8d0",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "222a27ad-3499-42fc-8f7f-30dd5735e375"
        },
        "item": {
          "id": "54db5a23-0cd8-455e-b388-5b4bd0b8297d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c8a2e4c0-7031-49d0-adb6-83d97eea0dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3a4a25-18c3-459e-82ac-377b26eb15b4",
        "cursor": {
          "ref": "d967ce94-3015-46f2-bef8-1852e86a9547",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1e768272-5f2d-43b5-a819-f43c10218ab8"
        },
        "item": {
          "id": "9a3a4a25-18c3-459e-82ac-377b26eb15b4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "373be957-c9b5-4ad6-8932-5bcbb3e2ce3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2478e802-5606-45c9-8f75-ed0994137232",
        "cursor": {
          "ref": "46577436-2a71-457b-94d6-865aee19043a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ec94fbb2-f63a-40f6-b545-829dfcfa678d"
        },
        "item": {
          "id": "2478e802-5606-45c9-8f75-ed0994137232",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ee9f14ad-cb3a-405b-9e59-824411c65c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac86e3e1-b2f7-46ef-859e-22aecaabdc2a",
        "cursor": {
          "ref": "66137385-fa95-4e1a-8e27-8fea85566f50",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1142d7d5-c665-4f0c-894c-41bc579bac04"
        },
        "item": {
          "id": "ac86e3e1-b2f7-46ef-859e-22aecaabdc2a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b0b2c75a-5b05-4c04-88f7-5d07ec173563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b889a26f-553a-44b1-88d5-3ec2bb89e537",
        "cursor": {
          "ref": "a1c5e99d-737f-4ec7-807f-ce7733795754",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0fecc310-6226-43b0-bfe8-13f15a44e492"
        },
        "item": {
          "id": "b889a26f-553a-44b1-88d5-3ec2bb89e537",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d89ee383-d05c-4c78-9572-32e759557eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759d666f-03d3-4ded-8e84-767d2ba0c3d4",
        "cursor": {
          "ref": "8d40e265-f011-43c0-94e5-ca1a2e8caec6",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8b3e8876-d01b-4126-b383-65527a907cc5"
        },
        "item": {
          "id": "759d666f-03d3-4ded-8e84-767d2ba0c3d4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c0460987-6588-462f-97bf-67d14c8ab949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e232da6-ed31-4163-b00c-59af1595d332",
        "cursor": {
          "ref": "a48932fb-6eba-44e0-95de-5f372cf5a679",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a345fd4c-5764-451f-ab2d-6932520855e2"
        },
        "item": {
          "id": "4e232da6-ed31-4163-b00c-59af1595d332",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "223ef32c-f375-4dee-89f3-8056688d6f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c559c0-a7a4-4c04-b0d3-0d8901e925d6",
        "cursor": {
          "ref": "6dbb743d-ce80-44d0-aae7-b69c96c6f8b8",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "77c6bdf3-abc0-4d38-8622-a201f73a14a7"
        },
        "item": {
          "id": "71c559c0-a7a4-4c04-b0d3-0d8901e925d6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7137b944-9d0d-4642-9b10-4e9192693534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de491229-8f2b-4c39-aef0-cb1c3afd4e79",
        "cursor": {
          "ref": "eb24751e-2ae3-475c-bc85-7778e0b03565",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4c38b480-eeb8-4def-9bec-af7069bde4fe"
        },
        "item": {
          "id": "de491229-8f2b-4c39-aef0-cb1c3afd4e79",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a2eb0ccd-eff8-40eb-99c5-87dd5adc01f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9a6f98-d862-4394-b7a2-555e52ef1de3",
        "cursor": {
          "ref": "e46ec054-5a17-4ffa-bbb0-57e8e3e3a36c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b384b848-3dd3-4a02-9e6d-fdc9462d0cc9"
        },
        "item": {
          "id": "1b9a6f98-d862-4394-b7a2-555e52ef1de3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1c21c61b-8654-4b6b-9cb3-90cc515aaf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63913465-7a24-4019-9d59-75bb5b54562e",
        "cursor": {
          "ref": "173b9194-ee5b-40fb-bbe9-5a2e1cd6de89",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "66c982aa-4e3b-45bb-83a5-957bf2d20109"
        },
        "item": {
          "id": "63913465-7a24-4019-9d59-75bb5b54562e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bbc41bde-9bcd-496e-b812-df21c08271dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146a6e08-f17e-4b7a-ac51-9e669b922971",
        "cursor": {
          "ref": "2b638ff0-fb1d-4872-a743-cf21d2f8db90",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3b8c62de-4543-4f38-8397-d061f9380ce8"
        },
        "item": {
          "id": "146a6e08-f17e-4b7a-ac51-9e669b922971",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dfac0eeb-9176-490a-901f-e966ae7ffa53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8f2604-f5c5-443a-b44d-2e9c5e303024",
        "cursor": {
          "ref": "9e2cfdae-ef03-47c9-8b92-fc238b549be9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "17922132-cbcd-4c7c-adc0-d0cd9d469ebf"
        },
        "item": {
          "id": "dc8f2604-f5c5-443a-b44d-2e9c5e303024",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1fa91579-20de-45cc-8860-094146200a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7314a3-d05d-4905-bcf0-2b1408661a2e",
        "cursor": {
          "ref": "4722f89d-fa9a-40f3-87a3-8e1ff2a84be7",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "58550a11-60bf-465a-8933-c45cdb955b78"
        },
        "item": {
          "id": "6b7314a3-d05d-4905-bcf0-2b1408661a2e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "906adfff-76e6-4ef7-aaa8-7d79fae3937b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b109f6-d44f-41cc-bf03-e9bd3384f6e1",
        "cursor": {
          "ref": "04b2f683-a59f-40fa-8765-c775d50d8468",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ef59984c-6f03-4466-a44e-604f5f84043e"
        },
        "item": {
          "id": "94b109f6-d44f-41cc-bf03-e9bd3384f6e1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4e0b31ee-a7d9-44f4-a45b-b9aa2a2476c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb44a7c1-ca01-4b24-a0c0-ee3856d3aa18",
        "cursor": {
          "ref": "ff1e9fdd-b433-4573-8ad0-b9682428bce4",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0be2ba89-06f5-457d-b08b-c801b14af0a2"
        },
        "item": {
          "id": "eb44a7c1-ca01-4b24-a0c0-ee3856d3aa18",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8f144ff8-41a0-4ff4-95f1-970b83498f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3fe3af-6e11-462b-bb57-cee22dab7e66",
        "cursor": {
          "ref": "8d1b7a7d-2eeb-4fe4-93da-db83db909bed",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b0f58649-f279-48c9-938d-159cac03d76d"
        },
        "item": {
          "id": "ec3fe3af-6e11-462b-bb57-cee22dab7e66",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3b6d6f61-7ba3-4de1-bdee-7a01a0312b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aa574d-1b09-4b0f-a62a-08e9c7a0ccfe",
        "cursor": {
          "ref": "c2f611a9-6dc7-40a6-adb9-4ddac8fd6237",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "35c1e5b4-873f-46d0-b0fe-b36a079757ec"
        },
        "item": {
          "id": "d6aa574d-1b09-4b0f-a62a-08e9c7a0ccfe",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2205e515-bd61-47de-878e-41726764e57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815ca6c2-1569-4eda-a2ca-cc960400494f",
        "cursor": {
          "ref": "401e8396-8488-49c2-9776-067da098a674",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fb30e806-5327-4083-ab1c-6693287b04dc"
        },
        "item": {
          "id": "815ca6c2-1569-4eda-a2ca-cc960400494f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "35360a9d-2a4e-400b-968b-6d432344a86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a53820a-deba-48f1-a19f-e18cfbf72aca",
        "cursor": {
          "ref": "e628c46d-ab7a-438b-8c34-93836c1e7f03",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "055b4aee-1c67-4ee4-b31f-d07e063a463d"
        },
        "item": {
          "id": "5a53820a-deba-48f1-a19f-e18cfbf72aca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "46d65280-3657-44d9-a16a-e1edeed2d033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33e1a33-b821-4e0f-bfa6-3f830e6baf55",
        "cursor": {
          "ref": "4ced7649-ecac-4cf9-9f9f-4fecf33fec95",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f181fe36-4c76-45f8-9a88-4ed64c22ee8d"
        },
        "item": {
          "id": "f33e1a33-b821-4e0f-bfa6-3f830e6baf55",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "561f4465-8dec-45cb-8c3f-7ee72bc6981d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3805f07-7084-404a-96bb-4dc091f964e8",
        "cursor": {
          "ref": "4ba2f45a-fa14-47e7-b8b6-d12d004b93c9",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "51f578d7-1f5e-469c-af5e-187a0eaf075f"
        },
        "item": {
          "id": "a3805f07-7084-404a-96bb-4dc091f964e8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "475fe6aa-a772-4430-ac06-36a1b931d03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122c980a-c9bc-4856-892a-2e566f25962a",
        "cursor": {
          "ref": "c4cd17ef-104b-4dff-a53d-face85742954",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6d2e7f75-432e-4d0d-9671-487178f7eeda"
        },
        "item": {
          "id": "122c980a-c9bc-4856-892a-2e566f25962a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "81fbf2d6-e06f-4365-9be8-a5afbfa3150d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e51ad38-7879-47b5-a61d-7344f5bd4ae6",
        "cursor": {
          "ref": "7c9c6010-87e7-46e6-bb96-038a15e7e567",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "674fb4fe-3b61-46ea-b45f-08fd8b3cdada"
        },
        "item": {
          "id": "9e51ad38-7879-47b5-a61d-7344f5bd4ae6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e06883ad-0dca-4105-b566-5735c54d5400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e38aa2-938e-4660-a963-02e0c86800d0",
        "cursor": {
          "ref": "fd1d11b8-64c4-4dfb-a540-54184e3ba356",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "931f5e8a-81d5-4b0c-8dc1-d45bf7ea57fc"
        },
        "item": {
          "id": "f1e38aa2-938e-4660-a963-02e0c86800d0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1dc8d08d-719c-444b-a989-1fd0e9af23b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9aaed7-d2e5-4798-93f2-bb7724ca881a",
        "cursor": {
          "ref": "4ac5282b-268b-4f6c-8241-e1e9bb1ca428",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6bbfbe7d-edf6-4bd4-a8e8-ba0918d919c5"
        },
        "item": {
          "id": "bc9aaed7-d2e5-4798-93f2-bb7724ca881a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e283e52b-2c44-4118-aea3-2e5ba9671d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40d3e7e-c8b0-4245-8ff8-50c9531798cd",
        "cursor": {
          "ref": "7eda13f3-49b6-4b3b-a1cb-4030b3b87f16",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "77bc3bde-413f-49a5-8a98-e6351c8eaf2e"
        },
        "item": {
          "id": "b40d3e7e-c8b0-4245-8ff8-50c9531798cd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "850b51fa-6a78-40d7-8033-2691666366d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2b1060-ee83-478d-9de5-c56cf9e8a760",
        "cursor": {
          "ref": "9ff4a14f-734a-4892-bcf2-bc7447411080",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4a54200d-ac83-4308-85b9-563dd6fc49f0"
        },
        "item": {
          "id": "0f2b1060-ee83-478d-9de5-c56cf9e8a760",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c4032c5e-1c48-4992-8198-a69614614e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616b6b45-be7c-443e-8e9c-ab70fd138a9d",
        "cursor": {
          "ref": "209edb04-674e-4f68-a7c0-5b8e0ba24948",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e4eed1f6-121d-40b2-a52d-2e4640f72326"
        },
        "item": {
          "id": "616b6b45-be7c-443e-8e9c-ab70fd138a9d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bd2e49b9-6151-4963-999b-5ef8769a0cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452078d7-f852-4736-a096-42b5451609fd",
        "cursor": {
          "ref": "3b291191-4876-4f26-8322-075c6cd20442",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "06776dec-d64c-48fa-b0bf-e69a98be74a9"
        },
        "item": {
          "id": "452078d7-f852-4736-a096-42b5451609fd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c40a125a-21a2-4675-a0a5-6bd7cb431aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e73cf73-c1c9-424e-9a33-d4f107220324",
        "cursor": {
          "ref": "12c9e0c5-6b33-4fde-ae4c-05edff3d823f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fb1c74d1-73d3-4578-94ff-189f62332547"
        },
        "item": {
          "id": "5e73cf73-c1c9-424e-9a33-d4f107220324",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "70f06aa5-2c93-4e95-a51f-dee81a3a4783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af38d3a1-7f5e-4825-b33e-251768253493",
        "cursor": {
          "ref": "52980d0b-9a55-45bc-ad14-b25d76372442",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7e3f0c70-c7a7-4481-8f47-930d7a916f26"
        },
        "item": {
          "id": "af38d3a1-7f5e-4825-b33e-251768253493",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "94d2ddcd-2503-4b7a-aa81-cfb684c38f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6718638a-b211-4ad4-a519-5b4324a91335",
        "cursor": {
          "ref": "20e04515-1013-4ee7-8c1d-af5784e64cea",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8fef570f-fc58-4478-adeb-466ba6ef6999"
        },
        "item": {
          "id": "6718638a-b211-4ad4-a519-5b4324a91335",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "00e0ca47-427e-4140-92fc-e0bad51c2992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9e2491-e04a-4ede-ba3f-958358f699d3",
        "cursor": {
          "ref": "89610ac5-cca5-4e60-b63d-1bcd84e0e561",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e3846dc7-8d64-4a35-8313-17c830c10a07"
        },
        "item": {
          "id": "6b9e2491-e04a-4ede-ba3f-958358f699d3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e2789173-c05e-4ea5-ad4f-c6e12a6fc354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e20c6d-e01b-4853-9e88-c0c86143a94c",
        "cursor": {
          "ref": "8435a361-9230-4ae1-ba07-5b75c474c4cc",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "843c4a71-8b74-478b-a3eb-534428ab04c2"
        },
        "item": {
          "id": "c4e20c6d-e01b-4853-9e88-c0c86143a94c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "21335045-d52f-47ff-8901-20fce808472f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3d1c0a-1991-4559-a936-4a14ec57af24",
        "cursor": {
          "ref": "2448bdf9-70c7-4c07-93df-6167c81aeac3",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "400c0f2c-102c-4e3f-868e-048929b9982d"
        },
        "item": {
          "id": "fd3d1c0a-1991-4559-a936-4a14ec57af24",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "04caa595-4789-4c6d-ac4e-5816c01529ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc8bd5f-0429-4e5a-a9e1-8d814eb6d304",
        "cursor": {
          "ref": "4cebffa3-9ea6-487d-aff3-5ce2fd988a33",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8cc930a8-4ecd-42bb-bd0d-91792f4c2b5b"
        },
        "item": {
          "id": "6fc8bd5f-0429-4e5a-a9e1-8d814eb6d304",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6897c1ca-d643-4b82-aed6-308d4bf65a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3266c91-98ad-4594-afc5-df7a7c9329a7",
        "cursor": {
          "ref": "27926935-c239-4cf6-b04e-e50dfe82d5ac",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "66cf63f0-3d66-42ce-b46c-caa91f3f1f70"
        },
        "item": {
          "id": "d3266c91-98ad-4594-afc5-df7a7c9329a7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f0db9808-de6b-44af-a93e-be2de9916602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443bed55-b7ea-4983-9008-91c3151b5bf0",
        "cursor": {
          "ref": "c5a5e3da-bcf8-47f8-81da-573c467e0c8f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ef13b2b1-0798-4979-9461-a4548f4c484e"
        },
        "item": {
          "id": "443bed55-b7ea-4983-9008-91c3151b5bf0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c522100e-ed46-4710-ab98-72a6c060c41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fc82d3-bce5-4ecf-8478-b05f62d4e026",
        "cursor": {
          "ref": "056af71c-dffb-4c8f-9bc7-af06bdafd383",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e7ce70c4-c436-4365-865b-607dae4bafe5"
        },
        "item": {
          "id": "76fc82d3-bce5-4ecf-8478-b05f62d4e026",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "325984a6-1057-4e84-8c7b-32fac4d1b0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c346f04-ad1b-4260-beec-a9635307daa1",
        "cursor": {
          "ref": "bba9b3ff-db46-47ea-a204-35f3c5aac6b9",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c014e89b-645f-44e4-8036-eef3da159dc5"
        },
        "item": {
          "id": "9c346f04-ad1b-4260-beec-a9635307daa1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "178e892b-d85c-41f1-a4a7-f2523c18e7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824197c6-a665-4681-944f-564aab84ee17",
        "cursor": {
          "ref": "96f40047-3670-4270-8b1e-1491452e3c76",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c165b3a7-82d1-413b-a2f6-16418525c704"
        },
        "item": {
          "id": "824197c6-a665-4681-944f-564aab84ee17",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0c2b6076-5d0d-49cb-8d69-9f238994bc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d818a29b-44ba-4efa-828b-049f1c258255",
        "cursor": {
          "ref": "93725395-a53e-421d-a24b-520020a0c018",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "568efe1a-c705-46c4-ae8e-8c2ebba36d21"
        },
        "item": {
          "id": "d818a29b-44ba-4efa-828b-049f1c258255",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4c1774d0-8578-4ec2-9301-702a0e0dd545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475858a9-a716-4226-a67d-c9281a1f231c",
        "cursor": {
          "ref": "2539c3a5-5359-4566-b896-b20e2e6f1cd7",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dfad9a66-efde-4a4f-8bc6-2a6526339ed6"
        },
        "item": {
          "id": "475858a9-a716-4226-a67d-c9281a1f231c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "24c32cde-5b04-4241-b24f-ac77b9b379df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77c9039-6944-4876-a2b5-39fca7961216",
        "cursor": {
          "ref": "9ebfdf54-3430-4a8a-9790-832220816a92",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "225a291c-3487-41cf-90dc-3cf5a0df5de6"
        },
        "item": {
          "id": "d77c9039-6944-4876-a2b5-39fca7961216",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3ad83aba-02db-411a-b231-92a77c764aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d8e622-748a-4bf5-b5e5-fa49f24699ba",
        "cursor": {
          "ref": "b6a0649a-321c-4e8c-9002-94bb6594ce28",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6560bd68-3c60-4e63-ba79-faf95eecfd51"
        },
        "item": {
          "id": "48d8e622-748a-4bf5-b5e5-fa49f24699ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "eaf342df-b175-4299-9049-8fca372d9021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adae2d4-72b7-4cde-b7c8-cf32a36f979f",
        "cursor": {
          "ref": "bc695baa-0178-4557-9444-16dcf197d532",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "74681387-038b-4f69-b7cf-5326ad6a26f6"
        },
        "item": {
          "id": "9adae2d4-72b7-4cde-b7c8-cf32a36f979f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "68e595e6-8bae-4ddf-b83a-3cd21a48b94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7e4884-b920-4378-9758-6b7c0656c983",
        "cursor": {
          "ref": "e125fa23-f90d-4d11-9d27-85d4e9fec7d0",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "075a1345-0ad8-4acd-bbeb-840631214597"
        },
        "item": {
          "id": "ee7e4884-b920-4378-9758-6b7c0656c983",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "84930a5e-031c-4183-9f7d-a6057e32832f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df0d2d4-5642-429e-b69f-d92bcdaa81a0",
        "cursor": {
          "ref": "314e35f5-ffd6-4a90-8677-34fd288adeb5",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a9221ca5-4820-4375-bb07-9bb5c14515e4"
        },
        "item": {
          "id": "0df0d2d4-5642-429e-b69f-d92bcdaa81a0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "20cc1e12-4ade-4806-9d5b-1e4f72d0dce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eb470d-9398-4a67-9869-8dca05a13db4",
        "cursor": {
          "ref": "a6a16d24-dad4-47a1-9d64-6a0b0e2a1768",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "acf9c4c3-a41d-4340-9813-854f2eedbf9a"
        },
        "item": {
          "id": "b0eb470d-9398-4a67-9869-8dca05a13db4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9236a7ef-45e6-41ec-98bf-dfd76f76bc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6792636c-9c52-4db7-9601-53c8419e3858",
        "cursor": {
          "ref": "bdc93975-0d09-4d46-afa0-dbc8ea599af2",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "345a1015-1098-4cd9-9c2b-73249a28185d"
        },
        "item": {
          "id": "6792636c-9c52-4db7-9601-53c8419e3858",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "48b97838-1f67-4810-a900-6d1df904a5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e9d3c9-950c-4cfc-8d7b-fe483c58da6c",
        "cursor": {
          "ref": "6590bc01-6bb9-4d7c-9547-608e4241081a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b2bbd3c7-1a7f-4c45-a45f-709586d73bf2"
        },
        "item": {
          "id": "40e9d3c9-950c-4cfc-8d7b-fe483c58da6c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "15e3b25c-a7bd-4261-bee1-d23906d2a00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9270ab1c-ad8a-4db9-a1ec-484e6f7e6c55",
        "cursor": {
          "ref": "06f5b44f-62c4-4e42-96d0-48258a3c3fd0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b4f50268-c3ad-4aa9-a58d-709b39a70978"
        },
        "item": {
          "id": "9270ab1c-ad8a-4db9-a1ec-484e6f7e6c55",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "64057608-db87-4cc1-9332-6599c46da393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c256c7f4-cd9c-48f4-9e6a-674938809c4b",
        "cursor": {
          "ref": "376d7da0-ced1-4791-be6e-8a47df9d2a20",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7fdfc272-6f24-47fd-a49e-41cf70f5b247"
        },
        "item": {
          "id": "c256c7f4-cd9c-48f4-9e6a-674938809c4b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8b121c05-bace-4dda-90bc-1b24a47bf41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4ae0ad-8ab1-4899-87fa-dbd0f3e02402",
        "cursor": {
          "ref": "538d09d5-bbf8-444b-82c2-e69bdf6a7cf7",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9ede80bf-0573-459c-a7ec-0e172b3627d0"
        },
        "item": {
          "id": "2f4ae0ad-8ab1-4899-87fa-dbd0f3e02402",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0f5a3995-9a8c-4311-8aed-bf168f6b95dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf652e9-f779-47de-b9e4-dfd049de93f1",
        "cursor": {
          "ref": "0ce5d6a3-40bc-4be3-a44d-022b13a5aa86",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "925f1e1e-bf57-4aef-9871-d4ac6d1be1ac"
        },
        "item": {
          "id": "1cf652e9-f779-47de-b9e4-dfd049de93f1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "eafac128-f614-44e5-82bf-e36a8dcc563b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c294382-af02-4105-ae24-ab2e1877c223",
        "cursor": {
          "ref": "9aedca31-b365-4b35-87ab-ca100d82cbc7",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5b0d5659-1364-44ad-a6ea-94dff7a7e0dd"
        },
        "item": {
          "id": "9c294382-af02-4105-ae24-ab2e1877c223",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8a42d3f1-d60c-4dce-8dac-7c691274076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b48bb0-f192-45ee-9083-32f29d934a5f",
        "cursor": {
          "ref": "97cdc1ce-65df-4d27-a301-e01f27b778a1",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4f5e4e9b-e2fd-430f-932a-c81336964655"
        },
        "item": {
          "id": "e3b48bb0-f192-45ee-9083-32f29d934a5f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6e4a8a0c-4018-4375-a2fa-0d007286e4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044f18ce-d374-4a67-9f6f-f257ded909a5",
        "cursor": {
          "ref": "c783159f-bdf4-470f-a077-4662dfb3a9a9",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "132af076-9f14-4cce-bc68-1ae4f115b8d2"
        },
        "item": {
          "id": "044f18ce-d374-4a67-9f6f-f257ded909a5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c658e5c1-5dce-4283-9eca-3e09bd96dcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce614783-48ae-4482-bd8d-85596965d205",
        "cursor": {
          "ref": "60a945c9-05be-40b2-a736-36c3f94c412d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "337f1190-f943-4a93-9b44-34114c5398de"
        },
        "item": {
          "id": "ce614783-48ae-4482-bd8d-85596965d205",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ef945fd0-db89-481c-97e2-e9b2ab6c53a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63375a17-5cfd-4ef8-b997-9ede9e74be9c",
        "cursor": {
          "ref": "4e587fe2-a67c-4861-b6a6-7912b134f0ce",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "69372ad2-1a24-49ad-9a1b-4ba628faf48d"
        },
        "item": {
          "id": "63375a17-5cfd-4ef8-b997-9ede9e74be9c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dc9abc6b-79e9-466b-b838-bb2dcb8d4330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8c9b91-1d0d-4996-b690-392adee58edf",
        "cursor": {
          "ref": "4fc87bd8-cbe4-4c87-b6b9-e101a379d344",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "05adba39-3e6a-4133-a0f8-4d19da729ef4"
        },
        "item": {
          "id": "ba8c9b91-1d0d-4996-b690-392adee58edf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5eceba7f-e2bd-4e60-8225-6811276edf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95ea637-6de1-400a-8d32-5a57b56f6c16",
        "cursor": {
          "ref": "b6084a97-b223-483d-928c-8f95ade604ef",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "33a5a1f7-74ab-4840-867c-c6b7b5c2d585"
        },
        "item": {
          "id": "d95ea637-6de1-400a-8d32-5a57b56f6c16",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ff86f9a1-d550-4ef6-af64-73b9f5dcf2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92e2af3-b14b-45c2-a5b7-e8df9dd358b3",
        "cursor": {
          "ref": "14ee3dfd-dd71-480e-a6a9-fbf0f05a8463",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d97e7801-1d0f-45f4-ad7d-84e72b5fb5f4"
        },
        "item": {
          "id": "c92e2af3-b14b-45c2-a5b7-e8df9dd358b3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d21da3a6-ea38-404f-b8b4-ddce08c9aaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbd1dcb-6a62-4d25-ad4e-bf55c0785441",
        "cursor": {
          "ref": "92ac3844-a833-4b67-9fda-a19913c2e6ae",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a9778fdb-2783-4818-a32f-2d5b89e97fde"
        },
        "item": {
          "id": "4cbd1dcb-6a62-4d25-ad4e-bf55c0785441",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1e25e271-b056-40cd-8326-daa54879b956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efc4080-3bc2-4b50-95eb-e9cc150a16d2",
        "cursor": {
          "ref": "cfc8222f-62e9-4f48-806a-8ca92b7764b6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9467c843-7437-4548-9ad2-4e44347ef575"
        },
        "item": {
          "id": "0efc4080-3bc2-4b50-95eb-e9cc150a16d2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "74c4791f-f8a2-475d-a634-93ec8611d2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad9620c-378b-4443-a097-79f5703c4506",
        "cursor": {
          "ref": "fd07e5f8-db9b-4f5d-8139-9a1e2a872f85",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "319a9c79-17e9-47ca-af6e-1aa20c3e1f08"
        },
        "item": {
          "id": "9ad9620c-378b-4443-a097-79f5703c4506",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bb07065a-cbc7-472b-8204-74013260d172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52bd4b7-d15d-41e4-9b9b-a8b98a32da4f",
        "cursor": {
          "ref": "40ed3888-66d9-45f9-8b58-2bbd2c5bae60",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "27155051-cca6-4fa6-b8be-731f163a1060"
        },
        "item": {
          "id": "a52bd4b7-d15d-41e4-9b9b-a8b98a32da4f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0940a892-876c-406c-bf28-1f91614fb17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a060b446-526d-4c93-b1e9-9c2e1f2cc1fd",
        "cursor": {
          "ref": "c3c44898-79e9-46f7-8890-04a7226cd36b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "154a8397-2025-4ec4-a8d4-cd42a8087cb6"
        },
        "item": {
          "id": "a060b446-526d-4c93-b1e9-9c2e1f2cc1fd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "38278430-ec02-4141-8473-6e3179ed5db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5377a83e-3f87-4355-9c20-b573a97ce071",
        "cursor": {
          "ref": "dc47494b-5a62-4183-af30-1df8b68d20ff",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fbdc6319-df24-4c44-b232-fe29c0e1e1cf"
        },
        "item": {
          "id": "5377a83e-3f87-4355-9c20-b573a97ce071",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a3337720-c3ca-466b-93fc-1ceb590f95f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60de91e-ffe5-4831-b9d8-68cdbc8ae907",
        "cursor": {
          "ref": "d3e6dc6a-162e-405f-a0dc-9da7bec78130",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fad20b72-8d95-4af3-b92e-ed92dd6ae5b0"
        },
        "item": {
          "id": "f60de91e-ffe5-4831-b9d8-68cdbc8ae907",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c2b3e5c1-a322-4d79-a154-1da4bf4d58a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9175208-b754-4609-96f7-4c6797f71030",
        "cursor": {
          "ref": "8956ce99-52ab-472b-a99a-ccbad8fad40d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a3ae9e61-f3b3-474e-81ad-690f9ee4332f"
        },
        "item": {
          "id": "e9175208-b754-4609-96f7-4c6797f71030",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "11166f7b-9be5-43f9-b9a3-1f2952840da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc1fba0-e5e6-43cf-a7a3-38828239870f",
        "cursor": {
          "ref": "63d923d1-d667-4307-a722-e968f9b81cdf",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "eef5762d-2d3d-47ad-b77f-a645f0339d27"
        },
        "item": {
          "id": "6bc1fba0-e5e6-43cf-a7a3-38828239870f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dc867f44-aaf8-4d08-8127-0d8ad147ee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f141c6-20dc-41c4-ae7a-2a74397c075e",
        "cursor": {
          "ref": "1f1fc1f6-ae56-4049-89b3-ce5f860cdf88",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "20618cb7-2dfe-4436-a552-149cb888feb0"
        },
        "item": {
          "id": "51f141c6-20dc-41c4-ae7a-2a74397c075e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dd431ec2-c30e-455c-886c-420b1c311510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa8e34d-39f2-4686-9b21-ba93d800c4b2",
        "cursor": {
          "ref": "f103ba5e-3e63-4153-9abe-9cfd412ed7e5",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "86a2c743-06d8-4ed0-a676-1fea5c7a7d98"
        },
        "item": {
          "id": "faa8e34d-39f2-4686-9b21-ba93d800c4b2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "787f176c-4785-42ba-8539-e3f0c832da43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0e88ed-1c1a-4c3f-bf82-b6b471d4e848",
        "cursor": {
          "ref": "23fbbecf-9e58-4c61-926a-1e4f85feddce",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0651bb42-b701-476e-a128-e4f83bd6d21b"
        },
        "item": {
          "id": "7b0e88ed-1c1a-4c3f-bf82-b6b471d4e848",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e5e5a670-319d-4382-942e-9b1167e4bd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd43372-b469-45cd-aa2f-c775f1c17ed8",
        "cursor": {
          "ref": "4e9027ce-d58c-4803-b91f-5e3ddeb1c973",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "40a611a5-5813-4899-bf84-960a32e080f1"
        },
        "item": {
          "id": "5fd43372-b469-45cd-aa2f-c775f1c17ed8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7d66de9e-7eca-4357-bd42-d286da738ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51eff826-31ae-43f2-8388-03f7d80b227d",
        "cursor": {
          "ref": "899a2813-81a5-49d5-93a1-8312ae10af3c",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e34a7d67-4fde-4897-a863-8d07cf039773"
        },
        "item": {
          "id": "51eff826-31ae-43f2-8388-03f7d80b227d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "431935c2-420e-4809-835d-75bf9ce0f0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13c9bbe-bc9f-4f39-b719-0969fb4a34b4",
        "cursor": {
          "ref": "c1825961-f7b4-4919-b457-f95f2481d382",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "040f9f2b-bf19-40c1-8543-751cd4077fe0"
        },
        "item": {
          "id": "d13c9bbe-bc9f-4f39-b719-0969fb4a34b4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d7a03557-99c9-4b77-b3f3-6cc483b8cf31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92ef5dc-c217-4556-896e-dd4febb3e2de",
        "cursor": {
          "ref": "b23f99c8-734b-4869-8f43-81ac63a56aa7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2371b533-a4f8-4ead-af14-7b5dba28d0d4"
        },
        "item": {
          "id": "c92ef5dc-c217-4556-896e-dd4febb3e2de",
          "name": "credentials_issue"
        },
        "response": {
          "id": "05cf292c-450f-4f10-9828-4a16fb1c770e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "cf8c9fd7-b829-42ae-b1dc-d020c8389f5c",
        "cursor": {
          "ref": "a1da9f50-691f-4b0b-9875-f4730aaee72e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b1d352ff-15fe-4a6c-90ae-09b651eae9f7"
        },
        "item": {
          "id": "cf8c9fd7-b829-42ae-b1dc-d020c8389f5c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "988a506b-a9c9-436c-b7cf-38f92da60f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "019211ea-032e-42fe-9fca-85f76d4454a5",
        "cursor": {
          "ref": "38c86acc-3b6a-41dc-8bf0-4ff67f77ef00",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3786de0e-9fa3-462a-84d7-7a2c4a8fe0a1"
        },
        "item": {
          "id": "019211ea-032e-42fe-9fca-85f76d4454a5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c9a3baef-db14-4be2-8693-ec83066770f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9085aa8c-d903-40eb-b72d-fee136311140",
        "cursor": {
          "ref": "0596fe83-91a7-4866-94ea-5a790cd8a06a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b87599d6-9fc5-48e7-afbe-73b29b217496"
        },
        "item": {
          "id": "9085aa8c-d903-40eb-b72d-fee136311140",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5a8e4c68-40cf-4c92-9b0a-bf7073f492b5",
          "status": "Created",
          "code": 201,
          "responseTime": 5461,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdb981c-4476-4ed7-be83-40efc0b7d557",
        "cursor": {
          "ref": "2a0e598a-e520-4593-82e9-6ed91e1c37d2",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2a5d860f-3a91-4053-b3c8-03d5c4b28a42"
        },
        "item": {
          "id": "fcdb981c-4476-4ed7-be83-40efc0b7d557",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "371b1937-4359-4411-b9e2-780a85bc1755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9fba0aaa-5ccd-4b05-be0d-f26e49642897",
        "cursor": {
          "ref": "9a62c9e4-ff7f-4979-8747-dec347d511a9",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6626d8e3-c0d2-4e11-a5cf-44b97516a103"
        },
        "item": {
          "id": "9fba0aaa-5ccd-4b05-be0d-f26e49642897",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0faf4f7b-534d-4f0d-94c6-27c3fe4ddb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "40ee1c5c-6bac-4770-8479-cbb61e77582f",
        "cursor": {
          "ref": "66956bd6-d900-4e30-b92f-bde7a477caf0",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b67a11bb-9258-444b-8685-9f64613d6f34"
        },
        "item": {
          "id": "40ee1c5c-6bac-4770-8479-cbb61e77582f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dfa49529-735a-4ac5-9595-8835f25a1d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f536f48-c0d2-424f-8a95-1a435c5798c7",
        "cursor": {
          "ref": "d5985af0-119f-4632-a82b-a1b47417cbba",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "28ac0b15-d932-4591-a06b-5fe4e9c16180"
        },
        "item": {
          "id": "7f536f48-c0d2-424f-8a95-1a435c5798c7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c8c8b53d-38b8-4f6f-85a1-2a94499ef317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5587df-3fa1-4ff2-8b1f-4c22fe815d25",
        "cursor": {
          "ref": "ae066000-1eac-44b9-b73c-31475330bbde",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "08f820d1-1513-42ec-bccc-d17c249adc95"
        },
        "item": {
          "id": "2e5587df-3fa1-4ff2-8b1f-4c22fe815d25",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6ac9df68-c86b-440a-a3e7-61b97a8f9058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e92cc3-461a-4dad-9462-3d7759530ef0",
        "cursor": {
          "ref": "f5d3ea42-c098-430a-a22d-934a785c598f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "79ffbc1e-c456-4f1b-8092-4807cf1dd571"
        },
        "item": {
          "id": "86e92cc3-461a-4dad-9462-3d7759530ef0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bca47a2f-4085-4dbb-9d19-8dc8bffb5390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8392badf-d344-47b2-9ccc-26d139323f15",
        "cursor": {
          "ref": "482ec83f-bfb2-42e2-a030-0f8bef05d789",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b3a63742-524e-414a-a924-c1ebd95129fd"
        },
        "item": {
          "id": "8392badf-d344-47b2-9ccc-26d139323f15",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "26505e0f-0c7d-4c33-9365-d7fb88b7bcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b883608e-5e8f-461e-9844-ea44ce9716df",
        "cursor": {
          "ref": "d33e36c6-cb20-4922-8f94-92a11887bc95",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8098b92c-c608-4776-b6fd-06815c766357"
        },
        "item": {
          "id": "b883608e-5e8f-461e-9844-ea44ce9716df",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "053df766-9885-4ae3-9537-b2a93290df32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812b6e91-e507-49f9-9732-bea595e4cdfd",
        "cursor": {
          "ref": "93bf8030-b425-4c4f-9771-c830457d96a1",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "db8a1af9-55dc-4d69-8807-1d5a59a8b4f4"
        },
        "item": {
          "id": "812b6e91-e507-49f9-9732-bea595e4cdfd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e259f922-785a-43f5-b0ab-ff826f37f14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494b8403-802d-4090-9924-bc833ab0d434",
        "cursor": {
          "ref": "6a171964-ac0b-4d59-95ec-ffb5b5a83d21",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ed0a6980-c69b-4e20-9832-8db11a65cc29"
        },
        "item": {
          "id": "494b8403-802d-4090-9924-bc833ab0d434",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3ebde258-3b4d-4366-96c5-03faa2e6f15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834130d0-3b97-4512-80b7-9a3531a043a6",
        "cursor": {
          "ref": "fd84b3e5-f5d1-4c05-9fba-3f0bb5b825de",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e87e12e1-2a30-4ed8-b7b5-aa65394dd2dd"
        },
        "item": {
          "id": "834130d0-3b97-4512-80b7-9a3531a043a6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fb6af5fd-755a-484f-bec7-ef346e7284f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6132bac-13f8-48b6-b6dd-60a38a187369",
        "cursor": {
          "ref": "139b4db1-2557-4c33-8771-8067bc29064e",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9c635ec5-7849-42cf-bf66-5b17d641b74c"
        },
        "item": {
          "id": "f6132bac-13f8-48b6-b6dd-60a38a187369",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4231d6d0-d76b-45ff-890c-af1ef2bd9667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9110fe87-25a3-4da8-a386-c66e1128c0a1",
        "cursor": {
          "ref": "afd057c8-f8fd-4216-83a7-81519db12dd7",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "59d25dc8-7923-4a28-89be-8ec65a7162b2"
        },
        "item": {
          "id": "9110fe87-25a3-4da8-a386-c66e1128c0a1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c67319f0-8076-43ee-b704-2786430f8453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60525715-373d-49ee-aeda-2ee786953586",
        "cursor": {
          "ref": "f780476f-c410-4848-9543-4ee206e3fcb2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4947125f-7ceb-4004-b9ea-5b6f6e287da7"
        },
        "item": {
          "id": "60525715-373d-49ee-aeda-2ee786953586",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "801b26c5-0a1b-4552-85a9-57d1757b5937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bfda84-12f7-4453-90fb-9a480ce75184",
        "cursor": {
          "ref": "940be721-465a-43b3-9b32-284000b87438",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c1c81641-6887-4bd6-8b19-a56c6730d6fb"
        },
        "item": {
          "id": "28bfda84-12f7-4453-90fb-9a480ce75184",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b8dd690d-e373-43fa-a4a1-7d08d8029c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01de9096-7365-4eb2-8855-83c462dc8d0a",
        "cursor": {
          "ref": "950c9f39-45d6-4b31-92a3-8dbf8a6c9da6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cab30de5-918c-44b7-81ec-31565400da91"
        },
        "item": {
          "id": "01de9096-7365-4eb2-8855-83c462dc8d0a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "262a8e99-f7a1-40f9-ac99-6428d77eff7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88693a12-db4c-4d36-82f8-a0c0bf4a097d",
        "cursor": {
          "ref": "1c23e426-cfa3-4f2c-a613-ef1b4ebb698f",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3b377494-6514-4d37-9d07-8213ce3541f5"
        },
        "item": {
          "id": "88693a12-db4c-4d36-82f8-a0c0bf4a097d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "50f4e933-76b7-473c-b6fe-f63305daf45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2664f48e-f1b9-4343-8cde-ee3f0e913c4c",
        "cursor": {
          "ref": "2322af4e-28f6-4f5d-b843-693d6b753c16",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "931809ce-22e6-4d34-a4b0-391275f15709"
        },
        "item": {
          "id": "2664f48e-f1b9-4343-8cde-ee3f0e913c4c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5db33f5a-dc0c-4b6b-9409-4d3d69fecf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041f8f4e-e4a5-47ba-a349-99d31a737ade",
        "cursor": {
          "ref": "dbd814c0-a96f-4468-af5c-6549fd939135",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2eec4eac-bd44-4467-963c-08a0fb345681"
        },
        "item": {
          "id": "041f8f4e-e4a5-47ba-a349-99d31a737ade",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3e23a770-88e2-45fd-b216-343c4852ca35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d700d9-4ede-4ca2-8e0c-3db6a75b6df6",
        "cursor": {
          "ref": "943d2d03-fea4-4d64-8b37-f810bf910184",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d0b3bdf7-84f4-4299-86f8-dbcf62cd371e"
        },
        "item": {
          "id": "a7d700d9-4ede-4ca2-8e0c-3db6a75b6df6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "81b12a24-5627-4db8-8ac2-71d369bf1398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab65ca44-87da-43f7-8d60-598e22988add",
        "cursor": {
          "ref": "ee59b45a-6ae9-464c-8f45-4904a2f74a05",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cbd1cb88-d6c3-4fdc-a640-a2013ec7b7f5"
        },
        "item": {
          "id": "ab65ca44-87da-43f7-8d60-598e22988add",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c3851471-217b-444d-9fda-9c276ef32b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134e9413-a227-4d9d-80e2-86966b6a2138",
        "cursor": {
          "ref": "7f7eb669-dbb6-448a-affd-e9b966c0d172",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5fc25641-b6c5-402d-8a50-a2fd6db43137"
        },
        "item": {
          "id": "134e9413-a227-4d9d-80e2-86966b6a2138",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "01e9234a-ed0a-4c8a-9dff-47c6bf432144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c22236-707b-4d9f-b3ee-dc7a68a027d0",
        "cursor": {
          "ref": "47a7a67e-6794-4a9d-a491-2d6760bea42a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ada3c41f-4555-48d0-9511-4c98cc94306b"
        },
        "item": {
          "id": "96c22236-707b-4d9f-b3ee-dc7a68a027d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "69406858-8b4d-4b1f-83d7-7dd6e5fad129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dba94c2-38ea-41ca-98f9-da685ae5d2f5",
        "cursor": {
          "ref": "2afc9b9f-56b0-415c-b197-a93d694101d3",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8e9a6e8c-5c0d-4851-8b1b-7aeb6fdfbc69"
        },
        "item": {
          "id": "1dba94c2-38ea-41ca-98f9-da685ae5d2f5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cde58fec-b1d6-44a3-94b5-53d2d9121690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e8621b-cd62-448e-8177-6e85db4eec92",
        "cursor": {
          "ref": "57682f51-f99c-4649-9a1b-a7e291d88880",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b4f3511a-305b-42b7-acaa-6346d9502346"
        },
        "item": {
          "id": "b1e8621b-cd62-448e-8177-6e85db4eec92",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cc4bca58-1e68-4a2a-8f03-497190f7fbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e089e331-cde1-4ee1-9872-8b49f885a48a",
        "cursor": {
          "ref": "52bb8927-df65-465c-83a7-f466771fab9f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2809fc2f-0afb-47ff-9311-918d0cfb7a34"
        },
        "item": {
          "id": "e089e331-cde1-4ee1-9872-8b49f885a48a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "02f2258f-bcc0-48e7-a352-cf962ca3d005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40214871-6629-4e73-b77d-f30001870889",
        "cursor": {
          "ref": "da5263a8-6386-44fb-9e1d-e62a3565695f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2168087f-3088-4b3d-a466-c05b6095d2c4"
        },
        "item": {
          "id": "40214871-6629-4e73-b77d-f30001870889",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eb65097b-967d-47a1-902d-fdf998c8638b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ff92da-5d3d-4652-bc91-fd3329d13ca0",
        "cursor": {
          "ref": "53ab825e-8bd2-4819-a063-f70a9264f6fa",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5dc03511-6093-48e9-890a-0ebf6626a0b8"
        },
        "item": {
          "id": "c5ff92da-5d3d-4652-bc91-fd3329d13ca0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f2408059-5381-4812-88b6-e02f60d5505d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10daa64f-eb37-4b84-afba-682bba0746b5",
        "cursor": {
          "ref": "430ba332-6db2-4e04-a111-25ae13ba9268",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "10345abd-8798-4b7b-b91c-b3f671dd47f8"
        },
        "item": {
          "id": "10daa64f-eb37-4b84-afba-682bba0746b5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b2db8884-bbf3-4571-a271-1af6e40983ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b780116-5480-43f0-8bd2-91320cfbab7f",
        "cursor": {
          "ref": "871322bd-23a7-4fcb-8def-307a8f75d266",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "12e76d1a-0d62-49d2-960d-b68a4905fa84"
        },
        "item": {
          "id": "9b780116-5480-43f0-8bd2-91320cfbab7f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "36da3ead-168b-4fe4-b689-7781cac028f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5334ded5-c5c7-4bdf-821b-0b08eebf50c8",
        "cursor": {
          "ref": "731f844c-4a52-40b5-ab38-a6df692e3d85",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3333accf-033b-42ec-bca7-92d548605177"
        },
        "item": {
          "id": "5334ded5-c5c7-4bdf-821b-0b08eebf50c8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a65bd64-8fda-44f3-b678-d36eb34f9008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a3a67b-2af5-4aec-941f-83fa681cbcb5",
        "cursor": {
          "ref": "efbff9de-13cb-4699-9f82-bc6e1ecfff75",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ab5525ae-0da4-4bf4-bf3b-787c472b9eee"
        },
        "item": {
          "id": "25a3a67b-2af5-4aec-941f-83fa681cbcb5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fb76813e-ee06-421e-a34e-417fe44c27fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73297064-c427-422b-9520-20e730c9ab0f",
        "cursor": {
          "ref": "7410c56c-125a-41ac-8c18-f8396b48c515",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c2a2164f-645a-4440-bfb4-c4afd4fde663"
        },
        "item": {
          "id": "73297064-c427-422b-9520-20e730c9ab0f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "803bc576-6e6e-4c04-9c90-2e04abb3dca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a0d312-c7f6-442c-8bb8-36eb4866e7ae",
        "cursor": {
          "ref": "6547e71f-c507-4123-b622-2aee0688dcfd",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2d1ed6c1-2a53-44c7-ac7f-822de0d23528"
        },
        "item": {
          "id": "d4a0d312-c7f6-442c-8bb8-36eb4866e7ae",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "aa4fd46f-a7d9-4389-8ae7-0f0712c2b892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc66fb70-f776-4d45-9025-ff8556882922",
        "cursor": {
          "ref": "0be0716c-3d4f-4639-9b4c-1cb1c64c25bd",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "62e66735-e450-42ff-90b8-be5ceea66cb0"
        },
        "item": {
          "id": "bc66fb70-f776-4d45-9025-ff8556882922",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bc2e8235-9b71-45f1-ad1e-be07d1610fc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fb1d61-fab9-4fc1-a6e2-43cddb8c7b37",
        "cursor": {
          "ref": "de6d1e1e-4029-442f-af6d-e55f60773788",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f8f3725f-3311-49d9-a266-5e3928f1a8c1"
        },
        "item": {
          "id": "14fb1d61-fab9-4fc1-a6e2-43cddb8c7b37",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0b31d5f4-3ab1-4b94-b10c-feb33ea025ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf9abcf-188e-4a08-bcb5-b8e928607fab",
        "cursor": {
          "ref": "c175ed57-9217-4b0d-82f0-c069f28e7059",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e1ccfc95-f3e3-4dc3-84d6-e282db5cd3ca"
        },
        "item": {
          "id": "dcf9abcf-188e-4a08-bcb5-b8e928607fab",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9b005fa8-299f-4e04-bbfa-2d8076e036bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b8056e-273a-44dd-98b9-18cb3f3b8e21",
        "cursor": {
          "ref": "d6a15b48-e80e-4fe5-86c6-5baff45cf4a7",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4335431a-d33f-4c91-8004-abaa5f1319e7"
        },
        "item": {
          "id": "d8b8056e-273a-44dd-98b9-18cb3f3b8e21",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "61184caa-05ee-4c26-865b-ed6f6c98b358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e35babc-1f09-4a10-8b5d-d720278cc291",
        "cursor": {
          "ref": "713269a1-8185-4328-ae8c-92096518ad6c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e861196e-c9ac-4cef-b638-997455e1c80f"
        },
        "item": {
          "id": "2e35babc-1f09-4a10-8b5d-d720278cc291",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "32b9f921-a26c-4275-b379-d86ded9ef8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a9d5d1-d323-48b5-a530-74cade113cdb",
        "cursor": {
          "ref": "a5530414-6623-4bf4-b5ee-3154929f9015",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "142e36f9-8271-4801-8b69-d3453407e5d3"
        },
        "item": {
          "id": "e9a9d5d1-d323-48b5-a530-74cade113cdb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "34397d49-b18f-432c-8f4c-b9d290f27e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e969745-547c-44c4-a138-542f7aaf7b01",
        "cursor": {
          "ref": "e275c33d-bfd9-4f22-90f3-64d975cd5eee",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a4276d04-bce3-45db-a38e-70e68c006830"
        },
        "item": {
          "id": "2e969745-547c-44c4-a138-542f7aaf7b01",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "033366a8-c958-4be9-9fa1-7f85d1ececcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f6f692-25bb-4651-930a-1fa02ca64d91",
        "cursor": {
          "ref": "a5dc007e-e22c-4bc3-a5f6-ec9e47f7d75a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "72c1fb56-d71a-4e3e-abd1-449d053d3b78"
        },
        "item": {
          "id": "86f6f692-25bb-4651-930a-1fa02ca64d91",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "730b5103-df53-4e55-8b9c-99d4d21c542a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c8c587-3cca-4753-a994-e2a0f3d905fe",
        "cursor": {
          "ref": "2d740139-d51e-4fdd-acf0-b6bd412834da",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "be917b54-5e98-4ad5-9941-ecf5cb460555"
        },
        "item": {
          "id": "82c8c587-3cca-4753-a994-e2a0f3d905fe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ed1aa41f-7bff-4e08-a1ab-554f2be1aac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfd650e-4b17-4f60-b4f8-4f62fda096fe",
        "cursor": {
          "ref": "886736b3-a24f-4a94-a2d2-8869e4fa60be",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e2bde83b-5da1-4372-b1c5-e370ad4fa3ca"
        },
        "item": {
          "id": "9cfd650e-4b17-4f60-b4f8-4f62fda096fe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4954df1b-c5f2-42c2-85d8-c73cbceea47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e399b1-f02a-4d20-b899-e46fbe87d90e",
        "cursor": {
          "ref": "8a957823-39c6-4074-88b1-11a5c22c7ec5",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e50a9d42-2cef-4860-92ee-03102a8a4d49"
        },
        "item": {
          "id": "f1e399b1-f02a-4d20-b899-e46fbe87d90e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d170d6aa-fc82-4976-a901-5fab30ffd434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9919dd3a-191b-4e60-b999-022f122a097c",
        "cursor": {
          "ref": "3e9abf30-968d-461c-ba16-4c532a083655",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6100b193-a1db-4506-a905-fe36cf300882"
        },
        "item": {
          "id": "9919dd3a-191b-4e60-b999-022f122a097c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8c60b996-3aac-4473-9d9f-162f5d739ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf931b7-817f-4a7d-8407-898971a5c1f8",
        "cursor": {
          "ref": "47b868df-6aab-4e76-b591-ec72fdea67bd",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c1f7bb68-6227-45b4-89a6-f74d40059597"
        },
        "item": {
          "id": "5bf931b7-817f-4a7d-8407-898971a5c1f8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a194017b-1fa6-4312-9f71-0b47d281aecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042fe387-1b76-426b-be3d-a8a5700165a1",
        "cursor": {
          "ref": "5edbaa0f-78d7-4ae4-bcdd-f841f99de8dc",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "67a2091e-c220-49b3-a4dd-03db73fd58b4"
        },
        "item": {
          "id": "042fe387-1b76-426b-be3d-a8a5700165a1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6fc62e78-fc58-4b0f-a895-95d81babc8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54712502-747e-4e68-90d0-d4b2c7a3b0a3",
        "cursor": {
          "ref": "e1bf4341-9de4-4a9c-ac4b-e0149fd95a34",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0f6060f2-8eea-407a-9af7-9abb4e93f357"
        },
        "item": {
          "id": "54712502-747e-4e68-90d0-d4b2c7a3b0a3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d873b857-b6d9-4015-a26f-e6377fd5632f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2707f08-023a-49cc-9f74-90b05bbaaf00",
        "cursor": {
          "ref": "15c84ebc-31df-41a1-939d-66d1a0336ee6",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bda85677-1507-4125-be49-e26daaf6eaa2"
        },
        "item": {
          "id": "f2707f08-023a-49cc-9f74-90b05bbaaf00",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6db4d725-bac1-4490-9183-d2d0d30e9a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c511cd11-049d-46f1-b874-a932185e07c7",
        "cursor": {
          "ref": "43603599-8a4e-499d-89b3-d23a39a9664f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "97b44893-59ef-4526-b442-a82c90a9f393"
        },
        "item": {
          "id": "c511cd11-049d-46f1-b874-a932185e07c7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6b2707b6-ded5-40b4-87db-0cbe12e022a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08633576-085c-48c9-9f9e-3e2362d5b382",
        "cursor": {
          "ref": "eeafdcaa-9b76-47ce-85a5-c6390b7becc1",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d2a665d4-9903-47d0-a51d-87b30afa67b7"
        },
        "item": {
          "id": "08633576-085c-48c9-9f9e-3e2362d5b382",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "172b88e4-08ab-4844-b251-c0adce09be3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d0ca1a-fc01-4e09-8b59-46754a2aa31b",
        "cursor": {
          "ref": "58f0bfcc-69c1-461b-addb-3cd883f37f3f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "91f09d0c-29c7-4e3f-bd35-9815c1644dd4"
        },
        "item": {
          "id": "f4d0ca1a-fc01-4e09-8b59-46754a2aa31b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ee8c2dd4-5677-40f2-92f6-acfb92493d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d4abbc-91d1-4484-b1c0-89161fcbe1db",
        "cursor": {
          "ref": "a3b4d36a-7b70-4463-a261-c188712e3c43",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d4547d5f-744d-419e-90ee-aba98971399b"
        },
        "item": {
          "id": "e1d4abbc-91d1-4484-b1c0-89161fcbe1db",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fadce758-cd84-4689-ae7b-751a0e22ff84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09530a6-8c05-4e83-b6b8-4cf33c4b86e6",
        "cursor": {
          "ref": "e7f36467-c972-47f3-9e2a-820a0d3f6b90",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "eb084033-9e58-4fe8-b687-938f9509fed2"
        },
        "item": {
          "id": "e09530a6-8c05-4e83-b6b8-4cf33c4b86e6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6a71c2a5-31a9-4007-a9d5-ca0ab3207637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c107e2-e6bf-45a4-b20f-a6da6cfa4050",
        "cursor": {
          "ref": "8199cb37-e908-4301-ad4e-669cbdf4bb89",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e5f95aab-7370-4609-865b-8ab74790b1b5"
        },
        "item": {
          "id": "b7c107e2-e6bf-45a4-b20f-a6da6cfa4050",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c47158e9-6924-4a1c-a32d-f51365574873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0186d6-36d1-4361-a426-50c001c739cf",
        "cursor": {
          "ref": "a21172b0-8445-454a-b82a-5b722c9ca1fd",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "64e4568c-501b-4f54-bd36-0f97d920c0fc"
        },
        "item": {
          "id": "cf0186d6-36d1-4361-a426-50c001c739cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ec8a486d-5f7e-40a1-94ba-791141639563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df005bfe-eeca-438b-b1bf-29d4235af5d0",
        "cursor": {
          "ref": "83ccf788-a0df-40bb-9d96-bb13fd6ce5ff",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6a747dca-b35e-4486-840d-e4732b308859"
        },
        "item": {
          "id": "df005bfe-eeca-438b-b1bf-29d4235af5d0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b8d52792-c139-49d1-87dd-ba2b42f7d4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab2d53b-cdfc-4a86-8586-99db920a3577",
        "cursor": {
          "ref": "b104e114-d0fc-4b53-9643-1c92a50d4b2f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "668b65dd-7bac-4397-9d55-71607c9ad44f"
        },
        "item": {
          "id": "0ab2d53b-cdfc-4a86-8586-99db920a3577",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a2dd3a2c-2c4b-4bf0-a1d5-a7d7151797ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799df723-b952-4aca-a125-5dd9278c0f01",
        "cursor": {
          "ref": "6c78a2b3-5035-4cf7-950c-cdce3975cd6b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "acec1cdb-5d66-4fd9-8b76-6cdd82ee2678"
        },
        "item": {
          "id": "799df723-b952-4aca-a125-5dd9278c0f01",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a5fea4ce-83da-417a-b988-2af389df2877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c8aacf-3965-4dbe-869a-c6f91c8fdfbd",
        "cursor": {
          "ref": "380b3bcb-d95d-4423-b2d9-f842db15dca4",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c4518f5b-c50d-4a1b-ab0a-c56b3394359d"
        },
        "item": {
          "id": "a1c8aacf-3965-4dbe-869a-c6f91c8fdfbd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5ac64468-6308-4976-9aa3-adbaa686f984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0271da9a-f5d9-4ec0-a8ca-3b73c3174b13",
        "cursor": {
          "ref": "6b1cca9c-574c-4312-b848-375ecb70c227",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1481c11e-ee2f-4063-ab83-2842535730e4"
        },
        "item": {
          "id": "0271da9a-f5d9-4ec0-a8ca-3b73c3174b13",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "eaa7c308-477b-47c6-a0a4-d5820dcba6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0750d227-24b2-419c-8389-3b9c97fafcfc",
        "cursor": {
          "ref": "c80e74b7-a285-4ece-aca7-e7c24a8128d1",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "518c3227-fe70-49cb-a03f-237d8ff8b383"
        },
        "item": {
          "id": "0750d227-24b2-419c-8389-3b9c97fafcfc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e9266a9e-ff5d-4cef-b27e-f3d52a746d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9fa6e2-20a8-458c-b150-1f35e490e345",
        "cursor": {
          "ref": "f8d4c418-7fc3-4683-948e-c57cc84d0459",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7ac069e7-15cc-4c97-8d61-a8d3384e2360"
        },
        "item": {
          "id": "cd9fa6e2-20a8-458c-b150-1f35e490e345",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b26bfc7b-05f8-408b-83b0-802a095607af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba5a63c-cc90-4f2e-afcc-74c2cb984d90",
        "cursor": {
          "ref": "b0f9748f-0003-48e4-819e-c41e360beb39",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1f4c62bb-6ac6-463a-8339-338f84806aff"
        },
        "item": {
          "id": "cba5a63c-cc90-4f2e-afcc-74c2cb984d90",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "15ff8e9f-760f-4b46-a54d-701087e0163f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc90173-d3c4-426a-8863-711ffac783a6",
        "cursor": {
          "ref": "4abb2d50-eb2f-4cac-aa6d-fed889b187ee",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2a5bf4da-f34b-410f-95ce-5727eb1894d3"
        },
        "item": {
          "id": "4bc90173-d3c4-426a-8863-711ffac783a6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5257104b-00e2-4eec-a2fa-bad3ab8c5fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1083e41-d340-4daa-b2e0-e9b339651dd2",
        "cursor": {
          "ref": "394c6dbf-fa46-4ebc-aac9-9e9e29e079bb",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "56bd474b-0c4d-4358-a6ea-92f44d9b4be8"
        },
        "item": {
          "id": "b1083e41-d340-4daa-b2e0-e9b339651dd2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f76bf259-026f-4a94-84fe-2613779bb102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44f07c0-9cd9-4d84-abeb-a543fd00ce9e",
        "cursor": {
          "ref": "b265bab1-7d8c-49cd-bf34-24354286d632",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e50f6457-7b14-4165-ba4b-604ff60aafee"
        },
        "item": {
          "id": "d44f07c0-9cd9-4d84-abeb-a543fd00ce9e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "40451278-9846-401a-8fcb-614553048904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5548cd5d-6656-4a9e-bb94-148786ba6d4e",
        "cursor": {
          "ref": "722b44b7-8eb6-4196-bceb-6375a92c4167",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d58dc90b-91ad-4fb4-887d-02d9b9ce824b"
        },
        "item": {
          "id": "5548cd5d-6656-4a9e-bb94-148786ba6d4e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6b9b20ab-dff0-492f-a8d6-4faa9271f2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0166f3b9-ce20-4eb5-8a5a-aafd3f476f34",
        "cursor": {
          "ref": "78500700-f19a-47e3-85e4-eeeeb2dafecd",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "efd829d2-aa30-41bd-a10a-7cf403ee6999"
        },
        "item": {
          "id": "0166f3b9-ce20-4eb5-8a5a-aafd3f476f34",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d04d3ba5-ccf0-4efd-9612-c94a74cfd56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ee2c78-6fb5-4163-926b-48d9e14d6d32",
        "cursor": {
          "ref": "bdcdf141-a7ff-463e-bc4e-10449d93625e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "502fa7bd-7a44-44ba-9772-3388de2a5d0b"
        },
        "item": {
          "id": "05ee2c78-6fb5-4163-926b-48d9e14d6d32",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e91eb31b-feb3-4a44-b356-d746b251e427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b67e8de-aede-4f7a-bf53-09cced3303cf",
        "cursor": {
          "ref": "e64cc74d-6fe0-4606-8b54-f11f54042954",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3791e0af-1fad-4631-9693-d3fecbff62fd"
        },
        "item": {
          "id": "6b67e8de-aede-4f7a-bf53-09cced3303cf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fc8ce590-a4a8-4166-aae5-df54352007db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060d4147-348c-48bf-b0b0-87a131b692c9",
        "cursor": {
          "ref": "eff7a281-924c-4215-b1db-871ac3516fa5",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f1495432-7dd6-4e24-9187-78cb54721c50"
        },
        "item": {
          "id": "060d4147-348c-48bf-b0b0-87a131b692c9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8ee45bec-07bc-4f63-955d-f0183d46d383",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25733e73-e4a9-4d88-b2e2-0de83b641f44",
        "cursor": {
          "ref": "a06fdf2a-540f-403d-bb3d-273539323edd",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dedf8430-f69b-4278-9512-c688eace69eb"
        },
        "item": {
          "id": "25733e73-e4a9-4d88-b2e2-0de83b641f44",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "97f677e6-8863-42d2-ba94-6481d518468d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08844d43-6920-4e4c-b37a-6ac8f47f485e",
        "cursor": {
          "ref": "6d9190b6-145e-4dae-bbed-84d965f28f43",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "055df08b-1e02-487f-97e2-9df8a54548fe"
        },
        "item": {
          "id": "08844d43-6920-4e4c-b37a-6ac8f47f485e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "29981983-2c87-4659-9e47-c8951173a3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c41da0-a5d7-4de7-a35c-f103c228c6ce",
        "cursor": {
          "ref": "b308e2e2-6861-407b-b57b-d9781a7f79db",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f59788ef-c224-4bde-9f13-ddd44facd98b"
        },
        "item": {
          "id": "92c41da0-a5d7-4de7-a35c-f103c228c6ce",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1a7417b3-28eb-45f5-9cae-12eba9649c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b82240-cc55-40e4-896d-f0cc1ef64389",
        "cursor": {
          "ref": "095e81fa-d49e-4533-973a-7afd7389f486",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c2630c18-d154-422a-859b-90d448b919f1"
        },
        "item": {
          "id": "37b82240-cc55-40e4-896d-f0cc1ef64389",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "74701f2b-2291-4209-9c25-391ff856e2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d3c1a7-e2c1-4a2a-9eb2-c378a7dded34",
        "cursor": {
          "ref": "1e31a008-ba1d-4e13-9de4-be2d28929962",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c8499e0d-d9ee-46e1-8e8c-eee246df8b19"
        },
        "item": {
          "id": "57d3c1a7-e2c1-4a2a-9eb2-c378a7dded34",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "baa00bf2-96a8-4b17-b76e-181f8bcecd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa39fa6-8553-4c21-bb5d-939da5939058",
        "cursor": {
          "ref": "07ae5e5d-c387-46fe-ab34-78deea45c859",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e869dfd3-7ba2-4ad5-afa3-fcc5d12ac09f"
        },
        "item": {
          "id": "4fa39fa6-8553-4c21-bb5d-939da5939058",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "357b449f-251b-4997-9be5-da9b2e385657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdba371a-2f03-4bff-891b-4175e8f7e822",
        "cursor": {
          "ref": "8eadc700-1220-41cf-9c8f-174383e096ef",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ff18d74d-ffcf-48e3-82f2-3cf6bc891b5d"
        },
        "item": {
          "id": "fdba371a-2f03-4bff-891b-4175e8f7e822",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a79ed363-0b69-45ee-9095-727006bf71e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bc21c7-be22-4c11-8b19-8611fac8fefe",
        "cursor": {
          "ref": "1eabdc66-b4c3-47de-a519-4223b89252f7",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "87f040ae-c6e1-49f7-9e7c-47d6b232e209"
        },
        "item": {
          "id": "59bc21c7-be22-4c11-8b19-8611fac8fefe",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "846450e5-52d0-4025-b23c-397a20aac13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9f9fa6-a629-4dd7-8cb1-7ce2ebb29e98",
        "cursor": {
          "ref": "b959d3b8-2165-492a-9112-f4745682be3b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ef8e04d0-5b03-46bd-8345-fb1104f74e52"
        },
        "item": {
          "id": "3c9f9fa6-a629-4dd7-8cb1-7ce2ebb29e98",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "10fbeeab-761b-46e6-a6d7-65e2463e46d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b372c2-b983-4d74-8195-2a72db7688b2",
        "cursor": {
          "ref": "cc87cde2-5936-4d4b-a77c-a86776785cc7",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4d46c27c-2c0b-48ca-9702-d31bf3dab7d8"
        },
        "item": {
          "id": "72b372c2-b983-4d74-8195-2a72db7688b2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bcf33f34-d0d3-4b20-88e5-f7a3164b78e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815cd845-9185-46d4-ba34-c9ef324a7428",
        "cursor": {
          "ref": "626e6ec3-1094-4636-9516-917b9d987b54",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5089082c-6fa2-40da-a88b-5f7a08a63fb6"
        },
        "item": {
          "id": "815cd845-9185-46d4-ba34-c9ef324a7428",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "37a8be66-59f2-4044-8ff0-26c68f3a462c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32953e15-cdd6-42a5-b7c5-bd3d7416aced",
        "cursor": {
          "ref": "698ac3e7-addd-4e8c-87f6-9bb55848c6b5",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5a87524c-baea-4b95-82c4-77d2ae7eded4"
        },
        "item": {
          "id": "32953e15-cdd6-42a5-b7c5-bd3d7416aced",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "88649100-af88-419f-a18c-7956796e83d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a79feb-c25d-4269-b514-b65106c26210",
        "cursor": {
          "ref": "167d724d-e872-402c-8fdd-fddca9d4adaa",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d6f23031-c22e-4166-85ca-163303effbf8"
        },
        "item": {
          "id": "47a79feb-c25d-4269-b514-b65106c26210",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "add0135e-3869-4cc2-95ac-8aa68623284d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8915e2bd-5420-423a-99a3-bed58798ef1e",
        "cursor": {
          "ref": "e661ca75-10a4-44ab-bf63-63ab1536c5ed",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b9d0a82a-b67b-460c-81d7-293a8e57086d"
        },
        "item": {
          "id": "8915e2bd-5420-423a-99a3-bed58798ef1e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d591ce16-c199-49e2-bad5-3625fda3268b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6254a72d-fcb9-4a6e-98f4-9abd8c6ea74f",
        "cursor": {
          "ref": "9b0ada35-2e80-4fa4-898e-9dc8e2892a7e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "01a4658b-810f-4ba1-bc75-7e674c47a8ec"
        },
        "item": {
          "id": "6254a72d-fcb9-4a6e-98f4-9abd8c6ea74f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "08d8b2cb-8774-42a0-b4a1-3f2b061dd6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0233555-2c5d-4fe8-ab9e-80b63a476901",
        "cursor": {
          "ref": "1735ff44-3db8-4ee8-ac2f-1e59e6c54fe1",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8cf8a2ef-77da-4e63-b52a-7dd748e76a4b"
        },
        "item": {
          "id": "d0233555-2c5d-4fe8-ab9e-80b63a476901",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3c563905-0a53-45d0-9864-1f6c1e00e099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588ebdf0-3eaa-4781-9aec-62074e13bffd",
        "cursor": {
          "ref": "b2d804f3-24b4-4ece-877b-37c1ce19e838",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "774013a7-b43f-401e-bdff-d800fec8f6dc"
        },
        "item": {
          "id": "588ebdf0-3eaa-4781-9aec-62074e13bffd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b7350ea2-f3d0-4fb2-a86b-a62e0fb117ed",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "8c98fb55-5a06-4454-84da-25e9635ad0ad",
        "cursor": {
          "ref": "68fb2a07-bebb-4999-856e-991012e0f8aa",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e502c5f6-39b6-481b-81fe-5c8096433816"
        },
        "item": {
          "id": "8c98fb55-5a06-4454-84da-25e9635ad0ad",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a27e95df-2277-452d-9110-97ee7bb2c391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46622220-9d3b-43da-8aef-efe5ce402f8f",
        "cursor": {
          "ref": "c67c9a0e-5821-4162-aabb-a119884b9a08",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4a1c40cc-a142-49e3-bda0-1a6fb941ce6b"
        },
        "item": {
          "id": "46622220-9d3b-43da-8aef-efe5ce402f8f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d41e0f18-975e-48ea-bdd5-222e3075d501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02e24c0-bf80-4679-9193-1276412097a4",
        "cursor": {
          "ref": "4ba4730c-1305-4d20-b008-e592be68d058",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d75103bd-7761-40ab-be81-e218a632f1d3"
        },
        "item": {
          "id": "d02e24c0-bf80-4679-9193-1276412097a4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "faea48e8-f7cf-4c96-b01c-dc9331f99334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa222d80-3d2a-4637-b447-2645869fb6a7",
        "cursor": {
          "ref": "b229ef52-0d9b-41b7-95a6-528a6879cf1d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9316ec53-4a00-4e21-8d56-3b865bf2adae"
        },
        "item": {
          "id": "aa222d80-3d2a-4637-b447-2645869fb6a7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b7eb35d2-ba7e-46b8-ae8e-31e1ef73f6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f610557f-98a4-4459-8cf9-ea946ad5b28d",
        "cursor": {
          "ref": "a5cb89af-9e44-4874-afb4-0142a7a41cfa",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0c061628-82c4-4d6c-b5f3-ea07cf250730"
        },
        "item": {
          "id": "f610557f-98a4-4459-8cf9-ea946ad5b28d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cc718b52-ec24-455f-8e56-a10136f31dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7227c00-ea82-4db2-9ac1-075c753aec81",
        "cursor": {
          "ref": "f1d341db-a687-4ed7-8d75-03317dd58b0a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4afedd34-9000-4e25-a633-63c237a86b0d"
        },
        "item": {
          "id": "a7227c00-ea82-4db2-9ac1-075c753aec81",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1ea470d0-b328-4b36-b269-70345d49f182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce1c97b-ca76-4610-9854-7cf8be201605",
        "cursor": {
          "ref": "1e779c05-5831-4e2a-becc-368639032f12",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7942c703-6c4d-41d2-8556-333b7f6260ee"
        },
        "item": {
          "id": "2ce1c97b-ca76-4610-9854-7cf8be201605",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e8b847cb-bdc2-44d4-b30a-2df2e8170ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1470d2f3-b3b8-419f-827c-088b9a226b52",
        "cursor": {
          "ref": "0350d205-bb08-42c8-a247-484fba138d3c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "98d42f21-0e84-4a85-96e2-4023e40cc849"
        },
        "item": {
          "id": "1470d2f3-b3b8-419f-827c-088b9a226b52",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2c98951d-01fd-4202-8d94-871d2b37f7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba1fd83-572b-4fbf-9f76-3042edd829fe",
        "cursor": {
          "ref": "3d038c8c-524c-49b9-a20c-23a86ff0c547",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5225cb67-a300-4402-9a5b-64a3455c19d4"
        },
        "item": {
          "id": "fba1fd83-572b-4fbf-9f76-3042edd829fe",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d1d0a9de-f222-48f6-8862-68d592c13124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79abae3-06b1-4076-ac8b-a616a10c7dc2",
        "cursor": {
          "ref": "3c963de0-cfbd-48a0-a761-323c3a1e04f8",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6b970086-2393-430d-8242-120c4bbbb54b"
        },
        "item": {
          "id": "c79abae3-06b1-4076-ac8b-a616a10c7dc2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5014e150-1fc8-479e-becc-ca3d18d81a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a12e03-14e8-4d0c-9aa4-ca1743dc55b6",
        "cursor": {
          "ref": "700b2937-5ffd-4a16-9440-8bcdb7cda164",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "65241d22-0081-4fe3-9919-544e23ce4caf"
        },
        "item": {
          "id": "10a12e03-14e8-4d0c-9aa4-ca1743dc55b6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "30f360d7-4117-428b-9dd0-49e763bf015e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37daefcb-5c8e-49ba-a274-fc5d8270134f",
        "cursor": {
          "ref": "68f08e93-b13d-406a-a949-5589d577263e",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "98adc47a-3bee-4767-bbdf-b90f8fb3da87"
        },
        "item": {
          "id": "37daefcb-5c8e-49ba-a274-fc5d8270134f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7c3d8c37-965d-4065-82f8-8bc99fa59bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0203f0fd-850e-4a45-9f62-8830857e9e16",
        "cursor": {
          "ref": "7936e837-29f8-42fa-9b77-ff9190945c31",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7c7165bb-f434-4425-ae8c-cfb5af42fc18"
        },
        "item": {
          "id": "0203f0fd-850e-4a45-9f62-8830857e9e16",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "56b872ba-4a59-415b-9ee6-04f438e617bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a242039-b9b6-4ad1-bbde-4fd5befaea4b",
        "cursor": {
          "ref": "d514e999-f55c-4f8d-a711-762d9d2eda19",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a86b5feb-73c4-4182-92ef-d77f3c0fe9e6"
        },
        "item": {
          "id": "1a242039-b9b6-4ad1-bbde-4fd5befaea4b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ac45a71e-a428-4a6c-9d0e-33d0273d7277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ab7f45-3a4a-4333-9346-bc0544477155",
        "cursor": {
          "ref": "fec96e4a-eb45-4fb0-9876-fe3d5e3b49d3",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7f3644a7-e262-4d70-b4dc-fe9674e3be91"
        },
        "item": {
          "id": "93ab7f45-3a4a-4333-9346-bc0544477155",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "76577536-0a4a-4193-9ee8-df791de4c75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32859830-69cb-4fe4-8a0b-f457949a68eb",
        "cursor": {
          "ref": "814bcc95-e1a5-4749-9686-367fe1ce1a63",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f3a5523a-d6e3-4158-ab52-c85ee0d07277"
        },
        "item": {
          "id": "32859830-69cb-4fe4-8a0b-f457949a68eb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "646b4b6b-fdee-490a-9221-925b79063d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cefebf-4f2e-4500-a267-00edc805e9ef",
        "cursor": {
          "ref": "cc6ce9a9-acf1-40f4-a9a0-3ebd15704917",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0dcf56c4-fb17-46d2-919b-b821f2d2f798"
        },
        "item": {
          "id": "60cefebf-4f2e-4500-a267-00edc805e9ef",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6f2a9b98-44bb-4bf4-bfbc-75284af60c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cab1763-0c7d-46b4-9072-ad9b5edcd3f2",
        "cursor": {
          "ref": "72d3906a-6983-4db1-8aba-543fb5740054",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "53acc7a4-2e8e-4c1c-ac34-4c465abbe05c"
        },
        "item": {
          "id": "0cab1763-0c7d-46b4-9072-ad9b5edcd3f2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cc9ff8f5-6250-41fa-b648-e3189d2b1122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc95b332-06da-4cc8-9595-6b3b117f427f",
        "cursor": {
          "ref": "cb86dbac-5eec-46a2-b4ba-762704b12111",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4afcfb99-8e2b-4735-b15f-53c90aca655b"
        },
        "item": {
          "id": "fc95b332-06da-4cc8-9595-6b3b117f427f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5357f777-8280-4c06-90a6-3c6228ef2085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318fcdf2-a0f6-4145-8587-b84c33faac1e",
        "cursor": {
          "ref": "defa5bf3-0afc-4508-9a78-09c3d43b9998",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ba089cd0-5dbe-47db-a260-9781953ff079"
        },
        "item": {
          "id": "318fcdf2-a0f6-4145-8587-b84c33faac1e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "94989ddf-cc26-4249-8c64-2ad286510da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec240c8d-6f29-4d17-83dd-1871a45894e1",
        "cursor": {
          "ref": "24f3e1f1-ad5d-444d-9a8b-f55c7bfc4131",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9476bd71-8354-49d1-928d-d5e65dacfe3d"
        },
        "item": {
          "id": "ec240c8d-6f29-4d17-83dd-1871a45894e1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "019f7b04-7789-4fc4-8f93-9185b5bccc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4172acb-59d9-422c-a95f-93cd221185be",
        "cursor": {
          "ref": "2d5e3987-6677-4016-9006-9ecc00256d5a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "88f88d2f-8930-40dc-bf27-37a2c5757bf8"
        },
        "item": {
          "id": "b4172acb-59d9-422c-a95f-93cd221185be",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ae2e7668-cbad-4555-8194-5fcd6b0a6b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcf2cbb-4d4f-4114-9e10-866d4a50ffed",
        "cursor": {
          "ref": "4774192c-794c-459c-ac39-05571b347b32",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b28e6f65-686b-404c-a70c-7a456365bc11"
        },
        "item": {
          "id": "5bcf2cbb-4d4f-4114-9e10-866d4a50ffed",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "60ff4223-869f-424a-af85-e7240f65d2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060b9962-0d82-4a68-ae15-294b27372399",
        "cursor": {
          "ref": "a526f510-b090-487a-a932-22787aaf7936",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0c575dd0-41a9-41da-8098-5cceed022003"
        },
        "item": {
          "id": "060b9962-0d82-4a68-ae15-294b27372399",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "39f06dee-5db4-4c77-a96c-9c559cb9da13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6513f85-c10e-4a6e-9057-3ce8cc746bc7",
        "cursor": {
          "ref": "cdcc286f-c8ab-424e-b0bf-2b058ea22fe4",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "708338c1-16bc-40f7-9e23-0dde1506b3d5"
        },
        "item": {
          "id": "b6513f85-c10e-4a6e-9057-3ce8cc746bc7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8b3cc5ae-ec36-4866-834c-1896665c754e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf5ab2b-c672-473a-b2de-5ae3d42066b7",
        "cursor": {
          "ref": "d24ffd3c-6f17-4afc-b3c1-23c14166ebb0",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0808fd79-a5b2-452a-9ca7-ce73161555ac"
        },
        "item": {
          "id": "0bf5ab2b-c672-473a-b2de-5ae3d42066b7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2eba7b16-15d0-47a4-bae8-a2ed034bf6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11938ad-f5e6-4ad7-b45c-9a6b127df29f",
        "cursor": {
          "ref": "0d9af44a-90f8-4db4-8d4c-c0b8005c3204",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f9d3b7b0-770c-4647-ace4-0b55618f6af5"
        },
        "item": {
          "id": "b11938ad-f5e6-4ad7-b45c-9a6b127df29f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a39cace1-a29b-4f70-bf38-0ff31f0e88bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78554299-c4e0-41ea-831e-7b6ef23c4ef9",
        "cursor": {
          "ref": "352e78c5-4a71-4103-b327-d119e5f5c43c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b576092b-febc-49a2-b731-ff54f380f364"
        },
        "item": {
          "id": "78554299-c4e0-41ea-831e-7b6ef23c4ef9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "72ca4bc4-9e6c-44cd-adfa-593482122d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79014521-115a-4ab5-bc83-2c629357bfca",
        "cursor": {
          "ref": "6d030eef-9be3-4de3-bcd3-4f8940f9ccd8",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "67c0d14b-65a9-4a9a-9872-d4a1c032203b"
        },
        "item": {
          "id": "79014521-115a-4ab5-bc83-2c629357bfca",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "464c6ad6-6603-4e12-b6eb-a809fccfe739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8532ba6-9bd7-4288-9e2f-cb63e9ae155b",
        "cursor": {
          "ref": "164ee94d-e99e-492d-b083-be82309cbd54",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "064ace52-fb65-4364-aee9-23a403dca16a"
        },
        "item": {
          "id": "f8532ba6-9bd7-4288-9e2f-cb63e9ae155b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6db6d11d-c194-49db-b506-de945027205d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8198993d-0f18-488c-b0ab-63ddb4200d40",
        "cursor": {
          "ref": "aa5a8c34-2924-4232-a07a-aec0c6cc7b39",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "59e84113-1979-4262-ade7-9c2c1458a8dd"
        },
        "item": {
          "id": "8198993d-0f18-488c-b0ab-63ddb4200d40",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4ab281a2-66d3-4992-84d0-2294402b4c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb0400-3ddc-4472-8b49-f378cfea5ca6",
        "cursor": {
          "ref": "4189760a-bf43-4585-9c7d-116d970c518c",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a292aa3a-56e1-426d-b19e-088257b5713d"
        },
        "item": {
          "id": "10fb0400-3ddc-4472-8b49-f378cfea5ca6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1afd94a1-cc3e-4bf3-8c9a-392b8934dfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a753a7-be59-4522-ade1-6f28f55f9e90",
        "cursor": {
          "ref": "8ccbfb99-9caa-41cb-9695-8d8d06489d1b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "32610363-b28a-46cb-9e3a-75a873f9da33"
        },
        "item": {
          "id": "f9a753a7-be59-4522-ade1-6f28f55f9e90",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "016ed357-75d6-4444-8f70-d9082d8644fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694fa532-46c0-4c20-a45d-7851a42591b2",
        "cursor": {
          "ref": "a831a60c-243e-4719-b380-3867bee9c6a9",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ca5ee7dc-b904-41a7-ac4f-d3e248217ad6"
        },
        "item": {
          "id": "694fa532-46c0-4c20-a45d-7851a42591b2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a4d12ee9-7a19-45e9-83eb-efbece4dc7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4b724f-f2bf-441a-93ea-40e4a5478b57",
        "cursor": {
          "ref": "a9e66a25-f9e3-4cdf-902e-f8dfe3ae8bad",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cf4f8c95-7261-4b87-9391-63e424184853"
        },
        "item": {
          "id": "cf4b724f-f2bf-441a-93ea-40e4a5478b57",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b9746d46-70e7-4b6f-a56f-98fc26e11b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30301aed-db96-457b-9451-16faef30eb85",
        "cursor": {
          "ref": "c0c9372f-2932-4271-9b76-aa59787b36ef",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6ffc0fdf-2e42-4ed1-8b29-f2f2efcb6591"
        },
        "item": {
          "id": "30301aed-db96-457b-9451-16faef30eb85",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8b4d33b4-d7e7-4db9-92ce-4323acd602e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fd3c49-e354-47eb-813d-3e56324c6d56",
        "cursor": {
          "ref": "795aa382-e016-445c-ba9c-ff0a176fda59",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "47995a3d-fe34-4962-9b73-6c6c93c5b57e"
        },
        "item": {
          "id": "80fd3c49-e354-47eb-813d-3e56324c6d56",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "82405708-b7db-4e6a-8da0-029dd26377a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9232f0-c9b5-4b28-9af7-f6f42ee1da4d",
        "cursor": {
          "ref": "e159c8b0-b90f-4fc9-a443-d6157f6cd736",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "494770db-9c98-43b9-aea3-4e0d74c9c95d"
        },
        "item": {
          "id": "6a9232f0-c9b5-4b28-9af7-f6f42ee1da4d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d760ae12-c94a-46b6-818d-9cb096931f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154199e1-bfe2-4a9a-a944-80abb4362104",
        "cursor": {
          "ref": "6734511c-06ee-41e4-b585-5d2e24db6d8b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cbb3af9b-43a3-4fa0-979b-693bdbbe5c03"
        },
        "item": {
          "id": "154199e1-bfe2-4a9a-a944-80abb4362104",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2d8c9507-c0ba-4b85-aaff-0b1000658435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7fc11b-56e8-4266-b22b-1147d1a51a16",
        "cursor": {
          "ref": "d8a72684-7856-4c5a-bf0f-c96091d01653",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "da41637c-2676-4eff-be6f-c7774fa88466"
        },
        "item": {
          "id": "2c7fc11b-56e8-4266-b22b-1147d1a51a16",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aade4834-5904-406f-9927-27e8ffa438b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0eebdf-ab85-46b8-ac13-54bbd3b96195",
        "cursor": {
          "ref": "6c9905c0-0eea-4dbf-8a3b-df355cd5751b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "630915db-01cd-4c18-8488-224dda16cf41"
        },
        "item": {
          "id": "ea0eebdf-ab85-46b8-ac13-54bbd3b96195",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fcec63c7-738f-4373-87da-5965cfd7348d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97fa852-d482-4a0f-8cd7-bbe769e7803f",
        "cursor": {
          "ref": "9b122e63-41e4-4a5b-96a2-d0d93779fb48",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5b747a02-1414-4972-9049-8d4ebb8ed886"
        },
        "item": {
          "id": "a97fa852-d482-4a0f-8cd7-bbe769e7803f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cb9ec77b-53c7-4eec-b615-d2ba20ca65f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8667f7bf-8350-4924-b9b4-5b54973dcd09",
        "cursor": {
          "ref": "e9aa59d4-aaf8-4c00-8a05-377bfd4178af",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b78c21f6-d4a0-42fd-8893-690fb690f558"
        },
        "item": {
          "id": "8667f7bf-8350-4924-b9b4-5b54973dcd09",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "77ef4ece-c279-4ddc-962b-051a87456cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06382023-3ef2-4412-a517-788cf1c65f81",
        "cursor": {
          "ref": "e0882e82-36c6-4d25-a879-5e1de946e4a0",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b442cf3f-e408-420a-8ff1-202a9831a292"
        },
        "item": {
          "id": "06382023-3ef2-4412-a517-788cf1c65f81",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "98658a21-f599-4303-b549-c8eddfe4d2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9e699f-1eb3-4761-a68a-d0cc8169d121",
        "cursor": {
          "ref": "cb502f88-558a-45d2-ae3c-f1c9e10da112",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "36647c73-9a27-4232-9681-1ba48aaa25bd"
        },
        "item": {
          "id": "8b9e699f-1eb3-4761-a68a-d0cc8169d121",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "08b34c16-c755-4a9e-96c4-be8b1edadc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a136e70f-43e6-4f84-9d44-26e01a8950ad",
        "cursor": {
          "ref": "0c4d46c6-6251-4664-a4a4-8ab59ccc1885",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fe013cc9-636e-42cf-9c46-040dcc4a2c69"
        },
        "item": {
          "id": "a136e70f-43e6-4f84-9d44-26e01a8950ad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2ea79609-7dca-4f2f-a571-c82411dd5f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de33ad9-f2cc-4e34-b995-e151eb570e44",
        "cursor": {
          "ref": "db3a8ccf-3285-441d-976e-d08ec65e3727",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f595ae0a-cb9d-4967-afe3-6fce2bc308fb"
        },
        "item": {
          "id": "8de33ad9-f2cc-4e34-b995-e151eb570e44",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "31d75b09-b5fe-4f26-8a57-30b018feb10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4abfe4-4cd9-4aac-98d4-d63ff9665b2d",
        "cursor": {
          "ref": "1c534f58-273e-4482-8c1c-dffbd628d301",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e21d2b06-d52a-468e-9efd-250778f87ac6"
        },
        "item": {
          "id": "5e4abfe4-4cd9-4aac-98d4-d63ff9665b2d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f87468e6-155b-441f-b24e-e90b70bcc3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6e1a31-c79b-47e8-af36-e3aae682d4ea",
        "cursor": {
          "ref": "5bbdef24-6a82-4d63-9ff8-2366dafda95b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "33ea118a-c8cf-4ef4-9f93-1077b8f1d380"
        },
        "item": {
          "id": "da6e1a31-c79b-47e8-af36-e3aae682d4ea",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7e759f3b-48c4-470f-b3c4-b9642c1a37d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaa6e21-36b3-4405-aaf6-25e0baba6fe3",
        "cursor": {
          "ref": "0b98d8d5-ce3a-4494-8a7f-e076cde048d8",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f4f3bfea-23de-4903-8481-e87c7ea43f53"
        },
        "item": {
          "id": "efaa6e21-36b3-4405-aaf6-25e0baba6fe3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "40a1fba6-d52a-427a-8a3b-3439bf513e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e943f5-736e-4e95-b03d-00fc02db6ac1",
        "cursor": {
          "ref": "741ac6e8-81df-4aba-bef7-a58c4fe65d74",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c9038c33-8af0-474e-aa0e-5573e101ce73"
        },
        "item": {
          "id": "25e943f5-736e-4e95-b03d-00fc02db6ac1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "87ffe50e-07e7-49dc-ad73-2c97945a7b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79ce662-11f8-451d-a5d7-0e3e241b7797",
        "cursor": {
          "ref": "db7e13e5-62a0-4ee0-aba8-7aa30076e623",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "71c1ea7b-c3e0-44ae-8313-108b47680c7d"
        },
        "item": {
          "id": "a79ce662-11f8-451d-a5d7-0e3e241b7797",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7af61e21-e913-4d8b-bdc8-3ba1246f0546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0ff611-129b-4060-867f-427ac07b0b42",
        "cursor": {
          "ref": "6b4c6e83-73e5-4831-8e74-1613861f0b2e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8fbdca33-e4cb-4eaf-9956-bc95dd3ef23a"
        },
        "item": {
          "id": "7f0ff611-129b-4060-867f-427ac07b0b42",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d0317698-f913-498d-8182-00b91128ed12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7303f02-2005-442c-9378-d72316fb329d",
        "cursor": {
          "ref": "58af1db7-1f06-434a-933c-4c74ff47fd9a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dc947d31-6049-469c-b2c2-12d14e36f9ff"
        },
        "item": {
          "id": "e7303f02-2005-442c-9378-d72316fb329d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8dd08b12-1c76-4073-bc36-3031f994ace5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea4191f-698a-45b8-8eca-ea40ef36a68f",
        "cursor": {
          "ref": "28e869a6-105f-4166-8ed7-8e2d37d3e029",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d83636cf-00c3-44a2-a1cf-1a23fa5c616b"
        },
        "item": {
          "id": "0ea4191f-698a-45b8-8eca-ea40ef36a68f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d93a9f5b-2474-4418-9152-d92651213af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5068e6-1cfb-4a23-b4b2-22ab289a613f",
        "cursor": {
          "ref": "07afc66c-ef80-4184-8c8f-6fc9c920e4be",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "691a4e57-b14a-4992-9113-274a5a529415"
        },
        "item": {
          "id": "ac5068e6-1cfb-4a23-b4b2-22ab289a613f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a9c99d27-d177-41a3-aff6-418a471ddceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d62340-ba1f-4bc7-9f19-a2531d6c0cd9",
        "cursor": {
          "ref": "53ffd346-503a-4609-a1f0-86545bec3486",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e54a2bd1-7559-46d9-b888-c226034c0f62"
        },
        "item": {
          "id": "19d62340-ba1f-4bc7-9f19-a2531d6c0cd9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0965218b-913a-42ef-8c8e-f792054014e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf24eaac-799d-4480-bd0d-7d2b6b96ab8c",
        "cursor": {
          "ref": "94b860d3-88ec-4f45-ba55-2478a86b4cd4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6361c2d2-d0b7-46f9-aae5-8b546534f302"
        },
        "item": {
          "id": "bf24eaac-799d-4480-bd0d-7d2b6b96ab8c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1d4494b5-24b5-4c65-9251-3615cb8ee3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d550d168-1a25-46d4-b8e5-d69bd764def7",
        "cursor": {
          "ref": "6f0c5147-c331-4100-84d8-d89819b996ad",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "68e9f6cf-ea98-41fe-8948-b8fe68cbabce"
        },
        "item": {
          "id": "d550d168-1a25-46d4-b8e5-d69bd764def7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5ea09c56-eaf1-475d-93fd-5388c8bb3901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b60d04-0651-41df-a2a3-85989164fbf2",
        "cursor": {
          "ref": "d7a36ee5-bc53-4dee-88a8-6f51a5943184",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "09c48901-25fd-44b0-82b5-14c749a8accd"
        },
        "item": {
          "id": "47b60d04-0651-41df-a2a3-85989164fbf2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3683298b-783d-4708-aa3a-2c7ce62d8de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c97f7b-d437-4afd-8209-25360680cb19",
        "cursor": {
          "ref": "f3040abd-7293-4d83-af16-abd89850e496",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "55479d51-c3b3-4497-8ec9-271d5b305762"
        },
        "item": {
          "id": "27c97f7b-d437-4afd-8209-25360680cb19",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ec3ee6a0-d60f-4235-a533-261b2ed79faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a150d218-b0a3-4f6a-8e43-1fe9fcf9904e",
        "cursor": {
          "ref": "48816d5f-b012-4b93-ba88-386fcf5b5a50",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5cfece6f-071d-4680-a70b-259cb5a71c8f"
        },
        "item": {
          "id": "a150d218-b0a3-4f6a-8e43-1fe9fcf9904e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8a85dd93-7db9-41a3-9310-1bb6dfa26070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ab8b7e-c01e-40e5-beef-f9d8c6246ac4",
        "cursor": {
          "ref": "2d80df1e-52e5-4543-9910-0093a55eccc5",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cdea93ad-d2fe-4a35-86a3-cefba4a4f86d"
        },
        "item": {
          "id": "d5ab8b7e-c01e-40e5-beef-f9d8c6246ac4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dcca7356-90ba-4093-8fa7-10e2da1fbf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7b73e8-69cb-46ab-ac09-75c0862a868d",
        "cursor": {
          "ref": "08e6403f-aa47-4d6d-85d2-d02b55267032",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c9ac9f23-eb77-466b-986c-a0466415815c"
        },
        "item": {
          "id": "bb7b73e8-69cb-46ab-ac09-75c0862a868d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0a3e2db7-a5de-4c59-873d-f329f7009cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ad5bb8-053e-4fd4-b432-d6c5153340e3",
        "cursor": {
          "ref": "69b85df7-ecb4-4ad2-9760-8e6e56b3c20d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f9c504ee-0296-47d0-a1c0-7faf8e4a987b"
        },
        "item": {
          "id": "c6ad5bb8-053e-4fd4-b432-d6c5153340e3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9706a686-1220-457b-a32f-b8c1d2fc7695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca01ad3-9319-4724-8861-7937f998f0ba",
        "cursor": {
          "ref": "11c6fb0a-93a9-4f63-9e41-8792e9b30cf8",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "dc6e353b-2076-4a6a-9d89-8fc1b8094d36"
        },
        "item": {
          "id": "0ca01ad3-9319-4724-8861-7937f998f0ba",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f713706e-da69-4a11-a992-cb40bb7b46c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6746225f-cff0-47f6-93f8-e3762cc6ec9e",
        "cursor": {
          "ref": "345fb8ec-f4f1-496c-98f2-97c3b6f99303",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2a10ce14-4641-41dd-826d-acb5a3f1a892"
        },
        "item": {
          "id": "6746225f-cff0-47f6-93f8-e3762cc6ec9e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7da6534b-c1c3-4ab2-a00b-6fbff189fece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac14f46-11bd-442c-9470-293f35c24815",
        "cursor": {
          "ref": "73296f47-5ae6-4d47-9514-de52fd4cdc94",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0a382b4c-aca8-4fa8-ac41-ab75a1ba77d8"
        },
        "item": {
          "id": "bac14f46-11bd-442c-9470-293f35c24815",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ce36384a-bd69-4494-9a30-47db095e1f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd497c4-5e70-480e-acfb-f890f4ddc03b",
        "cursor": {
          "ref": "b3374e93-43b1-48f2-be7a-308783fe23c8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "245e822e-3b33-4c15-b8cd-f1197a60660c"
        },
        "item": {
          "id": "2dd497c4-5e70-480e-acfb-f890f4ddc03b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "91d917ef-bf34-4367-9536-64671e8e4e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c632751-59d5-4ba5-a0bf-e76d92b4272c",
        "cursor": {
          "ref": "6102eae8-1448-4ea7-83f8-d55cc52dd040",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "dfcfbfd4-ae22-40fc-9171-56a925c22d8f"
        },
        "item": {
          "id": "8c632751-59d5-4ba5-a0bf-e76d92b4272c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0500ce49-1836-49e9-876b-50627afde983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624de4db-aa3c-4038-8448-9911e9b546cd",
        "cursor": {
          "ref": "171331ca-0e8c-46e5-a2ee-3ecbaa47641a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9ac28c76-28fd-42c2-bdc6-39c1870c8f57"
        },
        "item": {
          "id": "624de4db-aa3c-4038-8448-9911e9b546cd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "412113e1-44d8-45df-a792-a5e228694c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d545915e-3dd9-4f21-85cb-656ab6d4197f",
        "cursor": {
          "ref": "a385903b-0799-47a8-9cc3-678ba3da5e3b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "af1a0072-926c-46ae-afd4-12bc6d6fe428"
        },
        "item": {
          "id": "d545915e-3dd9-4f21-85cb-656ab6d4197f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b6f36ca6-64f7-4b6c-9f4a-8d300efd7a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f63dbc-ae5b-4d5d-aaee-e74b3fbe313f",
        "cursor": {
          "ref": "59b98a7b-e831-4644-8937-115a60ed4129",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "29aa3bdb-2b8d-4ee1-b73f-2d42cc450bec"
        },
        "item": {
          "id": "49f63dbc-ae5b-4d5d-aaee-e74b3fbe313f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2e8b1bbb-8dfd-419c-8af8-92e9c8044918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6355ea7-4e66-4fee-8def-444c228a24b8",
        "cursor": {
          "ref": "a4ca9c21-42f3-48f0-8636-23dde7f7e569",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f9b0deff-bed2-48f3-9c04-00e250c84c69"
        },
        "item": {
          "id": "c6355ea7-4e66-4fee-8def-444c228a24b8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9eaa6357-a032-4c09-8bc2-535a5d258a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26b8471-4efd-4622-bd10-7272aac0a651",
        "cursor": {
          "ref": "a7e013f8-4e20-436c-95f8-253a41140d78",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5ffe02e5-e7bb-48c2-bc44-101213daef71"
        },
        "item": {
          "id": "d26b8471-4efd-4622-bd10-7272aac0a651",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fb7bff28-4ac5-4cf4-af94-b0561f54b14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d10a087-4cf9-4d41-bcaa-bb073219029c",
        "cursor": {
          "ref": "4bad9165-1895-426f-b38c-cd7d4871880d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d8812658-e502-449b-8c76-1a92dd54caf5"
        },
        "item": {
          "id": "7d10a087-4cf9-4d41-bcaa-bb073219029c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2872943e-8056-418e-9203-ab98bbcccfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0f1276-8c12-4e8f-8645-23196af4d024",
        "cursor": {
          "ref": "9e484bc9-d14f-43f6-9369-f5b9e9482e47",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5bdde309-fe15-4f82-9eae-ce46b2319e7c"
        },
        "item": {
          "id": "6a0f1276-8c12-4e8f-8645-23196af4d024",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "80f4051e-fe8e-4bd9-9cc1-39e51c9da145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c433df-a514-4df7-b3cb-f2e6689905c9",
        "cursor": {
          "ref": "d69fb6b5-6990-48b4-bd19-b089220b992d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "42c8d130-eaad-44ac-b87d-8f3903822b8f"
        },
        "item": {
          "id": "20c433df-a514-4df7-b3cb-f2e6689905c9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "87931fe2-243f-48d9-a5fd-0a4240cfa0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82eb610e-27b5-4807-8b2c-3d64b9cfc413",
        "cursor": {
          "ref": "583bd8f6-e6ed-425c-be4b-8fab4fa6ca85",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6149fde3-bc2b-4227-83c2-de25ce5974be"
        },
        "item": {
          "id": "82eb610e-27b5-4807-8b2c-3d64b9cfc413",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "22ceab62-4e66-4920-a96d-bef80cf69ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb1c33e-a64f-4597-9d3f-28c2c6fefe76",
        "cursor": {
          "ref": "44b461d5-c136-4e0c-ac4d-1029c979c4c2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3473429b-7374-4608-846a-78006aa5d858"
        },
        "item": {
          "id": "bcb1c33e-a64f-4597-9d3f-28c2c6fefe76",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "66547252-e645-45e5-8e82-51babfedecdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc37cc0-5b19-4d80-b495-d844ce3ebd68",
        "cursor": {
          "ref": "4d85c47c-346e-42f5-abad-9d503fc44425",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e98495c8-c7e4-4e70-a782-bbc6e85d7c6a"
        },
        "item": {
          "id": "9dc37cc0-5b19-4d80-b495-d844ce3ebd68",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "71728dfb-7a04-48e2-8dcf-49887edeb51f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee46c0da-7756-43be-87fe-55cba5ef546b",
        "cursor": {
          "ref": "3e1cdc51-8487-41d4-9ea6-23c0bd390dca",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f4f27ed7-6b85-42b0-9eda-357ff5e206c5"
        },
        "item": {
          "id": "ee46c0da-7756-43be-87fe-55cba5ef546b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8a8c415b-afd4-49ed-8bc7-7c1ad22edeb0",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3520fe0d-7056-4cd6-82ef-1d3640847bde",
        "cursor": {
          "ref": "24fb8e63-7ed8-46e0-9d40-899e42cb4f93",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "892a4413-d927-4d33-904e-067b6b635b27"
        },
        "item": {
          "id": "3520fe0d-7056-4cd6-82ef-1d3640847bde",
          "name": "credentials_verify"
        },
        "response": {
          "id": "05c4bd61-9e50-41cf-9769-947f928f1404",
          "status": "OK",
          "code": 200,
          "responseTime": 3313,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b7546a-bc04-408f-8ca1-9f7cf923a2ba",
        "cursor": {
          "ref": "42234d6f-4fbd-48cc-86ea-36969ffafd7f",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "dfa44b9c-9b94-4b3e-8696-9eb2cf1bc5c4"
        },
        "item": {
          "id": "38b7546a-bc04-408f-8ca1-9f7cf923a2ba",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "694fe1c7-e05b-457a-b7ab-c26521ee439c",
          "status": "OK",
          "code": 200,
          "responseTime": 2398,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "92be8414-df63-423a-8ffd-c332e552e0bd",
        "cursor": {
          "ref": "2a6b852e-9cbb-469f-b721-bad624100a0e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "be466201-6eb7-4429-a3ce-4a4d54486d71"
        },
        "item": {
          "id": "92be8414-df63-423a-8ffd-c332e552e0bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "29ac94bc-3ea1-4e4d-82d2-c52edfbc097d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92be8414-df63-423a-8ffd-c332e552e0bd",
        "cursor": {
          "ref": "2a6b852e-9cbb-469f-b721-bad624100a0e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "be466201-6eb7-4429-a3ce-4a4d54486d71"
        },
        "item": {
          "id": "92be8414-df63-423a-8ffd-c332e552e0bd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "29ac94bc-3ea1-4e4d-82d2-c52edfbc097d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6807a8df-acde-4241-9d3e-f78588017e91",
        "cursor": {
          "ref": "17616fa4-7351-4d60-8f55-1b9cd816deb6",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b33e126f-8909-4801-a8c8-2cb2cd5bca60"
        },
        "item": {
          "id": "6807a8df-acde-4241-9d3e-f78588017e91",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7091e6d3-c98b-4972-afbc-ed3f32418340",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba82c04-bc24-4166-8aef-2274097c6d63",
        "cursor": {
          "ref": "ab6fab97-860e-4a50-b073-e392976f3b1b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8d0f9508-51d4-4dc1-bcf7-8035add3589c"
        },
        "item": {
          "id": "4ba82c04-bc24-4166-8aef-2274097c6d63",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d9125ff4-49a5-493c-8448-885ee6910d0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}