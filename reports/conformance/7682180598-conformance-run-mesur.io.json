{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2d984e2a-d0f8-4bad-a66e-dbd6bad93708",
        "name": "Clear Cache",
        "item": [
          {
            "id": "128f18f1-99cf-4b9c-a62f-ed54e1134efc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72f95b84-cd21-4629-ac99-52f869332f8f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a4ec5822-6dd0-40df-88dd-886fe8f32425"
                }
              }
            ]
          },
          {
            "id": "747706b2-aae0-4ba1-85ce-eb47de887b54",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5707963f-3888-4a20-b6f9-114bd88f7b53",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a487c97b-f0d6-4816-b863-8f8f5adb92b6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "25a2600f-0461-4f44-ba69-23212d77bf8f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "36c48078-d02c-40ca-96ed-219cde2098cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01491be3-f6d8-4c52-9a60-6afb9d5ca861",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78902178-3497-4d91-bf4c-9ac77288b330",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37171801-a421-4101-8677-725ff236f4f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c2f77f5-5a8d-4d0d-a907-124ffd97acd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e8c48ed-0241-43a7-b04c-4c4985ae58d3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6be1b490-1777-4626-8189-50445ea5ebf5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8427c2f3-115b-4274-865d-2bf3d3867175"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe6d302e-3146-4982-8a4d-6a75391c187e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6c8420f4-29f6-4107-b2c8-f7f4d5479079"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7d612cb-c0b5-4118-8554-f469a9f7bd85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f317fb6a-6665-43a8-822a-505c8f22e82f"
            }
          }
        ]
      },
      {
        "id": "3f37a6b7-744a-4782-926f-06c8cf751cd0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "14451c94-912d-4331-8cb6-9519494d8984",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a4d323b-5963-436f-8316-ad4dd7fcaf0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3822bb63-773d-4e15-8542-b4be74650d03",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f891165b-a31a-4930-974b-e31b5d55e56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c7410a0-8e78-45e8-bc75-a960fefd3357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b6963e-38f6-4c10-ac6f-e5bd6498ab8c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e705b7-7a59-47df-9c73-db669a1650f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9da1b812-5887-4d0a-9619-26c1a64e0167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6814f981-ea41-4bb0-9621-3b89e834ab22",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8e0898-8277-4f67-804d-ac4f334301cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adb26c3c-7ea3-474e-831c-7feeb30770ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "61e550ac-29de-4be6-b6a9-29afde2a2c34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "343db8aa-0cc5-46af-8d74-f04cff52a084",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b8790b-caf0-4a6b-a9dc-5ab8ee9fda3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bd32037-fc38-482d-95a9-feb2314cc6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4de804b-67ab-4b08-b864-58887e9e4a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce2fb73-46ed-4508-b55b-6993eaba84a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ed516225-9928-48af-9209-b9d6ecc5f885",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e593d84d-2e4a-40ec-b3ae-c11afbfc901d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04aa6053-3434-41a7-858b-2de9ca866de8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dd7bbcd0-23c9-4bc4-8bad-42efb3705cbe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "291b430e-9766-4b40-83ba-67d3d4ac7ada",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9bcb9983-1f0d-4f53-8cab-c51b090bcc31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1f2d01a-9c44-49be-b97d-e77a4a6742d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36ee80bf-d563-4167-9e31-76b4ca5f97b4"
            }
          }
        ]
      },
      {
        "id": "64b27194-3de9-47ae-b301-86ee87962208",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a75ae363-3ca6-447b-9b46-ef04e30b4530",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bc1b5e2-1ad5-447e-8c5f-fa5f740960f6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f40f2140-f9c8-4205-adcf-dc989788638c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533d85f5-dc98-4486-8a9b-6d9c4e98332a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adb6bb7-5d12-40c5-9197-eae10a5ccd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edc6b3f-70f8-4cd0-8dea-3b0ae49b728b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57f0a2b0-82b7-49bb-b8d6-5872cce269a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88df5f38-ac5c-4ea7-9146-fa03bb4b09ca",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39187ce3-4458-4815-b5a4-edf92d05f867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd8cf87-10ed-4640-a6dc-ce62017fc14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5effed-7bef-46df-846d-365817238eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30d75a6d-0cc8-4958-bff9-cf3109560502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05713990-6b06-452f-a2b8-7a683a77c90e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d5f646-0f34-4983-88f5-5ed0067c71fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce93cc20-3241-4696-94a5-331267e31983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c337e123-4c03-407a-8e39-6a979dea7f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b09a7ec-8d38-412a-a06a-78313aef69f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e90f929-24ff-4297-9099-9104f6002f19",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55655bd4-fffe-4e84-9592-ba717a2b4ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6496bdc4-9229-4cb4-b554-10cabb20e41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f893dc6-01e1-42cb-a318-8cda25e49dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1dd402c-be91-437f-9e08-836c828ee412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4456b744-fb40-4547-80a0-71ad05dcf278",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084a0116-fd74-44a4-a474-82a862282174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d969844-d13a-46e2-bbe6-ebae1fbe754e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6b4a03-d7ef-41c9-96ab-a2fbb0e3d058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f76ad8bb-3ad0-4562-a38b-a02775240c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11193bab-1680-4f0b-8d82-8d8bf9fd2d5e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1b8600-f209-4a32-be3c-3332475127c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f68362-962c-4c64-bca5-d07ab4ba8b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd503e65-1bd3-4fa2-88ce-4b53a0bca48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79a55c8a-660b-414a-99a7-1ff287eced35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c371f893-940d-496e-92c2-6ba47adb630a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf21f48f-7af4-4e4e-b9eb-2bc0daab3e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4079b56f-aee4-4c6d-a352-4e42462a7c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11f5c31-b5e1-475c-ab1b-388ba0dd2d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1514a46-86ae-4d29-9118-6ad197ff641a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b970136e-814c-43c2-ab2d-ed0600f70d61",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e8c8c9-12a3-4834-9535-c02b9f894882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe4197e-4036-4a0e-b582-8952a5318e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d684fbac-c002-4cff-95c2-08a597c9731e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b850426e-64bc-4641-b1a5-0c80c74095af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66627c7e-1d4e-45dd-a48c-fadf92e760a5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a784f7-574c-476b-ab1c-d8686140840c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad69a6f1-de8c-4b2c-b3c2-b9744e90a8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7975ddb-4e8b-4f44-bd0b-d1a69778b7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fd1d6c7-40f9-4e9b-9436-f0c6b60d5b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03444588-556a-4b7e-b620-ee0a6565fe47",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6909eab0-9314-4bbf-a682-4069f79765e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3165f6b-4a9b-4637-8275-9cd240074ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfd56a8-8074-47fa-8c26-546fb829cdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffacd0d7-4c38-4f6f-a755-b369fdba0450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21008352-14ee-4792-b57e-91053ef46491",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc07c26e-a3a3-4cce-bae7-f09b49ff81f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b94709e-0e3a-4462-a149-85c68f19bf46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d801030-df69-40ae-b2c9-80663308e9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d4e6a52-46a7-4109-ae28-2a9f46250bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1274c53-e65a-4df2-9fc6-e9d6939aa722",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df02227-9138-4677-adc9-763ce748c4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c3c9fc-6297-4901-99a6-22ed1355d1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4201cdca-05bf-47ba-8927-b00ad56a9f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4fcdef3-9553-43d6-a6cf-f0c129b217ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560372be-ce25-4afe-94c9-7ac6c0fb242a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b39daf8-9ad7-4c57-9eb3-d9280be5bf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3459da59-3c01-4f9a-8b1a-fcf53a538e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c2c5a7-3128-4a1e-929b-4c4b35a9920c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4133be84-ef12-496f-96d8-5de514703ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098e8bde-b74b-46d8-b188-475be4b0e533",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0601fe86-c3d4-4686-b69b-4b468b4b5111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fd22f1-4a0a-439a-89bf-eaaf422e15e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b7fa46-bb6b-4768-988e-73dd379d14b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ca92107-7d54-43ee-9038-c187c70cbda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bd85da-6bcf-4356-b57b-49af181dbbf5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04996a7-624a-4871-891d-2e4f72000d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd0d948-c9ea-4ef4-98e4-9bb15b9a1a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad57cc9-8538-48f2-8bce-77fc8b4579db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17223015-7681-4846-b8d6-b5046c12851b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4499f0-3f14-48f3-83ca-0285c8373c82",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a653dfe6-8b86-4386-b529-88b536215a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2a757d-8061-4f90-b283-b9a80ff6cf52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ba4e21-9b27-4dd3-9fa3-2adc9963ffd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2521d6d5-c616-420a-929e-34df88bd6aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c0a947-5aaf-40c8-ac52-41e1594a3e55",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c5d99e-856e-479e-99fb-8ed1b647be91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f7e35a-a19a-4de8-833a-44935c62f746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1940d86d-51a7-4567-b868-b2f8c2ceb958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "108d6c99-4548-49c2-8bab-84547e71fe1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400ffe7d-0a71-4508-ba47-c88ca5519374",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ffaab5-f46c-41e9-9523-40fed153cada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41efc5b5-3749-4d2b-af05-94af26ad7693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3132cb3-412c-460a-8ec9-fc42a613f55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2abb15ea-07f8-4c43-bdc9-52ba1b749746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a7897d-8b60-44f5-bea8-b92c65114568",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16076e54-0616-420f-a6aa-1860cecc45af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748c6d59-587b-4c2e-97b7-5c2a11daf053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f66455-36b2-42d4-9dc6-0c7c0ac98cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c8eb89-15c5-4da3-a61b-f183425e521c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f8ab17-0380-4409-9040-ff7be1cad340",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6d4991-c614-4d19-b79e-7d07f0023e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c188ed0-b6b1-4e52-9462-4ce449fd174c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bbaf0f-5ba7-4c78-bbbd-f15ebe98b12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2185f7-4f65-4928-89de-0c23464f7258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeaca95-bb15-4a03-bf7e-449d4fade081",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd6179a-0a3f-4f0c-8c27-b018542eb0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2ff918-7bd0-4ebf-9ab0-f5ceb1b7be58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881192b6-c9ea-4ba6-b796-86c4e7683cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47de8772-4a76-4d3f-adae-91eaccfe95e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a39e0b-33be-4b4c-affc-14f7442788d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a71f443-f37e-4d6a-9f25-ac62d1bd898f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1eb1bba-cffb-476a-85a8-0e7e8acb045c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f7d7d8-d818-40d0-b86a-d25bf606f67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "030222a4-9367-4f9e-964e-f315e2444cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93a5879-1415-43f3-b68c-c17b3c386e69",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11474f8e-96fb-4415-b5ee-4166f88c28ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3402e5f2-6c91-49de-8ec0-d77bb961e52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af4d097-5dea-40fd-94c3-55bb7f4ed6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da24fc5c-df71-4bec-b1c9-c7e36bcab4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1179ee3e-e7ab-4ada-bab6-546fb28fb713",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d489ec6-677e-4caf-a87c-f9762c960709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00f13b3-a2ea-4673-a7ab-779dc9714588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b055bf39-fdec-4326-90f7-8390ce4af7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "acad1290-847b-4501-bedf-caf139dae8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d6775b-6587-46da-bb88-0945a0a36fd1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f797f1a2-b83f-4528-a74d-f78ec4f67804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a594b73-5ca5-4f8d-ad63-19a772f34422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db46031a-56ea-4123-9d2f-0f81f7114860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2521e3f8-fea0-4227-86e3-7ea93074ff4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd879192-c4af-4e52-b883-51c9267551e4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89aaf8e-7556-4b19-95ee-07104483e862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a3a87d-b42e-41f5-af96-848bd6911ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acaee33-3aa1-45e7-950e-2438368d7c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c55946-8db7-411d-99fd-12ad5d0b3590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81f51a4-0570-4a3b-b1a9-7db71ba901a9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01670293-d991-49d0-af5a-d42628e72535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6435fa8-2a87-433d-ada0-8d55dce5dd38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f557d43e-a344-4817-accb-79d7b2b60de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c081d6e4-dacc-406b-8723-889a8ce51cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4721aa21-c1f1-4c81-a129-236505268d49",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e43311-8be1-4d27-b34c-3ccab4237489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b439f1f4-3755-497e-a3bf-c95a1f04a41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8710f5-3682-4006-b6e8-7008fa4a5c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14816f39-3da2-4daa-a53d-1f8a5e48d98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a425ce6f-e4bd-491f-81b3-d3079cbfc036",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cff9c2a-7ff0-41c9-9f8f-84455dbd08ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193a5528-ab70-45cb-a42c-73db2ad778c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95801bd1-34f5-4c09-b63b-ec642d19e62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8735356b-ad61-47dc-be26-c37e61133b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e10bb9-b6a3-4c4c-83d4-de5f830b4854",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d722382-247e-45f2-b57d-789a7d5da0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7169140f-5790-403a-b0ad-0a3927f34fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b3384b-1326-4312-8bdb-7bbebf4b4ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b6b7da-4073-426d-96ca-f01d87c3fb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7fd0a6-5659-4cda-96bd-00731a407669",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860eecc3-b93c-40cb-a514-2c73ed42996a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5458fdb6-23b7-46fa-8462-db4c65f3ecb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ab84d3-20a9-4455-a08c-705c6631c346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb95c8f-0f09-41e7-973b-b2ef70ee1a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22f94ce-ef1c-411d-8ecc-ccbc7296522a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780082ac-4f62-4d0f-a959-7a404196336e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1a291e-55bb-46fd-bef9-3dc45081af7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd36f95-c290-44a6-9af8-04e1afa00d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "082aa9d3-a189-4b89-99aa-40c1faeac151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb77b56-0a62-4b6e-9f59-cbdc8dcdef2f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a47a88-a34e-485a-92c2-48de588cdeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adce5df5-0015-4112-8524-f7bcc6d54fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97dc6db-6458-4da3-9a91-ab0d9053ba26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58eab096-c1be-4681-a700-ccb19286adc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79df18e-b196-4a32-8746-53c05d8b84a7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cc6705-a475-4edb-8b00-c7a7dc67ac49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeae719a-345a-4ca9-8eb2-caa61ba54d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc813eb3-14a6-4c2e-a62f-9686d65a2030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0eb67a-00f3-4669-8e84-e4d59d52ecf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be462a8-ccd4-4a3c-be6d-ea074d6c018b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f3d6ba-253d-4fd1-bfa3-a1bacdb36e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da503aac-62bc-434b-a4d0-b4c82a6bd98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef223f27-2c41-405f-b28d-6cdd8f3d74a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ecef96b3-1a20-4584-befe-4a6bc8901f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79e3602-effd-45ff-b0bc-4cbc415ea63f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e551ef95-a55b-4ff7-a23f-d45e4d068276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa73f7a3-f535-497f-b76f-6ae0ad9a347e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f07680-1580-4d5a-b998-1f968b80143f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb0ed81-cad9-4e20-9ecf-b988932d5757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98216277-52f3-48a2-896f-81812458a5d1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06d1fde-e6f4-46b2-b2cc-711374571d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c07c95-c04b-4a2d-ba72-bda02f38d950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b433bd-e85e-4e8a-adc4-7d6ee4b191d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18f787c9-a79d-4b46-a86b-b993a28f9490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8e6e46-56a5-484f-bdf0-36a34451ae54",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a00559-7a63-48cb-ab65-ec212e800797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa0b05f-4efb-4aa9-aa97-6ac94bf96a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91455797-f342-4b05-aaf9-71116468249b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c972c72-c587-4802-b0cc-2061a1cde63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c56fd4-25ac-428f-81d9-21e51148011e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b5b3e8-dc26-4210-a850-046e42ae2648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2342ff-fa7d-47e7-bd96-08c005edb847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f345a76-631e-4332-b67c-e7243d6f61a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0dc77a9-719a-4896-8605-8915273a3a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62e047b-cab1-4d39-a83a-bd08fe5c3736",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c016816d-821c-41da-a5b7-2f343dbb7deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c350bc03-fd4a-494e-8804-606320833b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b59844-70fe-47b6-b565-729992ebd42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "365bd791-d48b-4486-a01f-c6575f17b5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24d3c73-acce-46d5-8bcd-5d90e93ec686",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34465e1-26d0-47a8-8d44-23f3be4dc719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0151ab97-233a-48f3-8712-12015810c7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64d6162-fb5e-43be-988a-242ff982573b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "763880fa-9aef-452a-ba2f-678205603204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c278dd7c-6723-462c-bb4e-f94b74264de6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66010d3b-be33-4ce5-8723-fb4ac2ba6418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2514cfdf-c0f9-4476-b65b-c4bd1e0f33e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dbca3e-8438-4a51-9398-338a27f8341b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "934ccd86-1df1-45a9-8bed-b895c06f2c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f9f024-37f2-485a-b653-620732274c24",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5607953-6ea1-46d8-8803-007ec92f2403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b22984-aab0-4b26-8051-907c01446bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f5cc1f-3828-4a5e-8e3d-697b384d6268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd75744-a59f-41bb-a982-671a19d8dae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13be4c86-7bfc-4c45-b02d-430d7a1e858f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2194e31f-a3d2-4811-9425-20a28ef4cf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f93686d-03ca-4341-a260-60fa3eac8f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3478c76c-3f64-411e-b5b1-e80ed244892c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "100cb6d0-d4d8-4b96-93fa-2c1761bf3786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383fd25e-970c-4006-8f44-5bde217f8701",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131e1769-cc1a-45d0-bbf7-a7be4476d0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ea05c4-ba80-4734-9d50-010ec0ba8183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0c4fe6-57f5-43b3-bf3a-fe9168f26958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "446111a3-8b95-4ff1-aaea-d7be26df8e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7a2c7a-f584-4eb4-b8c7-51b3269129eb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771a3785-a29f-4f36-9e69-e529b9a3df95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5187c1ed-4bfb-4cf1-9150-c36749ba6ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f113643-fad7-46c1-9322-7746550b9b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef86b935-a215-4fc9-b113-948d7f427b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3e8d16-e580-4190-9c1a-da6abfa4ca72",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01da5f7-3187-45b0-a443-fc38f4dd8976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6aabf7-6281-4a9e-a8fd-2ba6db7e136b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3686b077-945b-4958-befa-b416976018d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0402706c-6dd2-4032-8111-21507e334c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fd39bf-3df8-44a2-89d9-b0d25d283547",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7891cbbd-bfad-470d-bc93-aa1c453a57e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3acf65c-a8c1-4e3b-9471-cb5587c3475d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74b9475-2208-42e8-bbe8-f965d49f277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96806e59-8826-4cd6-87fe-b91451a98df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e459983c-767e-4765-b841-5f9950e2546c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b075976b-5b79-4ba9-a1bd-852bffc92102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f26b7d9-ec0d-431a-b75d-1fe78224bcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e19c75-8f43-4e8d-83aa-7e077df832e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2eac20-21b6-428e-a105-a1b492d66fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068a4f47-afeb-48d7-b6a7-df7d4098bd92",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085c4ac9-dbfa-416e-a129-cb92c2e79b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9ddfaf-530a-4d6e-9f37-f7ea9e60ecea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24e7841-eb9f-41fa-9ea4-33ca5c57513a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccb322a-d581-4faf-8609-bfe8de0c688c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa3e6bb-fa03-4f7a-b89e-40a4295243e1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dfb603-8064-4e37-b738-a3a6327a6591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5db1bea-cc7e-4410-b1ab-3f00afb78fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf461f4f-3407-4bac-9029-489e614497ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a44121-9546-49ab-a8fb-a2e1e30236c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc18eff-6969-4a85-a706-b2849d6cb792",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a551fc8-fbfb-437b-a7a5-49eb87133cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b87272-cf9b-430c-8e9a-169240a28bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b3e320-e348-48c7-bab2-0961899a5d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a81e63b-e1b4-4c22-85f2-6172223d642b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a04d82a-31fa-4c45-8ba2-d35de382ff0c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb0c6b2-f51c-4955-b2b9-0886fc8d6dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9498aa-1696-426b-b79b-f1d08685c24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d7ffc8-e797-4c05-8d58-deeba0d72dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f6c530-5fa0-4455-adf6-1bc74122017b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110023d4-c99f-4198-a1a1-aa411295e1a9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3896939d-10f7-4f80-b0a3-57269b340a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9375ea-e332-48b1-b4c2-26583d136d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49be75b3-ce20-4e6e-bc8f-20428a560f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92d3f42d-14c8-4a3c-a229-0c3f733df3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac60bf9-c4a9-4432-9053-9ac70598a632",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3b8887-1aa4-4c21-bb37-27833d22ad81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a292784a-1303-4078-a182-bbe204ad6aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fb097e-4b17-437c-8a59-b487f648572c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5e4cee-f52c-4c34-a950-1f30f96fc663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4d87d3-43d0-4787-88d6-8b7e65489c71",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7253cd11-0fe2-4e7a-be2c-047ffeef2956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a8ad46-1a9a-4556-ac81-ad93f7794c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb894744-6674-42ca-bbab-0582cb301909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f0d8f2-97c1-43ef-8bfd-0897e1437030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a26ad0c-e8b6-4045-882f-e6435e9a2172",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cd8448-0d5e-493e-ab37-2a0bff6c78bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56634afb-87e6-481d-9290-d0c5bb498cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5d1c13-44f6-4435-91f2-017d031ac66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6caa3b80-9e9f-445e-9a83-8bd089f13931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c823e5d6-1323-4242-9655-38a9749b1459",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b882e63e-1272-4986-b23e-4b884f57cc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030f65e3-38d7-464a-83c6-9201aae06e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bbe7bf-2940-4c54-b4ca-fde9d0afe919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "969a87bf-4941-4e61-aeef-f9dcc9074afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6b9157-516f-482b-bd04-fdbeb3f99e3f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331d9b3d-6117-4f7e-bfee-041d57e78367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77f30ec-5057-4164-a885-f65331688882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d3d1dc-5645-4ab3-a83a-9250962f05ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a87857-a3c0-4d3d-88ee-beded72b4c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dde78a-c68b-47f5-a046-8073c2db164d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98372287-6d40-4aa2-b311-31e9ec2002fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd8d6e5-0477-4475-a6ad-714384e9db6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309d2824-cf00-44f8-ba15-5162f13e1165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee27b357-d745-459b-b351-4c21f625de02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5327411-3e42-42eb-bab4-56ffae04ac0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3edf8e1-2e96-4b34-88dc-0c8de3391054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3203e4-6388-49ca-a52a-2630b3bb481f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dbb8b2-c644-42d4-a2f9-0567d44c5747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c19cdc76-06df-4e88-96f7-b40351aadb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6121fc-7d2e-42b7-80ed-ab12e341841e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7411f6e6-6477-4284-9c9c-6bb887d364c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cf92ea-ca40-42f2-b60a-df800ab5bbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1aa533-f9d4-4d19-9ce2-12529ca229f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "11136889-8f91-4535-8569-1e57a4471a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe220b9-f11b-40b5-b634-d4decfa227cf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440aad4f-0b27-46f9-80bd-3cfdbe218d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78290dd1-4c33-4f2b-8a55-86d0ee7d29cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826cd08f-918b-4b87-a3a1-fbbfee66a37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ec9390-5198-40b4-a451-8870e5d5f55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4890714f-2f55-422d-ae90-4de5a066d782",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05559b4b-266a-4bf5-b6d3-8b52c03ba356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e23a33e-5b2b-4e55-9235-8b4f990038d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fd28fe-cf61-4274-82e4-481fdb27de9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0655424c-e038-434f-933b-7f5cdab65c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dba521-33a4-4c9a-86a4-10f54b100e40",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4684d0-a06f-4c90-a554-7234fe4df6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb9a736-3a0b-4836-b922-5b20d441389c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416fd993-fa43-4799-a554-dd3ee7871bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f2e5f0-2907-4b18-b88f-fe3660cc2938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7906adc9-7b0a-4327-8ecd-7aafc876607b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca91e888-3d86-4804-adc3-7c4acf064a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4dc1a4-3540-4b58-ba4b-bec776bb122e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74826979-8fb2-4324-bb74-a7e6007116ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f0f510-f9d8-42fe-a694-68ee6794e785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe453bb8-11d6-421c-bd74-aab434e1fdad",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2171205c-5512-4bfc-8610-bb6f177cfa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4543d1b0-8ac0-469f-9253-3c3926f7047f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abdc14e-de4f-4153-8ddf-857bcd2daaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "182f363d-e5d4-4f9b-bc3b-edddebee884e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478ad2ce-6c30-435b-82b1-7c158a25287c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdf6bd9-524e-4157-9999-bea20511961b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417dd122-31ee-4c28-a4f6-ad9111f8260f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c35a2e-cb56-4334-bab9-1862b37d2adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4788e4-b446-40c8-abaa-a25e0b09619a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f026f4-73b8-46f9-bbd1-983067fd2962",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f832cc-d7d7-44d4-ac00-f64a9fa8a0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a939f7c-1177-443e-90ab-87b10dfdf9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddf5b0d-95f4-4a41-98d5-6a6e6b56c5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d76e8c4-247b-4e1e-ae36-f8ac2b273915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96aa8d74-9280-4ed9-8734-9601b43f1bae",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7288df-dc08-444c-9543-93256dc30c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69c9d12-0221-4855-803c-30f53207322a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70327913-3000-4775-bf48-279bf7b7f824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "668bd33b-ecdc-4669-a148-5ac27e7f0ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87870685-1aca-449c-bb0c-7fc6e7e0b428",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c1633c-7c8b-4367-8423-98bb168e0817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf82a5b-1dde-4214-88e2-e104110a08b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fd8eee-5561-45d9-80a1-b7bbee39afee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a1a765-726e-4485-b3d8-62387f4cc44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a556971-b63f-4ac3-a4e6-917480e91886",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b6f0d1-1c92-40b5-a218-a61509a9aa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3e8057-31fb-4a5d-87b4-51ee5aa97632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d5ce85-73ba-44ce-96d4-b25cb374783b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6adc526-7384-4805-8f44-899d25b96217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b539eac9-c909-46e3-8a7b-b798f282edcb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaaf488-791f-4dd0-8ed9-8824b7e1a5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3077c0ee-a714-460d-a2fe-5d1715e653bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879afcf2-e900-4425-8873-54b8337408c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9028378-71fd-4685-8def-9012a540d760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011b0b0d-49af-4a5d-ba59-894f7b575224",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261f81c8-265a-4c6f-83e5-b794f6d6639d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aebfbf0-eb9b-466c-bb21-4385c6854887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a2efa8-1f97-473f-addb-59d60b138d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da50fc46-3e4c-42d3-86ed-393d28f07d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275e8a69-76d3-4243-98de-e01a69980b97",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04209c9-5dcc-4aee-b772-1af5855e0802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cdd982-7b36-4e3e-897b-2b7f747e4539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf8c443-c686-456a-bcca-a9bfb47c432c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "56bd5d4e-2811-41d1-b5da-60f0e6ebfd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a75eca-6a57-46a5-85ca-e14ace67b849",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837b5852-94e4-4122-a8a7-c520ded255da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3f8de4-5bb6-41ff-9347-335733338819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfa430a-df59-4e7c-a9bb-3d1a7712bd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a64fe60-aae6-48ee-b6e4-cdce596378ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9672b01-f66d-4e46-8f80-c7cab390f48d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06f44e9-4f2a-43f4-950b-48a15ae83eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5ba3b9-d8a7-4bf0-9ae6-44c040680618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b669102-f7bf-4c10-a2d1-28e68eeeb087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c23e8a6-24b7-401b-9ca2-33b94673ace5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5311dc-fcc3-4f74-a847-736d5a940537",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da220872-448d-4415-8959-f78ef52f6714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46df72fd-2f2d-41a7-b761-cdcc9c7b47e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9828dc9-29b9-4a35-91a2-20f9e7431e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f350fe-9fe8-4daa-9f63-3b1f4c97d3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cadf10-0084-479f-89b4-59c18093ac5b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63195409-0918-4362-a5a6-ef97f56b273e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c49b27c-ffeb-4581-8293-e2cefcd57e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ce8742-6a17-4526-a3a4-4f8b441a4f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "544980af-787a-46d7-a0b1-eda83c165d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dd997f-41bf-4089-b83e-f74b323e9242",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fbd61b-cd7b-4b0c-9d7b-24cbc41f52cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf2d8d3-363c-4014-8f61-77ca8d8cfe42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ac62bb-5455-4ae5-b863-8e2c330f799d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d441fe81-d9ca-4e95-b28c-948027dbb5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed37e30-be65-4f05-95f1-3777fe4b65d8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997e0bba-28af-458a-aa22-4fb0b0578bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcaf708-327f-4b4f-b284-0b8a0fccbf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f76d9c-df6f-4952-849f-1ad9cb7b868a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae86bc21-73b9-4363-adfa-c6fe7eedc476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a568d4d-d8be-4946-97c5-67963fd6ae30",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72371a50-b176-4d73-a4c1-f131b49c7688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e48373-7703-4b32-bb01-04fc57f6870a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978e4af9-b4c4-4f2f-a9e3-5eb8fea23748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79bc34a4-5b20-452e-b22d-5d7186bf8e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f190a803-9821-4db6-bdff-ecc3c61dee7f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f25c639-0e86-49af-8f41-b7c665bce259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fab0242-b166-4fa7-9c31-2d915d8c33d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53adc42-d65d-439e-b23d-70987b567caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "470d1b5c-958a-43e2-bcba-803789a08c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04f8981-9b77-4c69-802a-e03d7c2f6148",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68bb564-d215-4db8-bc18-7134a3bed2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73438138-746f-4f71-9d3c-f4bf71fb4f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8828ad-c58d-46d5-88ae-e22d3267576e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3193e8c7-d6c4-4c05-a553-549becb90cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f38a10-a03d-42ec-822a-aa09d0dff988",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3e12c4-3cd3-4061-83b5-fb69e6c15549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160bd71c-a989-4586-92c0-2d8a119e145e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec6a26c-6288-44cd-95fe-28f2a8c3e3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39a31b91-12cb-43c5-b754-2e198721d305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85c0e5c-579d-45db-86d8-7cd839c4e3f8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1a112a-95de-473e-ad89-3aae35fb1383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f94fd6f-26f8-4e23-adea-b1cc6553e828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb25141-5386-464f-a6b7-9c49c67256d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e157456d-dc5a-4fa6-8368-eb20df7b8b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760e7962-0a06-40f0-847d-221fb87abcb2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd620d5-86b0-4451-aed7-5a5bf34eddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa157b41-a2cb-4290-a38b-3b4fb12b2f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01a8e00-ac12-41a4-b78d-869a52c8d1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf3d2ad-603a-4b28-94a6-bfbfbe501a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022e3b8f-eee6-4457-b54d-4862d6c37b1f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a5a034-a8e8-4e61-828d-34e9dd4b4911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842dce1d-3cfd-43c0-9cc1-03772269b284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbda495-e9cd-42a6-90d7-00b50168173d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d04cf497-78e3-494d-94a0-c7659e03d3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71408db4-f0bc-4032-90df-d9e045a90d4a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2453e20f-ae31-44ac-8f26-a1ed87b9bb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bf842e-bdad-4547-b5dc-44581b48efcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c459d092-12cb-49dc-b42a-b05e08c007ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "385d6cda-a70f-41cc-803c-1925ce9fd565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6a0145-d060-4874-96d8-914a353bc86c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aefa2dc-85d2-46be-a668-9e2a05ba4e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be6847b-2668-4552-85c2-a1e5f9f96ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5569aa78-f721-4031-9f10-ad1481500716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f44d24-3d1e-4a31-ab59-8d00419a9b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411de47c-493f-490a-959a-f9cf14b0ceba",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2995190e-1343-4914-b49d-b62ac794c5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5c7cac-0f13-4350-8f6f-a9730afa4ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e5835a-177c-4e73-bb7c-4623bd7011ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "674621ac-af0b-43f4-bfb7-9368819cc6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24848e3-28bc-489d-a4a4-b08a31e8aff6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aca3f6a-5897-409f-a609-c7babc84ebe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8fbb0a70-bfc5-4afe-b68a-265298ca6a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35458a42-325a-47e3-bdf5-1d8c6182eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb8c1ad-532b-4d05-ad13-dd787802b286"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0aad9df6-4ce6-4406-9378-d3a3bcdbe0bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b67f29a3-ea43-4b5c-bf56-3e7db5f88c3e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fee200-183f-4e94-9d12-b45a0c16b9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e30a4221-8ee2-4ffd-8ad3-9da918d671d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67452d9c-a58f-457c-9d07-037e3723e661",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99628826-bd6e-4c18-b568-043d7ff3f992"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8caa7878-2a97-438d-96ac-122f6c4a28ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "584efca4-e0e5-4ed0-a2f3-01a832b716d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1628c936-2c73-42b9-9866-5c04e2cc9e7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dcf38e2-4909-428c-8001-6461cb5e3ade"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfb2a2c1-4f3e-4a6c-a5ba-cfe34194b37b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcc37fed-260c-493e-91a7-f71187ec6300"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "84d370e1-7230-4329-8421-8f5cb2a5f047",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71e374d2-2ec2-4c01-815c-cc422f295d02"
                }
              }
            ]
          },
          {
            "id": "3a82922f-20c1-455e-9497-bcdee07326f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "88ad073a-0281-4c4b-8df0-995b35ca0818",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8faa8d35-90f4-41da-8f8e-cb9ab35c3140",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2695e910-7f3e-49fe-b54d-d76c1495634c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "759846b4-3d1d-4395-bf80-c0280b082324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193826c6-ead0-4362-b44d-c90dbf645e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80eafde-a90e-45f1-9ede-036fc5d9df6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1cc2bcd7-0d35-4bc1-8a3b-0009f6bd6844",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f1b2691-c97c-4173-8aee-aa76cf4eda25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c70d9e3-e6a5-44f4-a22c-969d9bd9076c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "077419b0-e079-4733-b127-6d8d7ace3256",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "afc4f369-b550-4dfd-b350-4ba35c2a4d03"
                    }
                  }
                ]
              },
              {
                "id": "c8470dfe-85c7-469c-a8d0-960477148acf",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2704a2f-8c41-40fa-9479-6a73391d2055",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "120098e8-3af0-4d19-b243-4efd02a6f626"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c1d4cac-1030-4ac4-8e75-374d0fdebfa3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8805610-8772-4d9b-b42a-6faf1e64d8b8"
                    }
                  }
                ]
              },
              {
                "id": "e91f04c0-8a11-4eb6-9729-f24cb1290ab6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73b92bc7-2566-41c6-8756-b49e92249fb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da590859-71d1-4446-b440-9ef5e1819019"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "424e9161-188b-42d9-b5b1-2561094166d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec08278d-d0d0-4cbd-8d2a-1732e4a9e855"
                    }
                  }
                ]
              },
              {
                "id": "803e83e1-727b-457f-ad01-bcbe7af8f89c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c804a6ff-bfe8-4534-a3d6-d37631a162a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88c3daba-1fcc-4bc3-a459-ce3e30699a6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43aa92ea-9431-4781-bf4b-1d34244243ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "659353bd-fd59-453d-8339-b7b9fb91aa4c"
                    }
                  }
                ]
              },
              {
                "id": "2f850daf-1091-4aba-a7ff-57e9ebd0d68e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fca10bb6-979f-4341-83da-4baa7352e9ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a28b92a6-f0b3-4c21-b889-3d7fc34a904d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e07b9f5c-8448-4fc9-b5fc-2b3c927d4d37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9c97c595-6ad4-4ef2-bc13-a1c15a05a74e"
                    }
                  }
                ]
              },
              {
                "id": "56ad23db-e5e5-4688-91b7-87782154287f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f092ae65-b4e6-4bf3-9375-61e32843d05d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3751729c-9b9b-4948-9c5b-2c3d23ec0c26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6616d28a-d84b-493a-b643-29be9e8ca9ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58f45baf-87de-48aa-860a-3b727a3e71ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3a78ae4-2bd3-4fb3-b6a9-4972dc146808",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47cd29e2-3323-4607-88bf-6a8013a1a68a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "797caa20-c21b-49b8-9711-2119f4a804f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfbb0c80-ed54-4872-90bd-7867f9df0a3a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1792fc1d-c927-4912-ac5d-f788f7b77808",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "590c6f3d-9f5d-4cee-b8b3-0489c62f77c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7f15e7f-efde-4e74-8489-84cce7187651",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfd5af86-6901-4dff-93e9-20884c61770e"
            }
          }
        ]
      },
      {
        "id": "7da94a95-6a62-4e9a-9b98-7bde615a8bc8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "59f22ce2-116b-4ee4-9d7a-768068bf7b5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09aae1c6-00fe-4d79-b387-38fffb049191",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49a33ae0-0322-4788-b0b8-6ccdb04d4b72",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9069d6b3-11a4-4c72-acd4-3bc556e198fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351e161d-d171-4d52-9b2b-4d27c06efa7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3580f7f4-1021-4dee-bae3-7499c9609bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5971190e-b7e2-42a2-a9c3-29ff9c962ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36066a70-d6c7-4652-a1aa-05e5fa84ba35",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166e00a7-6557-4f3b-969f-0576481826c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d325e2-5e72-4f2c-9900-cb39009284f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb31b6ae-1f1a-40b5-ab53-bb3af5c71e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de70fc8-8023-44cf-8bc5-6c8b7e75e089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e372d174-232e-4eb9-b337-75e36a86df63",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050c1877-4c20-400b-b84a-2894ae35fe14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d061ea-1eee-44be-8575-a25038e24ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bb818f-4752-4ceb-a56c-ffd47a3bb729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93af8ce1-2038-4342-9b74-d0f4080686e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfac221-1136-425f-b405-76aae6d3bee7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb17dcb-1d7e-4f1d-96b0-b258c1c20680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b445d87a-0d44-4aa8-9d54-ba42dc6d3849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aca7578-8718-4b28-b214-7b2cb65f7978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fdcc6c-7adc-45de-a402-65ebf72bfbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2313a46-fdea-4259-baa3-31befaafbae6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4c06ca-115e-4494-8511-e1c56c9317aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c80200-879f-4db1-9346-c09e63c64bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d85d8de-e778-46f8-bf55-cbfd5271ac04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96e0eae1-0d8f-4b20-9ed2-8c35c61832ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e88fe4-9037-49fa-9699-0154fc61c1c5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0085fa6-d966-46e1-9dff-543dcf3e2dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40b44dc-9988-49a3-8be4-99744a2609bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86dcb2b-cb9a-4447-aea3-237e82c3712c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad8866b-3e8c-4e0b-85d4-aa8fea30ceba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddf2fee-28dd-49fe-be5d-47fe5c8c12d3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e008282-ba30-4b48-aca3-c36a2e1034e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e875ad-c333-419a-9e0e-8f53ca4d0bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2156df6b-8a33-4aea-846a-7ee91bf3b3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ad3355-7ceb-48a7-b188-fdf3d347fb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38ae027-790a-4718-810a-db5be547f87f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019d0ae9-397f-4149-8507-bb11bfa209fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8a9bd9-4d52-4f36-9f66-9011611255e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a61a93-ac55-4864-b8ed-2404e578f4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5c2584-9ceb-44e9-8271-c6ef4ccf2390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4081292-c6ec-4c76-8a2a-6af84d01e5ce",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e12fd8-8404-4a95-82be-9cd525e91e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd57127e-95c8-4190-938b-b29029d64c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76928cc7-e115-4fb2-bded-ca682e671a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c71701-1580-4feb-9799-ef4ba0c67faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3ea470-7163-4cb6-98a4-2f157eb0e20b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32596964-2f8f-4083-b70d-f831e557a044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2705f925-944f-47c2-a502-0004e5f2a586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81ecb0c-8a07-4773-8c04-83cb40b777f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc3ee15-acd7-4c8b-bb96-d8944b044c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0850223-fe0c-4282-bf52-1b065382e1c5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b65c9a-d1fc-48bf-81d2-b010f1c4dfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44db37e5-a439-43d7-a64f-58cdcae8c0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca4b569-c747-4636-b4d5-cf2ae667bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4e40e2-a687-4b5e-8114-434d6aafa8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561a87f0-00eb-47e2-b56e-9d258ea389e5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121735d1-ae8c-42fc-8468-8a8808ea69d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473fad58-3884-4857-870a-a9ecca3c059b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dff4e3-7b18-45ea-b6ff-8c62cc8cc338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a92f6e-840d-48a2-82eb-fee502c56ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d39ece8-437c-44e1-beec-102b4db813d9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e396e92-5475-4a4d-afc5-1d060db47001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1463bfbb-3352-411b-9384-2aa9d7fbc640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b46b1d7-2add-4b69-8b77-18a02c5a8b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c7c940-0ef0-4794-8075-e27f98116488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5f8835-22cf-4ec2-872b-cb79e103bce9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba54684c-f87d-4898-bcfe-09f3eb357ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3dd64e-5411-483b-91f6-8711eb155f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be92ab52-1fb7-49eb-873b-b9ffb6d986e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77e22c5-7cde-4553-882c-d5a9852f791c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e572918-3848-4831-bba7-49d182af8584",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f829daa7-a38e-4b97-845b-c596d42b62fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aaf52bf-3b9f-42e9-b10c-57587b28aa53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1f32a2-57ff-471e-9f8d-8229a84cbb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "646d8530-f2ed-4787-8dfa-470f1e9811ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c87bd8-2b4f-42b5-b1e5-863e72c31ca2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92312d6-9005-4b29-9443-ab51ee02e84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebab0baf-2543-4ef2-bf77-299c802d23b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf278214-b1d9-4405-8f26-560b70208660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff3920f-8a31-4f57-b999-bbe6df6550f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9665058-f579-4034-a7f2-baae1248e846",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70347763-640a-44b5-b231-d75ceb941bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c275fa-076d-40ec-abf2-a66dbfca514b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca46aa5-a782-464b-a30b-ec2faef42747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6620a87-1e5b-4a3b-87b5-adf906815e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b87904-aa27-4211-8481-b20e8651d386",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca178b3-e296-47f9-baf0-911026273772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2979cd-15b7-4d16-8e67-6095abadc33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c5aea0-7055-49f0-ac3d-12d3727c20a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c684ec-28f3-46c6-bb01-0cfd5f0596c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c3bd83-8ac9-49a4-8a75-3ccd5b0cfdfd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0919721-f5c5-45f2-afe2-242b1195c946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8743d4a-3f11-482a-9d42-94ad754ed72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2d8d0c-7c73-4038-ac87-950520970be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77cb38c9-31a4-4770-8688-c00044865892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2773574-526d-4955-ab96-edb921791e29",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf92d8e-0aee-4c9e-a828-565035a9f2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d181ea-5abb-49a2-b1c9-cf37f87c4bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be5f519-8401-4645-b295-58802ddba960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bfa7b0-923b-4385-8834-a95334ffa376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60991343-d60d-423b-94ed-2a180252cade",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baba88a9-6f5c-460a-b1d4-33fabf3f0858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b372379-26a3-4198-af75-c1bf626ba2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bc8479-e7a4-4ec3-b3b7-24ed022a02fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "116afa35-a8aa-4dc8-bf96-7d293bdf385c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f5ac52-6477-49d9-b425-9883d007b7d3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019ab415-d889-4774-92cb-7ed02da61324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e70120c-ddd3-4d32-91c6-208003d9dc8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfa5e92-181f-40cf-981c-f27948f15d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbc7b8e-2540-4114-8880-89c21474eab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9fb4d0-03d2-4ac2-beab-83f33d4e1236",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8e7051-4c90-4a7e-a2ec-435c5a24b345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dd8d8b-5e66-4d6b-9ce9-ae495e98f755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a00aea-3f1d-4fa5-86ac-edea2e4c1e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "482756c9-d2fa-407c-9f6f-34fc83dafa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c832b19e-a133-48b1-8af9-524c0ff36117",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1895865b-c3cf-4045-95a7-90b9062ab929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff530fb-10e5-454f-b287-e5e880daf110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcd9d1f-2534-4f09-887d-067058878c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b833ab56-d932-431b-90cd-14510bda142b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9ebd0b-a76a-4379-b104-6d9f1979ffd0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6650e84d-702d-488a-aac1-1c36f5953882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32628d04-e80f-44f3-9df0-1d5947416652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dc7394-de9c-4d09-a794-74a777bfadfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94762b7f-6d59-4a18-ad07-3a1276c95c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a37c10-67ff-4124-98a2-ffd17da05e83",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6419268a-d417-4b07-a4ae-76ec720cd948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5a2eac-c01b-430a-b051-8e8652f6c3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d63d62-830f-407c-9ec2-54243ddc7e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ffcc62-2634-4c87-b366-7b6d8d3394c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b370f40-11d5-43ec-b878-e616a639ec62",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f046cbf0-fe51-48aa-82b4-6b10082a3e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d1ce05-4374-4d20-ba06-456b2ff90243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eb68c2-f8ff-4224-9358-67f2cf47718e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e440b0b8-3cf4-4180-be95-c9e940a43cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ccba80-9af2-4123-81ff-339f85f0173b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace0c757-8be0-4635-9279-88eaeb80fec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a6eb58-073b-49e8-ab38-0d5de3f808b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f91f43-2071-4aa7-a8ad-2365920dd40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7855ff1b-32bf-40cb-9400-1888d3640224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34408146-4bb2-4e52-bb89-5ddb51ffa702",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32108e61-09d9-4543-b61e-d21023c230dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2767cd5-6cc8-426c-ad79-0817ddb283c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657895fb-331c-41a8-a6e9-6fa910b82fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e936c572-da55-4436-94cd-46c40ab6aa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e9fba9-95f4-47ea-a0b8-0236a110537d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58534bd7-46eb-487c-ac22-2de394641322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78ec7c3-674c-4e12-b982-2a56d76403b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe91982-a269-4058-84b4-3ec0a97d6220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2cdc4f-35cb-4f08-bf11-3511e564c2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76313104-caf1-42dd-9e48-990f8bfb0eae",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9588224-4c7e-4f18-bab3-c70557ed3b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575ade3d-95cd-4eb8-b918-81c16410f29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa105449-1818-43f0-abb3-ff05d7fa787d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "332091c1-a3fc-4999-bd7a-03ed08088911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9513e13c-829e-4a39-b48e-1842b894739f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ecbfd8-2138-4870-b1a6-0f42fe7f340a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5827da9-3db3-4f4d-8d4e-22a9d6d4015b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e794812-e971-428b-ba86-695a7328e7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe42d98-b0f3-4cdd-8761-c70745cca4ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fc24794-8438-44b5-801e-60c88e3c722c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c01b6415-018b-4fea-8a3a-9ead43d0b71b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b60162f-184b-455a-b711-597a4c226a12",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9254fd-4fab-4a87-9ec5-a740f32bf618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500ab54a-f476-4841-b578-d7cfb0e8c9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c95738e3-e1ea-47cb-9094-e67450753600"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ceef5d9c-9f1c-4ad0-a55e-57333c690597",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ba46304-68c2-47ac-940a-5385d37c24e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ec46a2-6fa9-498f-9811-f3d630227a11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c7e1f2a-8efc-4629-b03c-e7966b9bfd15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4260dc85-7309-4c71-8ff7-2ad7cf0b035c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4b76ae09-12ae-4fb2-937c-c9917c7791dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea30b2e2-42b4-44c2-bbf5-0ada0de61bda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52517bd9-8c3b-4dbd-b570-96ec8285f478"
            }
          }
        ]
      },
      {
        "id": "db4413e7-6950-43c7-a080-af2d52e5079f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "588b79b0-630c-4e43-a2cf-b55756068fea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9704973a-e2b9-4736-8b97-c90bd418dacb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56e92753-d62f-41c9-a970-bef71da93848",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900fbdec-497a-4ba3-b649-a00d287bcbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d1a06a-994e-47f2-9441-98d4cda37994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cae613-f0ae-46cf-875e-a9bb298d1148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a3ac19-616c-4490-b8b4-c968fe6273b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173c87af-a264-491c-b765-8ad186d9de45",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8519e61c-0925-4807-81a6-6bd751e1612f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6942c58-9dc9-4e93-b937-be0c9d1a3d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab23bf48-9d77-479c-8bba-cb0391bb306b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f820712-32e2-447d-9189-444bcd7bdaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8d0d11-9b71-4b7a-afa3-ab6d3ddc9787",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5746a3a7-9936-4d90-afb4-0fbb0b58870f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8f9b25-74d0-428c-aa79-3554c790c738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40366e5a-6b55-4d48-8b99-31342e952bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c6807c-d16b-4e8e-b3c7-f1551bb82a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8658902b-6f18-45e1-903a-6e8b8cf2aac8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7123664-bcbd-4846-ae8a-8c542fe868ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc4d27d-9603-4093-89ad-c0b60dde3b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d84c76-3132-4b5a-84d6-030dd44d9f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd34a2a2-d811-41e8-a6c6-e6c617295fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66f59bc-c8ac-43d3-a382-25d37ab040be",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4fca3d-10ef-4f2b-a841-650eeb663631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca80c30-ffe4-40c1-91d7-9a174a844511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35da343-e5ca-436a-9ce3-659f76d42b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abed5764-13a9-48b7-bfa0-1917a3b9e6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5643fe6a-259e-4f38-ae51-b7336ee11a33",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb1104f-d07c-46c5-9bc0-211eb1ae12b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76bc7d68-7740-4d3f-8e18-69c4253d5fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652d7ec1-d536-4c26-9396-63ff17209ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82e04996-c785-4892-ba64-9bc3c1a74d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5544e38-a0eb-4838-8d94-e1028fad63c8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985b441f-0bbe-4ca1-b791-d5ad7122aaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039e09d9-3ca1-43a1-9e04-93c410a7103f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48612e47-bd51-45ec-a94b-b408fd90ab05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "96831ef5-e758-491a-b259-43073d5a8ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7363738-7b95-4d71-9769-bd58938e0a1f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef51a376-f514-4565-ba59-17317b7bfe7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d656eba-5bc5-47a8-9f77-69cd035cea2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215ec34b-5224-4ffa-b23d-b0e780a8da90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e137ffa-d93e-44cd-bb09-2a90b83cd76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9aa8c0-9dd7-408b-b233-fc7630d012f3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a88c26-a1f0-4865-af8c-f08a96a1f689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3478dc81-9f6f-4b1b-9295-07b24eeb5934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b7b5ff-1119-428c-8a19-6f6becdbaff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9819276a-2200-43ed-bac8-ab55d63c3d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806c6a55-62b7-4aa2-b6fe-30f1279d20fe",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb80fe2-54a2-4059-8210-380fa901cfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bda159-f9f4-4376-893a-54ad73ba5f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da0e02e-67b5-4c69-b90e-ece66adf4ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a3a4d5-fbfd-4f9f-87a1-446487c188e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610ac1b3-0e60-4597-8553-b2b6258a3058",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afea763c-2136-4e0f-a00f-4ebf0d2bf924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d1d0fb-e8c8-4326-8eae-aa3c1fbfac07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8511eaf-e836-42de-a433-52ec9d3e3912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9faaedd2-ad8e-49b8-af8f-fcc61eda1795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0845c952-9e97-4a4b-87d3-506c58e877ec",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2331802a-bd28-4f94-abac-ba4d2e3da5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30a8ca7-0975-4757-8db2-611cbf0ed3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7ef01e-feb5-4ef3-91c1-f39911c5a79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2565c12b-4d0e-4dc3-98a0-351c63ffc50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63197b11-c3eb-4a56-935e-f38e9f216db6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200b73a6-78a9-4be0-8101-cd87db947161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8ec3b1-789e-401e-8bb9-f1e8c34f8def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef630d21-94ec-4c66-bc1e-44a044a6706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad320c9b-778b-4af8-ad2d-d75e21fb0524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7457d5ec-ea66-451e-9798-c2acf47cc78c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b51cf0-ef75-4991-9329-24dfa2d40ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4da3a38-df06-42b7-921e-4d886435e9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce63e6aa-396f-4557-9204-8ea25d1fa047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a26b4fce-3e88-4fff-a9ba-e9b03bd5e0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8a8f0c-69c0-4996-8dfc-eb8c8adcccab",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3fde45-735e-45c2-b4c2-122323feaee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3544ec43-d167-4261-b139-a556a48d48f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf76d78f-22ba-432b-ba35-5cba8939deef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d97ad147-25f4-42e2-a7c8-248848db3f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65af9850-90ce-414b-93f7-ff88aa5d0f70",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708dda5c-9494-46bd-8d2a-523c01a7d0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231a8791-7a72-47eb-a93d-1d69a1e70bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fc0ac8-16e2-4e6a-a4ef-a030a88617e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f496be-463d-4bd5-abed-53a4b103eb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a1a3e7-907b-415b-8179-a26bdef0e929",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1888f3-c417-49f6-ad8b-dbf90a290d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e11fb7-93fc-43db-a853-1b68f168477b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bdcbe5-fa01-45e2-8f33-2252014f1926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a608554-c9e6-4ef4-953e-79ca258e21d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e53aab-931b-404b-9c26-79b2b1dc7171",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04a9598-42f7-48ac-8c6c-395e10cb555c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a968d530-f756-40ff-b7ab-d50d10e6e215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3189fab-59e5-4968-829e-d67add83cb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c875c2c9-6b67-4d83-941b-d42f6b4e189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19fb701-4cfa-42e6-b166-e1e2dbd9da71",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b54402-af32-4a90-b273-25d1c928c98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4653442-b6bf-473a-8f47-b0596470a1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fdea02-a367-4dca-8c62-b3e485f29c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f2f3ac-a853-469d-a944-196621cfb4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20f9acb-4b87-40a2-a096-d4540ba00aae",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50c7212-e4d3-4600-beeb-fcf8d52f76b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef3cf8f-3c7d-4904-b96c-263bf92d3a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adfff32-d957-4c9f-a948-8977b76ba1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8414167-22fa-4a95-aad0-b8f65e42d8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06060a3d-fbc1-4e0f-91f0-f99ee11b7604",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40a52ad-dc99-4be0-9260-2caf599ac702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bebeb1-bb5f-46e2-8933-43e54d3f98fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea57136-b893-43a2-9c43-1c518289a701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db3e613-e883-4baa-a119-d8e72fca8dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966c687f-8fd0-44e5-ac9e-6073e3852ef1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e6f5f6-d3b9-496a-b340-4187369655b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd42ccd-4958-4787-b2df-8810018eee06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd458708-6f3e-4c91-89d4-58917e9356f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde099bf-12b1-44f2-acb6-1e8aaf089ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0665941c-dfb2-44e6-b2c5-e709b7877fbf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78c9f28-3100-4578-85be-977d4e4df645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052b7743-6638-468b-ab7b-7444ab1fb697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5156f1b-8702-4ae1-bac0-97adb9e7778d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eed45e4-de6b-4791-9378-05f5653ef236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf891c3-328a-4a05-8938-cd95447c93d2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb1ba46-aa0d-4d73-9f58-f19ec558c16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e518c10-1d98-451b-8746-0518dd4052a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128dabd8-2764-4438-af40-6c14ce554795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2baaf638-e82f-44d5-8d32-ed4a0681692d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4c63c2-da4a-4ee2-89b4-6c1d8e708b6a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a1813-8de7-4e4a-a13f-6ca8a2e9a231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac727866-725b-4a96-8a67-1954bd33493f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcafc28-6945-4dd1-8bcd-e055d643e60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f0172f-44a2-4c4a-9bc2-4729051cd30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbd4866-f399-4b77-847c-88031ff6571c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efe3b42-1c63-48e9-955b-b39d9beed8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ec2051-4165-4967-a3b0-7c5752149961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d84992c-829d-4b71-8388-e59dbe999899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd0603f-d7b7-4413-acba-b758dbfc8c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fdf231-9743-4946-b182-9aecd2350718",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06706bd7-a34c-42e2-bfe5-a828d80855bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29cd3c1-6670-4072-9432-22185704f317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe8f883-d5b3-430a-9e90-00f2f7230840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "367bd0f4-f702-412f-8743-c9e799ec8a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00d8c71-9414-4c71-822b-e2d1329f4cb7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150c46cc-c756-4fe2-bcc6-de983c8b6fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c429a283-9f50-434e-b05d-51eaa80d7acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1279a861-af76-4a8e-ade9-0314b5e38b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ba6c36-0c58-4a79-a666-3d0318323667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bdfdff-df43-4a69-9a5f-46cd8565ca7f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338585c0-a312-4678-ad46-81f31fe25d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dca1c1f-9f0e-40f2-8089-9f4d0689f150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482dc62f-1d24-41ac-a9a9-ebef966aa6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34d14eb0-97a9-4016-a70c-65a0d0f65c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6310ebea-e6a7-413f-b3c6-6f509d570ce1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d4c637-af30-43ce-8b61-4430f5444e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0b3366-2b0b-4ece-9796-3a2dc85c83e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604f5834-6cd6-4b13-851f-f180689a962f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "715a6a6f-1128-490a-9c51-879a489b6c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335d3191-b87b-42b9-bbf2-350ad67da868",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e48271-f284-4abe-9f25-02ce77a57291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846d2451-ca01-4509-a80b-fa034bca2b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42aed2f-4972-4099-bb59-7e5a2b0ab6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e237c2b3-20d5-487a-85e6-595f608fc69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfc4035-7486-41f0-aa0e-e424f31ecb4f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96be2725-fe86-47b1-acca-9928bd83e941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4538427e-bbd7-4943-a72f-417a2ec83d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fc0ba3-e033-4e2e-89ca-db1ccdf414ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d54890d4-b8da-4cd3-bc7e-f83dc8260bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1198801c-5223-44e9-8c88-60cb441a72f0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3771cb8a-b902-4463-a832-3b59cda05506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be20a706-5b55-4d30-a7da-e320d16f4a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b9642e-9451-4905-9e9e-9b4e260d00c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f034ec76-5040-4609-8654-e183e3d8649f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ff6a7a-4b8a-412b-9039-4316ac2caefc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddc232d-f5a1-45e2-a838-040c84cc4255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9368ffe0-8998-468e-8bb9-a077bf0dcd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5bf891-757c-4af5-a174-be238ab374e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1afc18ae-6f9b-424b-8268-4180a5473a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e191b7e-0f77-481f-a522-cba79ed7c051",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed084699-b102-4b45-a8a7-4e048fd96065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f131bf-b259-47be-8008-71d6a28549c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef36802e-1dd4-4567-b373-d202a2c05e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e85db561-c49e-4173-99a3-022040116186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cbe587-f22d-4cf1-88dd-1a9fb91fe0a4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f888a4-2215-4ac9-8379-c049e6c8229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d798a19e-3227-40f5-a73b-35ba485390f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a04f392-dbfa-4831-a9b8-e37a9f8a665b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "681acaea-1d92-4e94-9a7f-539172785296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e161d91-4676-4a21-be60-ad12b5cf0aba",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4721e9da-f345-42b4-9e97-0b88f844590a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77409eb7-a17e-4be4-8148-30621eb67688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bea186-761f-4c03-ba55-9bbec8c6621e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad8f3c8-0300-49ce-adca-9065ba3e19af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6642374e-c36b-4546-bf78-c61fa6ef9cae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0c2efd7-e74d-4ba1-939e-16151f914077",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63e9791-9cc5-45cb-bf22-2277fe71bf66",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6d11a214-d4d0-417d-926f-7fa4c0b3d9c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2d675a-1463-488d-916a-3b53c842a159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "948e373f-cf91-489d-b61d-0f867bdc16d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d357030-5283-4446-adc4-f4c1a157f4b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5828efcf-05ef-4d60-9b80-761db68657f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5855ee79-0720-49f7-8eb9-12b0f281a0ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd553f21-c6e3-4d1b-ad48-ea4d64f707f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3298ce30-b0ef-49bd-8f91-6f467ef77faf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a12b6a55-5488-4cc2-aa5f-7fd98d6ada83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6441d4fd-a80c-47b9-9ff2-43445c8ce730",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3326c4d-9190-4207-9cf1-b141dacff2d2"
            }
          }
        ]
      },
      {
        "id": "af4398b9-7783-4012-bb09-a311c7357c80",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3fe5d80a-445a-4430-bd8c-a59793d21428",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26456878-dd57-4be6-a169-f9ce54cf938e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a4745b62-7b9f-4e56-b671-62a82b0e0a62",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e96780-b70d-4211-a960-c4c96e81cf1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59710e90-9656-4735-b267-aa50d1764ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b18f3c-6ecc-43d6-9cd7-8c3e3c003173",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92159c1-d88c-4b42-8a2d-05c03e9c2cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c7a955-7a63-43bb-9792-ff5fbd902cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4e0d55-2bb1-4e29-a59c-3aa75c4ece90",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d69ba54-cadc-4d13-961e-c388f8c18182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ba45ea-ef24-40c6-a977-20ad5112f2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b74054-cee4-4bdf-a67d-a21d0205bd0b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05581983-fc03-4fec-b651-ad1a12cab576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f227a5a-3693-4386-9e8c-ae11645636a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1da2db-740e-4e84-af0a-d8b18072df5d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5d9066-da5f-4540-b0f7-0398dd245be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a57ea08-c3d5-4551-ae61-e64c787b5864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c88a533-343f-46c3-8982-ca32d851d9a9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5771e5c4-ac90-43cd-b0a9-77bd6f4a6c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da5387b-a655-4a11-b14d-ec8ab4e37176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af86013b-23b0-4d4e-8191-38ded0bbd79f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818d569a-36fb-44a4-a413-6c7937855110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e077f2-38da-44cb-ae4f-5dc1f7c85d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727395fa-b0c7-460c-bba4-73ec78a449cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb17d6cd-dd32-41a1-bda9-d7524843b4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fd1e45-acd2-4be5-b6e0-ac9110df2213",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7fb808-59d2-410d-85c8-4285b2d41d82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9be9911-90db-418e-a708-52d2240254d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6fa952-d789-491b-9e7e-544067d30ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a31782-d735-4454-b49d-4042cb14d170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501a4f82-3272-434e-b1d2-4d870d688d98",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fa35cd-1973-4d49-9dc7-00c1a34e197b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d0586c5-dcdd-4943-a0c6-035d7b30bb3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee334d80-cf3c-499e-9adf-f662619e82ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2650d5a1-131d-4c27-be13-2ed3447230e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db9cb8e-4745-44f9-84f7-83c0905d22c0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504a63e8-c4b5-4193-848f-cee836bb4fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f6bab9f-bf49-497d-9ddd-ab6b4ffe3601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0106fcf5-d727-4f22-b510-ae3e2d459982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7fb7eb-0b76-4ef9-b957-2d772f2fb064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353c36e8-e934-412c-ab12-42fd2d7c836d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0246959-8db1-43ea-98f4-1e25194c92e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233bde9a-9c64-48b7-a4d0-91aefd0651e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c907eeb9-a811-47a1-98b6-260b431a48b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e42eeff-1c2e-41c4-8509-e287da7d0d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ec6e38-d4b2-4074-8205-2a50c2f14811",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9520a7e2-05a6-42c8-8146-ba8e670acf67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3457570-e05d-4883-bc0f-7527611346b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963033a1-f5d5-41ae-a6ce-4305607dacf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310f4f09-0cf7-4fb1-8233-2164df1164be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c590168-1e6b-4528-a41b-ea8fe487e7bf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2af2ce-c860-4fa3-9ae9-e1ffe900e9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c611e966-844e-4810-8428-d0ab050b34d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c894dbd1-f999-419b-abf1-4418481302a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d0767d-2af3-4368-a57b-7a5bedf6d8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ec9f7e-a306-42af-ac39-3221f68f285f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346840f1-b148-4b1e-850e-e662ddfbedbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7931bdb-84b2-45a0-a11b-a8d23241e25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7796f70a-c992-4bd8-bc7d-9a6be5671063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0863bd9c-a96d-4e48-b269-8535100a95c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8b2781-9036-4972-a1cb-ac558fb8fa92",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298668f7-0775-4e85-a1df-223fca6bb9c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19525e53-25d2-41e6-9473-f9fc2ef3affe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ba8a31-17ce-4cb1-ac4b-888ead920e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bccdee9-9f9c-432d-b7b8-b70713278c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2ae170-0ee9-4661-b9a0-d944dccec1f4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878aa8ca-d7dd-475a-b00f-45fdb3893b87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1f5c2e-86ae-4cf6-94b8-66fed71f985b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4d4c06-cf3d-462d-8850-a7eabc344b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ed71f4-28a4-4b22-8821-100301c8df7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dec4c7c-f479-444a-95a5-7a74aa31fec5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b7405a-9a92-48ae-bcc8-a27ac39ba5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ba22cf-afe2-4d23-bd85-5b2bc338efeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af750d9-a6a6-4090-903f-f57e713c3080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d14eb47-1f46-43d4-a387-bf2ac2122c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26525d2-0f66-45fc-9fbb-2d9767539645",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb584cc-3a0b-4b3c-80b5-43ac94974b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5bd85c-8b07-4fd5-a89a-72db7bea046e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91ed0fc-4073-4072-9307-3ac3097bf79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dc4e49-cdc7-45a6-a95c-79f4990fd3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4990c972-cc03-4990-a345-356be4f63064",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74beff52-3d6f-4ac8-b0c5-d1da2fb7fc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f187a4-e9d4-4028-a7eb-f9190021366b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115f473a-3afb-47b6-96a3-2d0c5aa2a05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9851e9a1-55d4-4ff7-96e1-06cb9cd34079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0a380f-6a27-40be-b510-3a8c80041859",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f84d62a-4632-4e4e-a333-e2fa89a3ed73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27eb26a2-13bf-4aaa-b6e3-921ce0185785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b6d6e5-c9dd-4f8c-9c5d-cd599b171661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc40611-606e-4c4d-af8f-1d82681e3b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66aab338-e825-4e29-ad57-ddae54f5287f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b530cb7f-7882-4647-8aa0-9e81173874bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c867d5c-e071-45a2-9737-3f55635cdb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86270bc-60ee-42e0-b57d-35ea4e1b295e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df5efae-e570-4101-8860-3722858007a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ac6f87-9735-416e-8d33-251f52081fab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033d868e-423e-4ce7-a6b6-f87b45864ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601992c3-96bf-4b34-b3f6-1785c35f4498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c46615-f747-42a3-aa6d-2002f1418493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041d1331-e48d-4cd3-812d-c44f6da06560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe465af-8c83-4289-9172-31eb661f2103",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d79633-bab2-4045-8ff2-ff1fc7a2ff46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5796aca-23eb-45fa-bd7f-4b8914180fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e007dc4-341b-414d-8214-89597769c280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468ddd03-58a5-4e25-9c07-8d43afb2ed9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fecc0e6-1b93-413f-bcc6-5f741cdd3ede",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5c7e12-497f-4a33-af9b-898aa9ea55b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f2523f7-f248-4a68-b97e-2a78b439f667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e619265-14ff-40fc-8f1c-3444e632d56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd15b928-612e-4695-8643-de5f80fb2646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac9d4a6-5765-477a-b49b-269634c4423d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ed8c43-1d7d-41e5-955b-ff71ec497a3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74bd559-2b38-4b14-826e-3c625e8bdccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02be633-de69-41e8-98f5-46eed191695b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8bcc6e-4834-483a-bbcc-32c35157b778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a64ced-60f6-46cc-9836-d5a5c3c9a64f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418c4ca8-c1e3-4180-9c99-035060183885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec224f03-2bcf-4b08-9f95-bb81cd5a477a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969b028a-5d51-4fcc-9bf9-6dfff0c3a296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c5705f-61c0-4fb5-8a1a-4063ef241248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb79b4e-594f-4e62-b53c-a5b260614ae1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4674fb-b79c-429d-a967-0f45f9f973c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1ee9f1-c695-4844-b636-9706c4a7b9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e441d499-c51e-4155-acc0-1c26dd586bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321dc6b2-4383-44e3-b4ef-568320aba5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f22676-5342-4b8d-9d47-5c9a643a435f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3783439d-b3c5-45fe-b876-9cd552401f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4fb2c9-6208-40cc-ab1e-df3580780625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cf1a65-aae3-4fc3-a614-6aa837795f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5717b9f9-38fc-4c8a-9af6-c13226d87d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff704c2-6985-4e06-b067-8116c84b5b65",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bcd451-31e5-41c7-a936-a515ef0570b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b813bacb-40c9-4383-b497-21fc9e2afeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38db987e-5c7a-4e92-a498-5993351dd92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3870c016-2330-446e-bba7-6bdbfadd307f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ddf7ca-0410-4102-b186-94d182e3e1a6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de02f255-30ec-44e7-92c2-e04cd260be9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "427f2515-1a7e-420f-9d39-20b138077878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dcdd14-aabf-46cf-86fb-2cc57fbc0efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0077813b-8c14-4927-bf75-b334dca3c70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81228dee-f754-491a-8b4c-042df02e77ce",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205b4986-aa2e-411a-ac34-0a1d028824a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20bc784c-98f8-4926-bc56-180e7efed83d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21245593-f8f5-4c63-b7a9-f79214bdf8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64837ccf-e3b4-4b51-a579-57aa4f22a432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcfb6cc-79b3-477b-b189-66afc76c8de8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d41f523-66c5-4152-af5d-9bd111b5bf97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb7ee4c6-3c4f-4e85-b0ce-acca6a8def2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b493e06b-838c-452f-9145-c531b61eacff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d65d1f-b2e5-46ab-942d-2c0e98cbcb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767a570b-1b66-4bc2-a1f1-a4faa9c6fc5d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3779dd-a896-4608-8aa9-4577545df381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbb818b5-5a03-406b-a9c5-658eb24376ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385cdbda-b3a6-4e82-90d6-9ee43ba3a39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecffb0bc-446c-483f-a352-439c7d420f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97be30d8-0713-4e98-8ce6-79a079a3ca0e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd655095-c630-47ee-97fc-e44d0403e06e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9cb5466-15f9-42fc-a067-42d7ec5dae72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9469bb8a-f904-47d9-8f43-3595d8e425d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5baa1227-f14f-4b8f-9f4b-7f9b31ca8fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a785ef5-a3fd-4d2a-b261-93cecc5ce265",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a0d72b-86c7-4d44-a33e-96d325d4f6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43cc8a8b-cb1b-4c48-b5ef-2cc5d6b284f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa6128e-c5e4-4a44-95ee-5820801c411a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d603ce60-6294-4b85-acfb-750eb23551bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec786a5-006f-40d1-93fb-cfe4334741cd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbd468b-47f7-4c5a-b4d9-6419ab8a2843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6f8a86-f9bf-445f-91da-68c2dff60b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d742868b-8047-4bf3-9816-89f5e5431ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff81e92-5775-4e0e-b665-ed419b731e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52610762-a803-461d-a8b4-4a910bafcea7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9e5075-42c7-4599-b4b9-7cd3a3451488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e543cf0e-6c9f-4edf-aee3-caa912525a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d776a3-6d90-4df8-9951-fece0bd2a343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1d1dc2-bce1-4758-8815-f42519b09ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e16e9b5-aa0d-4ef4-980d-8659291d596e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae6cdb4-16c2-4839-82ca-11c6835fc8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e002612d-de64-4e16-9a0e-a2d075566e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da655f1-5155-4710-8d71-bdf0a04ccf20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffb3ed8-c4cd-4607-b65f-1384c5b78048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15920fe-d2c0-4045-9ce4-70e49b5af10b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ddbba7-106d-4aaf-9624-9b960826d6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afc77fb-5906-4019-8e81-e683337e6480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b0348b-fe9c-4bad-a58a-c7b46fc1668e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c967d1-2477-43d2-b893-22f1692502f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea384a08-6c9d-4a3d-9d05-3cd1f858368d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18918ebc-06d7-4a8f-9a67-2d4ee70a5793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23c94d2-e0aa-4225-92bc-40fc91eec07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecf4d0f-8748-44e1-ae40-bfa5cb707f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69da091-750c-403e-8797-ae31149a019c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafeee48-d232-43fc-9a29-39205a4f4a53",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf06dc81-51a8-4882-9c38-184d9ebf2f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f8acf0-00da-43b0-b129-8bb747981420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0095d884-9395-46b5-94d9-b43ab140bf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5859c581-603a-4174-bc60-2de7755a0fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e152c6-54dc-475d-833c-ac5f4717e2a9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ddeea4-8441-41b4-88af-60ae5c6ce10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f020e48-d7f4-4ed7-be10-fe1269727a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00a241b-4e01-4d84-918c-f1549f43072d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b4ea72-12d6-4df1-a5e3-34b811f6960f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33360225-f617-4451-a513-99f2c756bf19",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141d7125-3de3-4954-9427-882a889ef39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802f9938-2443-4483-92d4-d9e5cb9902c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e54a8b5-0c32-46e3-bf7f-fdf3d79e8a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b5fa94-911e-45e0-be4f-cf4489bf1c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a04bb4-eb58-4c0a-b5b4-36c3dfb9ab4d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cb3325-0653-4b89-91cf-f2d85cbc1a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1a37fb-c845-48fa-94db-68ed3df028e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66a41fb-d09e-4c75-aba0-f303dc4d201c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b1fe87-7911-4927-98fc-49a538dd5bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad733b75-5b3b-4d9c-a2c3-720bc711b334",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eb2a53-2e6f-4e49-8d7a-b97c27b9e461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db8a811-d3b7-4f6e-abdb-55d0e54172b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4f5c5d-d5b3-4d12-a350-af97f49fe6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90316624-b07b-4331-9ae0-9301dda0844b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9482b4f7-70ca-4e65-ba4e-f7943a4473cb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f5af41-7483-43a9-9f79-c0f3dbd4936b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5887f07d-afff-4fe4-b2df-09e12608546d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96128181-d548-4ce1-bc85-6d346524dd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384f329b-0a11-4db1-aa8d-54341e1d4c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc276742-3940-4b47-a59b-40cc413c5b19",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006da996-6455-41af-9ae2-0ea92ef6d54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c89a367-e2ea-49dd-b6d1-1ab5b8a58e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4696a9e-32b5-4f1d-8e10-2271f8aff42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a287b2d3-6875-4b2a-926e-179be69cd6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394ca0dc-a23a-4475-b973-15091954a1e3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eb6ebe-f5d1-4d35-8255-9bf0e84f828d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f13255-f1dc-4b9b-aea6-fa6f21bade57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6830a1ad-fcb0-4fb0-82b5-b5f653b80448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349fc848-ffbc-4dec-a751-10a58a1dc2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a306f6f6-8ac6-488a-9495-2ed81c357f31",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c805d3-da51-4e6f-a1ac-fb57a0344636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348fd861-8008-4c51-ac46-57a95f057cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fef1bc2-a550-471e-ad33-b136faf2fa63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ea59e9-9a40-4b30-948a-fcf971a0d829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61905a0-f8d9-4405-855e-44a4a0404275",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75a0494-7d34-439e-aceb-26bff45bee02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9772a465-d6ad-4ef5-a1dc-7afb499d88f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c7f32e-10d4-4df2-9b81-30c1f7389ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432b5e31-0eae-4f22-bd41-c6e43d021cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0e0066-7e61-45db-af67-ef4d4d33299f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd35e3a2-7b18-41dd-b122-6d5557ec697a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8785e5-4ca1-446d-a295-268cf73d4b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1f003f-5bee-4c17-914f-9b6c51433ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350b76b4-54bc-49cf-b73c-653e2adb5c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c70a868-a329-4c0e-8d0a-c351386cf4b2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e91cd8-5397-46bc-bb93-3ac4b17f9909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c841935d-cda0-4f68-b9fa-2ffbc138daa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa224bb3-c404-4657-9e3a-9e6cea8a7cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1efce0-a89a-438e-87fc-be0fb1902199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda20f82-7d7b-4229-bf7d-9efadb073ccb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2978d68-c374-48ef-9976-4d6ffec8d541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ff0bae-5a85-4e1a-992f-4c4193bd370c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232f91e7-1ece-4e03-a3b2-4b04b14543b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb6a381-209d-4bb3-8905-c3aecda47a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f6f6ba-2496-4cbb-8a2d-d63ab08c514e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5ff3fc-f211-4044-9500-2cde11882191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe088034-f78f-4b4d-8928-7a8454d3017c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e59dc3b-2468-4703-b3cc-40ce868270aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace02547-5de8-414f-a376-bab4c66f9bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed982bf0-0887-4e71-8d95-4cd2945e6fa0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9aac66b-3cbd-47ef-9ac3-f9f8298df262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc5805b-5309-4080-b8e4-25e200878110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d622921-37ca-4553-9785-3ed30fc7a0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3855b3d-580e-437c-acd2-cd6017ccf555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56013e97-18dd-4119-9adb-50e2da3c4f64",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c058104-9167-4050-bc96-a7987cab6760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58588deb-cafe-4aa5-aec1-5100f09276a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cc6212-4e63-4940-92e4-32adad58925c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a337e38-338d-43a5-952c-48225b3c8dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961ee824-edd3-4c8a-b5aa-2eb4b9b89df9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39711b75-8d86-4acf-800b-b9fbb3d81ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767d1f8d-fbc3-4463-84aa-fc35c61f39eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41ff6fa-696c-4119-bec8-9dc52e10de94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16632159-fdc9-4e9c-9a57-26c28de6b555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98920768-e199-4480-aa73-5484a08d8e9e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcf7e87-d39f-4779-bbaf-cd3e7c99b1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba47fac-19a3-48ea-b130-59a7596642a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dae1e7c-950a-4fcc-be12-c5c9e7fd2246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990ab954-4158-4219-8d69-6961ee019e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5b64d5-a22b-424e-8eb8-25f973cd05cb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5650eb-dc14-47e6-8a3f-7a43a0368079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67127b7b-16f8-4e5f-9fb7-63e2898b03a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd468b8-2e97-4cbd-a5f6-5edc44cbe8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afabd163-7839-40fd-a970-b5a347546dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a56ab1-acd0-4565-a205-58444d4cabeb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d66077-5b7b-4cc0-b887-6f8772290ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946f7262-8931-4495-82a5-820a31fd8367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153294cd-0071-4bff-9ab0-a6dc1baf8e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f320a63-a5ee-4f4f-942a-d4a7f07442b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ff1491-809d-482b-b97d-2c7375162843",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70b3ba1-57dc-44c2-b52b-292e772e056e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12de7e55-ec79-4ecc-a128-15648be8a116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe3231d-e34a-41d6-8051-721139a41d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51815a7a-c045-4eed-9a6e-dc1a0709bf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06163c8b-dafc-45df-bd24-4016da6f5af1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c43db7d-7b8e-4d51-a4a8-5f006e3f63eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a42c972-90ea-4c11-bf8b-c6895882eb5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc764e4f-3947-4692-b2a5-3d7cfa760b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce6194e-e7b6-4d92-b0eb-bf3e23e0eee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3265bc9-eeaa-41ba-b1ad-9d4213f4dfbb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49dc86e-5de5-4500-b2c0-bb8285f526c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc980959-91da-411e-880a-2000cee41e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6df11d-dfed-4dbb-9bfa-f00a1b519c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0af62f-a883-47f6-87c4-c81242e972d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5808c733-bb19-401f-93e6-1ce9bc990c9d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d32035-8965-4b2d-abfe-1d0c3b003e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f218a60f-db0a-4ee8-852a-fe80bd75e200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a142856f-605d-48d1-b5a0-b13374fa6ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a31a60-50a3-44ed-9db1-21ed1ea4e2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4b3896-17c2-4d48-80e7-fff181f006d5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7111c8-d89e-4322-af69-9338c7e32ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70efb089-0545-4468-a77a-316960ccedb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e46501b-d0d8-441f-abb2-1ea2497f7406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf328af-530f-4f69-ad44-ddd5a512ddbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9fb347-aeb7-4570-a6aa-5f6bc57bcbb0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e6eba5-604c-46c0-9a63-cff21d017e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eeba1a0-37d5-4cc9-ad6b-20756d9a828c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84f5c9e-b4f6-40eb-a701-5a1cfdb2a824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560bff92-ccd1-47b3-87aa-06b267318536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03de47d8-1c5e-4b5d-baf6-f860fd21fad8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dcaa08-9a3e-4054-8f4d-f83edd680089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01018c7-1533-4cd8-a715-32061f77473f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f65da7-5ebb-412c-aa99-a1bcd43d37d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf91c92-36fc-4f63-9297-88713a3290ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c99c6cb-f36c-4630-a1f6-4d364da81d21",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f34fb80-3634-48a9-b647-da75a275e5fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbfb37f0-d193-4ae7-bbb6-d3a682f6a522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b53105e-a9db-4716-9812-c3229df0ce19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a72edc5-f351-4969-bf6b-8c7408447b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7c6e62-e8d8-449f-865e-ef3b03dc9d8f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79c5738-eea4-4f13-89ec-26809c095c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288742c5-44f6-40ca-a88b-f309f4d777d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c67ba2c-e79a-4f38-82fd-765ebc371944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad86441-a079-4b19-bd54-0c37714e15cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1b2b00-050e-42a3-a7cf-5ba0778ff0f6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc086e02-c061-47f0-961f-a93fc9f2c60d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be02e12e-042d-455d-b4f8-4855034edc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1182e67e-0945-4a02-85cb-c7e338171423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04092972-0b5e-4199-8ec1-d57062d38054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed4715f-e48b-4cc1-9463-8e8c534041ac",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88560eaa-6c67-4903-9aaa-781dce4ebcca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9676733-a473-4f85-97ba-6c8b81f4ca4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33671b65-87d5-43aa-b402-c31c16199b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8d5f42-0c31-44fc-a81e-07336af3547d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f17e97-2e9f-4e64-a1ff-ee32e6014f09",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0c1282-6d18-430c-af0e-2e205d4b7644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d348bf-214e-454a-a6fe-d5dbee7bc353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fef2e1-fcf8-4fff-99ee-097ba80b8ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b5652c-b439-4ecc-8daa-1027929ece07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37867ea4-479f-49a0-b33c-cd6c25a59056",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45a91c0-ea26-4328-ae1f-895599669f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5bcbf18-307e-42fb-b650-e3a8cb758815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81855861-4656-4209-bbbc-f9fab3c68cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183476b2-e0ed-4e6a-a162-339edcffc19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c42ab4-9352-4262-97cb-f14d2a115d6a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52983cf-10dd-4161-bbfe-49adcbcb439f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed191184-fce2-447c-9ef9-2735fb75beef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f3f014-147e-4190-93cc-a322d186550c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549bf4d4-64e1-41c3-8f3d-83d688bcc943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c19e52-fc0a-4477-9d7e-ddaa4907ab2c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465cebad-1e94-4512-88c8-737438255d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37227d55-84cc-4d96-9ec7-0652ad61c21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2459d1d0-6f8f-4846-871d-22aed4b509ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb309c5a-4832-477b-9708-1ac18281fdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f15db31-64a4-450c-9999-ecee47bb9dce",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ffc671-cf27-4368-ae25-ed2b764c3c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68247c9a-ab03-4410-b38d-61c3830e5726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d568a6e-d2c5-46a9-a775-afac58ba69d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93309012-e8de-47af-9f28-dbdd18f1c8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdf3d69-4a8a-4382-ae48-75cef0183363",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108d8ab5-bdd2-46c0-855d-6c775489878a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57eb5206-bfc0-4617-8b76-c47230f788f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a2695e-53ac-4864-bfaf-3b11b4602888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfc9b59-d641-4509-9c92-138d222c1c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e6a705-b928-42e0-b1c6-6e19c2901348",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243f9983-3a9e-4280-8d2a-bd706dbd7451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa96c299-eb98-4c96-913e-c56a3e841e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061199e5-1936-44c6-9fdd-036c8c329827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f135ae62-6ec9-4928-98be-ee4578165ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c374fd2-c2c4-4bc6-88d8-f1427191e2c0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62e9e48-5c2f-478d-8c35-912dcc8af39f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925563d2-be23-4a4e-854a-230aaf2ebc4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d35b78-73e8-40a2-87e6-db92fd310c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb956f8-9d3d-416e-9e87-9cd51336ca73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb85c27-01a9-4917-a0a7-892e46fd3036",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74aa9c8-f629-4301-b1f5-802a70e4b96d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2628f73f-b02c-4155-bc6d-901d3411414a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcccd9be-ceb4-4991-8158-ad28305616d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a56b8ec-3880-4c13-b3ca-8076a281215a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354f7211-399b-4df5-8401-1f797f256356",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1f50f6-aee8-4c6e-b92f-54eecd5c95f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0b239c-b447-4a57-9e6c-7c817b698821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8df654-071a-4adf-8974-e99214bcc033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e5b1f4-ebcc-4a9b-87fe-ca8634d80846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408cd458-8832-4125-85b6-d73b6a75f262",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0d8768-0fd6-464a-98ab-fb7e2d113892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295b5b9f-4b72-4e88-8cd4-d36982ade506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52408553-ec3f-4f14-aef0-693353846b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a0c43c-6d3d-4cdf-97fc-150491e24e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263685da-879a-4420-a021-62ab5be148a0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c2f1ae-f925-41fe-a25f-bc93092c7c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045dab77-3033-411c-bbc2-59e3adda277e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f06387-27a1-4621-9d6f-301b5fad1a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d905ce0-92da-4b25-a821-abe34e686f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233464b5-826f-4f37-876c-9ae5617bdc8c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9de093-ac23-4599-9dca-8b76d5579df6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2673b693-653d-40c2-a8ed-0965db6be46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae05fcb-b44d-4fbf-b72d-c0814e398628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14971b70-4c8a-484f-8676-a3dbf9f944f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9c7703-15df-4cfc-b166-e0330fbaf76a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f3620a-0a98-47cf-ab19-6e1e8017bbd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afba17be-4a4f-4f3a-b247-95c98ad87294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac92c50-120b-4c26-984a-06a40d9c7b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0929e046-2b3a-4906-951a-53699669f364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af5c82c-6bfa-4553-a0af-6628e49c1743",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d3fb16-4218-43da-8112-f5c6ca0f7671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca0e7ce-08dd-4574-ac7d-79766bd899f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc872d1-84b8-4269-a425-7db0b61d88b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fd8f04-0d58-497f-a0b5-10d6b8e6b099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cb0210-f1fe-487f-8e00-d095d97c886a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036200cf-fddc-42b0-864f-3179384445de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a90dedd-9c0f-40ef-a19e-9e5ab1d4a4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58b87a2-5f87-4cc9-8688-40ec37b41d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e49b94-3ad1-4b0b-91f4-04a8935f80ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f781bc00-4118-457d-babd-8e07e0ff996e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23547f22-0b5b-439c-8c5a-b028a9cf63b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffeff83b-b40f-4d5d-ad86-7219a89e91e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bce4925-acf4-4e6d-8d7c-2b1dfc3ac49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8691f5a6-e8b3-440b-b110-ee0bc3a29b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999253e0-5ae3-4a88-a89e-2b5cdcd03abc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c951eb-900f-4bc0-889f-629647012151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2fe2df-f8f4-4929-b806-c0862df8376a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936f0878-aac5-4322-9e29-d1af5bf39214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6e0efa-c345-4cc1-99b2-6b449ebcd33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810c63c7-a6f3-4ab8-b4b0-3a35bebea996",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3daf70-765d-4972-9b6a-a001d8a9e086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6973aafe-0113-48b2-8257-4faf79b5acbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa38037-5ac0-41bc-acf5-d9cf5f1ec021",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77cbbd8b-e917-4482-a376-7dfe740a434b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c593dfc-0d3f-40d6-a9b8-4f879df996a6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9b7333-d408-4e58-978b-cdaedd0fda09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a75cbe6-28ae-4183-8576-d329c98d6823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fc24a6-c7a4-4b15-acce-92c0e62e05b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63710c93-3583-4680-8908-4ff95078f2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb47a564-e0b6-4b5e-af71-2e0c4ac60ec1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7021b3c8-297f-47e9-81f4-4ae4e2357923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c3f392a-d902-4e2a-940c-a2d1404514f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aa61f6-869f-451e-98d3-c159ba23a5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c9096a-28d1-46bb-9bcf-d4142bd890fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2661efcc-8066-4828-a476-59e21432bced",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc7ae2a-58f8-4c0e-ac41-2bf677d48024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9467bab5-0c6a-4812-998f-4fa6ebf2bcb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46598057-6cf2-4ae1-9453-25e487eea298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820631bd-2908-4e1a-810e-e3e0d664171b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca49035-6590-4bc2-adf4-46697a2420ea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a85fa9-02e1-412e-b9cf-a6992396d262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7a8fee7-b87a-4971-9c42-2214beb035eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cdc7e2-2e9a-496e-9c2a-e5cd94ab978b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025b303f-778f-423e-aee4-aa76740195c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ebaf99-3ef8-4390-8312-d9293de1abe1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43a2655-9c6d-44da-90d0-a4ebf389750d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa65ceac-eb01-4c94-ab9d-85ae95c5486e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e629e74-4711-4dc8-af88-7d1888065af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e28dc35-30d4-4d32-a8d8-06ec04f5295d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f9931c-de84-4135-b79b-42840a251773",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87e205c-a03e-4198-8461-8c9f13a75fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27bbd7b0-08ac-4797-8af4-886f8be4b4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afbbb08-d425-48bd-bb49-b11f1f2f51be",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b811530e-7b08-4547-86c5-c5c9527be751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9b2a19-492a-477a-882a-e4f21a6615ee",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fb31ff-76f6-472f-8c58-608472f8e41a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca7cd01e-46fe-4a24-a52d-27ce19c7002b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163a1256-1c17-44bd-9619-30dfa0c093e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbb2c5f-c73c-49a2-a0dd-5339f06955f5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d15ed34b-34e5-4eff-a1f2-b9bb343ee16d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d50dae22-721a-4cec-8993-06d8c931e3ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e132207-203c-47ef-a530-efaa9cbdc417",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "574558cc-f24c-4618-8ea8-0c36490da373"
                    }
                  }
                ]
              },
              {
                "id": "0ec5e0cd-6164-4880-b484-6a896a1ccc99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "162f7c22-92c8-4553-8ade-d97c958db343",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6a1c73-e6f1-4edf-851c-13404b11a915",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c849e52d-03c8-4941-ba7f-b045c0410ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ad6a80-87c4-4a5e-a01b-6a781b64b38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59b56256-fc39-45c3-b807-903e99d27733"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "060fcf63-0cdf-493c-b012-bed0691057a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b96b0c3b-889f-4510-8b9a-300ce2eb7c8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62c5fb5b-9474-4b79-86b4-56fdf85ba24b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59aff069-20f2-4acf-8793-6f40e0221214"
                    }
                  }
                ]
              },
              {
                "id": "c8d6b729-ed81-42f5-9c19-f2f152395f9f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "84079933-75e6-44ef-b03f-af56ce705fc3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a6d076-738a-453b-80e6-8d5751254dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "afa3ec00-de47-42bf-81a5-70997c7d4bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7edfeb9-d132-4a51-972b-e7936b52cf33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e01615-40be-4a80-b329-515f83918934"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8cd240f6-36c4-46e2-bfa8-8b7949c5e501",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fd00c77-062f-40ba-8e5b-b6c7f9a020b1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f16e2ad5-68e8-443e-94ec-acf82c1ee438",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "647af4a1-46d1-42b0-a9d2-65168ececb05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9f5e448-dd46-4dda-aa66-b5a0cfd74d88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcfb4340-9fd2-4b7d-abff-61bbb8606476"
                    }
                  }
                ]
              },
              {
                "id": "8d613a12-de0d-480a-8c38-20fefff8eec2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11ba8608-5917-4242-bbdf-96849f22a08f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "79e57d3d-a8ed-4752-992e-6a8e61c66dab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbc61186-8732-444d-9e24-ed2d30efe4fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f35b5da-6104-4724-a004-5ea02438e9be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4160905-bc91-4c5a-917a-87b7339cedb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dc6542b1-4d2f-424a-bd2d-404104f7584b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb9a3dd4-00cf-47da-967b-f82017c8868d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f086fdc-7e34-4286-b934-ff8842ee1965"
            }
          }
        ]
      },
      {
        "id": "51b5a8f9-df24-442f-8911-819e599d9bf2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "68c3bf2e-8d12-4a2c-8d1e-15bad4542034",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b03d0d0a-9935-4c5d-8551-61b53f6705d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28ae3726-b82d-427f-a87d-9ab6646db0e0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc920b3-1c3b-470a-9306-05db288b4259",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bf9dff74-3666-431e-a379-29b05dea3408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422ac70a-065e-4562-8164-0687da53c1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2d200e8-b1a5-461b-8814-26460cf1b27a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7911c7f4-8f8b-40f5-8f36-87a3224a39b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d391525f-4fab-4895-ba64-ab3177d344b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e44333c7-f9bb-4867-a178-2b1f5c78b20b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1916f7a-299b-4407-b4c0-b47ec269a5d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3c1b226-842f-4376-a3b7-926ec727da6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f865fbb2-f97f-4690-b9ca-e31b57e765ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f799819-57f7-4d92-a55d-ca24aeb93f6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c99e3b0e-d42e-4549-b50e-bdcd92aa4249"
            }
          }
        ]
      },
      {
        "id": "3306699a-7156-4d61-a7f4-e2ef3fb59f2b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2bf0c8b4-c145-454e-ae00-b132a522a34e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f9f88b5-1a65-477b-845a-6fb5f783af06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bacebf6d-a8c2-4ecd-9f1c-150109971740",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c651e867-07a4-467f-96a4-5d5a23d08882",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da9a93d6-c1fd-4fbd-8599-919ca6578827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a83144c-7b42-435b-a601-89635cfa5222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53d4ae4d-1f90-40a3-b9ca-dc99bdc7a78b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f1f3c01-fdb5-48d8-af88-0286ac7bfda2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eb15f22-4050-458a-b8a5-cdc812375f5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "656fb25a-e708-46c9-8c7b-7ae64b57ef94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18e9b264-b763-44dc-a465-8a914d519c80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82627717-8766-4e65-a4a9-2adcf38b8813",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "18b7b08b-8950-4e78-91e7-6301f7791ca0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d58c0d8-6cf3-4ef8-a226-f4fd999b25a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a76a4427-bc8c-4af2-964a-e47fc05e74ac"
            }
          }
        ]
      },
      {
        "id": "8e5ac1c9-8506-4ad8-a4d2-c32a2da8f231",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "af105802-4237-4dd6-9eb2-d3090cee424a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba574afc-5ac6-4f1d-b1c5-b20600ccbc6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cd5e876-b9fc-41a6-9256-8d461ca1cde8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2e0e5b-af8c-4806-93a6-55ab48e4a22f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82495009-97fd-4bba-acc2-38fb125035d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571bb71e-01e1-4cb8-96c4-75507d619c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54ed5437-8826-43c1-928e-1e2e0a2b8cf0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fdfdf83-4f62-41fc-bc25-69652ac29ede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c1471c5-f58a-491c-8ea7-d95f51f6074a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce027bd9-d781-4294-8fbf-6750f3b08e03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2deabe8d-d626-42a3-80b3-97f7f61f5b0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78c28147-66f2-4e9e-9515-4257206f77ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "edb288c8-89b5-4486-8117-07bb25dd17ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09ab9a33-4c4b-426b-a8a9-abee34dffaa1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f61b7a12-8268-4f01-a2ed-5c1f6756d2d5"
            }
          }
        ]
      },
      {
        "id": "7f7671db-b3d3-47e7-b3b7-89c1a284a6cd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1febf6b-24a3-4b9f-9283-a5acc6b61672",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88d20c61-3479-4542-86a1-86c2e2553d26",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "20b1420d-adb8-4f0d-8fef-e6aae2e4df1d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8b5f4e3-4ed6-4d34-a346-c62a88125b8d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74a4ae5e-89b1-44e1-b36a-ffb1592e1e89",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 65.90877192982458,
      "responseMin": 6,
      "responseMax": 351,
      "responseSd": 24.50890479563128,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706402204702,
      "completed": 1706402232557
    },
    "executions": [
      {
        "id": "128f18f1-99cf-4b9c-a62f-ed54e1134efc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1bc2dbfd-6185-4d23-97b1-caa20e9986e0",
          "httpRequestId": "d8f1d715-f9df-41c6-9c73-052129b8fdc5"
        },
        "item": {
          "id": "128f18f1-99cf-4b9c-a62f-ed54e1134efc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c9d9dc69-c975-492d-8a58-be886dc1cd78",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "747706b2-aae0-4ba1-85ce-eb47de887b54",
        "cursor": {
          "ref": "b53f07e0-deb0-48c1-83d2-42644c3f987c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "914c4eca-517f-40b4-b9ab-d561e34a2175"
        },
        "item": {
          "id": "747706b2-aae0-4ba1-85ce-eb47de887b54",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ad45aec3-03e3-4e1b-a329-5b3f11734d40",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "01491be3-f6d8-4c52-9a60-6afb9d5ca861",
        "cursor": {
          "ref": "7653b202-ed5b-47d0-808e-76f1cfea5204",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7db00e73-3956-413d-8966-bfa2bfbf26a8"
        },
        "item": {
          "id": "01491be3-f6d8-4c52-9a60-6afb9d5ca861",
          "name": "did_json"
        },
        "response": {
          "id": "e665717a-64df-4175-84a7-49951529c37e",
          "status": "OK",
          "code": 200,
          "responseTime": 351,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3822bb63-773d-4e15-8542-b4be74650d03",
        "cursor": {
          "ref": "d50fa5c1-4cab-4292-a37c-93e6c6ad071f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "08e840e7-39a2-4870-8d2e-b72fbfd37550"
        },
        "item": {
          "id": "3822bb63-773d-4e15-8542-b4be74650d03",
          "name": "did:invalid"
        },
        "response": {
          "id": "aff4c711-b36c-4b4b-9378-a90df5790294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3822bb63-773d-4e15-8542-b4be74650d03",
        "cursor": {
          "ref": "d50fa5c1-4cab-4292-a37c-93e6c6ad071f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "08e840e7-39a2-4870-8d2e-b72fbfd37550"
        },
        "item": {
          "id": "3822bb63-773d-4e15-8542-b4be74650d03",
          "name": "did:invalid"
        },
        "response": {
          "id": "aff4c711-b36c-4b4b-9378-a90df5790294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b6963e-38f6-4c10-ac6f-e5bd6498ab8c",
        "cursor": {
          "ref": "b5208d81-d137-4b85-a9b6-3cb7868a2b99",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6fd4633b-7b6c-4aa4-947a-a120ec2294cc"
        },
        "item": {
          "id": "81b6963e-38f6-4c10-ac6f-e5bd6498ab8c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "70b22cff-bfa2-472f-8f99-5103ac76069d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 110,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6814f981-ea41-4bb0-9621-3b89e834ab22",
        "cursor": {
          "ref": "3a7bf348-ec25-4ad3-98d3-648bd1c5c442",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6989f88b-f955-4e9d-a3d1-5cb32c77cd7a"
        },
        "item": {
          "id": "6814f981-ea41-4bb0-9621-3b89e834ab22",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f9e11ca8-5a95-40ef-945a-448dab95bd28",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343db8aa-0cc5-46af-8d74-f04cff52a084",
        "cursor": {
          "ref": "a6d78218-05a3-4bb0-9a87-f4f1082952e3",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dc611463-08a5-4798-ab14-56f22f91b480"
        },
        "item": {
          "id": "343db8aa-0cc5-46af-8d74-f04cff52a084",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d44a72df-5ebf-447c-b0c5-7e10e3f73ccd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e593d84d-2e4a-40ec-b3ae-c11afbfc901d",
        "cursor": {
          "ref": "57c968aa-bcbb-4c49-9cec-97c17e8acb88",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "990ab321-c32e-4caa-bb7a-a0b7ae7294f5"
        },
        "item": {
          "id": "e593d84d-2e4a-40ec-b3ae-c11afbfc901d",
          "name": "identifiers"
        },
        "response": {
          "id": "61c68060-476d-4145-b8d7-cd9be13f12fa",
          "status": "OK",
          "code": 200,
          "responseTime": 221,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40f2140-f9c8-4205-adcf-dc989788638c",
        "cursor": {
          "ref": "255f3421-a756-4714-8da8-960ffb731dc9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3a33afe6-7f4a-4fb9-be99-de8789c9fb30"
        },
        "item": {
          "id": "f40f2140-f9c8-4205-adcf-dc989788638c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4d3b369f-c084-4b6f-aaa3-1ad45f11dbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88df5f38-ac5c-4ea7-9146-fa03bb4b09ca",
        "cursor": {
          "ref": "08dad9c2-ba84-4bff-b948-e2ea7a69c1e3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "537a2311-cb88-47e5-b7d3-51fced9f0d9c"
        },
        "item": {
          "id": "88df5f38-ac5c-4ea7-9146-fa03bb4b09ca",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "76778532-7932-4bb3-b878-db20c49fc1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05713990-6b06-452f-a2b8-7a683a77c90e",
        "cursor": {
          "ref": "b9708a7e-d0f3-4008-86c9-0f965583f16a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4777169d-228a-4321-a5e5-198f0e77bf70"
        },
        "item": {
          "id": "05713990-6b06-452f-a2b8-7a683a77c90e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "29f20039-27ab-4062-9329-7dae0f8b3e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e90f929-24ff-4297-9099-9104f6002f19",
        "cursor": {
          "ref": "42addde1-d1fa-4aae-8e36-23c37d3fd89e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "19dc3c40-8b97-47eb-a5ca-dae509863933"
        },
        "item": {
          "id": "8e90f929-24ff-4297-9099-9104f6002f19",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fb44f885-74df-4c4e-992c-2e2c8b451143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4456b744-fb40-4547-80a0-71ad05dcf278",
        "cursor": {
          "ref": "fc33191a-5be3-4362-adea-d1b191300957",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e1581b10-8e97-4500-8492-09eb25a07021"
        },
        "item": {
          "id": "4456b744-fb40-4547-80a0-71ad05dcf278",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6d39e766-1c99-402e-89cb-d72b5eb90c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11193bab-1680-4f0b-8d82-8d8bf9fd2d5e",
        "cursor": {
          "ref": "abd7ad6b-21ea-4f56-bfe6-e4474397b675",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5fcaa478-c8cf-448e-96bf-a9f4dd9b9007"
        },
        "item": {
          "id": "11193bab-1680-4f0b-8d82-8d8bf9fd2d5e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b845de91-9105-46a7-b127-ce79bec4215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c371f893-940d-496e-92c2-6ba47adb630a",
        "cursor": {
          "ref": "2571461e-6802-4c67-a2fb-34190afebf1c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d4a9e4fe-aa2b-43a7-85f4-9d658f12fe53"
        },
        "item": {
          "id": "c371f893-940d-496e-92c2-6ba47adb630a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "daacc68d-f32b-4499-ae57-ef13fc51ddef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b970136e-814c-43c2-ab2d-ed0600f70d61",
        "cursor": {
          "ref": "942ee745-7487-46b9-a4a1-0c8e841fd648",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5f320e5f-0138-4512-9d23-ca3420b87f79"
        },
        "item": {
          "id": "b970136e-814c-43c2-ab2d-ed0600f70d61",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "89f77fa9-a222-4708-a113-381ced77dc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66627c7e-1d4e-45dd-a48c-fadf92e760a5",
        "cursor": {
          "ref": "9d384e2c-0120-49db-bab4-4dbd1714aa1e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "912af082-26ee-4ebc-8be2-4d0978d616e2"
        },
        "item": {
          "id": "66627c7e-1d4e-45dd-a48c-fadf92e760a5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c724ffa0-8b1f-450c-82c6-a3e7d7f4d676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03444588-556a-4b7e-b620-ee0a6565fe47",
        "cursor": {
          "ref": "d04841f8-011a-4fda-92f5-be66c2e94bb3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "56850a1d-90b6-4666-9f1d-26974a5b365c"
        },
        "item": {
          "id": "03444588-556a-4b7e-b620-ee0a6565fe47",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6aa2491f-7cf4-41e8-80ae-3eefb5fb9820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21008352-14ee-4792-b57e-91053ef46491",
        "cursor": {
          "ref": "b0f68431-5f2c-43d3-bba3-244ff1df791e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e6183292-23c3-43c2-82e8-51b8d7803a67"
        },
        "item": {
          "id": "21008352-14ee-4792-b57e-91053ef46491",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a06a7ee8-85e6-4c35-b093-d60299703c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1274c53-e65a-4df2-9fc6-e9d6939aa722",
        "cursor": {
          "ref": "18794e22-3d75-4f67-924f-5098c031eed6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "44b0a30e-6308-495f-b1f2-f2855d5db84c"
        },
        "item": {
          "id": "b1274c53-e65a-4df2-9fc6-e9d6939aa722",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c6e112e1-75a0-4739-94fb-f2eb80a928f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560372be-ce25-4afe-94c9-7ac6c0fb242a",
        "cursor": {
          "ref": "986b7ee5-59a3-4c63-bb4a-4014fd5f0a9f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fd3bd326-3acf-47e0-961b-a15a7d605133"
        },
        "item": {
          "id": "560372be-ce25-4afe-94c9-7ac6c0fb242a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d4687721-9587-44ea-b1d1-c2548cfcd08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098e8bde-b74b-46d8-b188-475be4b0e533",
        "cursor": {
          "ref": "f984f320-997b-4f5d-ad5b-29c21f6f6dd2",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "55351707-a86c-4c86-accf-99dfa93efbfd"
        },
        "item": {
          "id": "098e8bde-b74b-46d8-b188-475be4b0e533",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "963a0753-b9d4-49c5-a101-033f66207e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bd85da-6bcf-4356-b57b-49af181dbbf5",
        "cursor": {
          "ref": "537b0574-0121-4bd6-9998-e2fd7e6e2ef4",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "53dbc5c7-0bf3-47a2-9f00-189ac92484d2"
        },
        "item": {
          "id": "64bd85da-6bcf-4356-b57b-49af181dbbf5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a642b220-c8d6-4cd4-a331-fb2522d38660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4499f0-3f14-48f3-83ca-0285c8373c82",
        "cursor": {
          "ref": "479a9df7-b40f-41f5-a646-91907afda8a0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "26088212-97b0-4a3e-9ceb-69cbf88ca1b7"
        },
        "item": {
          "id": "ce4499f0-3f14-48f3-83ca-0285c8373c82",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a791e7c9-1c46-42b4-a4b9-7a6a9ca4fbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c0a947-5aaf-40c8-ac52-41e1594a3e55",
        "cursor": {
          "ref": "93b11948-ab28-4709-83e8-7083406ff06c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e404a472-32ed-4723-9135-4b55f07a7828"
        },
        "item": {
          "id": "27c0a947-5aaf-40c8-ac52-41e1594a3e55",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0fe164be-b1f5-48f4-8502-2870a2b6295e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400ffe7d-0a71-4508-ba47-c88ca5519374",
        "cursor": {
          "ref": "a2ca4c17-d616-41aa-9030-de1bfc744320",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e33bf2b6-f74d-42b0-9180-c3c54d736bf9"
        },
        "item": {
          "id": "400ffe7d-0a71-4508-ba47-c88ca5519374",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bfa32b2f-0dfe-4e6c-b7e3-6004045599b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a7897d-8b60-44f5-bea8-b92c65114568",
        "cursor": {
          "ref": "a3f188a3-dcc0-4dc2-b451-54fbe4c755e5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2b347637-afd2-4557-a1f2-e8605e5fb320"
        },
        "item": {
          "id": "d3a7897d-8b60-44f5-bea8-b92c65114568",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5e644547-d886-4fef-91d7-2aeb2e5a56e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f8ab17-0380-4409-9040-ff7be1cad340",
        "cursor": {
          "ref": "26ec08bb-8d90-4cff-80e9-69786fd75c04",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "df873f46-5bcd-460a-b3ef-7f3e0cc08807"
        },
        "item": {
          "id": "05f8ab17-0380-4409-9040-ff7be1cad340",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3cbd3e37-56a5-4e05-a1aa-f70c01d93707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeaca95-bb15-4a03-bf7e-449d4fade081",
        "cursor": {
          "ref": "230955f3-01a2-435a-82c4-fb323f6b9cf6",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "961c8775-7281-43be-951d-bd04fee0b940"
        },
        "item": {
          "id": "faeaca95-bb15-4a03-bf7e-449d4fade081",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "11529fb2-605f-4a25-97db-4ce4c9e07973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a39e0b-33be-4b4c-affc-14f7442788d7",
        "cursor": {
          "ref": "f654a60d-4fe6-4ac4-ac88-94927a72c568",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "10ef5275-643a-49ae-918c-695e9b1520c2"
        },
        "item": {
          "id": "02a39e0b-33be-4b4c-affc-14f7442788d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "80f8acca-4e5a-4b96-b70a-ef7711dcabfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93a5879-1415-43f3-b68c-c17b3c386e69",
        "cursor": {
          "ref": "e17b648b-e569-48f6-aaf1-c35eb13f05d4",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "52473477-a046-451c-94d3-9dbef056fbb9"
        },
        "item": {
          "id": "e93a5879-1415-43f3-b68c-c17b3c386e69",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c420937f-42b3-49d1-be29-e2a6862ce9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1179ee3e-e7ab-4ada-bab6-546fb28fb713",
        "cursor": {
          "ref": "98e21476-78e1-43fd-9af3-5d2bc5e817dc",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6a191973-34c0-4e51-9165-524bc29c50ad"
        },
        "item": {
          "id": "1179ee3e-e7ab-4ada-bab6-546fb28fb713",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9ac8080d-8aaf-4f02-8e59-00ca3af7ea5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d6775b-6587-46da-bb88-0945a0a36fd1",
        "cursor": {
          "ref": "3d920b37-0879-41e7-bf80-513ae8054b8d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bdaa80ea-a753-4c97-a4e9-53614f6fa63e"
        },
        "item": {
          "id": "73d6775b-6587-46da-bb88-0945a0a36fd1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7f6469d3-6777-4aed-82ae-033323f9d271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd879192-c4af-4e52-b883-51c9267551e4",
        "cursor": {
          "ref": "b950ca13-9478-41dc-a990-ac12367bb18d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8c1519bb-7d14-440d-b2fe-4997c07a324c"
        },
        "item": {
          "id": "bd879192-c4af-4e52-b883-51c9267551e4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fc220b85-db2d-4f91-afca-154095f653f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81f51a4-0570-4a3b-b1a9-7db71ba901a9",
        "cursor": {
          "ref": "e31442b0-ed22-45e0-b50e-b17398d3a89a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7e7863e0-40fe-4b15-8275-efa6d1863444"
        },
        "item": {
          "id": "e81f51a4-0570-4a3b-b1a9-7db71ba901a9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3c5558b9-ce9f-46c5-8b87-f0a3c853d9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4721aa21-c1f1-4c81-a129-236505268d49",
        "cursor": {
          "ref": "63196251-5911-4c7f-9af5-4a44320ddd47",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f1147b25-c820-4064-983e-25fa53ea579e"
        },
        "item": {
          "id": "4721aa21-c1f1-4c81-a129-236505268d49",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "caa1eb59-f57c-4667-bbc7-5a6ace3d8853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a425ce6f-e4bd-491f-81b3-d3079cbfc036",
        "cursor": {
          "ref": "0d7d8b14-4b3e-466b-a77b-7cf7a7110e95",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a10f58b9-26e1-43f2-ab95-defe34955bc7"
        },
        "item": {
          "id": "a425ce6f-e4bd-491f-81b3-d3079cbfc036",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d02385e8-e2ee-4b8a-bca5-9fc75992f130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e10bb9-b6a3-4c4c-83d4-de5f830b4854",
        "cursor": {
          "ref": "9be8cb0b-81f5-4268-b4e6-78934760642b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "47876d24-9d41-485f-9e62-ef87fb3ef9f1"
        },
        "item": {
          "id": "25e10bb9-b6a3-4c4c-83d4-de5f830b4854",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3bcd4b6f-7d78-4968-a035-f0db7fc57a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7fd0a6-5659-4cda-96bd-00731a407669",
        "cursor": {
          "ref": "48139324-669f-4011-9fba-6d4449dd3880",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3d392479-ffc7-4a40-9739-4942352d2781"
        },
        "item": {
          "id": "eb7fd0a6-5659-4cda-96bd-00731a407669",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6eac25ca-420e-45bc-a82f-6f26e17bee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22f94ce-ef1c-411d-8ecc-ccbc7296522a",
        "cursor": {
          "ref": "9ac8fd8f-3bc4-47b3-885c-5592e02fcb24",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7f8ff511-8154-477c-bd3e-cf1afd150f71"
        },
        "item": {
          "id": "a22f94ce-ef1c-411d-8ecc-ccbc7296522a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "96b8798f-e580-4a3e-b661-e840bcfde177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb77b56-0a62-4b6e-9f59-cbdc8dcdef2f",
        "cursor": {
          "ref": "73cfe6d1-6283-42dd-8d7e-eaf267951e91",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "447dd0f2-7fd9-4999-aa7d-490245570f81"
        },
        "item": {
          "id": "aeb77b56-0a62-4b6e-9f59-cbdc8dcdef2f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4a4ac3ce-e1c6-41ca-988f-01575885b57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79df18e-b196-4a32-8746-53c05d8b84a7",
        "cursor": {
          "ref": "c4e0d5db-2f49-4a6d-8760-2a004b5cea57",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f1614ce8-47dc-4e6b-9d75-3f7fa4230e1c"
        },
        "item": {
          "id": "c79df18e-b196-4a32-8746-53c05d8b84a7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d2d2b5b1-cc11-4928-9efc-9a35dd5114dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be462a8-ccd4-4a3c-be6d-ea074d6c018b",
        "cursor": {
          "ref": "24341742-2648-43b3-b7fd-da6e87cd250b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4de3b4ea-d85d-493c-89ca-ab504356f214"
        },
        "item": {
          "id": "0be462a8-ccd4-4a3c-be6d-ea074d6c018b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5ad1470f-5743-44b5-95f0-848efc7a6a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79e3602-effd-45ff-b0bc-4cbc415ea63f",
        "cursor": {
          "ref": "03f8190b-2525-46b6-b972-5e2e9bc24306",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a9f4557f-dbbc-4dcf-9347-02eb3b107822"
        },
        "item": {
          "id": "d79e3602-effd-45ff-b0bc-4cbc415ea63f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "29a16828-c0dd-4cc1-9411-f72f5053e3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98216277-52f3-48a2-896f-81812458a5d1",
        "cursor": {
          "ref": "df2ae858-8dad-419f-b214-5220327c183c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "41237d00-9a4a-4354-bb41-ca76d592a392"
        },
        "item": {
          "id": "98216277-52f3-48a2-896f-81812458a5d1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4201829f-2510-4c42-8893-c02d4c80ed79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8e6e46-56a5-484f-bdf0-36a34451ae54",
        "cursor": {
          "ref": "6020c70b-c321-45f9-b742-3c27a0e81efb",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f81771f5-953b-4539-9c00-bf53bf4783ec"
        },
        "item": {
          "id": "ad8e6e46-56a5-484f-bdf0-36a34451ae54",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e94c8b94-9e62-44c7-a9e1-e6c26bb4f6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c56fd4-25ac-428f-81d9-21e51148011e",
        "cursor": {
          "ref": "6988b0d4-9efe-4ff4-bfae-0d883da12817",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e0918a5a-b8db-4267-8fc0-3f7f81dddcb6"
        },
        "item": {
          "id": "f0c56fd4-25ac-428f-81d9-21e51148011e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1ebd263c-bc51-4399-b99a-a1e424e47757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62e047b-cab1-4d39-a83a-bd08fe5c3736",
        "cursor": {
          "ref": "7257f353-df86-4f69-aa8f-fb73d9354b99",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f7d76580-3278-45bb-85ba-f50d49c43036"
        },
        "item": {
          "id": "f62e047b-cab1-4d39-a83a-bd08fe5c3736",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b9eaf22e-403d-4983-98af-beec234432f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24d3c73-acce-46d5-8bcd-5d90e93ec686",
        "cursor": {
          "ref": "035b2176-00d6-436b-b8a6-0608b80249a9",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a5a01a75-cf77-4cee-900a-3c17b4162ed6"
        },
        "item": {
          "id": "e24d3c73-acce-46d5-8bcd-5d90e93ec686",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f1e9c0bb-44b8-4c98-b13d-f4b56a72d5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c278dd7c-6723-462c-bb4e-f94b74264de6",
        "cursor": {
          "ref": "89ea31c3-a204-4424-aa66-5c5fa13fadde",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5145a91d-0870-459b-9b1b-a73c6da8cc61"
        },
        "item": {
          "id": "c278dd7c-6723-462c-bb4e-f94b74264de6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f85204d6-2800-408f-97e6-06f186e27094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f9f024-37f2-485a-b653-620732274c24",
        "cursor": {
          "ref": "cb557b68-c790-44d0-84b1-175082da5571",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "57c1d84b-5d6a-467b-b883-de6f35528399"
        },
        "item": {
          "id": "29f9f024-37f2-485a-b653-620732274c24",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3c2fa5fe-0314-427b-a727-4069a2b5eb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13be4c86-7bfc-4c45-b02d-430d7a1e858f",
        "cursor": {
          "ref": "5af5aae3-9842-4faf-a8a6-7b5c2c016949",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d81b63f8-9131-4515-b3fb-9e17ab23e303"
        },
        "item": {
          "id": "13be4c86-7bfc-4c45-b02d-430d7a1e858f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7a3f9c25-feb6-4136-89bd-f6fce945cc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383fd25e-970c-4006-8f44-5bde217f8701",
        "cursor": {
          "ref": "45904a95-4c3e-4509-a114-e3825ce7a19e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e6d47b4d-d2a6-4770-adf9-a506a8cdbbf3"
        },
        "item": {
          "id": "383fd25e-970c-4006-8f44-5bde217f8701",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4166815f-0986-4a3c-85d6-e90fd1d59ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7a2c7a-f584-4eb4-b8c7-51b3269129eb",
        "cursor": {
          "ref": "b883f051-3209-4944-bc74-bff38c5f598a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d5541242-2896-4bde-b089-026fafb6c1c7"
        },
        "item": {
          "id": "2d7a2c7a-f584-4eb4-b8c7-51b3269129eb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4f04b027-18c6-469c-b729-b95011a6cf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3e8d16-e580-4190-9c1a-da6abfa4ca72",
        "cursor": {
          "ref": "6558f231-d00e-4a22-a3c7-e8d5e9fd6ec0",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0419b892-abed-4508-8cdb-4ce02b54f7ed"
        },
        "item": {
          "id": "df3e8d16-e580-4190-9c1a-da6abfa4ca72",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "883655d9-1ebd-4420-ac2d-8be883c3ef27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fd39bf-3df8-44a2-89d9-b0d25d283547",
        "cursor": {
          "ref": "91bb6447-6590-4206-a977-adc1b06acef2",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fed204c9-4dae-4639-a345-f111dbad037c"
        },
        "item": {
          "id": "e4fd39bf-3df8-44a2-89d9-b0d25d283547",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ef6396d4-a642-4853-82b1-96a78b1f84fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e459983c-767e-4765-b841-5f9950e2546c",
        "cursor": {
          "ref": "78a6c90e-85e8-4c73-b445-72ab83a94a79",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "904648d8-b48a-420a-8f42-dc5161a937f8"
        },
        "item": {
          "id": "e459983c-767e-4765-b841-5f9950e2546c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "aa779cfb-a67a-4915-a5df-1e4342f61d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068a4f47-afeb-48d7-b6a7-df7d4098bd92",
        "cursor": {
          "ref": "6abf33cf-1506-4d6e-bb69-77489d6a064a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "556e5d30-697e-4290-a0ad-4e65e3a3e748"
        },
        "item": {
          "id": "068a4f47-afeb-48d7-b6a7-df7d4098bd92",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4937911b-3bb5-4f63-b031-fc01eca88833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa3e6bb-fa03-4f7a-b89e-40a4295243e1",
        "cursor": {
          "ref": "e1b5ea5e-fa2f-4c2a-a1cd-1e40da6caa9f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ce8b8b59-a730-438a-86c7-3bbabd198d35"
        },
        "item": {
          "id": "6aa3e6bb-fa03-4f7a-b89e-40a4295243e1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "deaa52ad-ea6b-4c03-9f2a-9db01f97d69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc18eff-6969-4a85-a706-b2849d6cb792",
        "cursor": {
          "ref": "0a5f2c93-f112-4d6f-a6e4-1b92eb101efe",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "efde4451-c6dc-46e9-aefd-477b61863103"
        },
        "item": {
          "id": "9cc18eff-6969-4a85-a706-b2849d6cb792",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fa49db97-a4b3-4856-a1d2-38e70a40e6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a04d82a-31fa-4c45-8ba2-d35de382ff0c",
        "cursor": {
          "ref": "df070921-9e47-40ed-952f-14af88d0163c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "82c6996f-637f-401e-b6a6-928e749ff501"
        },
        "item": {
          "id": "9a04d82a-31fa-4c45-8ba2-d35de382ff0c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1523279d-5cd3-4fe6-b94a-cc2c5f94d288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110023d4-c99f-4198-a1a1-aa411295e1a9",
        "cursor": {
          "ref": "585f5462-ebdd-44ac-a0d8-edb2faec1742",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "09ded3fe-b356-4c76-98f7-00cb4d739a5d"
        },
        "item": {
          "id": "110023d4-c99f-4198-a1a1-aa411295e1a9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cd078ab2-7dfc-47a1-b3f5-18673981add0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac60bf9-c4a9-4432-9053-9ac70598a632",
        "cursor": {
          "ref": "b32a8236-e469-4e63-a29c-a0e7b51c3946",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "612bbf04-47e0-41fa-a340-13cf990232c3"
        },
        "item": {
          "id": "3ac60bf9-c4a9-4432-9053-9ac70598a632",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ce6c8b60-85b7-4d5a-9c04-bf1ea9cf094b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4d87d3-43d0-4787-88d6-8b7e65489c71",
        "cursor": {
          "ref": "9674ca74-3dc3-4cc3-b6b2-39f854865496",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0884b8ad-e038-4212-83db-aaa5f5250fc3"
        },
        "item": {
          "id": "1f4d87d3-43d0-4787-88d6-8b7e65489c71",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2cc7c464-8396-4921-bd5a-93d76103565d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a26ad0c-e8b6-4045-882f-e6435e9a2172",
        "cursor": {
          "ref": "55b4f958-78a9-48f5-8908-e89a9ad964e6",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "65b54e9b-c5d9-465c-a2ad-23115df0d978"
        },
        "item": {
          "id": "8a26ad0c-e8b6-4045-882f-e6435e9a2172",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b1ef80b7-a620-4910-aeb2-fcaa894c1f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c823e5d6-1323-4242-9655-38a9749b1459",
        "cursor": {
          "ref": "e983ee3a-a26d-407a-b83b-d1011c97f142",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2bbe149d-bd1c-4cc4-b045-36a44c281435"
        },
        "item": {
          "id": "c823e5d6-1323-4242-9655-38a9749b1459",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "02698967-e30f-4382-a79c-ca81d6cb7879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6b9157-516f-482b-bd04-fdbeb3f99e3f",
        "cursor": {
          "ref": "f1c178da-1196-4ca7-baae-2764b1fa42c3",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0b4bcc43-cf8f-4bd6-9945-a232cba6b52a"
        },
        "item": {
          "id": "8a6b9157-516f-482b-bd04-fdbeb3f99e3f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "61c66179-d503-449f-bf3f-85ec33411097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dde78a-c68b-47f5-a046-8073c2db164d",
        "cursor": {
          "ref": "3eef4145-c634-47b1-b824-b353c7d6f357",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3c766482-a9c8-4acf-843e-fe804f85f2ad"
        },
        "item": {
          "id": "45dde78a-c68b-47f5-a046-8073c2db164d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7fd67e17-dc29-4d24-a75b-ec879cf1084d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5327411-3e42-42eb-bab4-56ffae04ac0b",
        "cursor": {
          "ref": "596d3e13-20a8-4da4-b780-3863e2ecff7a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3123964b-5ac2-46e5-b81e-db35af0b4fda"
        },
        "item": {
          "id": "e5327411-3e42-42eb-bab4-56ffae04ac0b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c6a0de51-deb6-4867-8d64-0de219aaff33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6121fc-7d2e-42b7-80ed-ab12e341841e",
        "cursor": {
          "ref": "5f1c8976-d38f-427e-bcdc-2a1fc8cf8702",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ef8655d9-c89d-4497-8967-0e8e46da7ba4"
        },
        "item": {
          "id": "cb6121fc-7d2e-42b7-80ed-ab12e341841e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8ef379bb-f970-465d-8212-f8e2a3dd24f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe220b9-f11b-40b5-b634-d4decfa227cf",
        "cursor": {
          "ref": "4fe3d1cb-034e-4b7f-80f4-99e462423deb",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "76570659-d23f-4c36-b146-75f7b90ef1a5"
        },
        "item": {
          "id": "fbe220b9-f11b-40b5-b634-d4decfa227cf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "15c5096d-11ca-4bf3-b95f-e8f5018ad819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4890714f-2f55-422d-ae90-4de5a066d782",
        "cursor": {
          "ref": "edcc968a-7294-4c20-8647-3882721771b7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "45cc22a1-a4c0-45c0-a745-f2ea81964a0d"
        },
        "item": {
          "id": "4890714f-2f55-422d-ae90-4de5a066d782",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5eaf794c-802c-4d90-a223-31db93d5b1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dba521-33a4-4c9a-86a4-10f54b100e40",
        "cursor": {
          "ref": "1f8326d1-9a3c-4398-a446-9f9a807aaef2",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8db2824a-2b03-49cc-9fed-f7e7423984a1"
        },
        "item": {
          "id": "c4dba521-33a4-4c9a-86a4-10f54b100e40",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a588e6e4-b8fe-4c34-ac14-87a76742b9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7906adc9-7b0a-4327-8ecd-7aafc876607b",
        "cursor": {
          "ref": "65b975c7-efb4-4419-847a-419cc42ad0f0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a4290656-c471-4417-8fe1-64f2b9d424a1"
        },
        "item": {
          "id": "7906adc9-7b0a-4327-8ecd-7aafc876607b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "51787ae8-47a0-4d56-bdb5-db6d888694c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe453bb8-11d6-421c-bd74-aab434e1fdad",
        "cursor": {
          "ref": "45a4903c-96fb-46c4-9f50-7da2484674a2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "771b4483-da4d-4247-9bc4-62e21c7270da"
        },
        "item": {
          "id": "fe453bb8-11d6-421c-bd74-aab434e1fdad",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "555587d9-9dfe-45ad-8d59-530ee9191d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478ad2ce-6c30-435b-82b1-7c158a25287c",
        "cursor": {
          "ref": "2b045cb9-7277-4703-aaaa-a1282d773912",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7e48adbb-c1ed-4e0a-b53d-c5897db14f8f"
        },
        "item": {
          "id": "478ad2ce-6c30-435b-82b1-7c158a25287c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f91110d1-0428-45d1-9346-4b1edf7ba276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f026f4-73b8-46f9-bbd1-983067fd2962",
        "cursor": {
          "ref": "f81b3d47-9b63-4adc-9e49-dfd5fbdac18e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a9ac4696-3f38-45a5-b4e0-ee1a187bb8c6"
        },
        "item": {
          "id": "69f026f4-73b8-46f9-bbd1-983067fd2962",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4c8eb342-6e6d-4f8b-8668-6eb33ee44dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96aa8d74-9280-4ed9-8734-9601b43f1bae",
        "cursor": {
          "ref": "e3b6dcc2-2f07-48fc-b7bb-cbd795d18216",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "123ee982-db6b-467a-b652-b30dd70e2640"
        },
        "item": {
          "id": "96aa8d74-9280-4ed9-8734-9601b43f1bae",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "10aa1ead-215e-417f-aa7b-6dc52be7246d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87870685-1aca-449c-bb0c-7fc6e7e0b428",
        "cursor": {
          "ref": "6390617f-4c04-46d5-9afb-2969e2467008",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9681c22c-129f-4574-a5a6-a3c92f193700"
        },
        "item": {
          "id": "87870685-1aca-449c-bb0c-7fc6e7e0b428",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5c791b95-4899-454c-ae9f-d32a30d8c9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a556971-b63f-4ac3-a4e6-917480e91886",
        "cursor": {
          "ref": "6421c5dd-fb8c-4dde-859a-a1a579af0900",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "476b45f5-d762-4828-b4eb-32da3494d2d8"
        },
        "item": {
          "id": "2a556971-b63f-4ac3-a4e6-917480e91886",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "760bdfa7-a1c4-46bf-88b3-258338102de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b539eac9-c909-46e3-8a7b-b798f282edcb",
        "cursor": {
          "ref": "7dc4a60e-c069-49da-b228-3b6f44cdb63e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c7f8e692-b4de-4131-ac6e-a688bbeae68f"
        },
        "item": {
          "id": "b539eac9-c909-46e3-8a7b-b798f282edcb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a788c39a-5f02-49c0-a2d3-e3ff380feced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011b0b0d-49af-4a5d-ba59-894f7b575224",
        "cursor": {
          "ref": "f36b6160-b3fb-4915-8690-c9261cb24a5f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2cfcd349-6b5b-40c2-940e-bb52304034b2"
        },
        "item": {
          "id": "011b0b0d-49af-4a5d-ba59-894f7b575224",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "26873be3-d87d-49e4-bbee-1ce5f5219e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275e8a69-76d3-4243-98de-e01a69980b97",
        "cursor": {
          "ref": "b5dc22d7-014b-48e3-9ac2-aa6347282729",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4644dd90-fd93-4ba4-96d0-efdfb16a411c"
        },
        "item": {
          "id": "275e8a69-76d3-4243-98de-e01a69980b97",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c821e671-aa02-44b0-8d58-38894ab87066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a75eca-6a57-46a5-85ca-e14ace67b849",
        "cursor": {
          "ref": "5f2f3864-d537-4903-b22f-10f11965ce57",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "44380deb-ad3c-4333-a659-c3b6ffa151a2"
        },
        "item": {
          "id": "15a75eca-6a57-46a5-85ca-e14ace67b849",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9c436ff9-7bde-465e-96b5-0fb09472f9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9672b01-f66d-4e46-8f80-c7cab390f48d",
        "cursor": {
          "ref": "bc0a1192-bc67-4e38-a527-3256aca942bf",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a9021baa-250b-41ff-bdbd-bd86c407bf52"
        },
        "item": {
          "id": "a9672b01-f66d-4e46-8f80-c7cab390f48d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c0cba94f-4cd3-4a10-ad25-2c6a74766ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5311dc-fcc3-4f74-a847-736d5a940537",
        "cursor": {
          "ref": "213538b6-35ab-4044-a81e-f54934f281ed",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e87b0398-1454-4ffa-b731-0a6abd3d1f7e"
        },
        "item": {
          "id": "db5311dc-fcc3-4f74-a847-736d5a940537",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "97ab9404-970f-441f-8055-3686564d899b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cadf10-0084-479f-89b4-59c18093ac5b",
        "cursor": {
          "ref": "6fd47691-0b5b-4403-a492-8ce01fb88889",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f87cabac-4a72-4195-92a3-4191f3723973"
        },
        "item": {
          "id": "f9cadf10-0084-479f-89b4-59c18093ac5b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4c9d0395-98d1-4418-998e-3266055ac58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dd997f-41bf-4089-b83e-f74b323e9242",
        "cursor": {
          "ref": "e85c4c88-8f77-4ba7-a752-710749087fac",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "624d781a-71d7-4d7e-ac87-42cda2262393"
        },
        "item": {
          "id": "d1dd997f-41bf-4089-b83e-f74b323e9242",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c969e0c0-1893-446a-b22d-738f9ee06a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed37e30-be65-4f05-95f1-3777fe4b65d8",
        "cursor": {
          "ref": "9fb63266-a7cc-4c02-80e0-0ce042cefb53",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cb95d15b-d144-4d1e-8838-cf26868b3aca"
        },
        "item": {
          "id": "4ed37e30-be65-4f05-95f1-3777fe4b65d8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "33b67276-ff18-49f0-aa46-09a6ecab8b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a568d4d-d8be-4946-97c5-67963fd6ae30",
        "cursor": {
          "ref": "a4603a1f-368f-4445-9a41-d70ae2030295",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4d88cb53-05b8-4a79-94d4-9caffed7ce89"
        },
        "item": {
          "id": "8a568d4d-d8be-4946-97c5-67963fd6ae30",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "53344a6f-bf4c-471c-92b2-4ffea8afdb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f190a803-9821-4db6-bdff-ecc3c61dee7f",
        "cursor": {
          "ref": "fecd74f4-0922-4375-a18c-055adf827e65",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "02eda3df-0e71-4532-8243-bc6f8d2dbb21"
        },
        "item": {
          "id": "f190a803-9821-4db6-bdff-ecc3c61dee7f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6ffba52c-06ba-4e49-9216-8c924fffa808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04f8981-9b77-4c69-802a-e03d7c2f6148",
        "cursor": {
          "ref": "242e5f9e-867a-4dc4-b13c-928b377f7869",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "17e7e742-c733-4a4b-bf65-24d2ef66a1b8"
        },
        "item": {
          "id": "e04f8981-9b77-4c69-802a-e03d7c2f6148",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fb17d3cd-d9c8-4b24-841c-999b1e728f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f38a10-a03d-42ec-822a-aa09d0dff988",
        "cursor": {
          "ref": "a26848fb-87c3-4bb9-82cc-90ef9adc7098",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "49264f46-81fc-402b-8654-8a08e0fbb638"
        },
        "item": {
          "id": "39f38a10-a03d-42ec-822a-aa09d0dff988",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "efee5436-b463-4876-8bef-5957f7e97e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85c0e5c-579d-45db-86d8-7cd839c4e3f8",
        "cursor": {
          "ref": "f6abef58-416e-430d-83a0-2cb386fb74b8",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3f928e9a-9496-4822-9068-c40ae5159316"
        },
        "item": {
          "id": "a85c0e5c-579d-45db-86d8-7cd839c4e3f8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "34ac5ab4-9911-4584-a5c2-158382318d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760e7962-0a06-40f0-847d-221fb87abcb2",
        "cursor": {
          "ref": "965759bf-aee7-4675-b08a-58f453ac3bbb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a7c3c4dd-4ed0-4115-98dc-e49f55d9ea17"
        },
        "item": {
          "id": "760e7962-0a06-40f0-847d-221fb87abcb2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "09c6a629-38f0-4dec-a637-11a614d262db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022e3b8f-eee6-4457-b54d-4862d6c37b1f",
        "cursor": {
          "ref": "d8c640de-beec-48e3-84da-4cd007e9a27b",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5a33fdbb-d93f-4311-9632-770708e38800"
        },
        "item": {
          "id": "022e3b8f-eee6-4457-b54d-4862d6c37b1f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5ec4e325-fc95-4ece-822a-56127a4e0d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71408db4-f0bc-4032-90df-d9e045a90d4a",
        "cursor": {
          "ref": "a2b1ef9e-6ee3-4210-84c4-9054efcd2766",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "36ff009f-4f2c-4122-95e1-21cf33f4c7da"
        },
        "item": {
          "id": "71408db4-f0bc-4032-90df-d9e045a90d4a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "45dcadde-1b71-4cbd-99ae-f57d6f435c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6a0145-d060-4874-96d8-914a353bc86c",
        "cursor": {
          "ref": "50dc804a-a7d7-4215-8913-0cb5df75461e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2263b1dd-6ab6-4865-8eb7-05333d632175"
        },
        "item": {
          "id": "ec6a0145-d060-4874-96d8-914a353bc86c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d212961a-3c43-4878-bf6e-be5775042bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411de47c-493f-490a-959a-f9cf14b0ceba",
        "cursor": {
          "ref": "d25e1a94-6a14-40de-9378-c8a0e0bd2c66",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4c168530-dcfa-4382-8691-10802f7d4290"
        },
        "item": {
          "id": "411de47c-493f-490a-959a-f9cf14b0ceba",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bdf141e6-5d51-45f5-8410-f678d6669cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24848e3-28bc-489d-a4a4-b08a31e8aff6",
        "cursor": {
          "ref": "4d3a6bbf-7b53-450a-8f0d-2ea682a00772",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4d80c8e2-f46a-4ca7-af02-2381513bc45a"
        },
        "item": {
          "id": "f24848e3-28bc-489d-a4a4-b08a31e8aff6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b518d9ec-5a87-46ae-9423-fc645f94a682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67f29a3-ea43-4b5c-bf56-3e7db5f88c3e",
        "cursor": {
          "ref": "2fb3f4fb-702d-48be-b91a-62d38f574929",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "032c1002-5537-4cd2-ad63-f6f691474dab"
        },
        "item": {
          "id": "b67f29a3-ea43-4b5c-bf56-3e7db5f88c3e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7e1f502f-e0a1-4e22-8277-729052bda407",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faa8d35-90f4-41da-8f8e-cb9ab35c3140",
        "cursor": {
          "ref": "71332939-2ec5-4fc7-8521-62a7bb8a6c1a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "afb7f101-8d91-44e0-be9d-78536263fb4d"
        },
        "item": {
          "id": "8faa8d35-90f4-41da-8f8e-cb9ab35c3140",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e3066f47-5040-44b2-abc6-a3f3cbd30989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1cc2bcd7-0d35-4bc1-8a3b-0009f6bd6844",
        "cursor": {
          "ref": "b77ac63c-8102-4c6d-b61b-25926f101da9",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "78339c01-cff0-4211-9f1b-814b62ed7760"
        },
        "item": {
          "id": "1cc2bcd7-0d35-4bc1-8a3b-0009f6bd6844",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a7a9e979-67b2-4eb8-87cf-42b926837e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c8470dfe-85c7-469c-a8d0-960477148acf",
        "cursor": {
          "ref": "2292a6a0-6d3b-4303-b7d6-8779759b772d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e9de670f-21ca-4cd0-8453-2612bbedeaba"
        },
        "item": {
          "id": "c8470dfe-85c7-469c-a8d0-960477148acf",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "02b41b25-c3e6-4bd4-b5ca-ad87d3f160a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e91f04c0-8a11-4eb6-9729-f24cb1290ab6",
        "cursor": {
          "ref": "a607ba60-bc62-47fa-9ca2-17c4e58fd241",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "75f6add7-fed6-44ef-8500-0178a73eae8e"
        },
        "item": {
          "id": "e91f04c0-8a11-4eb6-9729-f24cb1290ab6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fcdeb7c0-caef-40a7-b177-14f918733c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "803e83e1-727b-457f-ad01-bcbe7af8f89c",
        "cursor": {
          "ref": "371c5628-45b9-4a35-ba55-fda4a11eba38",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7380a7df-0e0e-440c-9f10-8fc62b317e7f"
        },
        "item": {
          "id": "803e83e1-727b-457f-ad01-bcbe7af8f89c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "88d18b01-4f80-4c4c-92ad-9518f47f242f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "2f850daf-1091-4aba-a7ff-57e9ebd0d68e",
        "cursor": {
          "ref": "9a838393-1243-4963-aad0-e2d039ed1e54",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "40845249-fce4-4d96-a543-18bd4cf30660"
        },
        "item": {
          "id": "2f850daf-1091-4aba-a7ff-57e9ebd0d68e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "05465c24-aebc-4db1-80d2-741156acf37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "56ad23db-e5e5-4688-91b7-87782154287f",
        "cursor": {
          "ref": "084ce670-ed66-4c38-8e31-f0cb450d24a3",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2a1e00a9-9d6f-407e-908b-c2415c80ee3d"
        },
        "item": {
          "id": "56ad23db-e5e5-4688-91b7-87782154287f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bc51ea28-e8ef-4f4f-bafe-a316cf6120c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "49a33ae0-0322-4788-b0b8-6ccdb04d4b72",
        "cursor": {
          "ref": "dc5dcf06-b3f4-4f58-afc3-ad51bbbb2201",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "912ab16e-2fdc-4158-b5d3-dd372a2cf03b"
        },
        "item": {
          "id": "49a33ae0-0322-4788-b0b8-6ccdb04d4b72",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d26c084-efa2-435e-b10d-86a7addd3993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36066a70-d6c7-4652-a1aa-05e5fa84ba35",
        "cursor": {
          "ref": "4bdc92c5-81a5-4ccb-8ffd-d3ad7c7a1559",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b8529569-4f02-4dd2-9339-c61d4439e708"
        },
        "item": {
          "id": "36066a70-d6c7-4652-a1aa-05e5fa84ba35",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "12ebde06-aa17-4999-9347-188e5eb8ad11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e372d174-232e-4eb9-b337-75e36a86df63",
        "cursor": {
          "ref": "b8355f9d-f0a3-4415-83d7-664a3265a6ba",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "15604afb-550a-4218-8f76-adf069068e1d"
        },
        "item": {
          "id": "e372d174-232e-4eb9-b337-75e36a86df63",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e8b1a674-32c9-432b-81a9-6a277d72bf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfac221-1136-425f-b405-76aae6d3bee7",
        "cursor": {
          "ref": "1a8f95e7-95c6-404a-9609-0542913ae31f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "64bacb92-87dc-4997-80ca-3ab28a92dbab"
        },
        "item": {
          "id": "8dfac221-1136-425f-b405-76aae6d3bee7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6535b157-ac69-4690-95cf-2f6aa3d06c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2313a46-fdea-4259-baa3-31befaafbae6",
        "cursor": {
          "ref": "da3755db-44ed-4fd8-9186-52bcdb1b4f9d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "93bda977-a626-4543-88c5-114bfb4ff3a6"
        },
        "item": {
          "id": "b2313a46-fdea-4259-baa3-31befaafbae6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "49905db9-5a47-4e1d-92bb-1e096c18f71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e88fe4-9037-49fa-9699-0154fc61c1c5",
        "cursor": {
          "ref": "82fcbdd9-b359-4b2a-9703-1b5008674859",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6c8be283-d448-4755-923b-b329074f02be"
        },
        "item": {
          "id": "71e88fe4-9037-49fa-9699-0154fc61c1c5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d6887281-376f-4866-b526-b8dbfe2d617c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddf2fee-28dd-49fe-be5d-47fe5c8c12d3",
        "cursor": {
          "ref": "fe1c9e1b-d5a4-4496-a60d-ccb375aedd33",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fd96ada5-9bc2-471c-8ea8-cac9ced5d579"
        },
        "item": {
          "id": "4ddf2fee-28dd-49fe-be5d-47fe5c8c12d3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bbc0c0ec-1e52-4d40-af10-4be96c733424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38ae027-790a-4718-810a-db5be547f87f",
        "cursor": {
          "ref": "8aedbae0-2fd6-491e-947f-da950f5a2318",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "afe53747-7c36-4714-9dbc-e7925afd9296"
        },
        "item": {
          "id": "b38ae027-790a-4718-810a-db5be547f87f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a20a3c14-b466-4bbb-af26-23dc9543227b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4081292-c6ec-4c76-8a2a-6af84d01e5ce",
        "cursor": {
          "ref": "d8f302a3-2298-4a1f-b297-f84de8bd6e48",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1dc22a9b-745a-44e8-b634-2fdfa504de7c"
        },
        "item": {
          "id": "c4081292-c6ec-4c76-8a2a-6af84d01e5ce",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3733774b-c5cd-43da-9ddd-d3b50502e6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3ea470-7163-4cb6-98a4-2f157eb0e20b",
        "cursor": {
          "ref": "e7686058-6e64-43d6-b7fd-2da1d893ad01",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "294c4db8-3fc4-4f08-80b5-e2e13209a5fc"
        },
        "item": {
          "id": "0a3ea470-7163-4cb6-98a4-2f157eb0e20b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "736a61bb-3582-4f23-be33-6eb897285608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0850223-fe0c-4282-bf52-1b065382e1c5",
        "cursor": {
          "ref": "0c6f03a5-1d81-4775-8abd-9db9bceae465",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e33e1028-1354-4f84-ab99-b509c42bd15b"
        },
        "item": {
          "id": "b0850223-fe0c-4282-bf52-1b065382e1c5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2317c6d6-ada8-45f8-8105-2959a3370ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561a87f0-00eb-47e2-b56e-9d258ea389e5",
        "cursor": {
          "ref": "0c71d9ab-b542-48f7-9aeb-61b9f8d0c579",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f816f04f-894c-426d-adcf-f9f714a4e9eb"
        },
        "item": {
          "id": "561a87f0-00eb-47e2-b56e-9d258ea389e5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "55c7346c-4ea1-4f3d-b393-e8ed06c7bf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d39ece8-437c-44e1-beec-102b4db813d9",
        "cursor": {
          "ref": "5715df6a-a7fa-4c17-80d4-75d14e7a9895",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4280a48e-4f13-4c3b-8e04-f43d653ee195"
        },
        "item": {
          "id": "4d39ece8-437c-44e1-beec-102b4db813d9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e1c6b7a1-9656-489c-8727-858770d19a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5f8835-22cf-4ec2-872b-cb79e103bce9",
        "cursor": {
          "ref": "ce5e11d0-4923-46a6-8d20-057f85ccf1e5",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "01630f53-b36a-404b-b6ac-c5899ae0faf9"
        },
        "item": {
          "id": "fa5f8835-22cf-4ec2-872b-cb79e103bce9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "22b2fc6a-ef90-4060-8420-c32b1bbc270a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e572918-3848-4831-bba7-49d182af8584",
        "cursor": {
          "ref": "8cf8d96e-4823-48d0-b356-b36ceafdecf1",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f9ec085e-cc4f-458d-babf-abfa8b8e2d01"
        },
        "item": {
          "id": "3e572918-3848-4831-bba7-49d182af8584",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c7230dfc-d564-4439-ab72-7f2ccc0720df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c87bd8-2b4f-42b5-b1e5-863e72c31ca2",
        "cursor": {
          "ref": "640d3ad0-ae66-4d46-9fd2-f21e071f1c46",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1a2619e1-de9d-4af3-8fdb-56d642636fd1"
        },
        "item": {
          "id": "04c87bd8-2b4f-42b5-b1e5-863e72c31ca2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cd11aee4-872b-4c9a-a496-4f8b71418a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9665058-f579-4034-a7f2-baae1248e846",
        "cursor": {
          "ref": "23a30254-b609-40ee-ae76-89d6ce7af83f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "94ce37a7-9f07-4c56-a209-44fab1fd4828"
        },
        "item": {
          "id": "d9665058-f579-4034-a7f2-baae1248e846",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "df1aa95a-fd2c-4061-b34e-1bffe97e31be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b87904-aa27-4211-8481-b20e8651d386",
        "cursor": {
          "ref": "c4e8f69a-8308-4f10-8878-5a7fa6058136",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6d624c19-d77c-4776-93fe-ef7e43fdf229"
        },
        "item": {
          "id": "17b87904-aa27-4211-8481-b20e8651d386",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b596a8c1-b9df-4035-8c36-e265b691c30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c3bd83-8ac9-49a4-8a75-3ccd5b0cfdfd",
        "cursor": {
          "ref": "e8c085a8-a8b6-42db-b1dc-612b032eba35",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "114c0679-a982-4231-910d-9792ccfd75d7"
        },
        "item": {
          "id": "a8c3bd83-8ac9-49a4-8a75-3ccd5b0cfdfd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "08a268e9-6faf-4036-a570-caf38ca56c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2773574-526d-4955-ab96-edb921791e29",
        "cursor": {
          "ref": "7e2793ff-69d3-4dcd-bbd3-29dcb66a1929",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "87d5fcf4-394f-4552-9d93-47c3e512eb93"
        },
        "item": {
          "id": "c2773574-526d-4955-ab96-edb921791e29",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "93b51ab1-975d-4aef-911a-fe0b76b353ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60991343-d60d-423b-94ed-2a180252cade",
        "cursor": {
          "ref": "ed35e787-e6bd-4454-856f-b336b28ee4c0",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b58b77b1-4f26-4333-8ee3-3af06c26c19e"
        },
        "item": {
          "id": "60991343-d60d-423b-94ed-2a180252cade",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "64c4343f-e733-472a-b591-a73ef25e88a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f5ac52-6477-49d9-b425-9883d007b7d3",
        "cursor": {
          "ref": "52e45867-5101-4917-9872-50995fac8032",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eb8fd533-ed39-4555-bf3e-ab77c86b7e3c"
        },
        "item": {
          "id": "37f5ac52-6477-49d9-b425-9883d007b7d3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "de79fbf0-b3b1-45bb-a4c4-6b89516b8fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9fb4d0-03d2-4ac2-beab-83f33d4e1236",
        "cursor": {
          "ref": "c3b99f64-5324-4223-994d-6695f0d96639",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "af21b094-f1f2-46cc-9603-91506df648f5"
        },
        "item": {
          "id": "6f9fb4d0-03d2-4ac2-beab-83f33d4e1236",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "491e6cab-bb03-40d4-a5c1-c840a0edb3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c832b19e-a133-48b1-8af9-524c0ff36117",
        "cursor": {
          "ref": "100388ea-59ff-4653-be13-de59dc8f8e94",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8da8698c-9452-4d1a-8f7e-722ae4a77115"
        },
        "item": {
          "id": "c832b19e-a133-48b1-8af9-524c0ff36117",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bb743ece-206a-43ad-8d97-636a81ed51f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9ebd0b-a76a-4379-b104-6d9f1979ffd0",
        "cursor": {
          "ref": "c17aa2c3-efa2-4947-93d2-666fbc0f3408",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d65488cd-6655-44b5-8814-77a44d9f8710"
        },
        "item": {
          "id": "8a9ebd0b-a76a-4379-b104-6d9f1979ffd0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f68141ac-473c-46ff-8026-3bb5406ee87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a37c10-67ff-4124-98a2-ffd17da05e83",
        "cursor": {
          "ref": "47f51042-4e49-414d-93f5-5edb02dfba45",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b3edadd2-f87d-416f-98ef-b9014f5307c4"
        },
        "item": {
          "id": "c8a37c10-67ff-4124-98a2-ffd17da05e83",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d0c16b6f-1c90-4339-896c-cf30948e5593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b370f40-11d5-43ec-b878-e616a639ec62",
        "cursor": {
          "ref": "ace58370-6c33-408a-9570-92b874b8a135",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "95797d23-5add-4cea-8a34-515ae8a1898c"
        },
        "item": {
          "id": "1b370f40-11d5-43ec-b878-e616a639ec62",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b6b6bc5a-2984-46e5-888d-20f3396beaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ccba80-9af2-4123-81ff-339f85f0173b",
        "cursor": {
          "ref": "e395eabf-14f9-4b08-a97c-9b3547c835f1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d43b31ec-6209-4f79-8289-3ebf1ba4d73f"
        },
        "item": {
          "id": "a1ccba80-9af2-4123-81ff-339f85f0173b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5c9ded01-7b80-4aa0-9a82-fc8682e91761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34408146-4bb2-4e52-bb89-5ddb51ffa702",
        "cursor": {
          "ref": "9c4e017d-74fd-4925-a29a-36083693f5f8",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2ae28066-7407-4947-af42-505ce0e57e42"
        },
        "item": {
          "id": "34408146-4bb2-4e52-bb89-5ddb51ffa702",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f7ce4b18-1490-48d5-bc13-9737367f100c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e9fba9-95f4-47ea-a0b8-0236a110537d",
        "cursor": {
          "ref": "3b0f82b5-0b74-4494-afd0-e9732e672ec2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ef03ec03-af4a-4c18-b7ef-0c1e4c7418ab"
        },
        "item": {
          "id": "a5e9fba9-95f4-47ea-a0b8-0236a110537d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "da02825f-cec0-4778-8de8-678e8f2180e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76313104-caf1-42dd-9e48-990f8bfb0eae",
        "cursor": {
          "ref": "baee51b8-4124-4703-9602-cab81238a3c3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d9078e5d-7770-417a-8da3-7df772ca5d14"
        },
        "item": {
          "id": "76313104-caf1-42dd-9e48-990f8bfb0eae",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f231b1b1-5d14-41bc-a238-9da84f9d2c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9513e13c-829e-4a39-b48e-1842b894739f",
        "cursor": {
          "ref": "733bef8d-c3d6-4ef2-a379-aed522a73fa4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "06159bf5-1996-42f8-8a8a-22440a575617"
        },
        "item": {
          "id": "9513e13c-829e-4a39-b48e-1842b894739f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "981eae2f-73f5-45b7-9290-cb20e717b873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01b6415-018b-4fea-8a3a-9ead43d0b71b",
        "cursor": {
          "ref": "03f800f3-3841-4700-8aed-5d87e3d1792c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a4d11d10-82be-437d-bfd9-7cb267287bc2"
        },
        "item": {
          "id": "c01b6415-018b-4fea-8a3a-9ead43d0b71b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5c0cdcb7-32ff-44ef-ad69-b7e6f4c14db4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e92753-d62f-41c9-a970-bef71da93848",
        "cursor": {
          "ref": "410742a9-02a4-41e0-82c5-ca0ed701c555",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "76cc62fc-17ff-4f07-8687-997e82c7bc58"
        },
        "item": {
          "id": "56e92753-d62f-41c9-a970-bef71da93848",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "edc68138-e642-46c9-9f54-098a0103fc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173c87af-a264-491c-b765-8ad186d9de45",
        "cursor": {
          "ref": "53e46dbc-8531-40ec-848a-ed561c74e475",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3e6274ce-5d81-4456-a1b0-b36be3b4a221"
        },
        "item": {
          "id": "173c87af-a264-491c-b765-8ad186d9de45",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6d7c9e84-6e42-43b3-a272-1704a2c5e641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8d0d11-9b71-4b7a-afa3-ab6d3ddc9787",
        "cursor": {
          "ref": "aa2ec093-cd97-4687-8eeb-3d96379fbe8f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cfb13b53-fea2-4787-8163-885347527189"
        },
        "item": {
          "id": "8c8d0d11-9b71-4b7a-afa3-ab6d3ddc9787",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fc2a55bd-7124-4fde-91ff-b77ee1dffbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8658902b-6f18-45e1-903a-6e8b8cf2aac8",
        "cursor": {
          "ref": "13b610c4-f0b3-4e23-8440-cb3861d75848",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9daa4a80-80a3-4102-953b-bae72f68b44a"
        },
        "item": {
          "id": "8658902b-6f18-45e1-903a-6e8b8cf2aac8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b6d50222-cb7f-44de-b91b-59762af86736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66f59bc-c8ac-43d3-a382-25d37ab040be",
        "cursor": {
          "ref": "efdd8107-84d5-4a32-a716-d58219884669",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e281f67a-afab-4bcf-bc09-ce08833a806e"
        },
        "item": {
          "id": "a66f59bc-c8ac-43d3-a382-25d37ab040be",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c98b0588-dfd2-43f3-ae83-e30a2a3de4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5643fe6a-259e-4f38-ae51-b7336ee11a33",
        "cursor": {
          "ref": "e5383803-47eb-4055-a983-68ee22753761",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ceb9602e-b26c-4a77-8983-2e516e254a01"
        },
        "item": {
          "id": "5643fe6a-259e-4f38-ae51-b7336ee11a33",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dd2c8d1a-440e-4d2a-8271-264e6d20999a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5544e38-a0eb-4838-8d94-e1028fad63c8",
        "cursor": {
          "ref": "629428f1-3ad7-4d56-b8ce-349f06a5934a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dde780f4-bf33-4476-84b0-43c000dc2449"
        },
        "item": {
          "id": "b5544e38-a0eb-4838-8d94-e1028fad63c8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "60d2c2f4-ac79-44c8-bc10-dc10aab34ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7363738-7b95-4d71-9769-bd58938e0a1f",
        "cursor": {
          "ref": "8da09620-666e-4ba1-97ea-73e07b27934f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "aad170d0-53d1-4a62-a1ac-78ff93a8b635"
        },
        "item": {
          "id": "d7363738-7b95-4d71-9769-bd58938e0a1f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1d59d9e7-1ce7-44e0-b7db-b951cae310d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9aa8c0-9dd7-408b-b233-fc7630d012f3",
        "cursor": {
          "ref": "7b086b73-ef64-4e20-a078-32a4c2300153",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1f3307d4-26bf-4294-a7cd-fdac727a49a3"
        },
        "item": {
          "id": "0d9aa8c0-9dd7-408b-b233-fc7630d012f3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5c612f18-33d2-4077-a8a9-c7121e6c5ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806c6a55-62b7-4aa2-b6fe-30f1279d20fe",
        "cursor": {
          "ref": "4b48d84e-f2d6-4ea5-b24f-5aa2cb4b9c5e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1a3b621e-25b3-4c42-8c07-f94b9ee3d712"
        },
        "item": {
          "id": "806c6a55-62b7-4aa2-b6fe-30f1279d20fe",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "863b4593-edbc-45d5-a2af-67049ce4ff97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610ac1b3-0e60-4597-8553-b2b6258a3058",
        "cursor": {
          "ref": "3a427c63-60a3-46f7-900c-6ef47cb97ee8",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0f07bf1e-db7b-4483-a762-efeb832d4572"
        },
        "item": {
          "id": "610ac1b3-0e60-4597-8553-b2b6258a3058",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "73420294-dfab-4117-80da-860c58e24320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0845c952-9e97-4a4b-87d3-506c58e877ec",
        "cursor": {
          "ref": "ab510eba-b7de-42fc-a7c4-7263ddd4bf6e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d8270064-aa71-4835-bc66-06974bdb2981"
        },
        "item": {
          "id": "0845c952-9e97-4a4b-87d3-506c58e877ec",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "597db878-9ecd-49a7-b91a-e56f5794f97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63197b11-c3eb-4a56-935e-f38e9f216db6",
        "cursor": {
          "ref": "bfd77691-d79d-41dd-865c-6ef62c56829f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f6fac07a-150d-4a94-8a5d-c2f0c13bc6f5"
        },
        "item": {
          "id": "63197b11-c3eb-4a56-935e-f38e9f216db6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1afc4d81-d3a4-433a-b61c-bf7fb0391438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7457d5ec-ea66-451e-9798-c2acf47cc78c",
        "cursor": {
          "ref": "d30eccb4-b38f-4ca9-b1c0-228620e81600",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2f66bb23-5a03-4bab-b7c1-ce481469b0a7"
        },
        "item": {
          "id": "7457d5ec-ea66-451e-9798-c2acf47cc78c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "52f8e579-9257-4df2-bba3-6553a86b0462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8a8f0c-69c0-4996-8dfc-eb8c8adcccab",
        "cursor": {
          "ref": "95788393-07c7-4762-8dfd-4f6aec462711",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "73c870d7-38ff-4170-8494-34a9189589f8"
        },
        "item": {
          "id": "ee8a8f0c-69c0-4996-8dfc-eb8c8adcccab",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "399e0884-5d6c-43b8-90b3-55d17b9ddb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65af9850-90ce-414b-93f7-ff88aa5d0f70",
        "cursor": {
          "ref": "f513ffcf-1631-4e17-92e5-87c13aa370b7",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "055e95ec-9dfd-4436-b200-0b658f939c21"
        },
        "item": {
          "id": "65af9850-90ce-414b-93f7-ff88aa5d0f70",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6755f6e9-27ac-4153-b3cb-84d0392ec1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a1a3e7-907b-415b-8179-a26bdef0e929",
        "cursor": {
          "ref": "f5d33c71-fe94-48ad-81bb-b30801b5faf9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6e6a7f3f-f7e2-4625-ba9f-52b4a4ec0546"
        },
        "item": {
          "id": "46a1a3e7-907b-415b-8179-a26bdef0e929",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e020e5c9-2596-43f8-a8b3-a3af857d1085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e53aab-931b-404b-9c26-79b2b1dc7171",
        "cursor": {
          "ref": "88e27cfc-dda3-4f0d-b2fe-44d3dfa8dd4b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8092f796-8180-4266-bdf6-34837271dd52"
        },
        "item": {
          "id": "e4e53aab-931b-404b-9c26-79b2b1dc7171",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6c9c04ac-21a7-4b8c-86c9-70c63615aeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19fb701-4cfa-42e6-b166-e1e2dbd9da71",
        "cursor": {
          "ref": "b5dddc57-3559-4146-8230-b7d7ed740126",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9a06f5df-2f5d-4d6b-abc1-7dc852869256"
        },
        "item": {
          "id": "d19fb701-4cfa-42e6-b166-e1e2dbd9da71",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "52d00229-cc16-437c-a1f1-42bcbeade6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20f9acb-4b87-40a2-a096-d4540ba00aae",
        "cursor": {
          "ref": "f82cc268-817c-4005-acad-e0049c87e1ca",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b35218e2-6d5b-45c9-a4eb-3e83efddc263"
        },
        "item": {
          "id": "b20f9acb-4b87-40a2-a096-d4540ba00aae",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9c84899e-3f1c-4211-9f8b-abc816fc7ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06060a3d-fbc1-4e0f-91f0-f99ee11b7604",
        "cursor": {
          "ref": "ee7a490a-6d4b-4d1a-9bea-5cae06b586fe",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bfa12318-68b5-4e08-a70b-77e971b61b2f"
        },
        "item": {
          "id": "06060a3d-fbc1-4e0f-91f0-f99ee11b7604",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fed36cc2-8165-40a6-8344-ae7cb3078f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966c687f-8fd0-44e5-ac9e-6073e3852ef1",
        "cursor": {
          "ref": "d6bb956a-5dfb-4321-b2ed-011680ad9e89",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5bc4ead0-7337-4e2d-b625-d38aa091a8c2"
        },
        "item": {
          "id": "966c687f-8fd0-44e5-ac9e-6073e3852ef1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7bcc0c36-f81a-419e-8d55-3f59aa6eb20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0665941c-dfb2-44e6-b2c5-e709b7877fbf",
        "cursor": {
          "ref": "3ac046e3-8163-49c3-862b-c0926e8a7f58",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9132fb3f-ccda-47ac-a4e0-7de4b464a327"
        },
        "item": {
          "id": "0665941c-dfb2-44e6-b2c5-e709b7877fbf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d5bbac03-4c18-4cf8-8f02-86424404d72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf891c3-328a-4a05-8938-cd95447c93d2",
        "cursor": {
          "ref": "405c74b0-fe7c-440b-8446-39ea7ae9f428",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ec664760-4f6c-4078-a430-2763842a1868"
        },
        "item": {
          "id": "abf891c3-328a-4a05-8938-cd95447c93d2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "607617d3-44c8-4965-8ee6-c2939b8047ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4c63c2-da4a-4ee2-89b4-6c1d8e708b6a",
        "cursor": {
          "ref": "ed71c2e7-8e76-4fe3-a2d5-0c83454786a6",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8cd3cab3-e1f1-4b65-b221-7f2eb148f71c"
        },
        "item": {
          "id": "0d4c63c2-da4a-4ee2-89b4-6c1d8e708b6a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c73607a1-2d27-428f-999f-21af39c19555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbd4866-f399-4b77-847c-88031ff6571c",
        "cursor": {
          "ref": "ef06dc1e-94dc-46c0-a5a6-f11972d661f1",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "babe8288-d409-4934-a79a-b7a1fc4ecf39"
        },
        "item": {
          "id": "4bbd4866-f399-4b77-847c-88031ff6571c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8becd95b-7783-4cc9-9861-277b0d9dbfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fdf231-9743-4946-b182-9aecd2350718",
        "cursor": {
          "ref": "c14c9190-e5ef-4906-9eae-6095606a1004",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "42131aa4-2304-432b-bdb4-6365d0650f84"
        },
        "item": {
          "id": "a3fdf231-9743-4946-b182-9aecd2350718",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c68d7ccf-e890-4180-8149-6eb25e818dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00d8c71-9414-4c71-822b-e2d1329f4cb7",
        "cursor": {
          "ref": "61cf68c2-c779-4bf4-8d0e-73bd748ac8db",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f8e4360b-6313-4c8f-a823-16209bbf678f"
        },
        "item": {
          "id": "a00d8c71-9414-4c71-822b-e2d1329f4cb7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "901e5caa-3581-45de-9480-2ca1b0f42119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bdfdff-df43-4a69-9a5f-46cd8565ca7f",
        "cursor": {
          "ref": "e7463e22-1f9c-4994-bb11-675a6da262d1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c9e79a46-06a7-4c4c-8f3a-2ee1bbf3d6ed"
        },
        "item": {
          "id": "35bdfdff-df43-4a69-9a5f-46cd8565ca7f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a6cb6810-19d5-4550-b6fa-06945a2b2303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6310ebea-e6a7-413f-b3c6-6f509d570ce1",
        "cursor": {
          "ref": "5d5e8ac5-2f0d-4ce2-8388-a58a78ecd442",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "025d6b05-4d09-4ef9-a2d0-533ad6bdff1e"
        },
        "item": {
          "id": "6310ebea-e6a7-413f-b3c6-6f509d570ce1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ea9e7777-3287-4e9d-ac21-2abd01d5ca15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335d3191-b87b-42b9-bbf2-350ad67da868",
        "cursor": {
          "ref": "9fce7e1d-9b98-4394-b940-a91ae9d39aa4",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "586557ff-c0fe-455d-a8ed-7c4cf9592519"
        },
        "item": {
          "id": "335d3191-b87b-42b9-bbf2-350ad67da868",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "693658a5-8158-4759-bf10-ac1b781810c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfc4035-7486-41f0-aa0e-e424f31ecb4f",
        "cursor": {
          "ref": "c0e78a7b-61c9-42c1-a229-20dc84ee354a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7f910e93-cffa-4809-a4e2-81a8eaae62ae"
        },
        "item": {
          "id": "fbfc4035-7486-41f0-aa0e-e424f31ecb4f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0a033093-fe26-4658-b82e-e4b429ec4b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1198801c-5223-44e9-8c88-60cb441a72f0",
        "cursor": {
          "ref": "3f52d90a-3701-4712-9369-69a5268d1aac",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fd63d258-3c59-4cda-b3c3-035f15d49ec3"
        },
        "item": {
          "id": "1198801c-5223-44e9-8c88-60cb441a72f0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8e22f5be-2eb2-4568-8083-522f52727722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ff6a7a-4b8a-412b-9039-4316ac2caefc",
        "cursor": {
          "ref": "339871a3-3c98-4107-b4de-7e229aaf330b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9229869f-3ddc-42b8-9dd8-66d38d8822c6"
        },
        "item": {
          "id": "69ff6a7a-4b8a-412b-9039-4316ac2caefc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "082c867c-a934-4e1b-98a3-a5f66d91a4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e191b7e-0f77-481f-a522-cba79ed7c051",
        "cursor": {
          "ref": "02f292d3-9e6a-408a-9ae2-a13d9183d0d8",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "040e18bd-efda-47f7-b08d-81cd37dc9cd4"
        },
        "item": {
          "id": "4e191b7e-0f77-481f-a522-cba79ed7c051",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e324e1d1-acc9-4997-ab3a-572f0dc23ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cbe587-f22d-4cf1-88dd-1a9fb91fe0a4",
        "cursor": {
          "ref": "fe2e8507-3b0f-4df3-952e-db6cdbfd8501",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d9c86394-e3d5-4c8b-900c-c07d27ec21b5"
        },
        "item": {
          "id": "74cbe587-f22d-4cf1-88dd-1a9fb91fe0a4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f8dc23da-5fec-4973-b6df-1e9393258550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e161d91-4676-4a21-be60-ad12b5cf0aba",
        "cursor": {
          "ref": "b8e0995e-b44f-4b52-8131-7b490e0c9ae7",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0887ed62-fc93-4cfc-b5a3-bcc59fca92af"
        },
        "item": {
          "id": "5e161d91-4676-4a21-be60-ad12b5cf0aba",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0f38ca88-86c9-4008-a4dd-0b1619757102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c2efd7-e74d-4ba1-939e-16151f914077",
        "cursor": {
          "ref": "f59b9bb5-d965-4258-9d97-3c589f959c2e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f309eec8-6ce0-478f-ae16-d9d3c374dfc8"
        },
        "item": {
          "id": "a0c2efd7-e74d-4ba1-939e-16151f914077",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3190da92-fb2a-4e86-b902-24407a8ce8bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4745b62-7b9f-4e56-b671-62a82b0e0a62",
        "cursor": {
          "ref": "225294d6-07e2-4276-8734-3561fbd6dede",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c9fc9620-2a83-4f49-ae1b-07ebbb3eb98a"
        },
        "item": {
          "id": "a4745b62-7b9f-4e56-b671-62a82b0e0a62",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fc3a0372-e26a-4d04-8439-b3bdfaa9aa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b18f3c-6ecc-43d6-9cd7-8c3e3c003173",
        "cursor": {
          "ref": "2ad9b99b-eaea-4d47-8423-8430fb274381",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "706f9975-e4c9-4e5d-8921-aebb723d2510"
        },
        "item": {
          "id": "61b18f3c-6ecc-43d6-9cd7-8c3e3c003173",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bc7d04eb-aea9-46a7-beea-51e165ddbd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4e0d55-2bb1-4e29-a59c-3aa75c4ece90",
        "cursor": {
          "ref": "25a51086-9906-4468-b61c-c39d116192a3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b297033a-f98e-46c1-b600-0e62c80f632a"
        },
        "item": {
          "id": "2d4e0d55-2bb1-4e29-a59c-3aa75c4ece90",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fcd78e8a-241c-4e95-8b62-a8ccf732f0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b74054-cee4-4bdf-a67d-a21d0205bd0b",
        "cursor": {
          "ref": "e0e53c79-43db-4579-a282-6e3b596e1db9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f09eaa65-4f13-4202-ba55-4267cc2a37d4"
        },
        "item": {
          "id": "f9b74054-cee4-4bdf-a67d-a21d0205bd0b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "85b5eb75-fc26-49c0-9017-f3858f82e032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1da2db-740e-4e84-af0a-d8b18072df5d",
        "cursor": {
          "ref": "e178c571-356c-419f-8f8c-689d70da1cae",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a220486b-4bba-4951-b8fb-aba0f3b8fe51"
        },
        "item": {
          "id": "af1da2db-740e-4e84-af0a-d8b18072df5d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ebd2bb9c-3608-4465-af4e-2f5f63a85786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c88a533-343f-46c3-8982-ca32d851d9a9",
        "cursor": {
          "ref": "c9d79570-08bb-4213-a381-ca36dce1dad3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d8d631ac-7a69-4f5b-916e-c9f5dba52a17"
        },
        "item": {
          "id": "1c88a533-343f-46c3-8982-ca32d851d9a9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8153d8d6-e6e0-4f94-ba3a-26f39b40d0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af86013b-23b0-4d4e-8191-38ded0bbd79f",
        "cursor": {
          "ref": "62b58656-c01b-4696-9227-09180b0e7004",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "50d76278-6df6-4d93-9a7f-346946c33da7"
        },
        "item": {
          "id": "af86013b-23b0-4d4e-8191-38ded0bbd79f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9d1accc7-fffd-40de-acef-9318ed6913e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fd1e45-acd2-4be5-b6e0-ac9110df2213",
        "cursor": {
          "ref": "f8276eff-d053-46c5-b249-1d1d0a670b28",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d18eee7f-2769-4db3-a6a3-c2e7cdfb2c0e"
        },
        "item": {
          "id": "29fd1e45-acd2-4be5-b6e0-ac9110df2213",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3a9ac1c9-4f17-4015-a16b-f940c475ffeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501a4f82-3272-434e-b1d2-4d870d688d98",
        "cursor": {
          "ref": "b966e7c5-4331-459a-86c5-b9ea00267307",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e2f16ccb-f92d-4381-a865-f07c67e36839"
        },
        "item": {
          "id": "501a4f82-3272-434e-b1d2-4d870d688d98",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "48423286-a55e-45c0-aac4-04147a31891e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db9cb8e-4745-44f9-84f7-83c0905d22c0",
        "cursor": {
          "ref": "33f44375-ea45-4a57-8c68-790ffc02088d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0cec7592-d3f1-44d9-bb87-938db693bccf"
        },
        "item": {
          "id": "7db9cb8e-4745-44f9-84f7-83c0905d22c0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ff5ccc15-653e-46c3-b580-154486cda6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353c36e8-e934-412c-ab12-42fd2d7c836d",
        "cursor": {
          "ref": "a6621c10-b44b-4ad3-9cb4-a2994d38cc6f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2dd20765-d7a3-46e7-b689-9add967eec83"
        },
        "item": {
          "id": "353c36e8-e934-412c-ab12-42fd2d7c836d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7d6b4a08-fa86-4d5d-b7b1-37ae638a1637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ec6e38-d4b2-4074-8205-2a50c2f14811",
        "cursor": {
          "ref": "665e9e7b-b9e4-4ed8-9fed-1d56aacacae4",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1813b320-a068-46f0-be76-9ae0f585b4af"
        },
        "item": {
          "id": "64ec6e38-d4b2-4074-8205-2a50c2f14811",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "11a88c81-3afc-479d-8e28-e359783a5d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c590168-1e6b-4528-a41b-ea8fe487e7bf",
        "cursor": {
          "ref": "0bc78bdf-618d-4f0c-8669-3dc30b661dc1",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "433c4889-e8dc-403c-8e5b-3e0e846164fc"
        },
        "item": {
          "id": "4c590168-1e6b-4528-a41b-ea8fe487e7bf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2a16b287-5364-4114-bd96-3d89cbf992d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ec9f7e-a306-42af-ac39-3221f68f285f",
        "cursor": {
          "ref": "84109fbc-10ca-4665-acd3-56d9d7759395",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "218887a5-457d-43b3-a811-751e22e15218"
        },
        "item": {
          "id": "e8ec9f7e-a306-42af-ac39-3221f68f285f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "29b79586-e578-41de-a0dd-c3ac60cc130f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8b2781-9036-4972-a1cb-ac558fb8fa92",
        "cursor": {
          "ref": "7f94fde3-cebe-443f-99d1-d97167ba07ee",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9d5e7646-0d76-4065-91c8-950dac5b16d4"
        },
        "item": {
          "id": "ac8b2781-9036-4972-a1cb-ac558fb8fa92",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "40e56aef-6771-4554-a7a1-8d212bffd8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2ae170-0ee9-4661-b9a0-d944dccec1f4",
        "cursor": {
          "ref": "46914387-b7ef-40fa-bad7-28cad4f2212a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1d779771-1bf9-4735-b9f7-d181ba9670eb"
        },
        "item": {
          "id": "0b2ae170-0ee9-4661-b9a0-d944dccec1f4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7a39feb3-601b-47e0-be73-eee74f143e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dec4c7c-f479-444a-95a5-7a74aa31fec5",
        "cursor": {
          "ref": "426615da-7b60-4285-912b-c65b9b7189fc",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "921950c9-c3b7-4a1c-b82d-c4f4bc8b07ee"
        },
        "item": {
          "id": "1dec4c7c-f479-444a-95a5-7a74aa31fec5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d3b02f04-9be0-4dd6-8f51-1f46e1ce1932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26525d2-0f66-45fc-9fbb-2d9767539645",
        "cursor": {
          "ref": "abb34d7f-1943-4170-b366-fe2e8a99665b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "13a1a9db-717e-47cb-b105-a4d35ca17368"
        },
        "item": {
          "id": "a26525d2-0f66-45fc-9fbb-2d9767539645",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bb85e17d-d0a0-4687-a4ce-526c507c8acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4990c972-cc03-4990-a345-356be4f63064",
        "cursor": {
          "ref": "7eb95797-8d62-4954-8c46-75dfe0971391",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "badbbcc0-3138-4172-b8e8-62908b456bc2"
        },
        "item": {
          "id": "4990c972-cc03-4990-a345-356be4f63064",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "760baea6-463a-48d6-ad88-7ed95d4a4eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0a380f-6a27-40be-b510-3a8c80041859",
        "cursor": {
          "ref": "1beac21c-c08b-4b1d-afad-125ca97db819",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c315fb31-d479-466e-8537-b544c9e4729f"
        },
        "item": {
          "id": "eb0a380f-6a27-40be-b510-3a8c80041859",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "067b6703-114d-4ac4-9576-24c2f317e1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66aab338-e825-4e29-ad57-ddae54f5287f",
        "cursor": {
          "ref": "32f4507c-4035-4ea8-8679-d0310ecb8751",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bc40b665-1108-4545-b004-752c7e483668"
        },
        "item": {
          "id": "66aab338-e825-4e29-ad57-ddae54f5287f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e85fa836-edd6-40b0-8e7d-19538f333cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ac6f87-9735-416e-8d33-251f52081fab",
        "cursor": {
          "ref": "833bb4cb-c9b5-49f0-b44e-092c7a4f3270",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ee155cb4-4345-4d70-873a-0a93e041d59c"
        },
        "item": {
          "id": "74ac6f87-9735-416e-8d33-251f52081fab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "00e936a4-e087-4c35-ae6c-598bff27b732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe465af-8c83-4289-9172-31eb661f2103",
        "cursor": {
          "ref": "9c5181a1-2986-4432-9d27-3d549c764d8c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "119f5b24-51d1-41cb-b481-dd9893715549"
        },
        "item": {
          "id": "ffe465af-8c83-4289-9172-31eb661f2103",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cfa3030c-befd-4327-ab7a-26ded6d59d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fecc0e6-1b93-413f-bcc6-5f741cdd3ede",
        "cursor": {
          "ref": "36bfd465-1c53-43c6-99ba-3a73e98e167c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0715f371-8093-4436-96ec-7613a82b3e8c"
        },
        "item": {
          "id": "7fecc0e6-1b93-413f-bcc6-5f741cdd3ede",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "03a30ade-cb7e-4f80-ab25-83caadf80757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac9d4a6-5765-477a-b49b-269634c4423d",
        "cursor": {
          "ref": "cbb6cb46-4116-4afe-b490-7d042d1eed8c",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9c8ab898-eb0c-485c-b796-c67377971260"
        },
        "item": {
          "id": "7ac9d4a6-5765-477a-b49b-269634c4423d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bf3e23a0-ad5f-4647-a08c-af5d7c4c4e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a64ced-60f6-46cc-9836-d5a5c3c9a64f",
        "cursor": {
          "ref": "17e274fe-d76b-447d-9657-92fe8fc36da6",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "760ec254-7ade-4819-b952-2060b7b8a905"
        },
        "item": {
          "id": "d0a64ced-60f6-46cc-9836-d5a5c3c9a64f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "00a1526c-29f8-41d6-9275-42d0994c60aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb79b4e-594f-4e62-b53c-a5b260614ae1",
        "cursor": {
          "ref": "d3d54941-3d1d-4982-839d-8ca6333b5373",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "10710f94-168e-4d58-a313-cec0a5df36a1"
        },
        "item": {
          "id": "8bb79b4e-594f-4e62-b53c-a5b260614ae1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "86d07bea-30d0-4652-be9b-fd87f96c52e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f22676-5342-4b8d-9d47-5c9a643a435f",
        "cursor": {
          "ref": "c4aa11f4-27b9-4a93-8eca-abd870056d3d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bb825a0b-4b58-4bdb-a20c-6168efd515ee"
        },
        "item": {
          "id": "38f22676-5342-4b8d-9d47-5c9a643a435f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "28103582-ad6c-4cc4-9ef7-db7d1f1c3104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff704c2-6985-4e06-b067-8116c84b5b65",
        "cursor": {
          "ref": "e7bdabdf-ce8f-49cd-ba0e-e4e63cc41d4c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "56809b44-7072-41a5-9d70-1580e0fc651b"
        },
        "item": {
          "id": "4ff704c2-6985-4e06-b067-8116c84b5b65",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3ba1f91d-8eff-4e90-a659-5f68b50e3cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ddf7ca-0410-4102-b186-94d182e3e1a6",
        "cursor": {
          "ref": "5d06f8a7-95b7-422f-b865-9cdbbd07a626",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f39d4560-c974-471e-9ac3-2897fa092fa4"
        },
        "item": {
          "id": "a8ddf7ca-0410-4102-b186-94d182e3e1a6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "38adfcff-7f45-495c-9f15-d3fc3ad5e5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81228dee-f754-491a-8b4c-042df02e77ce",
        "cursor": {
          "ref": "598580c7-e559-44d9-ba00-b345c881863e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f484b643-d42b-4a50-b39d-d0056f9148f7"
        },
        "item": {
          "id": "81228dee-f754-491a-8b4c-042df02e77ce",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a92d4810-4caf-4c64-9409-e32d20f9d97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcfb6cc-79b3-477b-b189-66afc76c8de8",
        "cursor": {
          "ref": "b89baf93-0941-499b-9f91-62ef0a1fb211",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b71d28b3-daf8-4eb0-87d1-56a3d7bff470"
        },
        "item": {
          "id": "2fcfb6cc-79b3-477b-b189-66afc76c8de8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "10df3ee4-407a-4415-8183-7af15a16cd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767a570b-1b66-4bc2-a1f1-a4faa9c6fc5d",
        "cursor": {
          "ref": "cfd0ea68-ad43-4e92-adff-1be5a802de49",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "935e2693-5648-41b5-b39e-a1fb7d90a9fb"
        },
        "item": {
          "id": "767a570b-1b66-4bc2-a1f1-a4faa9c6fc5d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "71e81622-032f-4c6d-9811-0c349df16511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97be30d8-0713-4e98-8ce6-79a079a3ca0e",
        "cursor": {
          "ref": "e981d194-2747-4e3e-a05b-0b36c36db9a9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7ff1a944-da0e-4199-b05d-870735f48c7a"
        },
        "item": {
          "id": "97be30d8-0713-4e98-8ce6-79a079a3ca0e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6cfa773a-4455-4c27-9c43-46ea3ade3e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a785ef5-a3fd-4d2a-b261-93cecc5ce265",
        "cursor": {
          "ref": "cd3c042d-984c-4dc1-9518-8808cd009a32",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "80f9bbb9-b90b-4d5c-8189-b425cda74e04"
        },
        "item": {
          "id": "0a785ef5-a3fd-4d2a-b261-93cecc5ce265",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b065dfe4-b6ec-499c-b4c6-33e548ebf692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec786a5-006f-40d1-93fb-cfe4334741cd",
        "cursor": {
          "ref": "cfb6c4d5-99cd-43e6-890f-3d980c241f98",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4d304e4e-0e7f-430d-809a-c1a2db7bcfd9"
        },
        "item": {
          "id": "fec786a5-006f-40d1-93fb-cfe4334741cd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f42ee673-8c84-4e3c-88c8-d83077b75e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52610762-a803-461d-a8b4-4a910bafcea7",
        "cursor": {
          "ref": "c6feba7d-2df8-40da-ba3c-a1352ae37676",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2ce09f45-e7a4-48c8-9f38-cf56c4f722a6"
        },
        "item": {
          "id": "52610762-a803-461d-a8b4-4a910bafcea7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "545e2a2d-5cf1-44a5-ad18-4f8de80cb120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e16e9b5-aa0d-4ef4-980d-8659291d596e",
        "cursor": {
          "ref": "2624c3a7-8ded-4253-a594-0184cdb535ca",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cfbe686f-0854-4b7f-ae33-4c6165852c3f"
        },
        "item": {
          "id": "8e16e9b5-aa0d-4ef4-980d-8659291d596e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2d7b6c08-5692-409e-ace2-3ecfdad2036c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15920fe-d2c0-4045-9ce4-70e49b5af10b",
        "cursor": {
          "ref": "68a5e460-3b5b-4f77-84e8-58b18e501aab",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0017a828-033b-4243-8d83-d352e7a324c9"
        },
        "item": {
          "id": "f15920fe-d2c0-4045-9ce4-70e49b5af10b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9a0fd3f8-616c-4efe-91b1-ad8bc47c26fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea384a08-6c9d-4a3d-9d05-3cd1f858368d",
        "cursor": {
          "ref": "3fc5e04a-8172-4d78-b9d8-7906e622ffa7",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ad24c17b-053e-48a9-9e05-53ff768dc259"
        },
        "item": {
          "id": "ea384a08-6c9d-4a3d-9d05-3cd1f858368d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bdec903e-8410-438d-a7d1-5ae444ec4519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafeee48-d232-43fc-9a29-39205a4f4a53",
        "cursor": {
          "ref": "ae5ae65c-a84f-43b5-940e-48aed20c83db",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "55f9ada9-a042-471e-bfac-8c56504885da"
        },
        "item": {
          "id": "aafeee48-d232-43fc-9a29-39205a4f4a53",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d5c66362-6d92-4186-b009-bd3efd3843d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e152c6-54dc-475d-833c-ac5f4717e2a9",
        "cursor": {
          "ref": "24a8515e-433c-40b1-ab26-676d350ae64f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "320a3fb5-ecd6-46fd-987c-391bc93616da"
        },
        "item": {
          "id": "65e152c6-54dc-475d-833c-ac5f4717e2a9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ca4d285a-f2a3-4296-a83f-2bf92e208785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33360225-f617-4451-a513-99f2c756bf19",
        "cursor": {
          "ref": "aafd1cf0-d8a6-4879-b8ac-3cdd23e21e85",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6b6d1382-701d-47bc-b862-a48651b2517a"
        },
        "item": {
          "id": "33360225-f617-4451-a513-99f2c756bf19",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "65c6d8c8-b3f9-4420-a4d7-a1096447c399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a04bb4-eb58-4c0a-b5b4-36c3dfb9ab4d",
        "cursor": {
          "ref": "c4e3a069-7746-4c57-b2f4-413a64f9406d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dbea1a08-c14d-4a79-8bed-e80e9312ced3"
        },
        "item": {
          "id": "a0a04bb4-eb58-4c0a-b5b4-36c3dfb9ab4d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c0eab0bb-05f6-4bdd-a1cf-133a942dc37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad733b75-5b3b-4d9c-a2c3-720bc711b334",
        "cursor": {
          "ref": "84f20ff5-5861-465d-b88b-895e0537fab2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e7946fba-3bed-4e5b-9bb9-b5f273fa9ddb"
        },
        "item": {
          "id": "ad733b75-5b3b-4d9c-a2c3-720bc711b334",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f48476f9-275a-4ec0-a795-13b444b48329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9482b4f7-70ca-4e65-ba4e-f7943a4473cb",
        "cursor": {
          "ref": "38949304-202f-482e-ad80-edee5606ce99",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1b809b96-c46b-4cef-bb9c-af21e64a2777"
        },
        "item": {
          "id": "9482b4f7-70ca-4e65-ba4e-f7943a4473cb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1ea12829-cf97-4137-8b85-915b11df8554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc276742-3940-4b47-a59b-40cc413c5b19",
        "cursor": {
          "ref": "cc5ea6d2-00d0-4e0a-9787-5594d772372a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cbea6643-10c4-456e-8797-d97ef72cf2b3"
        },
        "item": {
          "id": "cc276742-3940-4b47-a59b-40cc413c5b19",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f855a3fb-68fe-4afe-a196-cd5e9a107aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394ca0dc-a23a-4475-b973-15091954a1e3",
        "cursor": {
          "ref": "913408e6-51b6-4ec6-8fc3-77d70b91a871",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8aeb90c0-5a7a-413d-aa4e-8311eb15f79f"
        },
        "item": {
          "id": "394ca0dc-a23a-4475-b973-15091954a1e3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "03688ea6-5e11-484b-bea9-02c000d0713a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a306f6f6-8ac6-488a-9495-2ed81c357f31",
        "cursor": {
          "ref": "f1d3c05e-9982-4f52-a2dd-e1ee1c298df4",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f14c6a70-2bb9-4318-869d-45347cc71f71"
        },
        "item": {
          "id": "a306f6f6-8ac6-488a-9495-2ed81c357f31",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cc8eebdc-8269-4b25-ad06-435ca73ff1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61905a0-f8d9-4405-855e-44a4a0404275",
        "cursor": {
          "ref": "26b528b8-a1d5-4b60-be18-86a82ac20d2d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "57f2bb14-5d7f-46dd-8cd4-ae95717b030c"
        },
        "item": {
          "id": "d61905a0-f8d9-4405-855e-44a4a0404275",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "af5e94d9-7e1c-4067-ac26-d793fdbaefc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0e0066-7e61-45db-af67-ef4d4d33299f",
        "cursor": {
          "ref": "7b22027a-cf99-4996-9c3b-2d5406e9b3a3",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8a8fb6be-b6e1-4a38-ba68-539e0c1e3e78"
        },
        "item": {
          "id": "0a0e0066-7e61-45db-af67-ef4d4d33299f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fa7ba47e-6670-4fa4-91cf-265d0ae7f441",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "7c70a868-a329-4c0e-8d0a-c351386cf4b2",
        "cursor": {
          "ref": "cb538f9e-d536-47d2-b49e-c6d49d9444d9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "099bbbb2-1612-4682-adb0-a14738dd8822"
        },
        "item": {
          "id": "7c70a868-a329-4c0e-8d0a-c351386cf4b2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2b754942-67cc-4bdd-b154-84e883c66729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda20f82-7d7b-4229-bf7d-9efadb073ccb",
        "cursor": {
          "ref": "5d748842-94fe-4a5f-8281-8bf1bdf4ee65",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "68f2b417-c921-40a7-976c-603635de1bbd"
        },
        "item": {
          "id": "dda20f82-7d7b-4229-bf7d-9efadb073ccb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7caa3e50-3ca2-4a9e-ac04-9db8d3ed7ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f6f6ba-2496-4cbb-8a2d-d63ab08c514e",
        "cursor": {
          "ref": "016c3d08-989b-4613-9010-932efb418268",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7cb16585-42e0-458b-a1d5-734166eb6e0c"
        },
        "item": {
          "id": "37f6f6ba-2496-4cbb-8a2d-d63ab08c514e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8cdd3a34-34e5-4db9-8e55-86d8abcc2584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed982bf0-0887-4e71-8d95-4cd2945e6fa0",
        "cursor": {
          "ref": "83515680-fb31-4086-a338-3f19f5cf5861",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e99b1344-ce0c-4b43-a503-4ff80f5af0c4"
        },
        "item": {
          "id": "ed982bf0-0887-4e71-8d95-4cd2945e6fa0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7321c5a4-c13a-481f-a105-385f003459ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56013e97-18dd-4119-9adb-50e2da3c4f64",
        "cursor": {
          "ref": "8e78a0a3-b349-4ed4-8a2c-44a760e93311",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b970ba61-8638-4249-902f-8912234d7e24"
        },
        "item": {
          "id": "56013e97-18dd-4119-9adb-50e2da3c4f64",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7452caaf-907b-4c12-885c-17610a35467f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961ee824-edd3-4c8a-b5aa-2eb4b9b89df9",
        "cursor": {
          "ref": "cd7ef834-6ce2-49ac-8b1e-0a380db518ab",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "88a1b1b1-80af-4abe-b876-ca671faa00db"
        },
        "item": {
          "id": "961ee824-edd3-4c8a-b5aa-2eb4b9b89df9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5e581e82-ee2f-4787-94f2-c298beb61ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98920768-e199-4480-aa73-5484a08d8e9e",
        "cursor": {
          "ref": "a72df240-735a-4bcc-9906-9dc2d0fd2148",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "eda8c4f9-e48a-4911-a593-27e5bd2c27d9"
        },
        "item": {
          "id": "98920768-e199-4480-aa73-5484a08d8e9e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "74d4c6e2-0ece-4a84-9142-8eb1c1854eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5b64d5-a22b-424e-8eb8-25f973cd05cb",
        "cursor": {
          "ref": "9f108dbc-0b60-4598-bdae-42d31d3aad24",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a3775087-c371-4bff-96d6-e0d722359767"
        },
        "item": {
          "id": "2c5b64d5-a22b-424e-8eb8-25f973cd05cb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a8cd10af-e524-436b-a8f6-950316f6b8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a56ab1-acd0-4565-a205-58444d4cabeb",
        "cursor": {
          "ref": "16226af0-0c66-48fc-b623-ed0ae4355eb7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "54540aa3-bc04-4eb6-8f20-0e1bccdcde3d"
        },
        "item": {
          "id": "c4a56ab1-acd0-4565-a205-58444d4cabeb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6b28a0ec-63c3-4720-a3ce-c952abf70670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ff1491-809d-482b-b97d-2c7375162843",
        "cursor": {
          "ref": "ff8f21e0-01ca-44fc-a2c8-6e819e73d70c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fb38d210-9685-43fb-a2d1-c0319735d249"
        },
        "item": {
          "id": "f7ff1491-809d-482b-b97d-2c7375162843",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1506d71d-a116-4977-b55f-591afe7bd106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06163c8b-dafc-45df-bd24-4016da6f5af1",
        "cursor": {
          "ref": "085d9e10-adb3-413e-8d1c-1bace99a3b39",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d312aa3a-75ac-4077-9d85-6852f0e587d6"
        },
        "item": {
          "id": "06163c8b-dafc-45df-bd24-4016da6f5af1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "62012d9b-d867-42b2-aa4f-004dc6f566ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3265bc9-eeaa-41ba-b1ad-9d4213f4dfbb",
        "cursor": {
          "ref": "cc29a173-2b57-4525-a5d1-f7d366637cbc",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bde0b8e8-9b3a-4b4f-acf2-a0c559807688"
        },
        "item": {
          "id": "c3265bc9-eeaa-41ba-b1ad-9d4213f4dfbb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7a6f5e31-fa7c-4a1b-a12d-35cb9735f1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5808c733-bb19-401f-93e6-1ce9bc990c9d",
        "cursor": {
          "ref": "193b9a8d-0128-4764-9268-f606d7caba9b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4ff94648-af88-4ff9-8e1c-53c08b10cce1"
        },
        "item": {
          "id": "5808c733-bb19-401f-93e6-1ce9bc990c9d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "296da964-4926-4387-a668-a8cbb1e028d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4b3896-17c2-4d48-80e7-fff181f006d5",
        "cursor": {
          "ref": "1d91e2d5-1027-451a-b162-cad6603c2427",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eb804c53-7bdd-4f7e-9862-b403c3ff8330"
        },
        "item": {
          "id": "3b4b3896-17c2-4d48-80e7-fff181f006d5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "19723c22-2e04-49ab-9ad5-175fa5b1372d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9fb347-aeb7-4570-a6aa-5f6bc57bcbb0",
        "cursor": {
          "ref": "43744bb7-57f4-40bd-9034-09aee70c536c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "815aec63-d968-49a7-bcb4-4b76f7002f79"
        },
        "item": {
          "id": "fa9fb347-aeb7-4570-a6aa-5f6bc57bcbb0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fc6048b0-79f4-41a3-9173-619abf161b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03de47d8-1c5e-4b5d-baf6-f860fd21fad8",
        "cursor": {
          "ref": "df18741c-f301-4ec9-8d78-66464c99ed19",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e210e82a-6fe0-4ef2-b398-8c54e3b45ccf"
        },
        "item": {
          "id": "03de47d8-1c5e-4b5d-baf6-f860fd21fad8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d6c2e145-d239-49bc-872a-0253ccef2404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c99c6cb-f36c-4630-a1f6-4d364da81d21",
        "cursor": {
          "ref": "793c950b-dbb8-47eb-b233-0cf874c926e5",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5ccf8129-453e-433f-9842-3a521a5a6e50"
        },
        "item": {
          "id": "8c99c6cb-f36c-4630-a1f6-4d364da81d21",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9b58a532-b936-414a-9129-f1406eb43131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7c6e62-e8d8-449f-865e-ef3b03dc9d8f",
        "cursor": {
          "ref": "a647e60d-46c3-4824-a2fc-75fef49460a4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7c84c3ce-fbfb-47f1-9345-00f1cc0f1e90"
        },
        "item": {
          "id": "2a7c6e62-e8d8-449f-865e-ef3b03dc9d8f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "852f02be-6124-4c2e-b5e5-e2bac3e21cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1b2b00-050e-42a3-a7cf-5ba0778ff0f6",
        "cursor": {
          "ref": "c33124d5-de3c-4bd5-880a-6ef209292883",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9ba63932-7023-4cfe-abc8-007b136713d6"
        },
        "item": {
          "id": "2e1b2b00-050e-42a3-a7cf-5ba0778ff0f6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d5e0aa3b-0ae1-4be8-98f0-b21270f544a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed4715f-e48b-4cc1-9463-8e8c534041ac",
        "cursor": {
          "ref": "89aee478-f5cd-433f-a6c4-f77ac1a5caaa",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d39f3e17-9530-4a1f-8ed6-dac1e90e3550"
        },
        "item": {
          "id": "7ed4715f-e48b-4cc1-9463-8e8c534041ac",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0c4f22ec-2b5f-4de2-8ddc-da7dc73206dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f17e97-2e9f-4e64-a1ff-ee32e6014f09",
        "cursor": {
          "ref": "08011905-d84f-4797-893e-0fadc4fb8845",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "36da6382-7c3a-4cd0-be58-a698fbd46371"
        },
        "item": {
          "id": "f7f17e97-2e9f-4e64-a1ff-ee32e6014f09",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cc52d2e2-d638-47a0-9336-a37ffbb946d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37867ea4-479f-49a0-b33c-cd6c25a59056",
        "cursor": {
          "ref": "f41359e1-5bc6-4077-a727-12e83b7637be",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8a5a5b59-e963-40e4-845b-960e06be0373"
        },
        "item": {
          "id": "37867ea4-479f-49a0-b33c-cd6c25a59056",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "880f4546-49a3-4422-8a27-e0d83151384c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c42ab4-9352-4262-97cb-f14d2a115d6a",
        "cursor": {
          "ref": "8e1c599b-2691-43e2-813a-128bdd9ea0e4",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c0ee005a-ac5b-49bc-9bc4-5fe750d0dd7d"
        },
        "item": {
          "id": "f4c42ab4-9352-4262-97cb-f14d2a115d6a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0430ac86-f2f6-4f45-91dd-ebff11b5b372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c19e52-fc0a-4477-9d7e-ddaa4907ab2c",
        "cursor": {
          "ref": "47b683a3-e464-4add-9986-eb2c701f9d69",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d97bcee8-bdf8-4b34-aa04-3f3fa2be92a3"
        },
        "item": {
          "id": "67c19e52-fc0a-4477-9d7e-ddaa4907ab2c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fd8408a7-dc7a-424e-850f-0fff5c4059a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f15db31-64a4-450c-9999-ecee47bb9dce",
        "cursor": {
          "ref": "ba6eac7a-8697-46b4-a442-2cea04141702",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8164975c-a51a-4077-b94b-3a63f37f44b8"
        },
        "item": {
          "id": "2f15db31-64a4-450c-9999-ecee47bb9dce",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4dafea93-d607-484c-840a-bcbccd731be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdf3d69-4a8a-4382-ae48-75cef0183363",
        "cursor": {
          "ref": "a29ac0b9-d04c-4a97-9135-ad331ca3eb18",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "558d0fb7-a190-4651-be45-3ec3cdb465ce"
        },
        "item": {
          "id": "7bdf3d69-4a8a-4382-ae48-75cef0183363",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0b025359-3c8c-4bf8-b9f1-0a5ca3385745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e6a705-b928-42e0-b1c6-6e19c2901348",
        "cursor": {
          "ref": "d1554ade-526a-4c68-904d-fedd419b807b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f8722050-27e9-4b79-b633-daa80d643c7a"
        },
        "item": {
          "id": "f7e6a705-b928-42e0-b1c6-6e19c2901348",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d6098c5b-44dd-484f-91be-36472e57bc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c374fd2-c2c4-4bc6-88d8-f1427191e2c0",
        "cursor": {
          "ref": "e335e289-ec69-42f3-a081-bfc0ed66b362",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f0849a00-0b66-4036-bf6b-d20cf2992185"
        },
        "item": {
          "id": "5c374fd2-c2c4-4bc6-88d8-f1427191e2c0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "199a05fc-7028-4814-8bdb-240eb1a4900b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb85c27-01a9-4917-a0a7-892e46fd3036",
        "cursor": {
          "ref": "2f8b6969-68ed-43a4-9152-bc0e237cda34",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bae4a84e-0910-48e3-939a-3cfb8e0e1c7f"
        },
        "item": {
          "id": "9cb85c27-01a9-4917-a0a7-892e46fd3036",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "63db6bb7-49ed-405f-a8c7-866d6e140653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354f7211-399b-4df5-8401-1f797f256356",
        "cursor": {
          "ref": "3b7b4899-8a32-45bc-a70b-58f6c6475fc8",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b384c14d-1ba1-4415-b8e0-f8d60357d639"
        },
        "item": {
          "id": "354f7211-399b-4df5-8401-1f797f256356",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "18a4ddab-5ec1-46cb-9460-293b144144dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408cd458-8832-4125-85b6-d73b6a75f262",
        "cursor": {
          "ref": "f478c3c7-34e6-4759-ade2-f17ab4778f1b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a467cb48-7545-43c2-9895-6b657627b7cf"
        },
        "item": {
          "id": "408cd458-8832-4125-85b6-d73b6a75f262",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bd9f8bfd-bd94-41ce-b0fa-6cb36ae384c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263685da-879a-4420-a021-62ab5be148a0",
        "cursor": {
          "ref": "b9578c4c-47f0-4f43-9645-db2e9fd79147",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "93fb5503-a974-44a2-8afc-5f92f42e86be"
        },
        "item": {
          "id": "263685da-879a-4420-a021-62ab5be148a0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "26c23e59-8e5d-4e04-9667-83276875189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233464b5-826f-4f37-876c-9ae5617bdc8c",
        "cursor": {
          "ref": "9876cb12-f4ec-4381-bf91-02e09f76fac6",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9167acb5-1866-42d6-bf9f-4e714f1a0583"
        },
        "item": {
          "id": "233464b5-826f-4f37-876c-9ae5617bdc8c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dad800ab-ac50-488e-869a-0d774d34021d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9c7703-15df-4cfc-b166-e0330fbaf76a",
        "cursor": {
          "ref": "e077f996-16f9-416e-8297-fbceb02ba3b8",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "23617986-c0e9-4939-9d1a-ab0f64efe31c"
        },
        "item": {
          "id": "3c9c7703-15df-4cfc-b166-e0330fbaf76a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0edef1ae-ba79-4f81-8268-5b2ee9e99930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af5c82c-6bfa-4553-a0af-6628e49c1743",
        "cursor": {
          "ref": "22092c47-b581-457d-9163-c3d59c4c642c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d676dffe-9616-4f73-9409-d98b7c789075"
        },
        "item": {
          "id": "6af5c82c-6bfa-4553-a0af-6628e49c1743",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d8009f5f-4307-41eb-8ac5-f044b173f37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cb0210-f1fe-487f-8e00-d095d97c886a",
        "cursor": {
          "ref": "507cc68b-6f57-42fa-9f74-a4729b8dffb7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a6118236-3c52-47a7-8595-84b369b5389a"
        },
        "item": {
          "id": "63cb0210-f1fe-487f-8e00-d095d97c886a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d34358b1-a60f-40bc-b6e3-d90deaea19a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f781bc00-4118-457d-babd-8e07e0ff996e",
        "cursor": {
          "ref": "a5b55e83-d24e-4c4c-9332-6fffcdce2e62",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "328788b0-ea7f-4822-bc95-0b2accb6e273"
        },
        "item": {
          "id": "f781bc00-4118-457d-babd-8e07e0ff996e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "04e32e17-7f04-458b-a046-bbb05079eed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999253e0-5ae3-4a88-a89e-2b5cdcd03abc",
        "cursor": {
          "ref": "614033f9-d01d-49db-9676-97076f4bd5c1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a24f4f54-e469-49ea-8ddd-9f2c262c7f5b"
        },
        "item": {
          "id": "999253e0-5ae3-4a88-a89e-2b5cdcd03abc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7cef5de4-53b0-42de-8d14-0a065f7c7655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810c63c7-a6f3-4ab8-b4b0-3a35bebea996",
        "cursor": {
          "ref": "ee04899d-bd29-4f0f-9e0f-96bcf0b37faa",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f5b3698d-b20f-4366-adf9-838b895226a9"
        },
        "item": {
          "id": "810c63c7-a6f3-4ab8-b4b0-3a35bebea996",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a02ff26a-36db-48be-bbc0-6c46b9072a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c593dfc-0d3f-40d6-a9b8-4f879df996a6",
        "cursor": {
          "ref": "a6f2e48c-3cd1-4075-8d0a-b4ce2c22a6b2",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b4a25c1f-1744-4eb5-99b5-7643b788fb74"
        },
        "item": {
          "id": "8c593dfc-0d3f-40d6-a9b8-4f879df996a6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "df03eac9-699a-485c-9756-e167edbf0e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb47a564-e0b6-4b5e-af71-2e0c4ac60ec1",
        "cursor": {
          "ref": "77a868be-62da-42c9-a776-974c01c19954",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "64539097-3f7a-4f2b-8f68-091f651ee5e1"
        },
        "item": {
          "id": "bb47a564-e0b6-4b5e-af71-2e0c4ac60ec1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "97a4156a-b617-4039-ba75-02ccbc7291a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2661efcc-8066-4828-a476-59e21432bced",
        "cursor": {
          "ref": "a19a72ab-f775-4596-90eb-fa933b8bbc9c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "61e3e0a4-cc30-4f29-817c-582df1b4fe45"
        },
        "item": {
          "id": "2661efcc-8066-4828-a476-59e21432bced",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "132cf263-4979-46ef-8ac1-85a1a1567d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca49035-6590-4bc2-adf4-46697a2420ea",
        "cursor": {
          "ref": "d3612585-f777-4d5f-97ba-914f686a3f5b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5c1fbbc6-ebd6-4cdb-b45d-6f430c8ceefa"
        },
        "item": {
          "id": "eca49035-6590-4bc2-adf4-46697a2420ea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d46ce80a-86b0-475d-a09d-407cc90cc4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ebaf99-3ef8-4390-8312-d9293de1abe1",
        "cursor": {
          "ref": "9a89ac77-0e26-4e81-ba68-c66579e9a4f9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a78a5db6-58e7-41a8-8e36-a5be5cef6048"
        },
        "item": {
          "id": "81ebaf99-3ef8-4390-8312-d9293de1abe1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "33e58ee0-d87b-4934-ad25-ff4d4b369148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f9931c-de84-4135-b79b-42840a251773",
        "cursor": {
          "ref": "ae0e1754-e6ef-452c-93a1-7e867e6540a3",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1edf4b5f-0aab-46ee-8cf6-46695e76e700"
        },
        "item": {
          "id": "c0f9931c-de84-4135-b79b-42840a251773",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9c47716a-92f4-40f9-98ab-dfd35b8e885e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9b2a19-492a-477a-882a-e4f21a6615ee",
        "cursor": {
          "ref": "147eb6e3-124b-48cb-b519-cdeedbab1d12",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "283c5d87-0dda-44f6-a607-82d99e85cd73"
        },
        "item": {
          "id": "2d9b2a19-492a-477a-882a-e4f21a6615ee",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "95e6894a-e093-49a0-9003-5ceaaa25061c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162f7c22-92c8-4553-8ade-d97c958db343",
        "cursor": {
          "ref": "23512f7f-0608-4762-a011-d3c440451109",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "321ee9a4-9e3b-488c-ab77-862ed7fe52c4"
        },
        "item": {
          "id": "162f7c22-92c8-4553-8ade-d97c958db343",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5a319bf3-8ce4-4355-a288-7a0a6dc6a046",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84079933-75e6-44ef-b03f-af56ce705fc3",
        "cursor": {
          "ref": "f56edb7a-8a39-4cc9-950f-fa535438472a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "29000e24-81a8-4d92-88f9-93cb5ce1b306"
        },
        "item": {
          "id": "84079933-75e6-44ef-b03f-af56ce705fc3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "27ef77ec-510e-4b51-a882-cbc38e6da823",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd00c77-062f-40ba-8e5b-b6c7f9a020b1",
        "cursor": {
          "ref": "4562da5c-b6db-478a-bac9-f2810cf9f33c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "059ac430-ad15-455b-b8f6-9060e3da8b6f"
        },
        "item": {
          "id": "4fd00c77-062f-40ba-8e5b-b6c7f9a020b1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "868dc2a3-837e-453a-a057-8343b6a434e2",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d613a12-de0d-480a-8c38-20fefff8eec2",
        "cursor": {
          "ref": "62bcc1ef-9b15-4bec-8007-e581975aa3a7",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "464db320-6d86-4d7c-9906-dfa8946c28bb"
        },
        "item": {
          "id": "8d613a12-de0d-480a-8c38-20fefff8eec2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4da54a5d-b848-4228-9e84-4aa9fe09c603",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ae3726-b82d-427f-a87d-9ab6646db0e0",
        "cursor": {
          "ref": "bd4e8806-41dd-4dd0-9378-c97668b2e50d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4f6f8fa8-69e4-412e-8efb-13f631914156"
        },
        "item": {
          "id": "28ae3726-b82d-427f-a87d-9ab6646db0e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "973835ad-5259-440f-9320-2736d51c44ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ae3726-b82d-427f-a87d-9ab6646db0e0",
        "cursor": {
          "ref": "bd4e8806-41dd-4dd0-9378-c97668b2e50d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4f6f8fa8-69e4-412e-8efb-13f631914156"
        },
        "item": {
          "id": "28ae3726-b82d-427f-a87d-9ab6646db0e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "973835ad-5259-440f-9320-2736d51c44ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacebf6d-a8c2-4ecd-9f1c-150109971740",
        "cursor": {
          "ref": "36ab5608-d45a-49aa-86cc-043c01e8a191",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "38559810-af73-440a-943c-e6759dce2374"
        },
        "item": {
          "id": "bacebf6d-a8c2-4ecd-9f1c-150109971740",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c4d8eec0-09a0-4eb4-9b40-2027824c9834",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd5e876-b9fc-41a6-9256-8d461ca1cde8",
        "cursor": {
          "ref": "20096006-b924-4a3c-9415-0571d9b623a7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "008cd07e-d2c9-42b2-a7ca-01633e645a60"
        },
        "item": {
          "id": "1cd5e876-b9fc-41a6-9256-8d461ca1cde8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2ea034de-76f2-4ae3-a3e9-f0d36424e265",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}